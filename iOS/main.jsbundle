__DEV__ = 
false;


__BUNDLE_START_TIME__ = Date.now();
(
function(global){


if(global.require){
return;}


var __DEV__=global.__DEV__;

var toString=Object.prototype.toString;













var modulesMap={},






dependencyMap={},



predefinedRefCounts={},

_counter=0,

REQUIRE_WHEN_READY=1,
USED_AS_TRANSPORT=2,

hop=Object.prototype.hasOwnProperty;

function _debugUnresolvedDependencies(names){
var unresolved=Array.prototype.slice.call(names);
var visited={};
var ii,name,module,dependency;

while(unresolved.length) {
name = unresolved.shift();
if(visited[name]){
continue;}

visited[name] = true;

module = modulesMap[name];
if(!module || !module.waiting){
continue;}


for(ii = 0;ii < module.dependencies.length;ii++) {
dependency = module.dependencies[ii];
if(!modulesMap[dependency] || modulesMap[dependency].waiting){
unresolved.push(dependency);}}}




for(name in visited) if(hop.call(visited,name)){
unresolved.push(name);}


var messages=[];
for(ii = 0;ii < unresolved.length;ii++) {
name = unresolved[ii];
var message=name;
module = modulesMap[name];
if(!module){
message += ' is not defined';}else 
if(!module.waiting){
message += ' is ready';}else 
{
var unresolvedDependencies=[];
for(var jj=0;jj < module.dependencies.length;jj++) {
dependency = module.dependencies[jj];
if(!modulesMap[dependency] || modulesMap[dependency].waiting){
unresolvedDependencies.push(dependency);}}


message += ' is waiting for ' + unresolvedDependencies.join(', ');}

messages.push(message);}

return messages.join('\n');}





function ModuleError(msg){
this.name = 'ModuleError';
this.message = msg;
this.stack = Error(msg).stack;
this.framesToPop = 2;}

ModuleError.prototype = Object.create(Error.prototype);
ModuleError.prototype.constructor = ModuleError;

var _performance=
global.performance || 
global.msPerformance || 
global.webkitPerformance || {};

if(!_performance.now){
_performance = global.Date;}


var _now=_performance?
_performance.now.bind(_performance):function(){return 0;};

var _factoryStackCount=0;
var _factoryTime=0;
var _totalFactories=0;
var _inGuard=false;
























































function require(id){
var module=modulesMap[id],dep,i,msg;
if(module && module.exports){


if(module.refcount-- === 1){
delete modulesMap[id];}

return module.exports;}

if(global.ErrorUtils && !_inGuard){
_inGuard = true;
try{
var ret=require.apply(this,arguments);}
catch(e) {
global.ErrorUtils.reportFatalError(e);}

_inGuard = false;
return ret;}


if(!module){
msg = 'Requiring unknown module "' + id + '"';
if(__DEV__){
msg += '. If you are sure the module is there, try restarting the packager.';}

throw new ModuleError(msg);}


if(module.hasError){
throw new ModuleError(
'Requiring module "' + id + '" which threw an exception');}



if(module.waiting){
throw new ModuleError(
'Requiring module "' + id + '" with unresolved dependencies: ' + 
_debugUnresolvedDependencies([id]));}



var exports=module.exports = {};
var factory=module.factory;
if(toString.call(factory) === '[object Function]'){
var args=[],
dependencies=module.dependencies,
length=dependencies.length,
ret;
if(module.special & USED_AS_TRANSPORT){
length = Math.min(length,factory.length);}

try{
for(i = 0;args.length < length;i++) {
dep = dependencies[i];
if(!module.inlineRequires[dep]){
args.push(dep === 'module'?module:
dep === 'exports'?exports:
require.call(null,dep));}}



++_totalFactories;
if(_factoryStackCount++ === 0){
_factoryTime -= _now();}

try{
ret = factory.apply(module.context || global,args);}
catch(e) {
if(modulesMap.ex && modulesMap.erx){


var ex=require.call(null,'ex');
var erx=require.call(null,'erx');
var messageWithParams=erx(e.message);
if(messageWithParams[0].indexOf(' from module "%s"') < 0){
messageWithParams[0] += ' from module "%s"';
messageWithParams[messageWithParams.length] = id;}

e.message = ex.apply(null,messageWithParams);}

throw e;}finally 
{
if(--_factoryStackCount === 0){
_factoryTime += _now();}}}


catch(e) {
module.hasError = true;
module.exports = null;
throw e;}

if(ret){
if(__DEV__){
if(typeof ret != 'object' && typeof ret != 'function'){
throw new ModuleError(
'Factory for module "' + id + '" returned ' + 
'an invalid value "' + ret + '". ' + 
'Returned value should be either a function or an object.');}}



module.exports = ret;}}else 

{
module.exports = factory;}




if(module.refcount-- === 1){
delete modulesMap[id];}

return module.exports;}


require.__getFactoryTime = function(){
return (_factoryStackCount?_now():0) + _factoryTime;};


require.__getTotalFactories = function(){
return _totalFactories;};

























































function define(id,dependencies,factory,
_special,_context,_refCount,_inlineRequires){
if(dependencies === undefined){
dependencies = [];
factory = id;
id = _uid();}else 
if(factory === undefined){
factory = dependencies;
if(toString.call(id) === '[object Array]'){
dependencies = id;
id = _uid();}else 
{
dependencies = [];}}





var canceler={cancel:_undefine.bind(this,id)};

var record=modulesMap[id];






if(record){
if(_refCount){
record.refcount += _refCount;}


return canceler;}else 
if(!dependencies && !factory && _refCount){


predefinedRefCounts[id] = (predefinedRefCounts[id] || 0) + _refCount;
return canceler;}else 
{

record = {id:id};
record.refcount = (predefinedRefCounts[id] || 0) + (_refCount || 0);
delete predefinedRefCounts[id];}


if(__DEV__){
if(
!factory || 
typeof factory != 'object' && typeof factory != 'function' && 
typeof factory != 'string'){
throw new ModuleError(
'Invalid factory "' + factory + '" for module "' + id + '". ' + 
'Factory should be either a function or an object.');}



if(toString.call(dependencies) !== '[object Array]'){
throw new ModuleError(
'Invalid dependencies for module "' + id + '". ' + 
'Dependencies must be passed as an array.');}}




record.factory = factory;
record.dependencies = dependencies;
record.context = _context;
record.special = _special;
record.inlineRequires = _inlineRequires || {};
record.waitingMap = {};
record.waiting = 0;
record.hasError = false;
modulesMap[id] = record;
_initDependencies(id);

return canceler;}


function _undefine(id){
if(!modulesMap[id]){
return;}


var module=modulesMap[id];
delete modulesMap[id];

for(var dep in module.waitingMap) {
if(module.waitingMap[dep]){
delete dependencyMap[dep][id];}}



for(var ii=0;ii < module.dependencies.length;ii++) {
dep = module.dependencies[ii];
if(modulesMap[dep]){
if(modulesMap[dep].refcount-- === 1){
_undefine(dep);}}else 

if(predefinedRefCounts[dep]){
predefinedRefCounts[dep]--;}}}













































function requireLazy(dependencies,factory,context){
return define(
dependencies,
factory,
undefined,
REQUIRE_WHEN_READY,
context,
1);}



function _uid(){
return '__mod__' + _counter++;}


function _addDependency(module,dep){

if(!module.waitingMap[dep] && module.id !== dep){
module.waiting++;
module.waitingMap[dep] = 1;
dependencyMap[dep] || (dependencyMap[dep] = {});
dependencyMap[dep][module.id] = 1;}}



function _initDependencies(id){
var modulesToRequire=[];
var module=modulesMap[id];
var dep,i,subdep;


for(i = 0;i < module.dependencies.length;i++) {
dep = module.dependencies[i];
if(!modulesMap[dep]){
_addDependency(module,dep);}else 
if(modulesMap[dep].waiting){
for(subdep in modulesMap[dep].waitingMap) {
if(modulesMap[dep].waitingMap[subdep]){
_addDependency(module,subdep);}}}}




if(module.waiting === 0 && module.special & REQUIRE_WHEN_READY){
modulesToRequire.push(id);}



if(dependencyMap[id]){
var deps=dependencyMap[id];
var submodule;
dependencyMap[id] = undefined;
for(dep in deps) {
submodule = modulesMap[dep];


for(subdep in module.waitingMap) {
if(module.waitingMap[subdep]){
_addDependency(submodule,subdep);}}



if(submodule.waitingMap[id]){
submodule.waitingMap[id] = undefined;
submodule.waiting--;}

if(submodule.waiting === 0 && 
submodule.special & REQUIRE_WHEN_READY){
modulesToRequire.push(dep);}}}





for(i = 0;i < modulesToRequire.length;i++) {
require.call(null,modulesToRequire[i]);}}



function _register(id,exports){
var module=modulesMap[id] = {id:id};
module.exports = exports;
module.refcount = 0;}




_register('module',0);
_register('exports',0);

_register('global',global);
_register('require',require);
_register('requireDynamic',require);
_register('requireLazy',requireLazy);

global.require = require;
global.requireDynamic = require;
global.requireLazy = requireLazy;

require.__debug = {
modules:modulesMap,
deps:dependencyMap,
printDependencyInfo:function(){
if(!global.console){
return;}

var names=Object.keys(require.__debug.deps);
global.console.log(_debugUnresolvedDependencies(names));}};









global.__d = function(id,deps,factory,_special,_inlineRequires){
var defaultDeps=['global','require','requireDynamic','requireLazy',
'module','exports'];
define(id,defaultDeps.concat(deps),factory,_special || USED_AS_TRANSPORT,
null,null,_inlineRequires);};})(


this);
Object.

















assign = function(target,sources){
if(__DEV__){
if(target == null){
throw new TypeError('Object.assign target cannot be null or undefined');}

if(typeof target !== 'object' && typeof target !== 'function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.' + 
'This error is a performance optimization and not spec compliant.');}}




for(var nextIndex=1;nextIndex < arguments.length;nextIndex++) {
var nextSource=arguments[nextIndex];
if(nextSource == null){
continue;}


if(__DEV__){
if(typeof nextSource !== 'object' && 
typeof nextSource !== 'function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.' + 
'This error is a performance optimization and not spec compliant.');}}








for(var key in nextSource) {
if(__DEV__){
var hasOwnProperty=Object.prototype.hasOwnProperty;
if(!hasOwnProperty.call(nextSource,key)){
throw new TypeError(
'One of the sources to assign has an enumerable key on the ' + 
'prototype chain. This is an edge case that we do not support. ' + 
'This error is a performance optimization and not spec compliant.');}}



target[key] = nextSource[key];}}



return target;};
(















function(global){
'use strict';

var inspect=(function(){























function inspect(obj,opts){
var ctx={
seen:[],
stylize:stylizeNoColor};

return formatValue(ctx,obj,opts.depth);}


function stylizeNoColor(str,styleType){
return str;}


function arrayToHash(array){
var hash={};

array.forEach(function(val,idx){
hash[val] = true;});


return hash;}



function formatValue(ctx,value,recurseTimes){

var primitive=formatPrimitive(ctx,value);
if(primitive){
return primitive;}



var keys=Object.keys(value);
var visibleKeys=arrayToHash(keys);



if(isError(value) && (
keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)){
return formatError(value);}



if(keys.length === 0){
if(isFunction(value)){
var name=value.name?': ' + value.name:'';
return ctx.stylize('[Function' + name + ']','special');}

if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}

if(isDate(value)){
return ctx.stylize(Date.prototype.toString.call(value),'date');}

if(isError(value)){
return formatError(value);}}



var base='',array=false,braces=['{','}'];


if(isArray(value)){
array = true;
braces = ['[',']'];}



if(isFunction(value)){
var n=value.name?': ' + value.name:'';
base = ' [Function' + n + ']';}



if(isRegExp(value)){
base = ' ' + RegExp.prototype.toString.call(value);}



if(isDate(value)){
base = ' ' + Date.prototype.toUTCString.call(value);}



if(isError(value)){
base = ' ' + formatError(value);}


if(keys.length === 0 && (!array || value.length == 0)){
return braces[0] + base + braces[1];}


if(recurseTimes < 0){
if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}else 
{
return ctx.stylize('[Object]','special');}}



ctx.seen.push(value);

var output;
if(array){
output = formatArray(ctx,value,recurseTimes,visibleKeys,keys);}else 
{
output = keys.map(function(key){
return formatProperty(ctx,value,recurseTimes,visibleKeys,key,array);});}



ctx.seen.pop();

return reduceToSingleString(output,base,braces);}



function formatPrimitive(ctx,value){
if(isUndefined(value))
return ctx.stylize('undefined','undefined');
if(isString(value)){
var simple='\'' + JSON.stringify(value).replace(/^"|"$/g,'').
replace(/'/g,"\\'").
replace(/\\"/g,'"') + '\'';
return ctx.stylize(simple,'string');}

if(isNumber(value))
return ctx.stylize('' + value,'number');
if(isBoolean(value))
return ctx.stylize('' + value,'boolean');

if(isNull(value))
return ctx.stylize('null','null');}



function formatError(value){
return '[' + Error.prototype.toString.call(value) + ']';}



function formatArray(ctx,value,recurseTimes,visibleKeys,keys){
var output=[];
for(var i=0,l=value.length;i < l;++i) {
if(hasOwnProperty(value,String(i))){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
String(i),true));}else 
{
output.push('');}}


keys.forEach(function(key){
if(!key.match(/^\d+$/)){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
key,true));}});


return output;}



function formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){
var name,str,desc;
desc = Object.getOwnPropertyDescriptor(value,key) || {value:value[key]};
if(desc.get){
if(desc.set){
str = ctx.stylize('[Getter/Setter]','special');}else 
{
str = ctx.stylize('[Getter]','special');}}else 

{
if(desc.set){
str = ctx.stylize('[Setter]','special');}}


if(!hasOwnProperty(visibleKeys,key)){
name = '[' + key + ']';}

if(!str){
if(ctx.seen.indexOf(desc.value) < 0){
if(isNull(recurseTimes)){
str = formatValue(ctx,desc.value,null);}else 
{
str = formatValue(ctx,desc.value,recurseTimes - 1);}

if(str.indexOf('\n') > -1){
if(array){
str = str.split('\n').map(function(line){
return '  ' + line;}).
join('\n').substr(2);}else 
{
str = '\n' + str.split('\n').map(function(line){
return '   ' + line;}).
join('\n');}}}else 


{
str = ctx.stylize('[Circular]','special');}}


if(isUndefined(name)){
if(array && key.match(/^\d+$/)){
return str;}

name = JSON.stringify('' + key);
if(name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)){
name = name.substr(1,name.length - 2);
name = ctx.stylize(name,'name');}else 
{
name = name.replace(/'/g,"\\'").
replace(/\\"/g,'"').
replace(/(^"|"$)/g,"'");
name = ctx.stylize(name,'string');}}



return name + ': ' + str;}



function reduceToSingleString(output,base,braces){
var numLinesEst=0;
var length=output.reduce(function(prev,cur){
numLinesEst++;
if(cur.indexOf('\n') >= 0)numLinesEst++;
return prev + cur.replace(/\u001b\[\d\d?m/g,'').length + 1;},
0);

if(length > 60){
return braces[0] + (
base === ''?'':base + '\n ') + 
' ' + 
output.join(',\n  ') + 
' ' + 
braces[1];}


return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];}





function isArray(ar){
return Array.isArray(ar);}


function isBoolean(arg){
return typeof arg === 'boolean';}


function isNull(arg){
return arg === null;}


function isNullOrUndefined(arg){
return arg == null;}


function isNumber(arg){
return typeof arg === 'number';}


function isString(arg){
return typeof arg === 'string';}


function isSymbol(arg){
return typeof arg === 'symbol';}


function isUndefined(arg){
return arg === void 0;}


function isRegExp(re){
return isObject(re) && objectToString(re) === '[object RegExp]';}


function isObject(arg){
return typeof arg === 'object' && arg !== null;}


function isDate(d){
return isObject(d) && objectToString(d) === '[object Date]';}


function isError(e){
return isObject(e) && (
objectToString(e) === '[object Error]' || e instanceof Error);}


function isFunction(arg){
return typeof arg === 'function';}


function isPrimitive(arg){
return arg === null || 
typeof arg === 'boolean' || 
typeof arg === 'number' || 
typeof arg === 'string' || 
typeof arg === 'symbol' || 
typeof arg === 'undefined';}


function objectToString(o){
return Object.prototype.toString.call(o);}


function hasOwnProperty(obj,prop){
return Object.prototype.hasOwnProperty.call(obj,prop);}


return inspect;})();



var OBJECT_COLUMN_NAME='(index)';
var LOG_LEVELS={
trace:0,
log:1,
info:2,
warn:3,
error:4};


function setupConsole(global){
if(!global.nativeLoggingHook){
return;}


function getNativeLogFunction(level){
return function(){
var str=Array.prototype.map.call(arguments,function(arg){
return inspect(arg,{depth:10});}).
join(', ');
global.nativeLoggingHook(str,level);};}



var repeat=function(element,n){
return Array.apply(null,Array(n)).map(function(){return element;});};


function consoleTablePolyfill(rows){

if(!Array.isArray(rows)){
var data=rows;
rows = [];
for(var key in data) {
if(data.hasOwnProperty(key)){
var row=data[key];
row[OBJECT_COLUMN_NAME] = key;
rows.push(row);}}}



if(rows.length === 0){
global.nativeLoggingHook('',LOG_LEVELS.log);
return;}


var columns=Object.keys(rows[0]).sort();
var stringRows=[];
var columnWidths=[];



columns.forEach(function(k,i){
columnWidths[i] = k.length;
for(var j=0;j < rows.length;j++) {
var cellStr=rows[j][k].toString();
stringRows[j] = stringRows[j] || [];
stringRows[j][i] = cellStr;
columnWidths[i] = Math.max(columnWidths[i],cellStr.length);}});





var joinRow=function(row,space){
var cells=row.map(function(cell,i){
var extraSpaces=repeat(' ',columnWidths[i] - cell.length).join('');
return cell + extraSpaces;});

space = space || ' ';
return cells.join(space + '|' + space);};


var separators=columnWidths.map(function(columnWidth){
return repeat('-',columnWidth).join('');});

var separatorRow=joinRow(separators,'-');
var header=joinRow(columns);
var table=[header,separatorRow];

for(var i=0;i < rows.length;i++) {
table.push(joinRow(stringRows[i]));}






global.nativeLoggingHook('\n' + table.join('\n'),LOG_LEVELS.log);}


global.console = {
error:getNativeLogFunction(LOG_LEVELS.error),
info:getNativeLogFunction(LOG_LEVELS.info),
log:getNativeLogFunction(LOG_LEVELS.log),
warn:getNativeLogFunction(LOG_LEVELS.warn),
trace:getNativeLogFunction(LOG_LEVELS.trace),
table:consoleTablePolyfill};}




if(typeof module !== 'undefined'){
module.exports = setupConsole;}else 
{
setupConsole(global);}})(


this);
(















function(global){
var ErrorUtils={
_inGuard:0,
_globalHandler:null,
setGlobalHandler:function(fun){
ErrorUtils._globalHandler = fun;},

reportError:function(error){
ErrorUtils._globalHandler && ErrorUtils._globalHandler(error);},

reportFatalError:function(error){
ErrorUtils._globalHandler && ErrorUtils._globalHandler(error,true);},

applyWithGuard:function(fun,context,args){
try{
ErrorUtils._inGuard++;
return fun.apply(context,args);}
catch(e) {
ErrorUtils.reportError(e);}finally 
{
ErrorUtils._inGuard--;}},


applyWithGuardIfNeeded:function(fun,context,args){
if(ErrorUtils.inGuard()){
return fun.apply(context,args);}else 
{
ErrorUtils.applyWithGuard(fun,context,args);}},


inGuard:function(){
return ErrorUtils._inGuard;},

guard:function(fun,name,context){
if(typeof fun !== 'function'){
console.warn('A function must be passed to ErrorUtils.guard, got ',fun);
return null;}

name = name || fun.name || '<generated guard>';
function guarded(){
return (
ErrorUtils.applyWithGuard(
fun,
context || this,
arguments,
null,
name));}




return guarded;}};


global.ErrorUtils = ErrorUtils;





function setupErrorGuard(){
var onError=function(e){
global.console.error(
'Error: ' + 
'\n stack: ' + e.stack + 
'\n line: ' + e.line + 
'\n message: ' + e.message,
e);};


global.ErrorUtils.setGlobalHandler(onError);}


setupErrorGuard();})(
this);
if(











!String.prototype.startsWith){
String.prototype.startsWith = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:0;
var start=Math.min(Math.max(pos,0),string.length);
return string.indexOf(String(search),pos) === start;};}



if(!String.prototype.endsWith){
String.prototype.endsWith = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var stringLength=string.length;
var searchString=String(search);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:stringLength;
var end=Math.min(Math.max(pos,0),stringLength);
var start=end - searchString.length;
if(start < 0){
return false;}

return string.lastIndexOf(searchString,start) === start;};}



if(!String.prototype.contains){
String.prototype.contains = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:0;
return string.indexOf(String(search),pos) !== -1;};}



if(!String.prototype.repeat){
String.prototype.repeat = function(count){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
count = Number(count) || 0;
if(count < 0 || count === Infinity){
throw RangeError();}

if(count === 1){
return string;}

var result='';
while(count) {
if(count & 1){
result += string;}

if(count >>= 1){
string += string;}}


return result;};}
(









function(undefined){

function findIndex(predicate,context){
if(this == null){
throw new TypeError(
'Array.prototype.findIndex called on null or undefined');}


if(typeof predicate !== 'function'){
throw new TypeError('predicate must be a function');}

var list=Object(this);
var length=list.length >>> 0;
for(var i=0;i < length;i++) {
if(predicate.call(context,list[i],i,list)){
return i;}}


return -1;}


if(!Array.prototype.findIndex){
Object.defineProperty(Array.prototype,'findIndex',{
enumerable:false,
writable:true,
configurable:true,
value:findIndex});}




if(!Array.prototype.find){
Object.defineProperty(Array.prototype,'find',{
enumerable:false,
writable:true,
configurable:true,
value:function(predicate,context){
if(this == null){
throw new TypeError(
'Array.prototype.find called on null or undefined');}


var index=findIndex.call(this,predicate,context);
return index === -1?undefined:this[index];}});}})();
(
function(GLOBAL){







function getInvalidGlobalUseError(name){
return new Error(
'You are trying to render the global ' + name + ' variable as a ' + 
'React element. You probably forgot to require ' + name + '.');}


GLOBAL.Text = {
get defaultProps(){
throw getInvalidGlobalUseError('Text');}};


GLOBAL.Image = {
get defaultProps(){
throw getInvalidGlobalUseError('Image');}};



if(GLOBAL.document){
GLOBAL.document.createElement = null;}




GLOBAL.MutationObserver = undefined;})(
this);
__d('Identity/index.ios.js',["react-native-level/index.js","react-native/Libraries/react-native/react-native.js","Identity/Components/ResourceList.js","Identity/Components/TimHome.js","Identity/Components/ResourceTypesScreen.js","Identity/Components/NewResource.js","Identity/Components/NewItem.js","Identity/Components/ResourceView.js","Identity/Components/MessageView.js","Identity/Components/MessageList.js","Identity/Components/ArticleView.js","Identity/Components/IdentitiesList.js","Identity/Components/SelectPhotoList.js","Identity/Components/CameraView.js","Identity/Components/PhotoCarousel.js","Identity/utils/utils.js","tradle-constants/index.js","react-native-icons/index.js","react-mixin/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

require('react-native-level/index.js');
var React=require('react-native/Libraries/react-native/react-native.js');
var ResourceList=require('Identity/Components/ResourceList.js');
var TimHome=require('Identity/Components/TimHome.js');
var ResourceTypesScreen=require('Identity/Components/ResourceTypesScreen.js');
var NewResource=require('Identity/Components/NewResource.js');
var NewItem=require('Identity/Components/NewItem.js');
var ResourceView=require('Identity/Components/ResourceView.js');
var MessageView=require('Identity/Components/MessageView.js');
var MessageList=require('Identity/Components/MessageList.js');
var ArticleView=require('Identity/Components/ArticleView.js');
var IdentitiesList=require('Identity/Components/IdentitiesList.js');
var SelectPhotoList=require('Identity/Components/SelectPhotoList.js');
var CameraView=require('Identity/Components/CameraView.js');
var PhotoCarousel=require('Identity/Components/PhotoCarousel.js');
var utils=require('Identity/utils/utils.js');
var constants=require('tradle-constants/index.js');var _require=
require('react-native-icons/index.js');var Icon=_require.Icon;


var reactMixin=require('react-mixin/index.js');

var IDENTITY_MODEL='tradle.Identity';var 

Component=







React.Component;var Navigator=React.Navigator;var Image=React.Image;var View=React.View;var Text=React.Text;var TouchableOpacity=React.TouchableOpacity;var StyleSheet=React.StyleSheet;

var styles=StyleSheet.create({
icon:{
width:20,
height:20,
marginTop:15},

orgImage:{
width:20,
height:20,
marginTop:15,
marginRight:3,
borderRadius:10},

container:{
flex:1},




navBarText:{
fontSize:16,
marginVertical:15},

navBarTitleText:{
color:'#2E3B4E',
fontWeight:'500',
marginVertical:14},

navBarLeftButton:{
paddingLeft:15},

navBarRightButton:{
paddingRight:15},

navBarButtonText:{
color:'#7AAAC3'}});var 



TiMApp=(function(_Component){_inherits(TiMApp,_Component);
function TiMApp(props){_classCallCheck(this,TiMApp);
_get(Object.getPrototypeOf(TiMApp.prototype),'constructor',this).call(this,props);}_createClass(TiMApp,[{key:'render',value:




function render(){
var props={modelName:IDENTITY_MODEL};
return (
React.createElement(Navigator,{
style:styles.container,
initialRoute:{
id:1,


component:TimHome,
passProps:props},

renderScene:this.renderScene,
navigationBar:
React.createElement(Navigator.NavigationBar,{
routeMapper:NavigationBarRouteMapper,
style:styles.navBar}),


passProps:props,
configureScene:function(route){
if(route.sceneConfig)
return route.sceneConfig;
return Navigator.SceneConfigs.FloatFromRight;}}));}},{key:'renderScene',value:





function renderScene(route,nav){
var props=route.passProps;
switch(route.id){
case 1:
return React.createElement(TimHome,{navigator:nav,modelName:IDENTITY_MODEL,filter:props.filter});
case 2:
return React.createElement(ResourceTypesScreen,{navigator:nav,
modelName:props.modelName,
resource:props.resource,
returnRoute:props.returnRoute,
callback:props.callback});
case 3:
return React.createElement(ResourceView,{navigator:nav,
resource:props.resource,
prop:props.prop,
verify:props.verify});
case 4:
return React.createElement(NewResource,{navigator:nav,
resource:props.resource,
model:props.model,
returnRoute:props.returnRoute,
callback:props.callback});
case 5:
return React.createElement(MessageView,{navigator:nav,
resource:props.resource,
verify:props.verify});
case 6:
return React.createElement(NewItem,{navigator:nav,
resource:props.resource,
metadata:props.metadata,
onAddItem:props.onAddItem,
parentMeta:props.parentMeta});
case 7:
return React.createElement(ArticleView,{navigator:nav,url:props.url});
case 8:
return React.createElement(IdentitiesList,{navigator:nav,
filter:props.filter,
list:props.list,
callback:props.callback,
modelName:props.modelName});
case 11:
return React.createElement(MessageList,{navigator:nav,
filter:props.filter,
resource:props.resource,
prop:props.prop,
returnRoute:props.returnRoute,
callback:props.callback,
isAggregation:props.isAggregation,
modelName:props.modelName});
case 12:
return React.createElement(CameraView,null);




case 13:
return React.createElement(SelectPhotoList,{
metadata:props.metadata,
style:styles.style,
navigator:props.navigator,
onSelect:props.onSelect,
onSelectingEnd:props.onSelectingEnd});

case 14:
return React.createElement(PhotoCarousel,{photos:props.photos,currentPhoto:props.currentPhoto});
case 10:
default:
return React.createElement(ResourceList,{navigator:nav,
filter:props.filter,
resource:props.resource,
prop:props.prop,
returnRoute:props.returnRoute,
callback:props.callback,
isAggregation:props.isAggregation,
sortProperty:props.sortProperty,
modelName:props.modelName});}}}]);return TiMApp;})(Component);



var NavigationBarRouteMapper={
LeftButton:function(route,navigator,index,navState){
if(index === 0 || route.noLeftButton){
return null;}

var previousRoute=navState.routeStack[index - 1];
var lbTitle=route.backButtonTitle || previousRoute.title;
if(!lbTitle)
return null;
var style=[styles.navBarText];
if(route.tintColor)
style.push(route.tintColor);else 

style.push(styles.navBarButtonText);

var title=lbTitle.indexOf('|') == -1?
React.createElement(Text,{style:style},
lbTitle):

React.createElement(Icon,{name:lbTitle,size:20,color:'#7AAAC3',style:styles.icon});
return (
React.createElement(TouchableOpacity,{
onPress:function(){return navigator.pop();}},
React.createElement(View,{style:styles.navBarLeftButton},
title)));},





RightButton:function(route,navigator,index,navState){
if(!route.rightButtonTitle)
return React.createElement(View,null);
var style=[styles.navBarText,styles.navBarButtonText];
if(route.tintColor)
style.push({color:route.tintColor});
var title=route.rightButtonTitle.indexOf('|') == -1?
React.createElement(Text,{style:style},
route.rightButtonTitle):

React.createElement(Icon,{name:route.rightButtonTitle,size:20,color:'#7AAAC3',style:styles.icon});

return (
React.createElement(TouchableOpacity,{
onPress:function(){

if(route.onRightButtonPress.stateChange){
if(route.onRightButtonPress.before)
route.onRightButtonPress.before();
route.onRightButtonPress.stateChange();
if(route.onRightButtonPress.after)
route.onRightButtonPress.after();}else 


navigator.push(route.onRightButtonPress);}},


React.createElement(View,{style:styles.navBarRightButton},
title)));},





Title:function(route,navigator,index,navState){
var org;
if(route.passProps.modelName){
if(route.passProps.modelName === 'tradle.Message'){
if(route.passProps.resource && route.passProps.resource[constants.TYPE] === constants.TYPES.IDENTITY){
if(route.passProps.resource.organization && route.passProps.resource.organization.photo)
org = React.createElement(Image,{source:{uri:route.passProps.resource.organization.photo},style:styles.orgImage});}}}



if(!org)
org = React.createElement(View,null);
var style=[styles.navBarText,styles.navBarTitleText];
if(route.titleTintColor)
style.push({color:route.titleTintColor});
return (
React.createElement(View,{style:{flexDirection:'row',flex:1}},
org,
React.createElement(Text,{style:style},
route.title)));}};







React.AppRegistry.registerComponent('TiM',function(){return TiMApp;});
});
__d('react-native-level/index.js',["asyncstorage-down/platform.js","level-packager/level-packager.js","asyncstorage-down/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  require('asyncstorage-down/platform.js');
module.exports = require('level-packager/level-packager.js')(require('asyncstorage-down/index.js'));
});
__d('asyncstorage-down/platform.js',["process/browser.js","buffer/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  if(typeof __dirname === 'undefined')global.__dirname = '/';
if(typeof process === 'undefined'){
global.process = require('process/browser.js');
process.browser = false;}

if(typeof Buffer === 'undefined')global.Buffer = require('buffer/index.js').Buffer;
});
__d('process/browser.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

process=module.exports = {};
var queue=[];
var draining=false;

function drainQueue(){
if(draining){
return;}

draining = true;
var currentQueue;
var len=queue.length;
while(len) {
currentQueue = queue;
queue = [];
var i=-1;
while(++i < len) {
currentQueue[i]();}

len = queue.length;}

draining = false;}

process.nextTick = function(fun){
queue.push(fun);
if(!draining){
setTimeout(drainQueue,0);}};



process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = '';
process.versions = {};

function noop(){}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function(name){
throw new Error('process.binding is not supported');};



process.cwd = function(){return '/';};
process.chdir = function(dir){
throw new Error('process.chdir is not supported');};

process.umask = function(){return 0;};
});
__d('buffer/index.js',["base64-js/lib/b64.js","ieee754/index.js","is-array/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */

var base64=require('base64-js/lib/b64.js');
var ieee754=require('ieee754/index.js');
var isArray=require('is-array/index.js');

exports.Buffer = Buffer;
exports.SlowBuffer = SlowBuffer;
exports.INSPECT_MAX_BYTES = 50;
Buffer.poolSize = 8192;

var rootParent={};























Buffer.TYPED_ARRAY_SUPPORT = (function(){
function Foo(){}
try{
var buf=new ArrayBuffer(0);
var arr=new Uint8Array(buf);
arr.foo = function(){return 42;};
arr.constructor = Foo;
return arr.foo() === 42 && 
arr.constructor === Foo && 
typeof arr.subarray === 'function' && 
new Uint8Array(1).subarray(1,1).byteLength === 0;}
catch(e) {
return false;}})();



function kMaxLength(){
return Buffer.TYPED_ARRAY_SUPPORT?
0x7fffffff:
0x3fffffff;}














function Buffer(arg){
if(!(this instanceof Buffer)){

if(arguments.length > 1)return new Buffer(arg,arguments[1]);
return new Buffer(arg);}


this.length = 0;
this.parent = undefined;


if(typeof arg === 'number'){
return fromNumber(this,arg);}



if(typeof arg === 'string'){
return fromString(this,arg,arguments.length > 1?arguments[1]:'utf8');}



return fromObject(this,arg);}


function fromNumber(that,length){
that = allocate(that,length < 0?0:checked(length) | 0);
if(!Buffer.TYPED_ARRAY_SUPPORT){
for(var i=0;i < length;i++) {
that[i] = 0;}}


return that;}


function fromString(that,string,encoding){
if(typeof encoding !== 'string' || encoding === '')encoding = 'utf8';


var length=byteLength(string,encoding) | 0;
that = allocate(that,length);

that.write(string,encoding);
return that;}


function fromObject(that,object){
if(Buffer.isBuffer(object))return fromBuffer(that,object);

if(isArray(object))return fromArray(that,object);

if(object == null){
throw new TypeError('must start with number, buffer, array or string');}


if(typeof ArrayBuffer !== 'undefined' && object.buffer instanceof ArrayBuffer){
return fromTypedArray(that,object);}


if(object.length)return fromArrayLike(that,object);

return fromJsonObject(that,object);}


function fromBuffer(that,buffer){
var length=checked(buffer.length) | 0;
that = allocate(that,length);
buffer.copy(that,0,0,length);
return that;}


function fromArray(that,array){
var length=checked(array.length) | 0;
that = allocate(that,length);
for(var i=0;i < length;i += 1) {
that[i] = array[i] & 255;}

return that;}



function fromTypedArray(that,array){
var length=checked(array.length) | 0;
that = allocate(that,length);



for(var i=0;i < length;i += 1) {
that[i] = array[i] & 255;}

return that;}


function fromArrayLike(that,array){
var length=checked(array.length) | 0;
that = allocate(that,length);
for(var i=0;i < length;i += 1) {
that[i] = array[i] & 255;}

return that;}




function fromJsonObject(that,object){
var array;
var length=0;

if(object.type === 'Buffer' && isArray(object.data)){
array = object.data;
length = checked(array.length) | 0;}

that = allocate(that,length);

for(var i=0;i < length;i += 1) {
that[i] = array[i] & 255;}

return that;}


function allocate(that,length){
if(Buffer.TYPED_ARRAY_SUPPORT){

that = Buffer._augment(new Uint8Array(length));}else 
{

that.length = length;
that._isBuffer = true;}


var fromPool=length !== 0 && length <= Buffer.poolSize >>> 1;
if(fromPool)that.parent = rootParent;

return that;}


function checked(length){


if(length >= kMaxLength()){
throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 
'size: 0x' + kMaxLength().toString(16) + ' bytes');}

return length | 0;}


function SlowBuffer(subject,encoding){
if(!(this instanceof SlowBuffer))return new SlowBuffer(subject,encoding);

var buf=new Buffer(subject,encoding);
delete buf.parent;
return buf;}


Buffer.isBuffer = function isBuffer(b){
return !!(b != null && b._isBuffer);};


Buffer.compare = function compare(a,b){
if(!Buffer.isBuffer(a) || !Buffer.isBuffer(b)){
throw new TypeError('Arguments must be Buffers');}


if(a === b)return 0;

var x=a.length;
var y=b.length;

var i=0;
var len=Math.min(x,y);
while(i < len) {
if(a[i] !== b[i])break;

++i;}


if(i !== len){
x = a[i];
y = b[i];}


if(x < y)return -1;
if(y < x)return 1;
return 0;};


Buffer.isEncoding = function isEncoding(encoding){
switch(String(encoding).toLowerCase()){
case 'hex':
case 'utf8':
case 'utf-8':
case 'ascii':
case 'binary':
case 'base64':
case 'raw':
case 'ucs2':
case 'ucs-2':
case 'utf16le':
case 'utf-16le':
return true;
default:
return false;}};



Buffer.concat = function concat(list,length){
if(!isArray(list))throw new TypeError('list argument must be an Array of Buffers.');

if(list.length === 0){
return new Buffer(0);}else 
if(list.length === 1){
return list[0];}


var i;
if(length === undefined){
length = 0;
for(i = 0;i < list.length;i++) {
length += list[i].length;}}



var buf=new Buffer(length);
var pos=0;
for(i = 0;i < list.length;i++) {
var item=list[i];
item.copy(buf,pos);
pos += item.length;}

return buf;};


function byteLength(string,encoding){
if(typeof string !== 'string')string = '' + string;

var len=string.length;
if(len === 0)return 0;


var loweredCase=false;
for(;;) {
switch(encoding){
case 'ascii':
case 'binary':

case 'raw':
case 'raws':
return len;
case 'utf8':
case 'utf-8':
return utf8ToBytes(string).length;
case 'ucs2':
case 'ucs-2':
case 'utf16le':
case 'utf-16le':
return len * 2;
case 'hex':
return len >>> 1;
case 'base64':
return base64ToBytes(string).length;
default:
if(loweredCase)return utf8ToBytes(string).length;
encoding = ('' + encoding).toLowerCase();
loweredCase = true;}}}



Buffer.byteLength = byteLength;


Buffer.prototype.length = undefined;
Buffer.prototype.parent = undefined;

function slowToString(encoding,start,end){
var loweredCase=false;

start = start | 0;
end = end === undefined || end === Infinity?this.length:end | 0;

if(!encoding)encoding = 'utf8';
if(start < 0)start = 0;
if(end > this.length)end = this.length;
if(end <= start)return '';

while(true) {
switch(encoding){
case 'hex':
return hexSlice(this,start,end);

case 'utf8':
case 'utf-8':
return utf8Slice(this,start,end);

case 'ascii':
return asciiSlice(this,start,end);

case 'binary':
return binarySlice(this,start,end);

case 'base64':
return base64Slice(this,start,end);

case 'ucs2':
case 'ucs-2':
case 'utf16le':
case 'utf-16le':
return utf16leSlice(this,start,end);

default:
if(loweredCase)throw new TypeError('Unknown encoding: ' + encoding);
encoding = (encoding + '').toLowerCase();
loweredCase = true;}}}




Buffer.prototype.toString = function toString(){
var length=this.length | 0;
if(length === 0)return '';
if(arguments.length === 0)return utf8Slice(this,0,length);
return slowToString.apply(this,arguments);};


Buffer.prototype.equals = function equals(b){
if(!Buffer.isBuffer(b))throw new TypeError('Argument must be a Buffer');
if(this === b)return true;
return Buffer.compare(this,b) === 0;};


Buffer.prototype.inspect = function inspect(){
var str='';
var max=exports.INSPECT_MAX_BYTES;
if(this.length > 0){
str = this.toString('hex',0,max).match(/.{2}/g).join(' ');
if(this.length > max)str += ' ... ';}

return '<Buffer ' + str + '>';};


Buffer.prototype.compare = function compare(b){
if(!Buffer.isBuffer(b))throw new TypeError('Argument must be a Buffer');
if(this === b)return 0;
return Buffer.compare(this,b);};


Buffer.prototype.indexOf = function indexOf(val,byteOffset){
if(byteOffset > 0x7fffffff)byteOffset = 0x7fffffff;else 
if(byteOffset < -0x80000000)byteOffset = -0x80000000;
byteOffset >>= 0;

if(this.length === 0)return -1;
if(byteOffset >= this.length)return -1;


if(byteOffset < 0)byteOffset = Math.max(this.length + byteOffset,0);

if(typeof val === 'string'){
if(val.length === 0)return -1;
return String.prototype.indexOf.call(this,val,byteOffset);}

if(Buffer.isBuffer(val)){
return arrayIndexOf(this,val,byteOffset);}

if(typeof val === 'number'){
if(Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function'){
return Uint8Array.prototype.indexOf.call(this,val,byteOffset);}

return arrayIndexOf(this,[val],byteOffset);}


function arrayIndexOf(arr,val,byteOffset){
var foundIndex=-1;
for(var i=0;byteOffset + i < arr.length;i++) {
if(arr[byteOffset + i] === val[foundIndex === -1?0:i - foundIndex]){
if(foundIndex === -1)foundIndex = i;
if(i - foundIndex + 1 === val.length)return byteOffset + foundIndex;}else 
{
foundIndex = -1;}}


return -1;}


throw new TypeError('val must be string, number or Buffer');};



Buffer.prototype.get = function get(offset){
console.log('.get() is deprecated. Access using array indexes instead.');
return this.readUInt8(offset);};



Buffer.prototype.set = function set(v,offset){
console.log('.set() is deprecated. Access using array indexes instead.');
return this.writeUInt8(v,offset);};


function hexWrite(buf,string,offset,length){
offset = Number(offset) || 0;
var remaining=buf.length - offset;
if(!length){
length = remaining;}else 
{
length = Number(length);
if(length > remaining){
length = remaining;}}




var strLen=string.length;
if(strLen % 2 !== 0)throw new Error('Invalid hex string');

if(length > strLen / 2){
length = strLen / 2;}

for(var i=0;i < length;i++) {
var parsed=parseInt(string.substr(i * 2,2),16);
if(isNaN(parsed))throw new Error('Invalid hex string');
buf[offset + i] = parsed;}

return i;}


function utf8Write(buf,string,offset,length){
return blitBuffer(utf8ToBytes(string,buf.length - offset),buf,offset,length);}


function asciiWrite(buf,string,offset,length){
return blitBuffer(asciiToBytes(string),buf,offset,length);}


function binaryWrite(buf,string,offset,length){
return asciiWrite(buf,string,offset,length);}


function base64Write(buf,string,offset,length){
return blitBuffer(base64ToBytes(string),buf,offset,length);}


function ucs2Write(buf,string,offset,length){
return blitBuffer(utf16leToBytes(string,buf.length - offset),buf,offset,length);}


Buffer.prototype.write = function write(string,offset,length,encoding){

if(offset === undefined){
encoding = 'utf8';
length = this.length;
offset = 0;}else 

if(length === undefined && typeof offset === 'string'){
encoding = offset;
length = this.length;
offset = 0;}else 

if(isFinite(offset)){
offset = offset | 0;
if(isFinite(length)){
length = length | 0;
if(encoding === undefined)encoding = 'utf8';}else 
{
encoding = length;
length = undefined;}}else 


{
var swap=encoding;
encoding = offset;
offset = length | 0;
length = swap;}


var remaining=this.length - offset;
if(length === undefined || length > remaining)length = remaining;

if(string.length > 0 && (length < 0 || offset < 0) || offset > this.length){
throw new RangeError('attempt to write outside buffer bounds');}


if(!encoding)encoding = 'utf8';

var loweredCase=false;
for(;;) {
switch(encoding){
case 'hex':
return hexWrite(this,string,offset,length);

case 'utf8':
case 'utf-8':
return utf8Write(this,string,offset,length);

case 'ascii':
return asciiWrite(this,string,offset,length);

case 'binary':
return binaryWrite(this,string,offset,length);

case 'base64':

return base64Write(this,string,offset,length);

case 'ucs2':
case 'ucs-2':
case 'utf16le':
case 'utf-16le':
return ucs2Write(this,string,offset,length);

default:
if(loweredCase)throw new TypeError('Unknown encoding: ' + encoding);
encoding = ('' + encoding).toLowerCase();
loweredCase = true;}}};




Buffer.prototype.toJSON = function toJSON(){
return {
type:'Buffer',
data:Array.prototype.slice.call(this._arr || this,0)};};



function base64Slice(buf,start,end){
if(start === 0 && end === buf.length){
return base64.fromByteArray(buf);}else 
{
return base64.fromByteArray(buf.slice(start,end));}}



function utf8Slice(buf,start,end){
var res='';
var tmp='';
end = Math.min(buf.length,end);

for(var i=start;i < end;i++) {
if(buf[i] <= 0x7F){
res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i]);
tmp = '';}else 
{
tmp += '%' + buf[i].toString(16);}}



return res + decodeUtf8Char(tmp);}


function asciiSlice(buf,start,end){
var ret='';
end = Math.min(buf.length,end);

for(var i=start;i < end;i++) {
ret += String.fromCharCode(buf[i] & 0x7F);}

return ret;}


function binarySlice(buf,start,end){
var ret='';
end = Math.min(buf.length,end);

for(var i=start;i < end;i++) {
ret += String.fromCharCode(buf[i]);}

return ret;}


function hexSlice(buf,start,end){
var len=buf.length;

if(!start || start < 0)start = 0;
if(!end || end < 0 || end > len)end = len;

var out='';
for(var i=start;i < end;i++) {
out += toHex(buf[i]);}

return out;}


function utf16leSlice(buf,start,end){
var bytes=buf.slice(start,end);
var res='';
for(var i=0;i < bytes.length;i += 2) {
res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);}

return res;}


Buffer.prototype.slice = function slice(start,end){
var len=this.length;
start = ~ ~start;
end = end === undefined?len:~ ~end;

if(start < 0){
start += len;
if(start < 0)start = 0;}else 
if(start > len){
start = len;}


if(end < 0){
end += len;
if(end < 0)end = 0;}else 
if(end > len){
end = len;}


if(end < start)end = start;

var newBuf;
if(Buffer.TYPED_ARRAY_SUPPORT){
newBuf = Buffer._augment(this.subarray(start,end));}else 
{
var sliceLen=end - start;
newBuf = new Buffer(sliceLen,undefined);
for(var i=0;i < sliceLen;i++) {
newBuf[i] = this[i + start];}}



if(newBuf.length)newBuf.parent = this.parent || this;

return newBuf;};





function checkOffset(offset,ext,length){
if(offset % 1 !== 0 || offset < 0)throw new RangeError('offset is not uint');
if(offset + ext > length)throw new RangeError('Trying to access beyond buffer length');}


Buffer.prototype.readUIntLE = function readUIntLE(offset,byteLength,noAssert){
offset = offset | 0;
byteLength = byteLength | 0;
if(!noAssert)checkOffset(offset,byteLength,this.length);

var val=this[offset];
var mul=1;
var i=0;
while(++i < byteLength && (mul *= 0x100)) {
val += this[offset + i] * mul;}


return val;};


Buffer.prototype.readUIntBE = function readUIntBE(offset,byteLength,noAssert){
offset = offset | 0;
byteLength = byteLength | 0;
if(!noAssert){
checkOffset(offset,byteLength,this.length);}


var val=this[offset + --byteLength];
var mul=1;
while(byteLength > 0 && (mul *= 0x100)) {
val += this[offset + --byteLength] * mul;}


return val;};


Buffer.prototype.readUInt8 = function readUInt8(offset,noAssert){
if(!noAssert)checkOffset(offset,1,this.length);
return this[offset];};


Buffer.prototype.readUInt16LE = function readUInt16LE(offset,noAssert){
if(!noAssert)checkOffset(offset,2,this.length);
return this[offset] | this[offset + 1] << 8;};


Buffer.prototype.readUInt16BE = function readUInt16BE(offset,noAssert){
if(!noAssert)checkOffset(offset,2,this.length);
return this[offset] << 8 | this[offset + 1];};


Buffer.prototype.readUInt32LE = function readUInt32LE(offset,noAssert){
if(!noAssert)checkOffset(offset,4,this.length);

return (this[offset] | 
this[offset + 1] << 8 | 
this[offset + 2] << 16) + 
this[offset + 3] * 0x1000000;};


Buffer.prototype.readUInt32BE = function readUInt32BE(offset,noAssert){
if(!noAssert)checkOffset(offset,4,this.length);

return this[offset] * 0x1000000 + (
this[offset + 1] << 16 | 
this[offset + 2] << 8 | 
this[offset + 3]);};


Buffer.prototype.readIntLE = function readIntLE(offset,byteLength,noAssert){
offset = offset | 0;
byteLength = byteLength | 0;
if(!noAssert)checkOffset(offset,byteLength,this.length);

var val=this[offset];
var mul=1;
var i=0;
while(++i < byteLength && (mul *= 0x100)) {
val += this[offset + i] * mul;}

mul *= 0x80;

if(val >= mul)val -= Math.pow(2,8 * byteLength);

return val;};


Buffer.prototype.readIntBE = function readIntBE(offset,byteLength,noAssert){
offset = offset | 0;
byteLength = byteLength | 0;
if(!noAssert)checkOffset(offset,byteLength,this.length);

var i=byteLength;
var mul=1;
var val=this[offset + --i];
while(i > 0 && (mul *= 0x100)) {
val += this[offset + --i] * mul;}

mul *= 0x80;

if(val >= mul)val -= Math.pow(2,8 * byteLength);

return val;};


Buffer.prototype.readInt8 = function readInt8(offset,noAssert){
if(!noAssert)checkOffset(offset,1,this.length);
if(!(this[offset] & 0x80))return this[offset];
return (0xff - this[offset] + 1) * -1;};


Buffer.prototype.readInt16LE = function readInt16LE(offset,noAssert){
if(!noAssert)checkOffset(offset,2,this.length);
var val=this[offset] | this[offset + 1] << 8;
return val & 0x8000?val | 0xFFFF0000:val;};


Buffer.prototype.readInt16BE = function readInt16BE(offset,noAssert){
if(!noAssert)checkOffset(offset,2,this.length);
var val=this[offset + 1] | this[offset] << 8;
return val & 0x8000?val | 0xFFFF0000:val;};


Buffer.prototype.readInt32LE = function readInt32LE(offset,noAssert){
if(!noAssert)checkOffset(offset,4,this.length);

return this[offset] | 
this[offset + 1] << 8 | 
this[offset + 2] << 16 | 
this[offset + 3] << 24;};


Buffer.prototype.readInt32BE = function readInt32BE(offset,noAssert){
if(!noAssert)checkOffset(offset,4,this.length);

return this[offset] << 24 | 
this[offset + 1] << 16 | 
this[offset + 2] << 8 | 
this[offset + 3];};


Buffer.prototype.readFloatLE = function readFloatLE(offset,noAssert){
if(!noAssert)checkOffset(offset,4,this.length);
return ieee754.read(this,offset,true,23,4);};


Buffer.prototype.readFloatBE = function readFloatBE(offset,noAssert){
if(!noAssert)checkOffset(offset,4,this.length);
return ieee754.read(this,offset,false,23,4);};


Buffer.prototype.readDoubleLE = function readDoubleLE(offset,noAssert){
if(!noAssert)checkOffset(offset,8,this.length);
return ieee754.read(this,offset,true,52,8);};


Buffer.prototype.readDoubleBE = function readDoubleBE(offset,noAssert){
if(!noAssert)checkOffset(offset,8,this.length);
return ieee754.read(this,offset,false,52,8);};


function checkInt(buf,value,offset,ext,max,min){
if(!Buffer.isBuffer(buf))throw new TypeError('buffer must be a Buffer instance');
if(value > max || value < min)throw new RangeError('value is out of bounds');
if(offset + ext > buf.length)throw new RangeError('index out of range');}


Buffer.prototype.writeUIntLE = function writeUIntLE(value,offset,byteLength,noAssert){
value = +value;
offset = offset | 0;
byteLength = byteLength | 0;
if(!noAssert)checkInt(this,value,offset,byteLength,Math.pow(2,8 * byteLength),0);

var mul=1;
var i=0;
this[offset] = value & 0xFF;
while(++i < byteLength && (mul *= 0x100)) {
this[offset + i] = value / mul & 0xFF;}


return offset + byteLength;};


Buffer.prototype.writeUIntBE = function writeUIntBE(value,offset,byteLength,noAssert){
value = +value;
offset = offset | 0;
byteLength = byteLength | 0;
if(!noAssert)checkInt(this,value,offset,byteLength,Math.pow(2,8 * byteLength),0);

var i=byteLength - 1;
var mul=1;
this[offset + i] = value & 0xFF;
while(--i >= 0 && (mul *= 0x100)) {
this[offset + i] = value / mul & 0xFF;}


return offset + byteLength;};


Buffer.prototype.writeUInt8 = function writeUInt8(value,offset,noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this,value,offset,1,0xff,0);
if(!Buffer.TYPED_ARRAY_SUPPORT)value = Math.floor(value);
this[offset] = value;
return offset + 1;};


function objectWriteUInt16(buf,value,offset,littleEndian){
if(value < 0)value = 0xffff + value + 1;
for(var i=0,j=Math.min(buf.length - offset,2);i < j;i++) {
buf[offset + i] = (value & 0xff << 8 * (littleEndian?i:1 - i)) >>> 
(littleEndian?i:1 - i) * 8;}}



Buffer.prototype.writeUInt16LE = function writeUInt16LE(value,offset,noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this,value,offset,2,0xffff,0);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset] = value;
this[offset + 1] = value >>> 8;}else 
{
objectWriteUInt16(this,value,offset,true);}

return offset + 2;};


Buffer.prototype.writeUInt16BE = function writeUInt16BE(value,offset,noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this,value,offset,2,0xffff,0);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset] = value >>> 8;
this[offset + 1] = value;}else 
{
objectWriteUInt16(this,value,offset,false);}

return offset + 2;};


function objectWriteUInt32(buf,value,offset,littleEndian){
if(value < 0)value = 0xffffffff + value + 1;
for(var i=0,j=Math.min(buf.length - offset,4);i < j;i++) {
buf[offset + i] = value >>> (littleEndian?i:3 - i) * 8 & 0xff;}}



Buffer.prototype.writeUInt32LE = function writeUInt32LE(value,offset,noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset + 3] = value >>> 24;
this[offset + 2] = value >>> 16;
this[offset + 1] = value >>> 8;
this[offset] = value;}else 
{
objectWriteUInt32(this,value,offset,true);}

return offset + 4;};


Buffer.prototype.writeUInt32BE = function writeUInt32BE(value,offset,noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset] = value >>> 24;
this[offset + 1] = value >>> 16;
this[offset + 2] = value >>> 8;
this[offset + 3] = value;}else 
{
objectWriteUInt32(this,value,offset,false);}

return offset + 4;};


Buffer.prototype.writeIntLE = function writeIntLE(value,offset,byteLength,noAssert){
value = +value;
offset = offset | 0;
if(!noAssert){
var limit=Math.pow(2,8 * byteLength - 1);

checkInt(this,value,offset,byteLength,limit - 1,-limit);}


var i=0;
var mul=1;
var sub=value < 0?1:0;
this[offset] = value & 0xFF;
while(++i < byteLength && (mul *= 0x100)) {
this[offset + i] = (value / mul >> 0) - sub & 0xFF;}


return offset + byteLength;};


Buffer.prototype.writeIntBE = function writeIntBE(value,offset,byteLength,noAssert){
value = +value;
offset = offset | 0;
if(!noAssert){
var limit=Math.pow(2,8 * byteLength - 1);

checkInt(this,value,offset,byteLength,limit - 1,-limit);}


var i=byteLength - 1;
var mul=1;
var sub=value < 0?1:0;
this[offset + i] = value & 0xFF;
while(--i >= 0 && (mul *= 0x100)) {
this[offset + i] = (value / mul >> 0) - sub & 0xFF;}


return offset + byteLength;};


Buffer.prototype.writeInt8 = function writeInt8(value,offset,noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this,value,offset,1,0x7f,-0x80);
if(!Buffer.TYPED_ARRAY_SUPPORT)value = Math.floor(value);
if(value < 0)value = 0xff + value + 1;
this[offset] = value;
return offset + 1;};


Buffer.prototype.writeInt16LE = function writeInt16LE(value,offset,noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset] = value;
this[offset + 1] = value >>> 8;}else 
{
objectWriteUInt16(this,value,offset,true);}

return offset + 2;};


Buffer.prototype.writeInt16BE = function writeInt16BE(value,offset,noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset] = value >>> 8;
this[offset + 1] = value;}else 
{
objectWriteUInt16(this,value,offset,false);}

return offset + 2;};


Buffer.prototype.writeInt32LE = function writeInt32LE(value,offset,noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset] = value;
this[offset + 1] = value >>> 8;
this[offset + 2] = value >>> 16;
this[offset + 3] = value >>> 24;}else 
{
objectWriteUInt32(this,value,offset,true);}

return offset + 4;};


Buffer.prototype.writeInt32BE = function writeInt32BE(value,offset,noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);
if(value < 0)value = 0xffffffff + value + 1;
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset] = value >>> 24;
this[offset + 1] = value >>> 16;
this[offset + 2] = value >>> 8;
this[offset + 3] = value;}else 
{
objectWriteUInt32(this,value,offset,false);}

return offset + 4;};


function checkIEEE754(buf,value,offset,ext,max,min){
if(value > max || value < min)throw new RangeError('value is out of bounds');
if(offset + ext > buf.length)throw new RangeError('index out of range');
if(offset < 0)throw new RangeError('index out of range');}


function writeFloat(buf,value,offset,littleEndian,noAssert){
if(!noAssert){
checkIEEE754(buf,value,offset,4,3.4028234663852886e+38,-3.4028234663852886e+38);}

ieee754.write(buf,value,offset,littleEndian,23,4);
return offset + 4;}


Buffer.prototype.writeFloatLE = function writeFloatLE(value,offset,noAssert){
return writeFloat(this,value,offset,true,noAssert);};


Buffer.prototype.writeFloatBE = function writeFloatBE(value,offset,noAssert){
return writeFloat(this,value,offset,false,noAssert);};


function writeDouble(buf,value,offset,littleEndian,noAssert){
if(!noAssert){
checkIEEE754(buf,value,offset,8,1.7976931348623157E+308,-1.7976931348623157E+308);}

ieee754.write(buf,value,offset,littleEndian,52,8);
return offset + 8;}


Buffer.prototype.writeDoubleLE = function writeDoubleLE(value,offset,noAssert){
return writeDouble(this,value,offset,true,noAssert);};


Buffer.prototype.writeDoubleBE = function writeDoubleBE(value,offset,noAssert){
return writeDouble(this,value,offset,false,noAssert);};



Buffer.prototype.copy = function copy(target,targetStart,start,end){
if(!start)start = 0;
if(!end && end !== 0)end = this.length;
if(targetStart >= target.length)targetStart = target.length;
if(!targetStart)targetStart = 0;
if(end > 0 && end < start)end = start;


if(end === start)return 0;
if(target.length === 0 || this.length === 0)return 0;


if(targetStart < 0){
throw new RangeError('targetStart out of bounds');}

if(start < 0 || start >= this.length)throw new RangeError('sourceStart out of bounds');
if(end < 0)throw new RangeError('sourceEnd out of bounds');


if(end > this.length)end = this.length;
if(target.length - targetStart < end - start){
end = target.length - targetStart + start;}


var len=end - start;

if(len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT){
for(var i=0;i < len;i++) {
target[i + targetStart] = this[i + start];}}else 

{
target._set(this.subarray(start,start + len),targetStart);}


return len;};



Buffer.prototype.fill = function fill(value,start,end){
if(!value)value = 0;
if(!start)start = 0;
if(!end)end = this.length;

if(end < start)throw new RangeError('end < start');


if(end === start)return;
if(this.length === 0)return;

if(start < 0 || start >= this.length)throw new RangeError('start out of bounds');
if(end < 0 || end > this.length)throw new RangeError('end out of bounds');

var i;
if(typeof value === 'number'){
for(i = start;i < end;i++) {
this[i] = value;}}else 

{
var bytes=utf8ToBytes(value.toString());
var len=bytes.length;
for(i = start;i < end;i++) {
this[i] = bytes[i % len];}}



return this;};






Buffer.prototype.toArrayBuffer = function toArrayBuffer(){
if(typeof Uint8Array !== 'undefined'){
if(Buffer.TYPED_ARRAY_SUPPORT){
return new Buffer(this).buffer;}else 
{
var buf=new Uint8Array(this.length);
for(var i=0,len=buf.length;i < len;i += 1) {
buf[i] = this[i];}

return buf.buffer;}}else 

{
throw new TypeError('Buffer.toArrayBuffer not supported in this browser');}};






var BP=Buffer.prototype;




Buffer._augment = function _augment(arr){
arr.constructor = Buffer;
arr._isBuffer = true;


arr._set = arr.set;


arr.get = BP.get;
arr.set = BP.set;

arr.write = BP.write;
arr.toString = BP.toString;
arr.toLocaleString = BP.toString;
arr.toJSON = BP.toJSON;
arr.equals = BP.equals;
arr.compare = BP.compare;
arr.indexOf = BP.indexOf;
arr.copy = BP.copy;
arr.slice = BP.slice;
arr.readUIntLE = BP.readUIntLE;
arr.readUIntBE = BP.readUIntBE;
arr.readUInt8 = BP.readUInt8;
arr.readUInt16LE = BP.readUInt16LE;
arr.readUInt16BE = BP.readUInt16BE;
arr.readUInt32LE = BP.readUInt32LE;
arr.readUInt32BE = BP.readUInt32BE;
arr.readIntLE = BP.readIntLE;
arr.readIntBE = BP.readIntBE;
arr.readInt8 = BP.readInt8;
arr.readInt16LE = BP.readInt16LE;
arr.readInt16BE = BP.readInt16BE;
arr.readInt32LE = BP.readInt32LE;
arr.readInt32BE = BP.readInt32BE;
arr.readFloatLE = BP.readFloatLE;
arr.readFloatBE = BP.readFloatBE;
arr.readDoubleLE = BP.readDoubleLE;
arr.readDoubleBE = BP.readDoubleBE;
arr.writeUInt8 = BP.writeUInt8;
arr.writeUIntLE = BP.writeUIntLE;
arr.writeUIntBE = BP.writeUIntBE;
arr.writeUInt16LE = BP.writeUInt16LE;
arr.writeUInt16BE = BP.writeUInt16BE;
arr.writeUInt32LE = BP.writeUInt32LE;
arr.writeUInt32BE = BP.writeUInt32BE;
arr.writeIntLE = BP.writeIntLE;
arr.writeIntBE = BP.writeIntBE;
arr.writeInt8 = BP.writeInt8;
arr.writeInt16LE = BP.writeInt16LE;
arr.writeInt16BE = BP.writeInt16BE;
arr.writeInt32LE = BP.writeInt32LE;
arr.writeInt32BE = BP.writeInt32BE;
arr.writeFloatLE = BP.writeFloatLE;
arr.writeFloatBE = BP.writeFloatBE;
arr.writeDoubleLE = BP.writeDoubleLE;
arr.writeDoubleBE = BP.writeDoubleBE;
arr.fill = BP.fill;
arr.inspect = BP.inspect;
arr.toArrayBuffer = BP.toArrayBuffer;

return arr;};


var INVALID_BASE64_RE=/[^+\/0-9A-z\-]/g;

function base64clean(str){

str = stringtrim(str).replace(INVALID_BASE64_RE,'');

if(str.length < 2)return '';

while(str.length % 4 !== 0) {
str = str + '=';}

return str;}


function stringtrim(str){
if(str.trim)return str.trim();
return str.replace(/^\s+|\s+$/g,'');}


function toHex(n){
if(n < 16)return '0' + n.toString(16);
return n.toString(16);}


function utf8ToBytes(string,units){
units = units || Infinity;
var codePoint;
var length=string.length;
var leadSurrogate=null;
var bytes=[];
var i=0;

for(;i < length;i++) {
codePoint = string.charCodeAt(i);


if(codePoint > 0xD7FF && codePoint < 0xE000){

if(leadSurrogate){

if(codePoint < 0xDC00){
if((units -= 3) > -1)bytes.push(0xEF,0xBF,0xBD);
leadSurrogate = codePoint;
continue;}else 
{

codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000;
leadSurrogate = null;}}else 

{


if(codePoint > 0xDBFF){

if((units -= 3) > -1)bytes.push(0xEF,0xBF,0xBD);
continue;}else 
if(i + 1 === length){

if((units -= 3) > -1)bytes.push(0xEF,0xBF,0xBD);
continue;}else 
{

leadSurrogate = codePoint;
continue;}}}else 


if(leadSurrogate){

if((units -= 3) > -1)bytes.push(0xEF,0xBF,0xBD);
leadSurrogate = null;}



if(codePoint < 0x80){
if((units -= 1) < 0)break;
bytes.push(codePoint);}else 
if(codePoint < 0x800){
if((units -= 2) < 0)break;
bytes.push(
codePoint >> 0x6 | 0xC0,
codePoint & 0x3F | 0x80);}else 

if(codePoint < 0x10000){
if((units -= 3) < 0)break;
bytes.push(
codePoint >> 0xC | 0xE0,
codePoint >> 0x6 & 0x3F | 0x80,
codePoint & 0x3F | 0x80);}else 

if(codePoint < 0x200000){
if((units -= 4) < 0)break;
bytes.push(
codePoint >> 0x12 | 0xF0,
codePoint >> 0xC & 0x3F | 0x80,
codePoint >> 0x6 & 0x3F | 0x80,
codePoint & 0x3F | 0x80);}else 

{
throw new Error('Invalid code point');}}



return bytes;}


function asciiToBytes(str){
var byteArray=[];
for(var i=0;i < str.length;i++) {

byteArray.push(str.charCodeAt(i) & 0xFF);}

return byteArray;}


function utf16leToBytes(str,units){
var c,hi,lo;
var byteArray=[];
for(var i=0;i < str.length;i++) {
if((units -= 2) < 0)break;

c = str.charCodeAt(i);
hi = c >> 8;
lo = c % 256;
byteArray.push(lo);
byteArray.push(hi);}


return byteArray;}


function base64ToBytes(str){
return base64.toByteArray(base64clean(str));}


function blitBuffer(src,dst,offset,length){
for(var i=0;i < length;i++) {
if(i + offset >= dst.length || i >= src.length)break;
dst[i + offset] = src[i];}

return i;}


function decodeUtf8Char(str){
try{
return decodeURIComponent(str);}
catch(err) {
return String.fromCharCode(0xFFFD);}}
});
__d('base64-js/lib/b64.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var lookup='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

;(function(exports){
'use strict';

var Arr=typeof Uint8Array !== 'undefined'?
Uint8Array:
Array;

var PLUS='+'.charCodeAt(0);
var SLASH='/'.charCodeAt(0);
var NUMBER='0'.charCodeAt(0);
var LOWER='a'.charCodeAt(0);
var UPPER='A'.charCodeAt(0);
var PLUS_URL_SAFE='-'.charCodeAt(0);
var SLASH_URL_SAFE='_'.charCodeAt(0);

function decode(elt){
var code=elt.charCodeAt(0);
if(code === PLUS || 
code === PLUS_URL_SAFE)
return 62;
if(code === SLASH || 
code === SLASH_URL_SAFE)
return 63;
if(code < NUMBER)
return -1;
if(code < NUMBER + 10)
return code - NUMBER + 26 + 26;
if(code < UPPER + 26)
return code - UPPER;
if(code < LOWER + 26)
return code - LOWER + 26;}


function b64ToByteArray(b64){
var i,j,l,tmp,placeHolders,arr;

if(b64.length % 4 > 0){
throw new Error('Invalid string. Length must be a multiple of 4');}







var len=b64.length;
placeHolders = '=' === b64.charAt(len - 2)?2:'=' === b64.charAt(len - 1)?1:0;


arr = new Arr(b64.length * 3 / 4 - placeHolders);


l = placeHolders > 0?b64.length - 4:b64.length;

var L=0;

function push(v){
arr[L++] = v;}


for(i = 0,j = 0;i < l;i += 4,j += 3) {
tmp = decode(b64.charAt(i)) << 18 | decode(b64.charAt(i + 1)) << 12 | decode(b64.charAt(i + 2)) << 6 | decode(b64.charAt(i + 3));
push((tmp & 0xFF0000) >> 16);
push((tmp & 0xFF00) >> 8);
push(tmp & 0xFF);}


if(placeHolders === 2){
tmp = decode(b64.charAt(i)) << 2 | decode(b64.charAt(i + 1)) >> 4;
push(tmp & 0xFF);}else 
if(placeHolders === 1){
tmp = decode(b64.charAt(i)) << 10 | decode(b64.charAt(i + 1)) << 4 | decode(b64.charAt(i + 2)) >> 2;
push(tmp >> 8 & 0xFF);
push(tmp & 0xFF);}


return arr;}


function uint8ToBase64(uint8){
var i,
extraBytes=uint8.length % 3,
output="",
temp,length;

function encode(num){
return lookup.charAt(num);}


function tripletToBase64(num){
return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F);}



for(i = 0,length = uint8.length - extraBytes;i < length;i += 3) {
temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];
output += tripletToBase64(temp);}



switch(extraBytes){
case 1:
temp = uint8[uint8.length - 1];
output += encode(temp >> 2);
output += encode(temp << 4 & 0x3F);
output += '==';
break;
case 2:
temp = (uint8[uint8.length - 2] << 8) + uint8[uint8.length - 1];
output += encode(temp >> 10);
output += encode(temp >> 4 & 0x3F);
output += encode(temp << 2 & 0x3F);
output += '=';
break;}


return output;}


exports.toByteArray = b64ToByteArray;
exports.fromByteArray = uint8ToBase64;})(
typeof exports === 'undefined'?this.base64js = {}:exports);
});
__d('ieee754/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  exports.read = function(buffer,offset,isLE,mLen,nBytes){
var e,m;
var eLen=nBytes * 8 - mLen - 1;
var eMax=(1 << eLen) - 1;
var eBias=eMax >> 1;
var nBits=-7;
var i=isLE?nBytes - 1:0;
var d=isLE?-1:1;
var s=buffer[offset + i];

i += d;

e = s & (1 << -nBits) - 1;
s >>= -nBits;
nBits += eLen;
for(;nBits > 0;e = e * 256 + buffer[offset + i],i += d,nBits -= 8) {}

m = e & (1 << -nBits) - 1;
e >>= -nBits;
nBits += mLen;
for(;nBits > 0;m = m * 256 + buffer[offset + i],i += d,nBits -= 8) {}

if(e === 0){
e = 1 - eBias;}else 
if(e === eMax){
return m?NaN:(s?-1:1) * Infinity;}else 
{
m = m + Math.pow(2,mLen);
e = e - eBias;}

return (s?-1:1) * m * Math.pow(2,e - mLen);};


exports.write = function(buffer,value,offset,isLE,mLen,nBytes){
var e,m,c;
var eLen=nBytes * 8 - mLen - 1;
var eMax=(1 << eLen) - 1;
var eBias=eMax >> 1;
var rt=mLen === 23?Math.pow(2,-24) - Math.pow(2,-77):0;
var i=isLE?0:nBytes - 1;
var d=isLE?1:-1;
var s=value < 0 || value === 0 && 1 / value < 0?1:0;

value = Math.abs(value);

if(isNaN(value) || value === Infinity){
m = isNaN(value)?1:0;
e = eMax;}else 
{
e = Math.floor(Math.log(value) / Math.LN2);
if(value * (c = Math.pow(2,-e)) < 1){
e--;
c *= 2;}

if(e + eBias >= 1){
value += rt / c;}else 
{
value += rt * Math.pow(2,1 - eBias);}

if(value * c >= 2){
e++;
c /= 2;}


if(e + eBias >= eMax){
m = 0;
e = eMax;}else 
if(e + eBias >= 1){
m = (value * c - 1) * Math.pow(2,mLen);
e = e + eBias;}else 
{
m = value * Math.pow(2,eBias - 1) * Math.pow(2,mLen);
e = 0;}}



for(;mLen >= 8;buffer[offset + i] = m & 0xff,i += d,m /= 256,mLen -= 8) {}

e = e << mLen | m;
eLen += mLen;
for(;eLen > 0;buffer[offset + i] = e & 0xff,i += d,e /= 256,eLen -= 8) {}

buffer[offset + i - d] |= s * 128;};
});
__d('is-array/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 




isArray=Array.isArray;





var str=Object.prototype.toString;


















module.exports = isArray || function(val){
return !!val && '[object Array]' == str.call(val);};
});
__d('level-packager/level-packager.js',["levelup/lib/levelup.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  const levelup=require('levelup/lib/levelup.js');

function packager(leveldown){
function Level(location,options,callback){
if(typeof options == 'function')
callback = options;
if(typeof options != 'object')
options = {};

options.db = leveldown;

return levelup(location,options,callback);}


['destroy','repair'].forEach(function(m){
if(typeof leveldown[m] == 'function'){
Level[m] = function(location,callback){
leveldown[m](location,callback || function(){});};}});




return Level;}


module.exports = packager;
});
__d('levelup/lib/levelup.js',["events/events.js","util/util.js","xtend/index.js","prr/prr.js","deferred-leveldown/deferred-leveldown.js","levelup/lib/errors.js","levelup/lib/errors.js","levelup/lib/errors.js","levelup/lib/errors.js","levelup/lib/errors.js","levelup/lib/errors.js","levelup/lib/read-stream.js","levelup/lib/write-stream.js","levelup/lib/util.js","levelup/lib/batch.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 





EventEmitter=require('events/events.js').EventEmitter,
inherits=require('util/util.js').inherits,
extend=require('xtend/index.js'),
prr=require('prr/prr.js'),
DeferredLevelDOWN=require('deferred-leveldown/deferred-leveldown.js'),

WriteError=require('levelup/lib/errors.js').WriteError,
ReadError=require('levelup/lib/errors.js').ReadError,
NotFoundError=require('levelup/lib/errors.js').NotFoundError,
OpenError=require('levelup/lib/errors.js').OpenError,
EncodingError=require('levelup/lib/errors.js').EncodingError,
InitializationError=require('levelup/lib/errors.js').InitializationError,

ReadStream=require('levelup/lib/read-stream.js'),
WriteStream=require('levelup/lib/write-stream.js'),
util=require('levelup/lib/util.js'),
Batch=require('levelup/lib/batch.js'),

getOptions=util.getOptions,
defaultOptions=util.defaultOptions,
getLevelDOWN=util.getLevelDOWN,
dispatchError=util.dispatchError;

function getCallback(options,callback){
return typeof options == 'function'?options:callback;}










function LevelUP(location,options,callback){
if(!(this instanceof LevelUP))
return new LevelUP(location,options,callback);

var error;

EventEmitter.call(this);
this.setMaxListeners(Infinity);

if(typeof location == 'function'){
options = typeof options == 'object'?options:{};
options.db = location;
location = null;}else 
if(typeof location == 'object' && typeof location.db == 'function'){
options = location;
location = null;}


if(typeof options == 'function'){
callback = options;
options = {};}


if((!options || typeof options.db != 'function') && typeof location != 'string'){
error = new InitializationError(
'Must provide a location for the database');
if(callback){
return process.nextTick(function(){
callback(error);});}


throw error;}


options = getOptions(this,options);
this.options = extend(defaultOptions,options);
this._status = 'new';

prr(this,'location',location,'e');

this.open(callback);}


inherits(LevelUP,EventEmitter);

LevelUP.prototype.open = function(callback){
var self=this,
dbFactory,
db;

if(this.isOpen()){
if(callback)
process.nextTick(function(){callback(null,self);});
return this;}


if(this._isOpening()){
return callback && this.once(
'open',
function(){callback(null,self);});}



this.emit('opening');

this._status = 'opening';
this.db = new DeferredLevelDOWN(this.location);
dbFactory = this.options.db || getLevelDOWN();
db = dbFactory(this.location);

db.open(this.options,function(err){
if(err){
return dispatchError(self,new OpenError(err),callback);}else 
{
self.db.setDb(db);
self.db = db;
self._status = 'open';
if(callback)
callback(null,self);
self.emit('open');
self.emit('ready');}});};




LevelUP.prototype.close = function(callback){
var self=this;

if(this.isOpen()){
this._status = 'closing';
this.db.close(function(){
self._status = 'closed';
self.emit('closed');
if(callback)
callback.apply(null,arguments);});

this.emit('closing');
this.db = null;}else 
if(this._status == 'closed' && callback){
return process.nextTick(callback);}else 
if(this._status == 'closing' && callback){
this.once('closed',callback);}else 
if(this._isOpening()){
this.once('open',function(){
self.close(callback);});}};




LevelUP.prototype.isOpen = function(){
return this._status == 'open';};


LevelUP.prototype._isOpening = function(){
return this._status == 'opening';};


LevelUP.prototype.isClosed = function(){
return (/^clos/.test(this._status));};


LevelUP.prototype.get = function(key_,options,callback){
var self=this,
key;

callback = getCallback(options,callback);

if(typeof callback != 'function'){
return dispatchError(
this,
new ReadError('get() requires key and callback arguments'));}



if(!this._isOpening() && !this.isOpen()){
return dispatchError(
this,
new ReadError('Database is not open'),
callback);}



options = util.getOptions(this,options);
key = util.encodeKey(key_,options);

options.asBuffer = util.isValueAsBuffer(options);

this.db.get(key,options,function(err,value){
if(err){
if(/notfound/i.test(err)){
err = new NotFoundError(
'Key not found in database [' + key_ + ']',err);}else 
{
err = new ReadError(err);}

return dispatchError(self,err,callback);}

if(callback){
try{
value = util.decodeValue(value,options);}
catch(e) {
return callback(new EncodingError(e));}

callback(null,value);}});};




LevelUP.prototype.put = function(key_,value_,options,callback){
var self=this,
key,
value;

callback = getCallback(options,callback);

if(key_ === null || key_ === undefined || 
value_ === null || value_ === undefined){
return dispatchError(
this,
new WriteError('put() requires key and value arguments'),
callback);}



if(!this._isOpening() && !this.isOpen()){
return dispatchError(
this,
new WriteError('Database is not open'),
callback);}



options = getOptions(this,options);
key = util.encodeKey(key_,options);
value = util.encodeValue(value_,options);

this.db.put(key,value,options,function(err){
if(err){
return dispatchError(self,new WriteError(err),callback);}else 
{
self.emit('put',key_,value_);
if(callback)
callback();}});};




LevelUP.prototype.del = function(key_,options,callback){
var self=this,
key;

callback = getCallback(options,callback);

if(key_ === null || key_ === undefined){
return dispatchError(
this,
new WriteError('del() requires a key argument'),
callback);}



if(!this._isOpening() && !this.isOpen()){
return dispatchError(
this,
new WriteError('Database is not open'),
callback);}



options = getOptions(this,options);
key = util.encodeKey(key_,options);

this.db.del(key,options,function(err){
if(err){
return dispatchError(self,new WriteError(err),callback);}else 
{
self.emit('del',key_);
if(callback)
callback();}});};




LevelUP.prototype.batch = function(arr_,options,callback){
var self=this,
keyEnc,
valueEnc,
arr;

if(!arguments.length)
return new Batch(this);

callback = getCallback(options,callback);

if(!Array.isArray(arr_)){
return dispatchError(
this,
new WriteError('batch() requires an array argument'),
callback);}



if(!this._isOpening() && !this.isOpen()){
return dispatchError(
this,
new WriteError('Database is not open'),
callback);}



options = getOptions(this,options);
keyEnc = options.keyEncoding;
valueEnc = options.valueEncoding;

arr = arr_.map(function(e){
if(e.type === undefined || e.key === undefined)
return {};


var kEnc=e.keyEncoding || keyEnc,
vEnc=e.valueEncoding || e.encoding || valueEnc,
o;





if(kEnc != 'utf8' && kEnc != 'binary' || 
vEnc != 'utf8' && vEnc != 'binary'){
o = {
type:e.type,
key:util.encodeKey(e.key,options,e)};


if(e.value !== undefined)
o.value = util.encodeValue(e.value,options,e);

return o;}else 
{
return e;}});



this.db.batch(arr,options,function(err){
if(err){
return dispatchError(self,new WriteError(err),callback);}else 
{
self.emit('batch',arr_);
if(callback)
callback();}});};





LevelUP.prototype.approximateSize = function(start_,end_,callback){
var self=this,
start,
end;

if(start_ === null || start_ === undefined || 
end_ === null || end_ === undefined || 
typeof callback != 'function'){
return dispatchError(
this,
new ReadError('approximateSize() requires start, end and callback arguments'),
callback);}



start = util.encodeKey(start_,this.options);
end = util.encodeKey(end_,this.options);

if(!this._isOpening() && !this.isOpen()){
return dispatchError(
this,
new WriteError('Database is not open'),
callback);}



this.db.approximateSize(start,end,function(err,size){
if(err){
return dispatchError(self,new OpenError(err),callback);}else 
if(callback){
callback(null,size);}});};




LevelUP.prototype.readStream = 
LevelUP.prototype.createReadStream = function(options){
var self=this;
options = extend(this.options,options);
return new ReadStream(
options,
this,
function(options){
return self.db.iterator(options);});};




LevelUP.prototype.keyStream = 
LevelUP.prototype.createKeyStream = function(options){
return this.createReadStream(extend(options,{keys:true,values:false}));};


LevelUP.prototype.valueStream = 
LevelUP.prototype.createValueStream = function(options){
return this.createReadStream(extend(options,{keys:false,values:true}));};


LevelUP.prototype.writeStream = 
LevelUP.prototype.createWriteStream = function(options){
return new WriteStream(extend(options),this);};


LevelUP.prototype.toString = function(){
return 'LevelUP';};


function utilStatic(name){
return function(location,callback){
getLevelDOWN()[name](location,callback || function(){});};}



module.exports = LevelUP;
module.exports.copy = util.copy;

module.exports.destroy = utilStatic('destroy');

module.exports.repair = utilStatic('repair');
});
__d('events/events.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 




















EventEmitter(){
this._events = this._events || {};
this._maxListeners = this._maxListeners || undefined;}

module.exports = EventEmitter;


EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;



EventEmitter.defaultMaxListeners = 10;



EventEmitter.prototype.setMaxListeners = function(n){
if(!isNumber(n) || n < 0 || isNaN(n))
throw TypeError('n must be a positive number');
this._maxListeners = n;
return this;};


EventEmitter.prototype.emit = function(type){
var er,handler,len,args,i,listeners;

if(!this._events)
this._events = {};


if(type === 'error'){
if(!this._events.error || 
isObject(this._events.error) && !this._events.error.length){
er = arguments[1];
if(er instanceof Error){
throw er;}

throw TypeError('Uncaught, unspecified "error" event.');}}



handler = this._events[type];

if(isUndefined(handler))
return false;

if(isFunction(handler)){
switch(arguments.length){

case 1:
handler.call(this);
break;
case 2:
handler.call(this,arguments[1]);
break;
case 3:
handler.call(this,arguments[1],arguments[2]);
break;

default:
len = arguments.length;
args = new Array(len - 1);
for(i = 1;i < len;i++) 
args[i - 1] = arguments[i];
handler.apply(this,args);}}else 

if(isObject(handler)){
len = arguments.length;
args = new Array(len - 1);
for(i = 1;i < len;i++) 
args[i - 1] = arguments[i];

listeners = handler.slice();
len = listeners.length;
for(i = 0;i < len;i++) 
listeners[i].apply(this,args);}


return true;};


EventEmitter.prototype.addListener = function(type,listener){
var m;

if(!isFunction(listener))
throw TypeError('listener must be a function');

if(!this._events)
this._events = {};



if(this._events.newListener)
this.emit('newListener',type,
isFunction(listener.listener)?
listener.listener:listener);

if(!this._events[type])

this._events[type] = listener;else 
if(isObject(this._events[type]))

this._events[type].push(listener);else 


this._events[type] = [this._events[type],listener];


if(isObject(this._events[type]) && !this._events[type].warned){
var m;
if(!isUndefined(this._maxListeners)){
m = this._maxListeners;}else 
{
m = EventEmitter.defaultMaxListeners;}


if(m && m > 0 && this._events[type].length > m){
this._events[type].warned = true;
console.error('(node) warning: possible EventEmitter memory ' + 
'leak detected. %d listeners added. ' + 
'Use emitter.setMaxListeners() to increase limit.',
this._events[type].length);
if(typeof console.trace === 'function'){

console.trace();}}}




return this;};


EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type,listener){
if(!isFunction(listener))
throw TypeError('listener must be a function');

var fired=false;

function g(){
this.removeListener(type,g);

if(!fired){
fired = true;
listener.apply(this,arguments);}}



g.listener = listener;
this.on(type,g);

return this;};



EventEmitter.prototype.removeListener = function(type,listener){
var list,position,length,i;

if(!isFunction(listener))
throw TypeError('listener must be a function');

if(!this._events || !this._events[type])
return this;

list = this._events[type];
length = list.length;
position = -1;

if(list === listener || 
isFunction(list.listener) && list.listener === listener){
delete this._events[type];
if(this._events.removeListener)
this.emit('removeListener',type,listener);}else 

if(isObject(list)){
for(i = length;i-- > 0;) {
if(list[i] === listener || 
list[i].listener && list[i].listener === listener){
position = i;
break;}}



if(position < 0)
return this;

if(list.length === 1){
list.length = 0;
delete this._events[type];}else 
{
list.splice(position,1);}


if(this._events.removeListener)
this.emit('removeListener',type,listener);}


return this;};


EventEmitter.prototype.removeAllListeners = function(type){
var key,listeners;

if(!this._events)
return this;


if(!this._events.removeListener){
if(arguments.length === 0)
this._events = {};else 
if(this._events[type])
delete this._events[type];
return this;}



if(arguments.length === 0){
for(key in this._events) {
if(key === 'removeListener')continue;
this.removeAllListeners(key);}

this.removeAllListeners('removeListener');
this._events = {};
return this;}


listeners = this._events[type];

if(isFunction(listeners)){
this.removeListener(type,listeners);}else 
{

while(listeners.length) 
this.removeListener(type,listeners[listeners.length - 1]);}

delete this._events[type];

return this;};


EventEmitter.prototype.listeners = function(type){
var ret;
if(!this._events || !this._events[type])
ret = [];else 
if(isFunction(this._events[type]))
ret = [this._events[type]];else 

ret = this._events[type].slice();
return ret;};


EventEmitter.listenerCount = function(emitter,type){
var ret;
if(!emitter._events || !emitter._events[type])
ret = 0;else 
if(isFunction(emitter._events[type]))
ret = 1;else 

ret = emitter._events[type].length;
return ret;};


function isFunction(arg){
return typeof arg === 'function';}


function isNumber(arg){
return typeof arg === 'number';}


function isObject(arg){
return typeof arg === 'object' && arg !== null;}


function isUndefined(arg){
return arg === void 0;}
});
__d('util/util.js',["util/support/isBufferBrowser.js","inherits/inherits_browser.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 




















formatRegExp=/%[sdj%]/g;
exports.format = function(f){
if(!isString(f)){
var objects=[];
for(var i=0;i < arguments.length;i++) {
objects.push(inspect(arguments[i]));}

return objects.join(' ');}


var i=1;
var args=arguments;
var len=args.length;
var str=String(f).replace(formatRegExp,function(x){
if(x === '%%')return '%';
if(i >= len)return x;
switch(x){
case '%s':return String(args[i++]);
case '%d':return Number(args[i++]);
case '%j':
try{
return JSON.stringify(args[i++]);}
catch(_) {
return '[Circular]';}

default:
return x;}});


for(var x=args[i];i < len;x = args[++i]) {
if(isNull(x) || !isObject(x)){
str += ' ' + x;}else 
{
str += ' ' + inspect(x);}}


return str;};






exports.deprecate = function(fn,msg){

if(isUndefined(global.process)){
return function(){
return exports.deprecate(fn,msg).apply(this,arguments);};}



if(process.noDeprecation === true){
return fn;}


var warned=false;
function deprecated(){
if(!warned){
if(process.throwDeprecation){
throw new Error(msg);}else 
if(process.traceDeprecation){
console.trace(msg);}else 
{
console.error(msg);}

warned = true;}

return fn.apply(this,arguments);}


return deprecated;};



var debugs={};
var debugEnviron;
exports.debuglog = function(set){
if(isUndefined(debugEnviron))
debugEnviron = process.env.NODE_DEBUG || '';
set = set.toUpperCase();
if(!debugs[set]){
if(new RegExp('\\b' + set + '\\b','i').test(debugEnviron)){
var pid=process.pid;
debugs[set] = function(){
var msg=exports.format.apply(exports,arguments);
console.error('%s %d: %s',set,pid,msg);};}else 

{
debugs[set] = function(){};}}


return debugs[set];};











function inspect(obj,opts){

var ctx={
seen:[],
stylize:stylizeNoColor};


if(arguments.length >= 3)ctx.depth = arguments[2];
if(arguments.length >= 4)ctx.colors = arguments[3];
if(isBoolean(opts)){

ctx.showHidden = opts;}else 
if(opts){

exports._extend(ctx,opts);}


if(isUndefined(ctx.showHidden))ctx.showHidden = false;
if(isUndefined(ctx.depth))ctx.depth = 2;
if(isUndefined(ctx.colors))ctx.colors = false;
if(isUndefined(ctx.customInspect))ctx.customInspect = true;
if(ctx.colors)ctx.stylize = stylizeWithColor;
return formatValue(ctx,obj,ctx.depth);}

exports.inspect = inspect;



inspect.colors = {
'bold':[1,22],
'italic':[3,23],
'underline':[4,24],
'inverse':[7,27],
'white':[37,39],
'grey':[90,39],
'black':[30,39],
'blue':[34,39],
'cyan':[36,39],
'green':[32,39],
'magenta':[35,39],
'red':[31,39],
'yellow':[33,39]};



inspect.styles = {
'special':'cyan',
'number':'yellow',
'boolean':'yellow',
'undefined':'grey',
'null':'bold',
'string':'green',
'date':'magenta',

'regexp':'red'};



function stylizeWithColor(str,styleType){
var style=inspect.styles[styleType];

if(style){
return '\u001b[' + inspect.colors[style][0] + 'm' + str + 
'\u001b[' + inspect.colors[style][1] + 'm';}else 
{
return str;}}




function stylizeNoColor(str,styleType){
return str;}



function arrayToHash(array){
var hash={};

array.forEach(function(val,idx){
hash[val] = true;});


return hash;}



function formatValue(ctx,value,recurseTimes){


if(ctx.customInspect && 
value && 
isFunction(value.inspect) && 

value.inspect !== exports.inspect && 

!(value.constructor && value.constructor.prototype === value)){
var ret=value.inspect(recurseTimes,ctx);
if(!isString(ret)){
ret = formatValue(ctx,ret,recurseTimes);}

return ret;}



var primitive=formatPrimitive(ctx,value);
if(primitive){
return primitive;}



var keys=Object.keys(value);
var visibleKeys=arrayToHash(keys);

if(ctx.showHidden){
keys = Object.getOwnPropertyNames(value);}




if(isError(value) && (
keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)){
return formatError(value);}



if(keys.length === 0){
if(isFunction(value)){
var name=value.name?': ' + value.name:'';
return ctx.stylize('[Function' + name + ']','special');}

if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}

if(isDate(value)){
return ctx.stylize(Date.prototype.toString.call(value),'date');}

if(isError(value)){
return formatError(value);}}



var base='',array=false,braces=['{','}'];


if(isArray(value)){
array = true;
braces = ['[',']'];}



if(isFunction(value)){
var n=value.name?': ' + value.name:'';
base = ' [Function' + n + ']';}



if(isRegExp(value)){
base = ' ' + RegExp.prototype.toString.call(value);}



if(isDate(value)){
base = ' ' + Date.prototype.toUTCString.call(value);}



if(isError(value)){
base = ' ' + formatError(value);}


if(keys.length === 0 && (!array || value.length == 0)){
return braces[0] + base + braces[1];}


if(recurseTimes < 0){
if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}else 
{
return ctx.stylize('[Object]','special');}}



ctx.seen.push(value);

var output;
if(array){
output = formatArray(ctx,value,recurseTimes,visibleKeys,keys);}else 
{
output = keys.map(function(key){
return formatProperty(ctx,value,recurseTimes,visibleKeys,key,array);});}



ctx.seen.pop();

return reduceToSingleString(output,base,braces);}



function formatPrimitive(ctx,value){
if(isUndefined(value))
return ctx.stylize('undefined','undefined');
if(isString(value)){
var simple='\'' + JSON.stringify(value).replace(/^"|"$/g,'').
replace(/'/g,"\\'").
replace(/\\"/g,'"') + '\'';
return ctx.stylize(simple,'string');}

if(isNumber(value))
return ctx.stylize('' + value,'number');
if(isBoolean(value))
return ctx.stylize('' + value,'boolean');

if(isNull(value))
return ctx.stylize('null','null');}



function formatError(value){
return '[' + Error.prototype.toString.call(value) + ']';}



function formatArray(ctx,value,recurseTimes,visibleKeys,keys){
var output=[];
for(var i=0,l=value.length;i < l;++i) {
if(hasOwnProperty(value,String(i))){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
String(i),true));}else 
{
output.push('');}}


keys.forEach(function(key){
if(!key.match(/^\d+$/)){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
key,true));}});


return output;}



function formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){
var name,str,desc;
desc = Object.getOwnPropertyDescriptor(value,key) || {value:value[key]};
if(desc.get){
if(desc.set){
str = ctx.stylize('[Getter/Setter]','special');}else 
{
str = ctx.stylize('[Getter]','special');}}else 

{
if(desc.set){
str = ctx.stylize('[Setter]','special');}}


if(!hasOwnProperty(visibleKeys,key)){
name = '[' + key + ']';}

if(!str){
if(ctx.seen.indexOf(desc.value) < 0){
if(isNull(recurseTimes)){
str = formatValue(ctx,desc.value,null);}else 
{
str = formatValue(ctx,desc.value,recurseTimes - 1);}

if(str.indexOf('\n') > -1){
if(array){
str = str.split('\n').map(function(line){
return '  ' + line;}).
join('\n').substr(2);}else 
{
str = '\n' + str.split('\n').map(function(line){
return '   ' + line;}).
join('\n');}}}else 


{
str = ctx.stylize('[Circular]','special');}}


if(isUndefined(name)){
if(array && key.match(/^\d+$/)){
return str;}

name = JSON.stringify('' + key);
if(name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)){
name = name.substr(1,name.length - 2);
name = ctx.stylize(name,'name');}else 
{
name = name.replace(/'/g,"\\'").
replace(/\\"/g,'"').
replace(/(^"|"$)/g,"'");
name = ctx.stylize(name,'string');}}



return name + ': ' + str;}



function reduceToSingleString(output,base,braces){
var numLinesEst=0;
var length=output.reduce(function(prev,cur){
numLinesEst++;
if(cur.indexOf('\n') >= 0)numLinesEst++;
return prev + cur.replace(/\u001b\[\d\d?m/g,'').length + 1;},
0);

if(length > 60){
return braces[0] + (
base === ''?'':base + '\n ') + 
' ' + 
output.join(',\n  ') + 
' ' + 
braces[1];}


return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];}





function isArray(ar){
return Array.isArray(ar);}

exports.isArray = isArray;

function isBoolean(arg){
return typeof arg === 'boolean';}

exports.isBoolean = isBoolean;

function isNull(arg){
return arg === null;}

exports.isNull = isNull;

function isNullOrUndefined(arg){
return arg == null;}

exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg){
return typeof arg === 'number';}

exports.isNumber = isNumber;

function isString(arg){
return typeof arg === 'string';}

exports.isString = isString;

function isSymbol(arg){
return typeof arg === 'symbol';}

exports.isSymbol = isSymbol;

function isUndefined(arg){
return arg === void 0;}

exports.isUndefined = isUndefined;

function isRegExp(re){
return isObject(re) && objectToString(re) === '[object RegExp]';}

exports.isRegExp = isRegExp;

function isObject(arg){
return typeof arg === 'object' && arg !== null;}

exports.isObject = isObject;

function isDate(d){
return isObject(d) && objectToString(d) === '[object Date]';}

exports.isDate = isDate;

function isError(e){
return isObject(e) && (
objectToString(e) === '[object Error]' || e instanceof Error);}

exports.isError = isError;

function isFunction(arg){
return typeof arg === 'function';}

exports.isFunction = isFunction;

function isPrimitive(arg){
return arg === null || 
typeof arg === 'boolean' || 
typeof arg === 'number' || 
typeof arg === 'string' || 
typeof arg === 'symbol' || 
typeof arg === 'undefined';}

exports.isPrimitive = isPrimitive;

exports.isBuffer = require('util/support/isBufferBrowser.js');

function objectToString(o){
return Object.prototype.toString.call(o);}



function pad(n){
return n < 10?'0' + n.toString(10):n.toString(10);}



var months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep',
'Oct','Nov','Dec'];


function timestamp(){
var d=new Date();
var time=[pad(d.getHours()),
pad(d.getMinutes()),
pad(d.getSeconds())].join(':');
return [d.getDate(),months[d.getMonth()],time].join(' ');}




exports.log = function(){
console.log('%s - %s',timestamp(),exports.format.apply(exports,arguments));};
















exports.inherits = require('inherits/inherits_browser.js');

exports._extend = function(origin,add){

if(!add || !isObject(add))return origin;

var keys=Object.keys(add);
var i=keys.length;
while(i--) {
origin[keys[i]] = add[keys[i]];}

return origin;};


function hasOwnProperty(obj,prop){
return Object.prototype.hasOwnProperty.call(obj,prop);}
});
__d('util/support/isBufferBrowser.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = function isBuffer(arg){
return arg && typeof arg === 'object' && 
typeof arg.copy === 'function' && 
typeof arg.fill === 'function' && 
typeof arg.readUInt8 === 'function';};
});
__d('inherits/inherits_browser.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  if(typeof Object.create === 'function'){

module.exports = function inherits(ctor,superCtor){
ctor.super_ = superCtor;
ctor.prototype = Object.create(superCtor.prototype,{
constructor:{
value:ctor,
enumerable:false,
writable:true,
configurable:true}});};}else 



{

module.exports = function inherits(ctor,superCtor){
ctor.super_ = superCtor;
var TempCtor=function(){};
TempCtor.prototype = superCtor.prototype;
ctor.prototype = new TempCtor();
ctor.prototype.constructor = ctor;};}
});
__d('xtend/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = extend;

function extend(){
var target={};

for(var i=0;i < arguments.length;i++) {
var source=arguments[i];

for(var key in source) {
if(source.hasOwnProperty(key)){
target[key] = source[key];}}}




return target;}
});
__d('prr/prr.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (






function(name,context,definition){
if(typeof module != 'undefined' && module.exports)
module.exports = definition();else 

context[name] = definition();})(
'prr',this,function(){

var setProperty=typeof Object.defineProperty == 'function'?
function(obj,key,options){
Object.defineProperty(obj,key,options);
return obj;}:

function(obj,key,options){
obj[key] = options.value;
return obj;},


makeOptions=function(value,options){
var oo=typeof options == 'object',
os=!oo && typeof options == 'string',
op=function(p){
return oo?
!!options[p]:
os?
options.indexOf(p[0]) > -1:
false;};


return {
enumerable:op('enumerable'),
configurable:op('configurable'),
writable:op('writable'),
value:value};},



prr=function(obj,key,value,options){
var k;

options = makeOptions(value,options);

if(typeof key == 'object'){
for(k in key) {
if(Object.hasOwnProperty.call(key,k)){
options.value = key[k];
setProperty(obj,k,options);}}


return obj;}


return setProperty(obj,key,options);};


return prr;});
});
__d('deferred-leveldown/deferred-leveldown.js',["util/util.js","abstract-leveldown/abstract-leveldown.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var util=require('util/util.js'),
AbstractLevelDOWN=require('abstract-leveldown/abstract-leveldown.js').AbstractLevelDOWN;

function DeferredLevelDOWN(location){
AbstractLevelDOWN.call(this,typeof location == 'string'?location:'');
this._db = undefined;
this._operations = [];}


util.inherits(DeferredLevelDOWN,AbstractLevelDOWN);


DeferredLevelDOWN.prototype.setDb = function(db){
this._db = db;
this._operations.forEach(function(op){
db[op.method].apply(db,op.args);});};



DeferredLevelDOWN.prototype._open = function(options,callback){
return process.nextTick(callback);};



DeferredLevelDOWN.prototype._operation = function(method,args){
if(this._db)
return this._db[method].apply(this._db,args);
this._operations.push({method:method,args:args});};



'put get del batch approximateSize'.split(' ').forEach(function(m){
DeferredLevelDOWN.prototype['_' + m] = function(){
this._operation(m,arguments);};});



DeferredLevelDOWN.prototype._isBuffer = function(obj){
return Buffer.isBuffer(obj);};



DeferredLevelDOWN.prototype._iterator = function(){
throw new TypeError('not implemented');};


module.exports = DeferredLevelDOWN;
});
__d('abstract-leveldown/abstract-leveldown.js',["xtend/index.js","abstract-leveldown/abstract-iterator.js","abstract-leveldown/abstract-chained-batch.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

xtend=require('xtend/index.js'),
AbstractIterator=require('abstract-leveldown/abstract-iterator.js'),
AbstractChainedBatch=require('abstract-leveldown/abstract-chained-batch.js');

function AbstractLevelDOWN(location){
if(!arguments.length || location === undefined)
throw new Error('constructor requires at least a location argument');

if(typeof location != 'string')
throw new Error('constructor requires a location string argument');

this.location = location;}


AbstractLevelDOWN.prototype.open = function(options,callback){
if(typeof options == 'function')
callback = options;

if(typeof callback != 'function')
throw new Error('open() requires a callback argument');

if(typeof options != 'object')
options = {};

if(typeof this._open == 'function')
return this._open(options,callback);

process.nextTick(callback);};


AbstractLevelDOWN.prototype.close = function(callback){
if(typeof callback != 'function')
throw new Error('close() requires a callback argument');

if(typeof this._close == 'function')
return this._close(callback);

process.nextTick(callback);};


AbstractLevelDOWN.prototype.get = function(key,options,callback){
var err;

if(typeof options == 'function')
callback = options;

if(typeof callback != 'function')
throw new Error('get() requires a callback argument');

if(err = this._checkKeyValue(key,'key',this._isBuffer))
return callback(err);

if(!this._isBuffer(key))
key = String(key);

if(typeof options != 'object')
options = {};

if(typeof this._get == 'function')
return this._get(key,options,callback);

process.nextTick(function(){callback(new Error('NotFound'));});};


AbstractLevelDOWN.prototype.put = function(key,value,options,callback){
var err;

if(typeof options == 'function')
callback = options;

if(typeof callback != 'function')
throw new Error('put() requires a callback argument');

if(err = this._checkKeyValue(key,'key',this._isBuffer))
return callback(err);

if(err = this._checkKeyValue(value,'value',this._isBuffer))
return callback(err);

if(!this._isBuffer(key))
key = String(key);



if(!this._isBuffer(value) && !process.browser)
value = String(value);

if(typeof options != 'object')
options = {};

if(typeof this._put == 'function')
return this._put(key,value,options,callback);

process.nextTick(callback);};


AbstractLevelDOWN.prototype.del = function(key,options,callback){
var err;

if(typeof options == 'function')
callback = options;

if(typeof callback != 'function')
throw new Error('del() requires a callback argument');

if(err = this._checkKeyValue(key,'key',this._isBuffer))
return callback(err);

if(!this._isBuffer(key))
key = String(key);

if(typeof options != 'object')
options = {};

if(typeof this._del == 'function')
return this._del(key,options,callback);

process.nextTick(callback);};


AbstractLevelDOWN.prototype.batch = function(array,options,callback){
if(!arguments.length)
return this._chainedBatch();

if(typeof options == 'function')
callback = options;

if(typeof callback != 'function')
throw new Error('batch(array) requires a callback argument');

if(!Array.isArray(array))
return callback(new Error('batch(array) requires an array argument'));

if(typeof options != 'object')
options = {};

var i=0,
l=array.length,
e,
err;

for(;i < l;i++) {
e = array[i];
if(typeof e != 'object')
continue;

if(err = this._checkKeyValue(e.type,'type',this._isBuffer))
return callback(err);

if(err = this._checkKeyValue(e.key,'key',this._isBuffer))
return callback(err);

if(e.type == 'put'){
if(err = this._checkKeyValue(e.value,'value',this._isBuffer))
return callback(err);}}



if(typeof this._batch == 'function')
return this._batch(array,options,callback);

process.nextTick(callback);};



AbstractLevelDOWN.prototype.approximateSize = function(start,end,callback){
if(start == null || 
end == null || 
typeof start == 'function' || 
typeof end == 'function'){
throw new Error('approximateSize() requires valid `start`, `end` and `callback` arguments');}


if(typeof callback != 'function')
throw new Error('approximateSize() requires a callback argument');

if(!this._isBuffer(start))
start = String(start);

if(!this._isBuffer(end))
end = String(end);

if(typeof this._approximateSize == 'function')
return this._approximateSize(start,end,callback);

process.nextTick(function(){
callback(null,0);});};



AbstractLevelDOWN.prototype._setupIteratorOptions = function(options){
var self=this;

options = xtend(options);

['start','end','gt','gte','lt','lte'].forEach(function(o){
if(options[o] && self._isBuffer(options[o]) && options[o].length === 0)
delete options[o];});


options.reverse = !!options.reverse;


if(options.reverse && options.lt)
options.start = options.lt;
if(options.reverse && options.lte)
options.start = options.lte;
if(!options.reverse && options.gt)
options.start = options.gt;
if(!options.reverse && options.gte)
options.start = options.gte;

if(options.reverse && options.lt && !options.lte || 
!options.reverse && options.gt && !options.gte)
options.exclusiveStart = true;

return options;};


AbstractLevelDOWN.prototype.iterator = function(options){
if(typeof options != 'object')
options = {};

options = this._setupIteratorOptions(options);

if(typeof this._iterator == 'function')
return this._iterator(options);

return new AbstractIterator(this);};


AbstractLevelDOWN.prototype._chainedBatch = function(){
return new AbstractChainedBatch(this);};


AbstractLevelDOWN.prototype._isBuffer = function(obj){
return Buffer.isBuffer(obj);};


AbstractLevelDOWN.prototype._checkKeyValue = function(obj,type){

if(obj === null || obj === undefined)
return new Error(type + ' cannot be `null` or `undefined`');

if(this._isBuffer(obj)){
if(obj.length === 0)
return new Error(type + ' cannot be an empty Buffer');}else 
if(String(obj) === '')
return new Error(type + ' cannot be an empty String');};


module.exports.AbstractLevelDOWN = AbstractLevelDOWN;
module.exports.AbstractIterator = AbstractIterator;
module.exports.AbstractChainedBatch = AbstractChainedBatch;
});
__d('abstract-leveldown/abstract-iterator.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 

AbstractIterator(db){
this.db = db;
this._ended = false;
this._nexting = false;}


AbstractIterator.prototype.next = function(callback){
var self=this;

if(typeof callback != 'function')
throw new Error('next() requires a callback argument');

if(self._ended)
return callback(new Error('cannot call next() after end()'));
if(self._nexting)
return callback(new Error('cannot call next() before previous next() has completed'));

self._nexting = true;
if(typeof self._next == 'function'){
return self._next(function(){
self._nexting = false;
callback.apply(null,arguments);});}



process.nextTick(function(){
self._nexting = false;
callback();});};



AbstractIterator.prototype.end = function(callback){
if(typeof callback != 'function')
throw new Error('end() requires a callback argument');

if(this._ended)
return callback(new Error('end() already called on iterator'));

this._ended = true;

if(typeof this._end == 'function')
return this._end(callback);

process.nextTick(callback);};


module.exports = AbstractIterator;
});
__d('abstract-leveldown/abstract-chained-batch.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 

AbstractChainedBatch(db){
this._db = db;
this._operations = [];
this._written = false;}


AbstractChainedBatch.prototype._checkWritten = function(){
if(this._written)
throw new Error('write() already called on this batch');};


AbstractChainedBatch.prototype.put = function(key,value){
this._checkWritten();

var err=this._db._checkKeyValue(key,'key',this._db._isBuffer);
if(err)throw err;
err = this._db._checkKeyValue(value,'value',this._db._isBuffer);
if(err)throw err;

if(!this._db._isBuffer(key))key = String(key);
if(!this._db._isBuffer(value))value = String(value);

if(typeof this._put == 'function')
this._put(key,value);else 

this._operations.push({type:'put',key:key,value:value});

return this;};


AbstractChainedBatch.prototype.del = function(key){
this._checkWritten();

var err=this._db._checkKeyValue(key,'key',this._db._isBuffer);
if(err)throw err;

if(!this._db._isBuffer(key))key = String(key);

if(typeof this._del == 'function')
this._del(key);else 

this._operations.push({type:'del',key:key});

return this;};


AbstractChainedBatch.prototype.clear = function(){
this._checkWritten();

this._operations = [];

if(typeof this._clear == 'function')
this._clear();

return this;};


AbstractChainedBatch.prototype.write = function(options,callback){
this._checkWritten();

if(typeof options == 'function')
callback = options;
if(typeof callback != 'function')
throw new Error('write() requires a callback argument');
if(typeof options != 'object')
options = {};

this._written = true;

if(typeof this._write == 'function')
return this._write(callback);

if(typeof this._db._batch == 'function')
return this._db._batch(this._operations,options,callback);

process.nextTick(callback);};


module.exports = AbstractChainedBatch;
});
__d('levelup/lib/errors.js',["errno/errno.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 





createError=require('errno/errno.js').create,
LevelUPError=createError('LevelUPError'),
NotFoundError=createError('NotFoundError',LevelUPError);

NotFoundError.prototype.notFound = true;
NotFoundError.prototype.status = 404;

module.exports = {
LevelUPError:LevelUPError,
InitializationError:createError('InitializationError',LevelUPError),
OpenError:createError('OpenError',LevelUPError),
ReadError:createError('ReadError',LevelUPError),
WriteError:createError('WriteError',LevelUPError),
NotFoundError:NotFoundError,
EncodingError:createError('EncodingError',LevelUPError)};
});
__d('errno/errno.js',["errno/custom.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var all=module.exports.all = [
{
errorno:-2,
code:'ENOENT',
description:'no such file or directory'},

{
errno:-1,
code:'UNKNOWN',
description:'unknown error'},

{
errno:0,
code:'OK',
description:'success'},

{
errno:1,
code:'EOF',
description:'end of file'},

{
errno:2,
code:'EADDRINFO',
description:'getaddrinfo error'},

{
errno:3,
code:'EACCES',
description:'permission denied'},

{
errno:4,
code:'EAGAIN',
description:'resource temporarily unavailable'},

{
errno:5,
code:'EADDRINUSE',
description:'address already in use'},

{
errno:6,
code:'EADDRNOTAVAIL',
description:'address not available'},

{
errno:7,
code:'EAFNOSUPPORT',
description:'address family not supported'},

{
errno:8,
code:'EALREADY',
description:'connection already in progress'},

{
errno:9,
code:'EBADF',
description:'bad file descriptor'},

{
errno:10,
code:'EBUSY',
description:'resource busy or locked'},

{
errno:11,
code:'ECONNABORTED',
description:'software caused connection abort'},

{
errno:12,
code:'ECONNREFUSED',
description:'connection refused'},

{
errno:13,
code:'ECONNRESET',
description:'connection reset by peer'},

{
errno:14,
code:'EDESTADDRREQ',
description:'destination address required'},

{
errno:15,
code:'EFAULT',
description:'bad address in system call argument'},

{
errno:16,
code:'EHOSTUNREACH',
description:'host is unreachable'},

{
errno:17,
code:'EINTR',
description:'interrupted system call'},

{
errno:18,
code:'EINVAL',
description:'invalid argument'},

{
errno:19,
code:'EISCONN',
description:'socket is already connected'},

{
errno:20,
code:'EMFILE',
description:'too many open files'},

{
errno:21,
code:'EMSGSIZE',
description:'message too long'},

{
errno:22,
code:'ENETDOWN',
description:'network is down'},

{
errno:23,
code:'ENETUNREACH',
description:'network is unreachable'},

{
errno:24,
code:'ENFILE',
description:'file table overflow'},

{
errno:25,
code:'ENOBUFS',
description:'no buffer space available'},

{
errno:26,
code:'ENOMEM',
description:'not enough memory'},

{
errno:27,
code:'ENOTDIR',
description:'not a directory'},

{
errno:28,
code:'EISDIR',
description:'illegal operation on a directory'},

{
errno:29,
code:'ENONET',
description:'machine is not on the network'},

{
errno:31,
code:'ENOTCONN',
description:'socket is not connected'},

{
errno:32,
code:'ENOTSOCK',
description:'socket operation on non-socket'},

{
errno:33,
code:'ENOTSUP',
description:'operation not supported on socket'},

{
errno:34,
code:'ENOENT',
description:'no such file or directory'},

{
errno:35,
code:'ENOSYS',
description:'function not implemented'},

{
errno:36,
code:'EPIPE',
description:'broken pipe'},

{
errno:37,
code:'EPROTO',
description:'protocol error'},

{
errno:38,
code:'EPROTONOSUPPORT',
description:'protocol not supported'},

{
errno:39,
code:'EPROTOTYPE',
description:'protocol wrong type for socket'},

{
errno:40,
code:'ETIMEDOUT',
description:'connection timed out'},

{
errno:41,
code:'ECHARSET',
description:'invalid Unicode character'},

{
errno:42,
code:'EAIFAMNOSUPPORT',
description:'address family for hostname not supported'},

{
errno:44,
code:'EAISERVICE',
description:'servname not supported for ai_socktype'},

{
errno:45,
code:'EAISOCKTYPE',
description:'ai_socktype not supported'},

{
errno:46,
code:'ESHUTDOWN',
description:'cannot send after transport endpoint shutdown'},

{
errno:47,
code:'EEXIST',
description:'file already exists'},

{
errno:48,
code:'ESRCH',
description:'no such process'},

{
errno:49,
code:'ENAMETOOLONG',
description:'name too long'},

{
errno:50,
code:'EPERM',
description:'operation not permitted'},

{
errno:51,
code:'ELOOP',
description:'too many symbolic links encountered'},

{
errno:52,
code:'EXDEV',
description:'cross-device link not permitted'},

{
errno:53,
code:'ENOTEMPTY',
description:'directory not empty'},

{
errno:54,
code:'ENOSPC',
description:'no space left on device'},

{
errno:55,
code:'EIO',
description:'i/o error'},

{
errno:56,
code:'EROFS',
description:'read-only file system'},

{
errno:57,
code:'ENODEV',
description:'no such device'},

{
errno:58,
code:'ESPIPE',
description:'invalid seek'},

{
errno:59,
code:'ECANCELED',
description:'operation canceled'}];



module.exports.errno = {};
module.exports.code = {};

all.forEach(function(error){
module.exports.errno[error.errno] = error;
module.exports.code[error.code] = error;});


module.exports.custom = require('errno/custom.js')(module.exports);
module.exports.create = module.exports.custom.createError;
});
__d('errno/custom.js',["prr/prr.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var prr=require('prr/prr.js');

function init(type,message,cause){
prr(this,{
type:type,
name:type,

cause:typeof message != 'string'?message:cause,
message:!!message && typeof message != 'string'?message.message:message},

'ewr');}



function CustomError(message,cause){
Error.call(this);
if(Error.captureStackTrace)
Error.captureStackTrace(this,arguments.callee);
init.call(this,'CustomError',message,cause);}


CustomError.prototype = new Error();

function createError(errno,type,proto){
var err=function(message,cause){
init.call(this,type,message,cause);

if(type == 'FilesystemError'){
this.code = this.cause.code;
this.path = this.cause.path;
this.errno = this.cause.errno;
this.message = 
(errno.errno[this.cause.errno]?
errno.errno[this.cause.errno].description:
this.cause.message) + (
this.cause.path?' [' + this.cause.path + ']':'');}

Error.call(this);
if(Error.captureStackTrace)
Error.captureStackTrace(this,arguments.callee);};

err.prototype = !!proto?new proto():new CustomError();
return err;}


module.exports = function(errno){
var ce=function(type,proto){
return createError(errno,type,proto);};

return {
CustomError:CustomError,
FilesystemError:ce('FilesystemError'),
createError:ce};};
});
__d('levelup/lib/read-stream.js',["readable-stream/readable.js","util/util.js","xtend/index.js","levelup/lib/errors.js","levelup/lib/util.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 






Readable=require('readable-stream/readable.js').Readable,
inherits=require('util/util.js').inherits,
extend=require('xtend/index.js'),
EncodingError=require('levelup/lib/errors.js').EncodingError,
util=require('levelup/lib/util.js'),

defaultOptions={keys:true,values:true},

makeKeyValueData=function(key,value){
return {
key:util.decodeKey(key,this._options),
value:util.decodeValue(value,this._options)};},


makeKeyData=function(key){
return util.decodeKey(key,this._options);},

makeValueData=function(_,value){
return util.decodeValue(value,this._options);},

makeNoData=function(){return null;};

function ReadStream(options,db,iteratorFactory){
if(!(this instanceof ReadStream))
return new ReadStream(options,db,iteratorFactory);

Readable.call(this,{objectMode:true,highWaterMark:options.highWaterMark});


this._db = db;

options = this._options = extend(defaultOptions,options);

this._keyEncoding = options.keyEncoding || options.encoding;
this._valueEncoding = options.valueEncoding || options.encoding;

if(typeof this._options.start != 'undefined')
this._options.start = util.encodeKey(this._options.start,this._options);
if(typeof this._options.end != 'undefined')
this._options.end = util.encodeKey(this._options.end,this._options);
if(typeof this._options.limit != 'number')
this._options.limit = -1;

this._options.keyAsBuffer = util.isKeyAsBuffer(this._options);

this._options.valueAsBuffer = util.isValueAsBuffer(this._options);

this._makeData = this._options.keys && this._options.values?
makeKeyValueData:this._options.keys?
makeKeyData:this._options.values?
makeValueData:makeNoData;

var self=this;
if(!this._db.isOpen()){
this._db.once('ready',function(){
if(!self._destroyed){
self._iterator = iteratorFactory(self._options);}});}else 



this._iterator = iteratorFactory(this._options);}


inherits(ReadStream,Readable);

ReadStream.prototype._read = function read(){
var self=this;
if(!self._db.isOpen()){
return self._db.once('ready',function(){read.call(self);});}

if(self._destroyed)
return;

self._iterator.next(function(err,key,value){
if(err || key === undefined && value === undefined){
if(!err && !self._destroyed)
self.push(null);
return self._cleanup(err);}


try{
value = self._makeData(key,value);}
catch(e) {
return self._cleanup(new EncodingError(e));}

if(!self._destroyed)
self.push(value);});};



ReadStream.prototype._cleanup = function(err){
if(this._destroyed)
return;

this._destroyed = true;

var self=this;
if(err)
self.emit('error',err);

if(self._iterator){
self._iterator.end(function(){
self._iterator = null;
self.emit('close');});}else 

{
self.emit('close');}};



ReadStream.prototype.destroy = function(){
this._cleanup();};


ReadStream.prototype.toString = function(){
return 'LevelUP.ReadStream';};


module.exports = ReadStream;
});
__d('readable-stream/readable.js',["stream-browserify/index.js","readable-stream/lib/_stream_readable.js","readable-stream/lib/_stream_writable.js","readable-stream/lib/_stream_duplex.js","readable-stream/lib/_stream_transform.js","readable-stream/lib/_stream_passthrough.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var Stream=require('stream-browserify/index.js');
exports = module.exports = require('readable-stream/lib/_stream_readable.js');
exports.Stream = Stream;
exports.Readable = exports;
exports.Writable = require('readable-stream/lib/_stream_writable.js');
exports.Duplex = require('readable-stream/lib/_stream_duplex.js');
exports.Transform = require('readable-stream/lib/_stream_transform.js');
exports.PassThrough = require('readable-stream/lib/_stream_passthrough.js');
});
__d('stream-browserify/index.js',["events/events.js","inherits/inherits_browser.js","readable-stream/readable.js","readable-stream/writable.js","readable-stream/duplex.js","readable-stream/transform.js","readable-stream/passthrough.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.




















exports = Stream;

var EE=require('events/events.js').EventEmitter;
var inherits=require('inherits/inherits_browser.js');

inherits(Stream,EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');


Stream.Stream = Stream;






function Stream(){
EE.call(this);}


Stream.prototype.pipe = function(dest,options){
var source=this;

function ondata(chunk){
if(dest.writable){
if(false === dest.write(chunk) && source.pause){
source.pause();}}}




source.on('data',ondata);

function ondrain(){
if(source.readable && source.resume){
source.resume();}}



dest.on('drain',ondrain);



if(!dest._isStdio && (!options || options.end !== false)){
source.on('end',onend);
source.on('close',onclose);}


var didOnEnd=false;
function onend(){
if(didOnEnd)return;
didOnEnd = true;

dest.end();}



function onclose(){
if(didOnEnd)return;
didOnEnd = true;

if(typeof dest.destroy === 'function')dest.destroy();}



function onerror(er){
cleanup();
if(EE.listenerCount(this,'error') === 0){
throw er;}}



source.on('error',onerror);
dest.on('error',onerror);


function cleanup(){
source.removeListener('data',ondata);
dest.removeListener('drain',ondrain);

source.removeListener('end',onend);
source.removeListener('close',onclose);

source.removeListener('error',onerror);
dest.removeListener('error',onerror);

source.removeListener('end',cleanup);
source.removeListener('close',cleanup);

dest.removeListener('close',cleanup);}


source.on('end',cleanup);
source.on('close',cleanup);

dest.on('close',cleanup);

dest.emit('pipe',source);


return dest;};
});
__d('readable-stream/readable.js',["readable-stream/lib/_stream_readable.js","readable-stream/lib/_stream_writable.js","readable-stream/lib/_stream_duplex.js","readable-stream/lib/_stream_transform.js","readable-stream/lib/_stream_passthrough.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var Stream=(function(){
try{
return require('st' + 'ream');}
catch(_) {}})();

exports = module.exports = require('readable-stream/lib/_stream_readable.js');
exports.Stream = Stream || exports;
exports.Readable = exports;
exports.Writable = require('readable-stream/lib/_stream_writable.js');
exports.Duplex = require('readable-stream/lib/_stream_duplex.js');
exports.Transform = require('readable-stream/lib/_stream_transform.js');
exports.PassThrough = require('readable-stream/lib/_stream_passthrough.js');
});
__d('readable-stream/lib/_stream_readable.js',["process-nextick-args/index.js","isarray/index.js","buffer/index.js","events/events.js","events/events.js","buffer/index.js","core-util-is/lib/util.js","inherits/inherits_browser.js","util/util.js","readable-stream/lib/_stream_duplex.js","string_decoder/index.js","readable-stream/lib/_stream_duplex.js","string_decoder/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

module.exports = Readable;


var processNextTick=require('process-nextick-args/index.js');




var isArray=require('isarray/index.js');




var Buffer=require('buffer/index.js').Buffer;


Readable.ReadableState = ReadableState;

var EE=require('events/events.js').EventEmitter;


if(!EE.listenerCount)EE.listenerCount = function(emitter,type){
return emitter.listeners(type).length;};






var Stream;
(function(){try{
Stream = require('st' + 'ream');}
catch(_) {}finally {
if(!Stream)
Stream = require('events/events.js').EventEmitter;}})();



var Buffer=require('buffer/index.js').Buffer;


var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');





var debug=require('util/util.js');
if(debug && debug.debuglog){
debug = debug.debuglog('stream');}else 
{
debug = function(){};}



var StringDecoder;

util.inherits(Readable,Stream);

function ReadableState(options,stream){
var Duplex=require('readable-stream/lib/_stream_duplex.js');

options = options || {};



this.objectMode = !!options.objectMode;

if(stream instanceof Duplex)
this.objectMode = this.objectMode || !!options.readableObjectMode;



var hwm=options.highWaterMark;
var defaultHwm=this.objectMode?16:16 * 1024;
this.highWaterMark = hwm || hwm === 0?hwm:defaultHwm;


this.highWaterMark = ~ ~this.highWaterMark;

this.buffer = [];
this.length = 0;
this.pipes = null;
this.pipesCount = 0;
this.flowing = null;
this.ended = false;
this.endEmitted = false;
this.reading = false;





this.sync = true;



this.needReadable = false;
this.emittedReadable = false;
this.readableListening = false;




this.defaultEncoding = options.defaultEncoding || 'utf8';



this.ranOut = false;


this.awaitDrain = 0;


this.readingMore = false;

this.decoder = null;
this.encoding = null;
if(options.encoding){
if(!StringDecoder)
StringDecoder = require('string_decoder/index.js').StringDecoder;
this.decoder = new StringDecoder(options.encoding);
this.encoding = options.encoding;}}



function Readable(options){
var Duplex=require('readable-stream/lib/_stream_duplex.js');

if(!(this instanceof Readable))
return new Readable(options);

this._readableState = new ReadableState(options,this);


this.readable = true;

if(options && typeof options.read === 'function')
this._read = options.read;

Stream.call(this);}






Readable.prototype.push = function(chunk,encoding){
var state=this._readableState;

if(!state.objectMode && typeof chunk === 'string'){
encoding = encoding || state.defaultEncoding;
if(encoding !== state.encoding){
chunk = new Buffer(chunk,encoding);
encoding = '';}}



return readableAddChunk(this,state,chunk,encoding,false);};



Readable.prototype.unshift = function(chunk){
var state=this._readableState;
return readableAddChunk(this,state,chunk,'',true);};


Readable.prototype.isPaused = function(){
return this._readableState.flowing === false;};


function readableAddChunk(stream,state,chunk,encoding,addToFront){
var er=chunkInvalid(state,chunk);
if(er){
stream.emit('error',er);}else 
if(chunk === null){
state.reading = false;
onEofChunk(stream,state);}else 
if(state.objectMode || chunk && chunk.length > 0){
if(state.ended && !addToFront){
var e=new Error('stream.push() after EOF');
stream.emit('error',e);}else 
if(state.endEmitted && addToFront){
var e=new Error('stream.unshift() after end event');
stream.emit('error',e);}else 
{
if(state.decoder && !addToFront && !encoding)
chunk = state.decoder.write(chunk);

if(!addToFront)
state.reading = false;


if(state.flowing && state.length === 0 && !state.sync){
stream.emit('data',chunk);
stream.read(0);}else 
{

state.length += state.objectMode?1:chunk.length;
if(addToFront)
state.buffer.unshift(chunk);else 

state.buffer.push(chunk);

if(state.needReadable)
emitReadable(stream);}


maybeReadMore(stream,state);}}else 

if(!addToFront){
state.reading = false;}


return needMoreData(state);}











function needMoreData(state){
return !state.ended && (
state.needReadable || 
state.length < state.highWaterMark || 
state.length === 0);}



Readable.prototype.setEncoding = function(enc){
if(!StringDecoder)
StringDecoder = require('string_decoder/index.js').StringDecoder;
this._readableState.decoder = new StringDecoder(enc);
this._readableState.encoding = enc;
return this;};



var MAX_HWM=0x800000;
function roundUpToNextPowerOf2(n){
if(n >= MAX_HWM){
n = MAX_HWM;}else 
{

n--;
for(var p=1;p < 32;p <<= 1) n |= n >> p;
n++;}

return n;}


function howMuchToRead(n,state){
if(state.length === 0 && state.ended)
return 0;

if(state.objectMode)
return n === 0?0:1;

if(n === null || isNaN(n)){

if(state.flowing && state.buffer.length)
return state.buffer[0].length;else 

return state.length;}


if(n <= 0)
return 0;





if(n > state.highWaterMark)
state.highWaterMark = roundUpToNextPowerOf2(n);


if(n > state.length){
if(!state.ended){
state.needReadable = true;
return 0;}else 
{
return state.length;}}



return n;}



Readable.prototype.read = function(n){
debug('read',n);
var state=this._readableState;
var nOrig=n;

if(typeof n !== 'number' || n > 0)
state.emittedReadable = false;




if(n === 0 && 
state.needReadable && (
state.length >= state.highWaterMark || state.ended)){
debug('read: emitReadable',state.length,state.ended);
if(state.length === 0 && state.ended)
endReadable(this);else 

emitReadable(this);
return null;}


n = howMuchToRead(n,state);


if(n === 0 && state.ended){
if(state.length === 0)
endReadable(this);
return null;}

























var doRead=state.needReadable;
debug('need readable',doRead);


if(state.length === 0 || state.length - n < state.highWaterMark){
doRead = true;
debug('length less than watermark',doRead);}




if(state.ended || state.reading){
doRead = false;
debug('reading or ended',doRead);}


if(doRead){
debug('do read');
state.reading = true;
state.sync = true;

if(state.length === 0)
state.needReadable = true;

this._read(state.highWaterMark);
state.sync = false;}




if(doRead && !state.reading)
n = howMuchToRead(nOrig,state);

var ret;
if(n > 0)
ret = fromList(n,state);else 

ret = null;

if(ret === null){
state.needReadable = true;
n = 0;}


state.length -= n;



if(state.length === 0 && !state.ended)
state.needReadable = true;


if(nOrig !== n && state.ended && state.length === 0)
endReadable(this);

if(ret !== null)
this.emit('data',ret);

return ret;};


function chunkInvalid(state,chunk){
var er=null;
if(!Buffer.isBuffer(chunk) && 
typeof chunk !== 'string' && 
chunk !== null && 
chunk !== undefined && 
!state.objectMode){
er = new TypeError('Invalid non-string/buffer chunk');}

return er;}



function onEofChunk(stream,state){
if(state.ended)return;
if(state.decoder){
var chunk=state.decoder.end();
if(chunk && chunk.length){
state.buffer.push(chunk);
state.length += state.objectMode?1:chunk.length;}}


state.ended = true;


emitReadable(stream);}





function emitReadable(stream){
var state=stream._readableState;
state.needReadable = false;
if(!state.emittedReadable){
debug('emitReadable',state.flowing);
state.emittedReadable = true;
if(state.sync)
processNextTick(emitReadable_,stream);else 

emitReadable_(stream);}}



function emitReadable_(stream){
debug('emit readable');
stream.emit('readable');
flow(stream);}









function maybeReadMore(stream,state){
if(!state.readingMore){
state.readingMore = true;
processNextTick(maybeReadMore_,stream,state);}}



function maybeReadMore_(stream,state){
var len=state.length;
while(!state.reading && !state.flowing && !state.ended && 
state.length < state.highWaterMark) {
debug('maybeReadMore read 0');
stream.read(0);
if(len === state.length)

break;else 

len = state.length;}

state.readingMore = false;}






Readable.prototype._read = function(n){
this.emit('error',new Error('not implemented'));};


Readable.prototype.pipe = function(dest,pipeOpts){
var src=this;
var state=this._readableState;

switch(state.pipesCount){
case 0:
state.pipes = dest;
break;
case 1:
state.pipes = [state.pipes,dest];
break;
default:
state.pipes.push(dest);
break;}

state.pipesCount += 1;
debug('pipe count=%d opts=%j',state.pipesCount,pipeOpts);

var doEnd=(!pipeOpts || pipeOpts.end !== false) && 
dest !== process.stdout && 
dest !== process.stderr;

var endFn=doEnd?onend:cleanup;
if(state.endEmitted)
processNextTick(endFn);else 

src.once('end',endFn);

dest.on('unpipe',onunpipe);
function onunpipe(readable){
debug('onunpipe');
if(readable === src){
cleanup();}}



function onend(){
debug('onend');
dest.end();}






var ondrain=pipeOnDrain(src);
dest.on('drain',ondrain);

function cleanup(){
debug('cleanup');

dest.removeListener('close',onclose);
dest.removeListener('finish',onfinish);
dest.removeListener('drain',ondrain);
dest.removeListener('error',onerror);
dest.removeListener('unpipe',onunpipe);
src.removeListener('end',onend);
src.removeListener('end',cleanup);
src.removeListener('data',ondata);






if(state.awaitDrain && (
!dest._writableState || dest._writableState.needDrain))
ondrain();}


src.on('data',ondata);
function ondata(chunk){
debug('ondata');
var ret=dest.write(chunk);
if(false === ret){
debug('false write response, pause',
src._readableState.awaitDrain);
src._readableState.awaitDrain++;
src.pause();}}





function onerror(er){
debug('onerror',er);
unpipe();
dest.removeListener('error',onerror);
if(EE.listenerCount(dest,'error') === 0)
dest.emit('error',er);}



if(!dest._events || !dest._events.error)
dest.on('error',onerror);else 
if(isArray(dest._events.error))
dest._events.error.unshift(onerror);else 

dest._events.error = [onerror,dest._events.error];




function onclose(){
dest.removeListener('finish',onfinish);
unpipe();}

dest.once('close',onclose);
function onfinish(){
debug('onfinish');
dest.removeListener('close',onclose);
unpipe();}

dest.once('finish',onfinish);

function unpipe(){
debug('unpipe');
src.unpipe(dest);}



dest.emit('pipe',src);


if(!state.flowing){
debug('pipe resume');
src.resume();}


return dest;};


function pipeOnDrain(src){
return function(){
var state=src._readableState;
debug('pipeOnDrain',state.awaitDrain);
if(state.awaitDrain)
state.awaitDrain--;
if(state.awaitDrain === 0 && EE.listenerCount(src,'data')){
state.flowing = true;
flow(src);}};}





Readable.prototype.unpipe = function(dest){
var state=this._readableState;


if(state.pipesCount === 0)
return this;


if(state.pipesCount === 1){

if(dest && dest !== state.pipes)
return this;

if(!dest)
dest = state.pipes;


state.pipes = null;
state.pipesCount = 0;
state.flowing = false;
if(dest)
dest.emit('unpipe',this);
return this;}




if(!dest){

var dests=state.pipes;
var len=state.pipesCount;
state.pipes = null;
state.pipesCount = 0;
state.flowing = false;

for(var i=0;i < len;i++) 
dests[i].emit('unpipe',this);
return this;}



var i=indexOf(state.pipes,dest);
if(i === -1)
return this;

state.pipes.splice(i,1);
state.pipesCount -= 1;
if(state.pipesCount === 1)
state.pipes = state.pipes[0];

dest.emit('unpipe',this);

return this;};




Readable.prototype.on = function(ev,fn){
var res=Stream.prototype.on.call(this,ev,fn);



if(ev === 'data' && false !== this._readableState.flowing){
this.resume();}


if(ev === 'readable' && this.readable){
var state=this._readableState;
if(!state.readableListening){
state.readableListening = true;
state.emittedReadable = false;
state.needReadable = true;
if(!state.reading){
processNextTick(nReadingNextTick,this);}else 
if(state.length){
emitReadable(this,state);}}}




return res;};

Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self){
debug('readable nexttick read 0');
self.read(0);}




Readable.prototype.resume = function(){
var state=this._readableState;
if(!state.flowing){
debug('resume');
state.flowing = true;
resume(this,state);}

return this;};


function resume(stream,state){
if(!state.resumeScheduled){
state.resumeScheduled = true;
processNextTick(resume_,stream,state);}}



function resume_(stream,state){
if(!state.reading){
debug('resume read 0');
stream.read(0);}


state.resumeScheduled = false;
stream.emit('resume');
flow(stream);
if(state.flowing && !state.reading)
stream.read(0);}


Readable.prototype.pause = function(){
debug('call pause flowing=%j',this._readableState.flowing);
if(false !== this._readableState.flowing){
debug('pause');
this._readableState.flowing = false;
this.emit('pause');}

return this;};


function flow(stream){
var state=stream._readableState;
debug('flow',state.flowing);
if(state.flowing){
do {
var chunk=stream.read();}while(
null !== chunk && state.flowing);}}






Readable.prototype.wrap = function(stream){
var state=this._readableState;
var paused=false;

var self=this;
stream.on('end',function(){
debug('wrapped end');
if(state.decoder && !state.ended){
var chunk=state.decoder.end();
if(chunk && chunk.length)
self.push(chunk);}


self.push(null);});


stream.on('data',function(chunk){
debug('wrapped data');
if(state.decoder)
chunk = state.decoder.write(chunk);


if(state.objectMode && (chunk === null || chunk === undefined))
return;else 
if(!state.objectMode && (!chunk || !chunk.length))
return;

var ret=self.push(chunk);
if(!ret){
paused = true;
stream.pause();}});





for(var i in stream) {
if(this[i] === undefined && typeof stream[i] === 'function'){
this[i] = (function(method){return function(){
return stream[method].apply(stream,arguments);};})(
i);}}




var events=['error','close','destroy','pause','resume'];
forEach(events,function(ev){
stream.on(ev,self.emit.bind(self,ev));});




self._read = function(n){
debug('wrapped _read',n);
if(paused){
paused = false;
stream.resume();}};



return self;};





Readable._fromList = fromList;



function fromList(n,state){
var list=state.buffer;
var length=state.length;
var stringMode=!!state.decoder;
var objectMode=!!state.objectMode;
var ret;


if(list.length === 0)
return null;

if(length === 0)
ret = null;else 
if(objectMode)
ret = list.shift();else 
if(!n || n >= length){

if(stringMode)
ret = list.join('');else 

ret = Buffer.concat(list,length);
list.length = 0;}else 
{

if(n < list[0].length){


var buf=list[0];
ret = buf.slice(0,n);
list[0] = buf.slice(n);}else 
if(n === list[0].length){

ret = list.shift();}else 
{


if(stringMode)
ret = '';else 

ret = new Buffer(n);

var c=0;
for(var i=0,l=list.length;i < l && c < n;i++) {
var buf=list[0];
var cpy=Math.min(n - c,buf.length);

if(stringMode)
ret += buf.slice(0,cpy);else 

buf.copy(ret,c,0,cpy);

if(cpy < buf.length)
list[0] = buf.slice(cpy);else 

list.shift();

c += cpy;}}}




return ret;}


function endReadable(stream){
var state=stream._readableState;



if(state.length > 0)
throw new Error('endReadable called on non-empty stream');

if(!state.endEmitted){
state.ended = true;
processNextTick(endReadableNT,state,stream);}}



function endReadableNT(state,stream){

if(!state.endEmitted && state.length === 0){
state.endEmitted = true;
stream.readable = false;
stream.emit('end');}}



function forEach(xs,f){
for(var i=0,l=xs.length;i < l;i++) {
f(xs[i],i);}}



function indexOf(xs,x){
for(var i=0,l=xs.length;i < l;i++) {
if(xs[i] === x)return i;}

return -1;}
});
__d('process-nextick-args/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
module.exports = nextTick;

function nextTick(fn){
var args=new Array(arguments.length - 1);
var i=0;
while(i < arguments.length) {
args[i++] = arguments[i];}

process.nextTick(function afterTick(){
fn.apply(null,args);});}
});
__d('isarray/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = Array.isArray || function(arr){
return Object.prototype.toString.call(arr) == '[object Array]';};
});
__d('core-util-is/lib/util.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 






















isArray(ar){
return Array.isArray(ar);}

exports.isArray = isArray;

function isBoolean(arg){
return typeof arg === 'boolean';}

exports.isBoolean = isBoolean;

function isNull(arg){
return arg === null;}

exports.isNull = isNull;

function isNullOrUndefined(arg){
return arg == null;}

exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg){
return typeof arg === 'number';}

exports.isNumber = isNumber;

function isString(arg){
return typeof arg === 'string';}

exports.isString = isString;

function isSymbol(arg){
return typeof arg === 'symbol';}

exports.isSymbol = isSymbol;

function isUndefined(arg){
return arg === void 0;}

exports.isUndefined = isUndefined;

function isRegExp(re){
return isObject(re) && objectToString(re) === '[object RegExp]';}

exports.isRegExp = isRegExp;

function isObject(arg){
return typeof arg === 'object' && arg !== null;}

exports.isObject = isObject;

function isDate(d){
return isObject(d) && objectToString(d) === '[object Date]';}

exports.isDate = isDate;

function isError(e){
return isObject(e) && (
objectToString(e) === '[object Error]' || e instanceof Error);}

exports.isError = isError;

function isFunction(arg){
return typeof arg === 'function';}

exports.isFunction = isFunction;

function isPrimitive(arg){
return arg === null || 
typeof arg === 'boolean' || 
typeof arg === 'number' || 
typeof arg === 'string' || 
typeof arg === 'symbol' || 
typeof arg === 'undefined';}

exports.isPrimitive = isPrimitive;

function isBuffer(arg){
return Buffer.isBuffer(arg);}

exports.isBuffer = isBuffer;

function objectToString(o){
return Object.prototype.toString.call(o);}
});
__d('readable-stream/lib/_stream_duplex.js',["process-nextick-args/index.js","core-util-is/lib/util.js","inherits/inherits_browser.js","readable-stream/lib/_stream_readable.js","readable-stream/lib/_stream_writable.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';







var objectKeys=Object.keys || function(obj){
var keys=[];
for(var key in obj) keys.push(key);
return keys;};




module.exports = Duplex;


var processNextTick=require('process-nextick-args/index.js');





var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


var Readable=require('readable-stream/lib/_stream_readable.js');
var Writable=require('readable-stream/lib/_stream_writable.js');

util.inherits(Duplex,Readable);

var keys=objectKeys(Writable.prototype);
for(var v=0;v < keys.length;v++) {
var method=keys[v];
if(!Duplex.prototype[method])
Duplex.prototype[method] = Writable.prototype[method];}


function Duplex(options){
if(!(this instanceof Duplex))
return new Duplex(options);

Readable.call(this,options);
Writable.call(this,options);

if(options && options.readable === false)
this.readable = false;

if(options && options.writable === false)
this.writable = false;

this.allowHalfOpen = true;
if(options && options.allowHalfOpen === false)
this.allowHalfOpen = false;

this.once('end',onend);}



function onend(){


if(this.allowHalfOpen || this._writableState.ended)
return;



processNextTick(onEndNT,this);}


function onEndNT(self){
self.end();}


function forEach(xs,f){
for(var i=0,l=xs.length;i < l;i++) {
f(xs[i],i);}}
});
__d('readable-stream/lib/_stream_writable.js',["process-nextick-args/index.js","buffer/index.js","core-util-is/lib/util.js","inherits/inherits_browser.js","events/events.js","buffer/index.js","readable-stream/lib/_stream_duplex.js","util-deprecate/browser.js","readable-stream/lib/_stream_duplex.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





module.exports = Writable;


var processNextTick=require('process-nextick-args/index.js');




var Buffer=require('buffer/index.js').Buffer;


Writable.WritableState = WritableState;



var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');





var Stream;
(function(){try{
Stream = require('st' + 'ream');}
catch(_) {}finally {
if(!Stream)
Stream = require('events/events.js').EventEmitter;}})();



var Buffer=require('buffer/index.js').Buffer;

util.inherits(Writable,Stream);

function nop(){}

function WriteReq(chunk,encoding,cb){
this.chunk = chunk;
this.encoding = encoding;
this.callback = cb;
this.next = null;}


function WritableState(options,stream){
var Duplex=require('readable-stream/lib/_stream_duplex.js');

options = options || {};



this.objectMode = !!options.objectMode;

if(stream instanceof Duplex)
this.objectMode = this.objectMode || !!options.writableObjectMode;




var hwm=options.highWaterMark;
var defaultHwm=this.objectMode?16:16 * 1024;
this.highWaterMark = hwm || hwm === 0?hwm:defaultHwm;


this.highWaterMark = ~ ~this.highWaterMark;

this.needDrain = false;

this.ending = false;

this.ended = false;

this.finished = false;




var noDecode=options.decodeStrings === false;
this.decodeStrings = !noDecode;




this.defaultEncoding = options.defaultEncoding || 'utf8';




this.length = 0;


this.writing = false;


this.corked = 0;





this.sync = true;




this.bufferProcessing = false;


this.onwrite = function(er){
onwrite(stream,er);};



this.writecb = null;


this.writelen = 0;

this.bufferedRequest = null;
this.lastBufferedRequest = null;



this.pendingcb = 0;



this.prefinished = false;


this.errorEmitted = false;}


WritableState.prototype.getBuffer = function writableStateGetBuffer(){
var current=this.bufferedRequest;
var out=[];
while(current) {
out.push(current);
current = current.next;}

return out;};


(function(){try{
Object.defineProperty(WritableState.prototype,'buffer',{
get:require('util-deprecate/browser.js')(function(){
return this.getBuffer();},
'_writableState.buffer is deprecated. Use ' + 
'_writableState.getBuffer() instead.')});}

catch(_) {}})();


function Writable(options){
var Duplex=require('readable-stream/lib/_stream_duplex.js');



if(!(this instanceof Writable) && !(this instanceof Duplex))
return new Writable(options);

this._writableState = new WritableState(options,this);


this.writable = true;

if(options){
if(typeof options.write === 'function')
this._write = options.write;

if(typeof options.writev === 'function')
this._writev = options.writev;}


Stream.call(this);}



Writable.prototype.pipe = function(){
this.emit('error',new Error('Cannot pipe. Not readable.'));};



function writeAfterEnd(stream,cb){
var er=new Error('write after end');

stream.emit('error',er);
processNextTick(cb,er);}







function validChunk(stream,state,chunk,cb){
var valid=true;

if(!Buffer.isBuffer(chunk) && 
typeof chunk !== 'string' && 
chunk !== null && 
chunk !== undefined && 
!state.objectMode){
var er=new TypeError('Invalid non-string/buffer chunk');
stream.emit('error',er);
processNextTick(cb,er);
valid = false;}

return valid;}


Writable.prototype.write = function(chunk,encoding,cb){
var state=this._writableState;
var ret=false;

if(typeof encoding === 'function'){
cb = encoding;
encoding = null;}


if(Buffer.isBuffer(chunk))
encoding = 'buffer';else 
if(!encoding)
encoding = state.defaultEncoding;

if(typeof cb !== 'function')
cb = nop;

if(state.ended)
writeAfterEnd(this,cb);else 
if(validChunk(this,state,chunk,cb)){
state.pendingcb++;
ret = writeOrBuffer(this,state,chunk,encoding,cb);}


return ret;};


Writable.prototype.cork = function(){
var state=this._writableState;

state.corked++;};


Writable.prototype.uncork = function(){
var state=this._writableState;

if(state.corked){
state.corked--;

if(!state.writing && 
!state.corked && 
!state.finished && 
!state.bufferProcessing && 
state.bufferedRequest)
clearBuffer(this,state);}};



Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding){

if(typeof encoding === 'string')
encoding = encoding.toLowerCase();
if(!(['hex','utf8','utf-8','ascii','binary','base64',
'ucs2','ucs-2','utf16le','utf-16le','raw'].
indexOf((encoding + '').toLowerCase()) > -1))
throw new TypeError('Unknown encoding: ' + encoding);
this._writableState.defaultEncoding = encoding;};


function decodeChunk(state,chunk,encoding){
if(!state.objectMode && 
state.decodeStrings !== false && 
typeof chunk === 'string'){
chunk = new Buffer(chunk,encoding);}

return chunk;}





function writeOrBuffer(stream,state,chunk,encoding,cb){
chunk = decodeChunk(state,chunk,encoding);

if(Buffer.isBuffer(chunk))
encoding = 'buffer';
var len=state.objectMode?1:chunk.length;

state.length += len;

var ret=state.length < state.highWaterMark;

if(!ret)
state.needDrain = true;

if(state.writing || state.corked){
var last=state.lastBufferedRequest;
state.lastBufferedRequest = new WriteReq(chunk,encoding,cb);
if(last){
last.next = state.lastBufferedRequest;}else 
{
state.bufferedRequest = state.lastBufferedRequest;}}else 

{
doWrite(stream,state,false,len,chunk,encoding,cb);}


return ret;}


function doWrite(stream,state,writev,len,chunk,encoding,cb){
state.writelen = len;
state.writecb = cb;
state.writing = true;
state.sync = true;
if(writev)
stream._writev(chunk,state.onwrite);else 

stream._write(chunk,encoding,state.onwrite);
state.sync = false;}


function onwriteError(stream,state,sync,er,cb){
--state.pendingcb;
if(sync)
processNextTick(cb,er);else 

cb(er);

stream._writableState.errorEmitted = true;
stream.emit('error',er);}


function onwriteStateUpdate(state){
state.writing = false;
state.writecb = null;
state.length -= state.writelen;
state.writelen = 0;}


function onwrite(stream,er){
var state=stream._writableState;
var sync=state.sync;
var cb=state.writecb;

onwriteStateUpdate(state);

if(er)
onwriteError(stream,state,sync,er,cb);else 
{

var finished=needFinish(state);

if(!finished && 
!state.corked && 
!state.bufferProcessing && 
state.bufferedRequest){
clearBuffer(stream,state);}


if(sync){
processNextTick(afterWrite,stream,state,finished,cb);}else 
{
afterWrite(stream,state,finished,cb);}}}




function afterWrite(stream,state,finished,cb){
if(!finished)
onwriteDrain(stream,state);
state.pendingcb--;
cb();
finishMaybe(stream,state);}





function onwriteDrain(stream,state){
if(state.length === 0 && state.needDrain){
state.needDrain = false;
stream.emit('drain');}}





function clearBuffer(stream,state){
state.bufferProcessing = true;
var entry=state.bufferedRequest;

if(stream._writev && entry && entry.next){

var buffer=[];
var cbs=[];
while(entry) {
cbs.push(entry.callback);
buffer.push(entry);
entry = entry.next;}




state.pendingcb++;
state.lastBufferedRequest = null;
doWrite(stream,state,true,state.length,buffer,'',function(err){
for(var i=0;i < cbs.length;i++) {
state.pendingcb--;
cbs[i](err);}});}else 




{

while(entry) {
var chunk=entry.chunk;
var encoding=entry.encoding;
var cb=entry.callback;
var len=state.objectMode?1:chunk.length;

doWrite(stream,state,false,len,chunk,encoding,cb);
entry = entry.next;




if(state.writing){
break;}}



if(entry === null)
state.lastBufferedRequest = null;}

state.bufferedRequest = entry;
state.bufferProcessing = false;}


Writable.prototype._write = function(chunk,encoding,cb){
cb(new Error('not implemented'));};


Writable.prototype._writev = null;

Writable.prototype.end = function(chunk,encoding,cb){
var state=this._writableState;

if(typeof chunk === 'function'){
cb = chunk;
chunk = null;
encoding = null;}else 
if(typeof encoding === 'function'){
cb = encoding;
encoding = null;}


if(chunk !== null && chunk !== undefined)
this.write(chunk,encoding);


if(state.corked){
state.corked = 1;
this.uncork();}



if(!state.ending && !state.finished)
endWritable(this,state,cb);};



function needFinish(state){
return state.ending && 
state.length === 0 && 
state.bufferedRequest === null && 
!state.finished && 
!state.writing;}


function prefinish(stream,state){
if(!state.prefinished){
state.prefinished = true;
stream.emit('prefinish');}}



function finishMaybe(stream,state){
var need=needFinish(state);
if(need){
if(state.pendingcb === 0){
prefinish(stream,state);
state.finished = true;
stream.emit('finish');}else 
{
prefinish(stream,state);}}


return need;}


function endWritable(stream,state,cb){
state.ending = true;
finishMaybe(stream,state);
if(cb){
if(state.finished)
processNextTick(cb);else 

stream.once('finish',cb);}

state.ended = true;}
});
__d('util-deprecate/browser.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.




exports = deprecate;



















function deprecate(fn,msg){
if(config('noDeprecation')){
return fn;}


var warned=false;
function deprecated(){
if(!warned){
if(config('throwDeprecation')){
throw new Error(msg);}else 
if(config('traceDeprecation')){
console.trace(msg);}else 
{
console.warn(msg);}

warned = true;}

return fn.apply(this,arguments);}


return deprecated;}










function config(name){
if(!global.localStorage)return false;
var val=global.localStorage[name];
if(null == val)return false;
return String(val).toLowerCase() === 'true';}
});
__d('string_decoder/index.js',["buffer/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 




















Buffer=require('buffer/index.js').Buffer;

var isBufferEncoding=Buffer.isEncoding || 
function(encoding){
switch(encoding && encoding.toLowerCase()){
case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':return true;
default:return false;}};




function assertEncoding(encoding){
if(encoding && !isBufferEncoding(encoding)){
throw new Error('Unknown encoding: ' + encoding);}}











var StringDecoder=exports.StringDecoder = function(encoding){
this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/,'');
assertEncoding(encoding);
switch(this.encoding){
case 'utf8':

this.surrogateSize = 3;
break;
case 'ucs2':
case 'utf16le':

this.surrogateSize = 2;
this.detectIncompleteChar = utf16DetectIncompleteChar;
break;
case 'base64':

this.surrogateSize = 3;
this.detectIncompleteChar = base64DetectIncompleteChar;
break;
default:
this.write = passThroughWrite;
return;}




this.charBuffer = new Buffer(6);

this.charReceived = 0;

this.charLength = 0;};












StringDecoder.prototype.write = function(buffer){
var charStr='';

while(this.charLength) {

var available=buffer.length >= this.charLength - this.charReceived?
this.charLength - this.charReceived:
buffer.length;


buffer.copy(this.charBuffer,this.charReceived,0,available);
this.charReceived += available;

if(this.charReceived < this.charLength){

return '';}



buffer = buffer.slice(available,buffer.length);


charStr = this.charBuffer.slice(0,this.charLength).toString(this.encoding);


var charCode=charStr.charCodeAt(charStr.length - 1);
if(charCode >= 0xD800 && charCode <= 0xDBFF){
this.charLength += this.surrogateSize;
charStr = '';
continue;}

this.charReceived = this.charLength = 0;


if(buffer.length === 0){
return charStr;}

break;}



this.detectIncompleteChar(buffer);

var end=buffer.length;
if(this.charLength){

buffer.copy(this.charBuffer,0,buffer.length - this.charReceived,end);
end -= this.charReceived;}


charStr += buffer.toString(this.encoding,0,end);

var end=charStr.length - 1;
var charCode=charStr.charCodeAt(end);

if(charCode >= 0xD800 && charCode <= 0xDBFF){
var size=this.surrogateSize;
this.charLength += size;
this.charReceived += size;
this.charBuffer.copy(this.charBuffer,size,0,size);
buffer.copy(this.charBuffer,0,0,size);
return charStr.substring(0,end);}



return charStr;};






StringDecoder.prototype.detectIncompleteChar = function(buffer){

var i=buffer.length >= 3?3:buffer.length;



for(;i > 0;i--) {
var c=buffer[buffer.length - i];




if(i == 1 && c >> 5 == 0x06){
this.charLength = 2;
break;}



if(i <= 2 && c >> 4 == 0x0E){
this.charLength = 3;
break;}



if(i <= 3 && c >> 3 == 0x1E){
this.charLength = 4;
break;}}


this.charReceived = i;};


StringDecoder.prototype.end = function(buffer){
var res='';
if(buffer && buffer.length)
res = this.write(buffer);

if(this.charReceived){
var cr=this.charReceived;
var buf=this.charBuffer;
var enc=this.encoding;
res += buf.slice(0,cr).toString(enc);}


return res;};


function passThroughWrite(buffer){
return buffer.toString(this.encoding);}


function utf16DetectIncompleteChar(buffer){
this.charReceived = buffer.length % 2;
this.charLength = this.charReceived?2:0;}


function base64DetectIncompleteChar(buffer){
this.charReceived = buffer.length % 3;
this.charLength = this.charReceived?3:0;}
});
__d('readable-stream/lib/_stream_transform.js',["readable-stream/lib/_stream_duplex.js","core-util-is/lib/util.js","inherits/inherits_browser.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











































module.exports = Transform;

var Duplex=require('readable-stream/lib/_stream_duplex.js');


var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


util.inherits(Transform,Duplex);


function TransformState(stream){
this.afterTransform = function(er,data){
return afterTransform(stream,er,data);};


this.needTransform = false;
this.transforming = false;
this.writecb = null;
this.writechunk = null;}


function afterTransform(stream,er,data){
var ts=stream._transformState;
ts.transforming = false;

var cb=ts.writecb;

if(!cb)
return stream.emit('error',new Error('no writecb in Transform class'));

ts.writechunk = null;
ts.writecb = null;

if(data !== null && data !== undefined)
stream.push(data);

if(cb)
cb(er);

var rs=stream._readableState;
rs.reading = false;
if(rs.needReadable || rs.length < rs.highWaterMark){
stream._read(rs.highWaterMark);}}




function Transform(options){
if(!(this instanceof Transform))
return new Transform(options);

Duplex.call(this,options);

this._transformState = new TransformState(this);


var stream=this;


this._readableState.needReadable = true;




this._readableState.sync = false;

if(options){
if(typeof options.transform === 'function')
this._transform = options.transform;

if(typeof options.flush === 'function')
this._flush = options.flush;}


this.once('prefinish',function(){
if(typeof this._flush === 'function')
this._flush(function(er){
done(stream,er);});else 


done(stream);});}



Transform.prototype.push = function(chunk,encoding){
this._transformState.needTransform = false;
return Duplex.prototype.push.call(this,chunk,encoding);};












Transform.prototype._transform = function(chunk,encoding,cb){
throw new Error('not implemented');};


Transform.prototype._write = function(chunk,encoding,cb){
var ts=this._transformState;
ts.writecb = cb;
ts.writechunk = chunk;
ts.writeencoding = encoding;
if(!ts.transforming){
var rs=this._readableState;
if(ts.needTransform || 
rs.needReadable || 
rs.length < rs.highWaterMark)
this._read(rs.highWaterMark);}};






Transform.prototype._read = function(n){
var ts=this._transformState;

if(ts.writechunk !== null && ts.writecb && !ts.transforming){
ts.transforming = true;
this._transform(ts.writechunk,ts.writeencoding,ts.afterTransform);}else 
{


ts.needTransform = true;}};




function done(stream,er){
if(er)
return stream.emit('error',er);



var ws=stream._writableState;
var ts=stream._transformState;

if(ws.length)
throw new Error('calling transform done when ws.length != 0');

if(ts.transforming)
throw new Error('calling transform done when still transforming');

return stream.push(null);}
});
__d('readable-stream/lib/_stream_passthrough.js',["readable-stream/lib/_stream_transform.js","core-util-is/lib/util.js","inherits/inherits_browser.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





module.exports = PassThrough;

var Transform=require('readable-stream/lib/_stream_transform.js');


var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


util.inherits(PassThrough,Transform);

function PassThrough(options){
if(!(this instanceof PassThrough))
return new PassThrough(options);

Transform.call(this,options);}


PassThrough.prototype._transform = function(chunk,encoding,cb){
cb(null,chunk);};
});
__d('readable-stream/writable.js',["readable-stream/lib/_stream_writable.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = require("readable-stream/lib/_stream_writable.js");
});
__d('readable-stream/duplex.js',["readable-stream/lib/_stream_duplex.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = require("readable-stream/lib/_stream_duplex.js");
});
__d('readable-stream/transform.js',["readable-stream/lib/_stream_transform.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = require("readable-stream/lib/_stream_transform.js");
});
__d('readable-stream/passthrough.js',["readable-stream/lib/_stream_passthrough.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = require("readable-stream/lib/_stream_passthrough.js");
});
__d('readable-stream/lib/_stream_readable.js',["isarray/index.js","buffer/index.js","events/events.js","stream-browserify/index.js","core-util-is/lib/util.js","inherits/inherits_browser.js","string_decoder/index.js","string_decoder/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.




















exports = Readable;


var isArray=require('isarray/index.js');




var Buffer=require('buffer/index.js').Buffer;


Readable.ReadableState = ReadableState;

var EE=require('events/events.js').EventEmitter;


if(!EE.listenerCount)EE.listenerCount = function(emitter,type){
return emitter.listeners(type).length;};



var Stream=require('stream-browserify/index.js');


var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


var StringDecoder;

util.inherits(Readable,Stream);

function ReadableState(options,stream){
options = options || {};



var hwm=options.highWaterMark;
this.highWaterMark = hwm || hwm === 0?hwm:16 * 1024;


this.highWaterMark = ~ ~this.highWaterMark;

this.buffer = [];
this.length = 0;
this.pipes = null;
this.pipesCount = 0;
this.flowing = false;
this.ended = false;
this.endEmitted = false;
this.reading = false;





this.calledRead = false;





this.sync = true;



this.needReadable = false;
this.emittedReadable = false;
this.readableListening = false;




this.objectMode = !!options.objectMode;




this.defaultEncoding = options.defaultEncoding || 'utf8';



this.ranOut = false;


this.awaitDrain = 0;


this.readingMore = false;

this.decoder = null;
this.encoding = null;
if(options.encoding){
if(!StringDecoder)
StringDecoder = require('string_decoder/index.js').StringDecoder;
this.decoder = new StringDecoder(options.encoding);
this.encoding = options.encoding;}}



function Readable(options){
if(!(this instanceof Readable))
return new Readable(options);

this._readableState = new ReadableState(options,this);


this.readable = true;

Stream.call(this);}






Readable.prototype.push = function(chunk,encoding){
var state=this._readableState;

if(typeof chunk === 'string' && !state.objectMode){
encoding = encoding || state.defaultEncoding;
if(encoding !== state.encoding){
chunk = new Buffer(chunk,encoding);
encoding = '';}}



return readableAddChunk(this,state,chunk,encoding,false);};



Readable.prototype.unshift = function(chunk){
var state=this._readableState;
return readableAddChunk(this,state,chunk,'',true);};


function readableAddChunk(stream,state,chunk,encoding,addToFront){
var er=chunkInvalid(state,chunk);
if(er){
stream.emit('error',er);}else 
if(chunk === null || chunk === undefined){
state.reading = false;
if(!state.ended)
onEofChunk(stream,state);}else 
if(state.objectMode || chunk && chunk.length > 0){
if(state.ended && !addToFront){
var e=new Error('stream.push() after EOF');
stream.emit('error',e);}else 
if(state.endEmitted && addToFront){
var e=new Error('stream.unshift() after end event');
stream.emit('error',e);}else 
{
if(state.decoder && !addToFront && !encoding)
chunk = state.decoder.write(chunk);


state.length += state.objectMode?1:chunk.length;
if(addToFront){
state.buffer.unshift(chunk);}else 
{
state.reading = false;
state.buffer.push(chunk);}


if(state.needReadable)
emitReadable(stream);

maybeReadMore(stream,state);}}else 

if(!addToFront){
state.reading = false;}


return needMoreData(state);}











function needMoreData(state){
return !state.ended && (
state.needReadable || 
state.length < state.highWaterMark || 
state.length === 0);}



Readable.prototype.setEncoding = function(enc){
if(!StringDecoder)
StringDecoder = require('string_decoder/index.js').StringDecoder;
this._readableState.decoder = new StringDecoder(enc);
this._readableState.encoding = enc;};



var MAX_HWM=0x800000;
function roundUpToNextPowerOf2(n){
if(n >= MAX_HWM){
n = MAX_HWM;}else 
{

n--;
for(var p=1;p < 32;p <<= 1) n |= n >> p;
n++;}

return n;}


function howMuchToRead(n,state){
if(state.length === 0 && state.ended)
return 0;

if(state.objectMode)
return n === 0?0:1;

if(n === null || isNaN(n)){

if(state.flowing && state.buffer.length)
return state.buffer[0].length;else 

return state.length;}


if(n <= 0)
return 0;





if(n > state.highWaterMark)
state.highWaterMark = roundUpToNextPowerOf2(n);


if(n > state.length){
if(!state.ended){
state.needReadable = true;
return 0;}else 

return state.length;}


return n;}



Readable.prototype.read = function(n){
var state=this._readableState;
state.calledRead = true;
var nOrig=n;
var ret;

if(typeof n !== 'number' || n > 0)
state.emittedReadable = false;




if(n === 0 && 
state.needReadable && (
state.length >= state.highWaterMark || state.ended)){
emitReadable(this);
return null;}


n = howMuchToRead(n,state);


if(n === 0 && state.ended){
ret = null;












if(state.length > 0 && state.decoder){
ret = fromList(n,state);
state.length -= ret.length;}


if(state.length === 0)
endReadable(this);

return ret;}

























var doRead=state.needReadable;


if(state.length - n <= state.highWaterMark)
doRead = true;



if(state.ended || state.reading)
doRead = false;

if(doRead){
state.reading = true;
state.sync = true;

if(state.length === 0)
state.needReadable = true;

this._read(state.highWaterMark);
state.sync = false;}





if(doRead && !state.reading)
n = howMuchToRead(nOrig,state);

if(n > 0)
ret = fromList(n,state);else 

ret = null;

if(ret === null){
state.needReadable = true;
n = 0;}


state.length -= n;



if(state.length === 0 && !state.ended)
state.needReadable = true;




if(state.ended && !state.endEmitted && state.length === 0)
endReadable(this);

return ret;};


function chunkInvalid(state,chunk){
var er=null;
if(!Buffer.isBuffer(chunk) && 
'string' !== typeof chunk && 
chunk !== null && 
chunk !== undefined && 
!state.objectMode){
er = new TypeError('Invalid non-string/buffer chunk');}

return er;}



function onEofChunk(stream,state){
if(state.decoder && !state.ended){
var chunk=state.decoder.end();
if(chunk && chunk.length){
state.buffer.push(chunk);
state.length += state.objectMode?1:chunk.length;}}


state.ended = true;



if(state.length > 0)
emitReadable(stream);else 

endReadable(stream);}





function emitReadable(stream){
var state=stream._readableState;
state.needReadable = false;
if(state.emittedReadable)
return;

state.emittedReadable = true;
if(state.sync)
process.nextTick(function(){
emitReadable_(stream);});else 


emitReadable_(stream);}


function emitReadable_(stream){
stream.emit('readable');}









function maybeReadMore(stream,state){
if(!state.readingMore){
state.readingMore = true;
process.nextTick(function(){
maybeReadMore_(stream,state);});}}




function maybeReadMore_(stream,state){
var len=state.length;
while(!state.reading && !state.flowing && !state.ended && 
state.length < state.highWaterMark) {
stream.read(0);
if(len === state.length)

break;else 

len = state.length;}

state.readingMore = false;}






Readable.prototype._read = function(n){
this.emit('error',new Error('not implemented'));};


Readable.prototype.pipe = function(dest,pipeOpts){
var src=this;
var state=this._readableState;

switch(state.pipesCount){
case 0:
state.pipes = dest;
break;
case 1:
state.pipes = [state.pipes,dest];
break;
default:
state.pipes.push(dest);
break;}

state.pipesCount += 1;

var doEnd=(!pipeOpts || pipeOpts.end !== false) && 
dest !== process.stdout && 
dest !== process.stderr;

var endFn=doEnd?onend:cleanup;
if(state.endEmitted)
process.nextTick(endFn);else 

src.once('end',endFn);

dest.on('unpipe',onunpipe);
function onunpipe(readable){
if(readable !== src)return;
cleanup();}


function onend(){
dest.end();}






var ondrain=pipeOnDrain(src);
dest.on('drain',ondrain);

function cleanup(){

dest.removeListener('close',onclose);
dest.removeListener('finish',onfinish);
dest.removeListener('drain',ondrain);
dest.removeListener('error',onerror);
dest.removeListener('unpipe',onunpipe);
src.removeListener('end',onend);
src.removeListener('end',cleanup);






if(!dest._writableState || dest._writableState.needDrain)
ondrain();}




function onerror(er){
unpipe();
dest.removeListener('error',onerror);
if(EE.listenerCount(dest,'error') === 0)
dest.emit('error',er);}



if(!dest._events || !dest._events.error)
dest.on('error',onerror);else 
if(isArray(dest._events.error))
dest._events.error.unshift(onerror);else 

dest._events.error = [onerror,dest._events.error];




function onclose(){
dest.removeListener('finish',onfinish);
unpipe();}

dest.once('close',onclose);
function onfinish(){
dest.removeListener('close',onclose);
unpipe();}

dest.once('finish',onfinish);

function unpipe(){
src.unpipe(dest);}



dest.emit('pipe',src);


if(!state.flowing){




this.on('readable',pipeOnReadable);

state.flowing = true;
process.nextTick(function(){
flow(src);});}



return dest;};


function pipeOnDrain(src){
return function(){
var dest=this;
var state=src._readableState;
state.awaitDrain--;
if(state.awaitDrain === 0)
flow(src);};}



function flow(src){
var state=src._readableState;
var chunk;
state.awaitDrain = 0;

function write(dest,i,list){
var written=dest.write(chunk);
if(false === written){
state.awaitDrain++;}}



while(state.pipesCount && null !== (chunk = src.read())) {

if(state.pipesCount === 1)
write(state.pipes,0,null);else 

forEach(state.pipes,write);

src.emit('data',chunk);


if(state.awaitDrain > 0)
return;}






if(state.pipesCount === 0){
state.flowing = false;


if(EE.listenerCount(src,'data') > 0)
emitDataEvents(src);
return;}




state.ranOut = true;}


function pipeOnReadable(){
if(this._readableState.ranOut){
this._readableState.ranOut = false;
flow(this);}}




Readable.prototype.unpipe = function(dest){
var state=this._readableState;


if(state.pipesCount === 0)
return this;


if(state.pipesCount === 1){

if(dest && dest !== state.pipes)
return this;

if(!dest)
dest = state.pipes;


state.pipes = null;
state.pipesCount = 0;
this.removeListener('readable',pipeOnReadable);
state.flowing = false;
if(dest)
dest.emit('unpipe',this);
return this;}




if(!dest){

var dests=state.pipes;
var len=state.pipesCount;
state.pipes = null;
state.pipesCount = 0;
this.removeListener('readable',pipeOnReadable);
state.flowing = false;

for(var i=0;i < len;i++) 
dests[i].emit('unpipe',this);
return this;}



var i=indexOf(state.pipes,dest);
if(i === -1)
return this;

state.pipes.splice(i,1);
state.pipesCount -= 1;
if(state.pipesCount === 1)
state.pipes = state.pipes[0];

dest.emit('unpipe',this);

return this;};




Readable.prototype.on = function(ev,fn){
var res=Stream.prototype.on.call(this,ev,fn);

if(ev === 'data' && !this._readableState.flowing)
emitDataEvents(this);

if(ev === 'readable' && this.readable){
var state=this._readableState;
if(!state.readableListening){
state.readableListening = true;
state.emittedReadable = false;
state.needReadable = true;
if(!state.reading){
this.read(0);}else 
if(state.length){
emitReadable(this,state);}}}




return res;};

Readable.prototype.addListener = Readable.prototype.on;



Readable.prototype.resume = function(){
emitDataEvents(this);
this.read(0);
this.emit('resume');};


Readable.prototype.pause = function(){
emitDataEvents(this,true);
this.emit('pause');};


function emitDataEvents(stream,startPaused){
var state=stream._readableState;

if(state.flowing){

throw new Error('Cannot switch to old mode now.');}


var paused=startPaused || false;
var readable=false;


stream.readable = true;
stream.pipe = Stream.prototype.pipe;
stream.on = stream.addListener = Stream.prototype.on;

stream.on('readable',function(){
readable = true;

var c;
while(!paused && null !== (c = stream.read())) 
stream.emit('data',c);

if(c === null){
readable = false;
stream._readableState.needReadable = true;}});



stream.pause = function(){
paused = true;
this.emit('pause');};


stream.resume = function(){
paused = false;
if(readable)
process.nextTick(function(){
stream.emit('readable');});else 


this.read(0);
this.emit('resume');};



stream.emit('readable');}





Readable.prototype.wrap = function(stream){
var state=this._readableState;
var paused=false;

var self=this;
stream.on('end',function(){
if(state.decoder && !state.ended){
var chunk=state.decoder.end();
if(chunk && chunk.length)
self.push(chunk);}


self.push(null);});


stream.on('data',function(chunk){
if(state.decoder)
chunk = state.decoder.write(chunk);



if(state.objectMode && (chunk === null || chunk === undefined))
return;else 
if(!state.objectMode && (!chunk || !chunk.length))
return;

var ret=self.push(chunk);
if(!ret){
paused = true;
stream.pause();}});





for(var i in stream) {
if(typeof stream[i] === 'function' && 
typeof this[i] === 'undefined'){
this[i] = (function(method){return function(){
return stream[method].apply(stream,arguments);};})(
i);}}




var events=['error','close','destroy','pause','resume'];
forEach(events,function(ev){
stream.on(ev,self.emit.bind(self,ev));});




self._read = function(n){
if(paused){
paused = false;
stream.resume();}};



return self;};





Readable._fromList = fromList;



function fromList(n,state){
var list=state.buffer;
var length=state.length;
var stringMode=!!state.decoder;
var objectMode=!!state.objectMode;
var ret;


if(list.length === 0)
return null;

if(length === 0)
ret = null;else 
if(objectMode)
ret = list.shift();else 
if(!n || n >= length){

if(stringMode)
ret = list.join('');else 

ret = Buffer.concat(list,length);
list.length = 0;}else 
{

if(n < list[0].length){


var buf=list[0];
ret = buf.slice(0,n);
list[0] = buf.slice(n);}else 
if(n === list[0].length){

ret = list.shift();}else 
{


if(stringMode)
ret = '';else 

ret = new Buffer(n);

var c=0;
for(var i=0,l=list.length;i < l && c < n;i++) {
var buf=list[0];
var cpy=Math.min(n - c,buf.length);

if(stringMode)
ret += buf.slice(0,cpy);else 

buf.copy(ret,c,0,cpy);

if(cpy < buf.length)
list[0] = buf.slice(cpy);else 

list.shift();

c += cpy;}}}




return ret;}


function endReadable(stream){
var state=stream._readableState;



if(state.length > 0)
throw new Error('endReadable called on non-empty stream');

if(!state.endEmitted && state.calledRead){
state.ended = true;
process.nextTick(function(){

if(!state.endEmitted && state.length === 0){
state.endEmitted = true;
stream.readable = false;
stream.emit('end');}});}}





function forEach(xs,f){
for(var i=0,l=xs.length;i < l;i++) {
f(xs[i],i);}}



function indexOf(xs,x){
for(var i=0,l=xs.length;i < l;i++) {
if(xs[i] === x)return i;}

return -1;}
});
__d('isarray/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = Array.isArray || function(arr){
return Object.prototype.toString.call(arr) == '[object Array]';};
});
__d('core-util-is/lib/util.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 






















isArray(ar){
return Array.isArray(ar);}

exports.isArray = isArray;

function isBoolean(arg){
return typeof arg === 'boolean';}

exports.isBoolean = isBoolean;

function isNull(arg){
return arg === null;}

exports.isNull = isNull;

function isNullOrUndefined(arg){
return arg == null;}

exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg){
return typeof arg === 'number';}

exports.isNumber = isNumber;

function isString(arg){
return typeof arg === 'string';}

exports.isString = isString;

function isSymbol(arg){
return typeof arg === 'symbol';}

exports.isSymbol = isSymbol;

function isUndefined(arg){
return arg === void 0;}

exports.isUndefined = isUndefined;

function isRegExp(re){
return isObject(re) && objectToString(re) === '[object RegExp]';}

exports.isRegExp = isRegExp;

function isObject(arg){
return typeof arg === 'object' && arg !== null;}

exports.isObject = isObject;

function isDate(d){
return isObject(d) && objectToString(d) === '[object Date]';}

exports.isDate = isDate;

function isError(e){
return isObject(e) && (
objectToString(e) === '[object Error]' || e instanceof Error);}

exports.isError = isError;

function isFunction(arg){
return typeof arg === 'function';}

exports.isFunction = isFunction;

function isPrimitive(arg){
return arg === null || 
typeof arg === 'boolean' || 
typeof arg === 'number' || 
typeof arg === 'string' || 
typeof arg === 'symbol' || 
typeof arg === 'undefined';}

exports.isPrimitive = isPrimitive;

function isBuffer(arg){
return Buffer.isBuffer(arg);}

exports.isBuffer = isBuffer;

function objectToString(o){
return Object.prototype.toString.call(o);}
});
__d('readable-stream/lib/_stream_writable.js',["buffer/index.js","core-util-is/lib/util.js","inherits/inherits_browser.js","stream-browserify/index.js","readable-stream/lib/_stream_duplex.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.
























exports = Writable;


var Buffer=require('buffer/index.js').Buffer;


Writable.WritableState = WritableState;



var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


var Stream=require('stream-browserify/index.js');

util.inherits(Writable,Stream);

function WriteReq(chunk,encoding,cb){
this.chunk = chunk;
this.encoding = encoding;
this.callback = cb;}


function WritableState(options,stream){
options = options || {};




var hwm=options.highWaterMark;
this.highWaterMark = hwm || hwm === 0?hwm:16 * 1024;



this.objectMode = !!options.objectMode;


this.highWaterMark = ~ ~this.highWaterMark;

this.needDrain = false;

this.ending = false;

this.ended = false;

this.finished = false;




var noDecode=options.decodeStrings === false;
this.decodeStrings = !noDecode;




this.defaultEncoding = options.defaultEncoding || 'utf8';




this.length = 0;


this.writing = false;





this.sync = true;




this.bufferProcessing = false;


this.onwrite = function(er){
onwrite(stream,er);};



this.writecb = null;


this.writelen = 0;

this.buffer = [];


this.errorEmitted = false;}


function Writable(options){
var Duplex=require('readable-stream/lib/_stream_duplex.js');



if(!(this instanceof Writable) && !(this instanceof Duplex))
return new Writable(options);

this._writableState = new WritableState(options,this);


this.writable = true;

Stream.call(this);}



Writable.prototype.pipe = function(){
this.emit('error',new Error('Cannot pipe. Not readable.'));};



function writeAfterEnd(stream,state,cb){
var er=new Error('write after end');

stream.emit('error',er);
process.nextTick(function(){
cb(er);});}








function validChunk(stream,state,chunk,cb){
var valid=true;
if(!Buffer.isBuffer(chunk) && 
'string' !== typeof chunk && 
chunk !== null && 
chunk !== undefined && 
!state.objectMode){
var er=new TypeError('Invalid non-string/buffer chunk');
stream.emit('error',er);
process.nextTick(function(){
cb(er);});

valid = false;}

return valid;}


Writable.prototype.write = function(chunk,encoding,cb){
var state=this._writableState;
var ret=false;

if(typeof encoding === 'function'){
cb = encoding;
encoding = null;}


if(Buffer.isBuffer(chunk))
encoding = 'buffer';else 
if(!encoding)
encoding = state.defaultEncoding;

if(typeof cb !== 'function')
cb = function(){};

if(state.ended)
writeAfterEnd(this,state,cb);else 
if(validChunk(this,state,chunk,cb))
ret = writeOrBuffer(this,state,chunk,encoding,cb);

return ret;};


function decodeChunk(state,chunk,encoding){
if(!state.objectMode && 
state.decodeStrings !== false && 
typeof chunk === 'string'){
chunk = new Buffer(chunk,encoding);}

return chunk;}





function writeOrBuffer(stream,state,chunk,encoding,cb){
chunk = decodeChunk(state,chunk,encoding);
if(Buffer.isBuffer(chunk))
encoding = 'buffer';
var len=state.objectMode?1:chunk.length;

state.length += len;

var ret=state.length < state.highWaterMark;

if(!ret)
state.needDrain = true;

if(state.writing)
state.buffer.push(new WriteReq(chunk,encoding,cb));else 

doWrite(stream,state,len,chunk,encoding,cb);

return ret;}


function doWrite(stream,state,len,chunk,encoding,cb){
state.writelen = len;
state.writecb = cb;
state.writing = true;
state.sync = true;
stream._write(chunk,encoding,state.onwrite);
state.sync = false;}


function onwriteError(stream,state,sync,er,cb){
if(sync)
process.nextTick(function(){
cb(er);});else 


cb(er);

stream._writableState.errorEmitted = true;
stream.emit('error',er);}


function onwriteStateUpdate(state){
state.writing = false;
state.writecb = null;
state.length -= state.writelen;
state.writelen = 0;}


function onwrite(stream,er){
var state=stream._writableState;
var sync=state.sync;
var cb=state.writecb;

onwriteStateUpdate(state);

if(er)
onwriteError(stream,state,sync,er,cb);else 
{

var finished=needFinish(stream,state);

if(!finished && !state.bufferProcessing && state.buffer.length)
clearBuffer(stream,state);

if(sync){
process.nextTick(function(){
afterWrite(stream,state,finished,cb);});}else 

{
afterWrite(stream,state,finished,cb);}}}




function afterWrite(stream,state,finished,cb){
if(!finished)
onwriteDrain(stream,state);
cb();
if(finished)
finishMaybe(stream,state);}





function onwriteDrain(stream,state){
if(state.length === 0 && state.needDrain){
state.needDrain = false;
stream.emit('drain');}}





function clearBuffer(stream,state){
state.bufferProcessing = true;

for(var c=0;c < state.buffer.length;c++) {
var entry=state.buffer[c];
var chunk=entry.chunk;
var encoding=entry.encoding;
var cb=entry.callback;
var len=state.objectMode?1:chunk.length;

doWrite(stream,state,len,chunk,encoding,cb);





if(state.writing){
c++;
break;}}



state.bufferProcessing = false;
if(c < state.buffer.length)
state.buffer = state.buffer.slice(c);else 

state.buffer.length = 0;}


Writable.prototype._write = function(chunk,encoding,cb){
cb(new Error('not implemented'));};


Writable.prototype.end = function(chunk,encoding,cb){
var state=this._writableState;

if(typeof chunk === 'function'){
cb = chunk;
chunk = null;
encoding = null;}else 
if(typeof encoding === 'function'){
cb = encoding;
encoding = null;}


if(typeof chunk !== 'undefined' && chunk !== null)
this.write(chunk,encoding);


if(!state.ending && !state.finished)
endWritable(this,state,cb);};



function needFinish(stream,state){
return state.ending && 
state.length === 0 && 
!state.finished && 
!state.writing;}


function finishMaybe(stream,state){
var need=needFinish(stream,state);
if(need){
state.finished = true;
stream.emit('finish');}

return need;}


function endWritable(stream,state,cb){
state.ending = true;
finishMaybe(stream,state);
if(cb){
if(state.finished)
process.nextTick(cb);else 

stream.once('finish',cb);}

state.ended = true;}
});
__d('readable-stream/lib/_stream_duplex.js',["core-util-is/lib/util.js","inherits/inherits_browser.js","readable-stream/lib/_stream_readable.js","readable-stream/lib/_stream_writable.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.

























exports = Duplex;


var objectKeys=Object.keys || function(obj){
var keys=[];
for(var key in obj) keys.push(key);
return keys;};





var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


var Readable=require('readable-stream/lib/_stream_readable.js');
var Writable=require('readable-stream/lib/_stream_writable.js');

util.inherits(Duplex,Readable);

forEach(objectKeys(Writable.prototype),function(method){
if(!Duplex.prototype[method])
Duplex.prototype[method] = Writable.prototype[method];});


function Duplex(options){
if(!(this instanceof Duplex))
return new Duplex(options);

Readable.call(this,options);
Writable.call(this,options);

if(options && options.readable === false)
this.readable = false;

if(options && options.writable === false)
this.writable = false;

this.allowHalfOpen = true;
if(options && options.allowHalfOpen === false)
this.allowHalfOpen = false;

this.once('end',onend);}



function onend(){


if(this.allowHalfOpen || this._writableState.ended)
return;



process.nextTick(this.end.bind(this));}


function forEach(xs,f){
for(var i=0,l=xs.length;i < l;i++) {
f(xs[i],i);}}
});
__d('readable-stream/lib/_stream_transform.js',["readable-stream/lib/_stream_duplex.js","core-util-is/lib/util.js","inherits/inherits_browser.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.































































exports = Transform;

var Duplex=require('readable-stream/lib/_stream_duplex.js');


var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


util.inherits(Transform,Duplex);


function TransformState(options,stream){
this.afterTransform = function(er,data){
return afterTransform(stream,er,data);};


this.needTransform = false;
this.transforming = false;
this.writecb = null;
this.writechunk = null;}


function afterTransform(stream,er,data){
var ts=stream._transformState;
ts.transforming = false;

var cb=ts.writecb;

if(!cb)
return stream.emit('error',new Error('no writecb in Transform class'));

ts.writechunk = null;
ts.writecb = null;

if(data !== null && data !== undefined)
stream.push(data);

if(cb)
cb(er);

var rs=stream._readableState;
rs.reading = false;
if(rs.needReadable || rs.length < rs.highWaterMark){
stream._read(rs.highWaterMark);}}




function Transform(options){
if(!(this instanceof Transform))
return new Transform(options);

Duplex.call(this,options);

var ts=this._transformState = new TransformState(options,this);


var stream=this;


this._readableState.needReadable = true;




this._readableState.sync = false;

this.once('finish',function(){
if('function' === typeof this._flush)
this._flush(function(er){
done(stream,er);});else 


done(stream);});}



Transform.prototype.push = function(chunk,encoding){
this._transformState.needTransform = false;
return Duplex.prototype.push.call(this,chunk,encoding);};












Transform.prototype._transform = function(chunk,encoding,cb){
throw new Error('not implemented');};


Transform.prototype._write = function(chunk,encoding,cb){
var ts=this._transformState;
ts.writecb = cb;
ts.writechunk = chunk;
ts.writeencoding = encoding;
if(!ts.transforming){
var rs=this._readableState;
if(ts.needTransform || 
rs.needReadable || 
rs.length < rs.highWaterMark)
this._read(rs.highWaterMark);}};






Transform.prototype._read = function(n){
var ts=this._transformState;

if(ts.writechunk !== null && ts.writecb && !ts.transforming){
ts.transforming = true;
this._transform(ts.writechunk,ts.writeencoding,ts.afterTransform);}else 
{


ts.needTransform = true;}};




function done(stream,er){
if(er)
return stream.emit('error',er);



var ws=stream._writableState;
var rs=stream._readableState;
var ts=stream._transformState;

if(ws.length)
throw new Error('calling transform done when ws.length != 0');

if(ts.transforming)
throw new Error('calling transform done when still transforming');

return stream.push(null);}
});
__d('readable-stream/lib/_stream_passthrough.js',["readable-stream/lib/_stream_transform.js","core-util-is/lib/util.js","inherits/inherits_browser.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.
























exports = PassThrough;

var Transform=require('readable-stream/lib/_stream_transform.js');


var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


util.inherits(PassThrough,Transform);

function PassThrough(options){
if(!(this instanceof PassThrough))
return new PassThrough(options);

Transform.call(this,options);}


PassThrough.prototype._transform = function(chunk,encoding,cb){
cb(null,chunk);};
});
__d('levelup/lib/util.js',["xtend/index.js","levelup/lib/errors.js","levelup/package.json","semver/semver.browser.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 





extend=require('xtend/index.js'),
LevelUPError=require('levelup/lib/errors.js').LevelUPError,

encodingNames=[
'hex',
'utf8',
'utf-8',
'ascii',
'binary',
'base64',
'ucs2',
'ucs-2',
'utf16le',
'utf-16le'],


defaultOptions={
createIfMissing:true,
errorIfExists:false,
keyEncoding:'utf8',
valueEncoding:'utf8',
compression:true},


leveldown,

encodings=(function(){
function isBinary(data){
return data === undefined || data === null || Buffer.isBuffer(data);}


var encodings={};
encodings.utf8 = encodings['utf-8'] = {
encode:function(data){
return isBinary(data)?data:String(data);},

decode:function(data){
return data;},

buffer:false,
type:'utf8'};

encodings.json = {
encode:JSON.stringify,
decode:JSON.parse,
buffer:false,
type:'json'};

encodingNames.forEach(function(type){
if(encodings[type])
return;
encodings[type] = {
encode:function(data){
return isBinary(data)?data:new Buffer(data,type);},

decode:function(buffer){
return process.browser?buffer.toString(type):buffer;},

buffer:true,
type:type};});


return encodings;})(),


encodingOpts=(function(){
var eo={};
encodingNames.forEach(function(e){
eo[e] = {valueEncoding:e};});

return eo;})();


function copy(srcdb,dstdb,callback){
srcdb.readStream().
pipe(dstdb.writeStream()).
on('close',callback?callback:function(){}).
on('error',callback?callback:function(err){throw err;});}


function getOptions(levelup,options){
var s=typeof options == 'string';
if(!s && options && options.encoding && !options.valueEncoding)
options.valueEncoding = options.encoding;
return extend(
levelup && levelup.options || {},
s?encodingOpts[options] || encodingOpts[defaultOptions.valueEncoding]:
options);}



function getLevelDOWN(){
if(leveldown)
return leveldown;

var requiredVersion=require('levelup/package.json').devDependencies.leveldown,
missingLevelDOWNError='Could not locate LevelDOWN, try `npm install leveldown`',
leveldownVersion;

try{
leveldownVersion = require('leveldown/package').version;}
catch(e) {
throw new LevelUPError(missingLevelDOWNError);}


if(!require('semver/semver.browser.js').satisfies(leveldownVersion,requiredVersion)){
throw new LevelUPError(
'Installed version of LevelDOWN (' + 
leveldownVersion + 
') does not match required version (' + 
requiredVersion + 
')');}



try{
return leveldown = require('leveldown');}
catch(e) {
throw new LevelUPError(missingLevelDOWNError);}}



function dispatchError(levelup,error,callback){
return typeof callback == 'function'?
callback(error):
levelup.emit('error',error);}


function getKeyEncoder(options,op){
var type=op && op.keyEncoding || options.keyEncoding || 'utf8';
return encodings[type] || type;}


function getValueEncoder(options,op){
var type=op && (op.valueEncoding || op.encoding) || 
options.valueEncoding || options.encoding || 'utf8';
return encodings[type] || type;}


function encodeKey(key,options,op){
return getKeyEncoder(options,op).encode(key);}


function encodeValue(value,options,op){
return getValueEncoder(options,op).encode(value);}


function decodeKey(key,options){
return getKeyEncoder(options).decode(key);}


function decodeValue(value,options){
return getValueEncoder(options).decode(value);}


function isValueAsBuffer(options,op){
return getValueEncoder(options,op).buffer;}


function isKeyAsBuffer(options,op){
return getKeyEncoder(options,op).buffer;}


module.exports = {
defaultOptions:defaultOptions,
copy:copy,
getOptions:getOptions,
getLevelDOWN:getLevelDOWN,
dispatchError:dispatchError,
encodeKey:encodeKey,
encodeValue:encodeValue,
isValueAsBuffer:isValueAsBuffer,
isKeyAsBuffer:isKeyAsBuffer,
decodeValue:decodeValue,
decodeKey:decodeKey};
});
__d('levelup/package.json',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {
  "name": "levelup",
  "description": "Fast & simple storage - a Node.js-style LevelDB wrapper",
  "version": "0.18.6",
  "contributors": [
    {
      "name": "Rod Vagg",
      "email": "r@va.gg",
      "url": "https://github.com/rvagg"
    },
    {
      "name": "John Chesley",
      "email": "john@chesl.es",
      "url": "https://github.com/chesles/"
    },
    {
      "name": "Jake Verbaten",
      "email": "raynos2@gmail.com",
      "url": "https://github.com/raynos"
    },
    {
      "name": "Dominic Tarr",
      "email": "dominic.tarr@gmail.com",
      "url": "https://github.com/dominictarr"
    },
    {
      "name": "Max Ogden",
      "email": "max@maxogden.com",
      "url": "https://github.com/maxogden"
    },
    {
      "name": "Lars-Magnus Skog",
      "email": "lars.magnus.skog@gmail.com",
      "url": "https://github.com/ralphtheninja"
    },
    {
      "name": "David Björklund",
      "email": "david.bjorklund@gmail.com",
      "url": "https://github.com/kesla"
    },
    {
      "name": "Julian Gruber",
      "email": "julian@juliangruber.com",
      "url": "https://github.com/juliangruber"
    },
    {
      "name": "Paolo Fragomeni",
      "email": "paolo@async.ly",
      "url": "https://github.com/hij1nx"
    },
    {
      "name": "Anton Whalley",
      "email": "anton.whalley@nearform.com",
      "url": "https://github.com/No9"
    },
    {
      "name": "Matteo Collina",
      "email": "matteo.collina@gmail.com",
      "url": "https://github.com/mcollina"
    },
    {
      "name": "Pedro Teixeira",
      "email": "pedro.teixeira@gmail.com",
      "url": "https://github.com/pgte"
    },
    {
      "name": "James Halliday",
      "email": "mail@substack.net",
      "url": "https://github.com/substack"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rvagg/node-levelup.git"
  },
  "homepage": "https://github.com/rvagg/node-levelup",
  "keywords": [
    "leveldb",
    "stream",
    "database",
    "db",
    "store",
    "storage",
    "json"
  ],
  "main": "lib/levelup.js",
  "dependencies": {
    "bl": "~0.8.1",
    "deferred-leveldown": "~0.2.0",
    "errno": "~0.1.1",
    "prr": "~0.0.0",
    "readable-stream": "~1.0.26",
    "semver": "~2.3.1",
    "xtend": "~3.0.0"
  },
  "devDependencies": {
    "leveldown": "~0.10.0",
    "bustermove": "*",
    "tap": "*",
    "referee": "*",
    "rimraf": "*",
    "async": "*",
    "fstream": "*",
    "tar": "*",
    "mkfiletree": "*",
    "readfiletree": "*",
    "slow-stream": ">=0.0.4",
    "delayed": "*",
    "boganipsum": "*",
    "du": "*",
    "memdown": "*",
    "msgpack-js": "*"
  },
  "browser": {
    "zlib": "browserify-zlib",
    "console": "console-browserify",
    "constants": "constants-browserify",
    "crypto": "crypto-browserify",
    "dns": "dns.js",
    "net": "utp",
    "domain": "domain-browser",
    "http": "stream-http",
    "https": "https-browserify",
    "os": "os-browserify",
    "path": "path-browserify",
    "querystring": "querystring-es3",
    "fs": "react-native-level-fs",
    "_stream_transform": "readable-stream/transform",
    "_stream_readable": "readable-stream/readable",
    "_stream_writable": "readable-stream/writable",
    "_stream_duplex": "readable-stream/duplex",
    "_stream_passthrough": "readable-stream/passthrough",
    "dgram": "react-native-udp",
    "stream": "stream-browserify",
    "timers": "timers-browserify",
    "tty": "tty-browserify",
    "vm": "vm-browserify",
    "leveldown": false,
    "leveldown/package": false,
    "semver": false
  },
  "scripts": {
    "test": "tap test/*-test.js --stderr",
    "functionaltests": "node ./test/functional/fstream-test.js && node ./test/functional/binary-data-test.js && node ./test/functional/compat-test.js",
    "alltests": "npm test && npm run-script functionaltests"
  },
  "license": "MIT",
  "gitHead": "213e989e2b75273e2b44c23f84f95e35bff7ea11",
  "bugs": {
    "url": "https://github.com/rvagg/node-levelup/issues"
  },
  "_id": "levelup@0.18.6",
  "_shasum": "e6a01cb089616c8ecc0291c2a9bd3f0c44e3e5eb",
  "_from": "levelup@>=0.18.6 <0.19.0",
  "_npmVersion": "1.4.14",
  "_npmUser": {
    "name": "rvagg",
    "email": "rod@vagg.org"
  },
  "maintainers": [
    {
      "name": "rvagg",
      "email": "rod@vagg.org"
    }
  ],
  "dist": {
    "shasum": "e6a01cb089616c8ecc0291c2a9bd3f0c44e3e5eb",
    "tarball": "http://registry.npmjs.org/levelup/-/levelup-0.18.6.tgz"
  },
  "directories": {},
  "_resolved": "https://registry.npmjs.org/levelup/-/levelup-0.18.6.tgz",
  "readme": "ERROR: No README data found!"
};
});
__d('semver/semver.browser.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  ;(function(exports){


if(typeof module === 'object' && module.exports === exports)
exports = module.exports = SemVer;





exports.SEMVER_SPEC_VERSION = '2.0.0';


var re=exports.re = [];
var src=exports.src = [];
var R=0;







var NUMERICIDENTIFIER=R++;
src[NUMERICIDENTIFIER] = '0|[1-9]\\d*';
var NUMERICIDENTIFIERLOOSE=R++;
src[NUMERICIDENTIFIERLOOSE] = '[0-9]+';






var NONNUMERICIDENTIFIER=R++;
src[NONNUMERICIDENTIFIER] = '\\d*[a-zA-Z-][a-zA-Z0-9-]*';





var MAINVERSION=R++;
src[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\.' + 
'(' + src[NUMERICIDENTIFIER] + ')\\.' + 
'(' + src[NUMERICIDENTIFIER] + ')';

var MAINVERSIONLOOSE=R++;
src[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' + 
'(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' + 
'(' + src[NUMERICIDENTIFIERLOOSE] + ')';




var PRERELEASEIDENTIFIER=R++;
src[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] + 
'|' + src[NONNUMERICIDENTIFIER] + ')';

var PRERELEASEIDENTIFIERLOOSE=R++;
src[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] + 
'|' + src[NONNUMERICIDENTIFIER] + ')';






var PRERELEASE=R++;
src[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] + 
'(?:\\.' + src[PRERELEASEIDENTIFIER] + ')*))';

var PRERELEASELOOSE=R++;
src[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] + 
'(?:\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';




var BUILDIDENTIFIER=R++;
src[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';





var BUILD=R++;
src[BUILD] = '(?:\\+(' + src[BUILDIDENTIFIER] + 
'(?:\\.' + src[BUILDIDENTIFIER] + ')*))';











var FULL=R++;
var FULLPLAIN='v?' + src[MAINVERSION] + 
src[PRERELEASE] + '?' + 
src[BUILD] + '?';

src[FULL] = '^' + FULLPLAIN + '$';




var LOOSEPLAIN='[v=\\s]*' + src[MAINVERSIONLOOSE] + 
src[PRERELEASELOOSE] + '?' + 
src[BUILD] + '?';

var LOOSE=R++;
src[LOOSE] = '^' + LOOSEPLAIN + '$';

var GTLT=R++;
src[GTLT] = '((?:<|>)?=?)';




var XRANGEIDENTIFIERLOOSE=R++;
src[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\*';
var XRANGEIDENTIFIER=R++;
src[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\*';

var XRANGEPLAIN=R++;
src[XRANGEPLAIN] = '[v=\\s]*(' + src[XRANGEIDENTIFIER] + ')' + 
'(?:\\.(' + src[XRANGEIDENTIFIER] + ')' + 
'(?:\\.(' + src[XRANGEIDENTIFIER] + ')' + 
'(?:(' + src[PRERELEASE] + ')' + 
')?)?)?';

var XRANGEPLAINLOOSE=R++;
src[XRANGEPLAINLOOSE] = '[v=\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' + 
'(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + 
'(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + 
'(?:(' + src[PRERELEASELOOSE] + ')' + 
')?)?)?';



var XRANGE=R++;
src[XRANGE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAIN] + '$';
var XRANGELOOSE=R++;
src[XRANGELOOSE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAINLOOSE] + '$';



var LONETILDE=R++;
src[LONETILDE] = '(?:~>?)';

var TILDETRIM=R++;
src[TILDETRIM] = '(\\s*)' + src[LONETILDE] + '\\s+';
re[TILDETRIM] = new RegExp(src[TILDETRIM],'g');
var tildeTrimReplace='$1~';

var TILDE=R++;
src[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';
var TILDELOOSE=R++;
src[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';



var LONECARET=R++;
src[LONECARET] = '(?:\\^)';

var CARETTRIM=R++;
src[CARETTRIM] = '(\\s*)' + src[LONECARET] + '\\s+';
re[CARETTRIM] = new RegExp(src[CARETTRIM],'g');
var caretTrimReplace='$1^';

var CARET=R++;
src[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';
var CARETLOOSE=R++;
src[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';


var COMPARATORLOOSE=R++;
src[COMPARATORLOOSE] = '^' + src[GTLT] + '\\s*(' + LOOSEPLAIN + ')$|^$';
var COMPARATOR=R++;
src[COMPARATOR] = '^' + src[GTLT] + '\\s*(' + FULLPLAIN + ')$|^$';




var COMPARATORTRIM=R++;
src[COMPARATORTRIM] = '(\\s*)' + src[GTLT] + 
'\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';


re[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM],'g');
var comparatorTrimReplace='$1$2$3';






var HYPHENRANGE=R++;
src[HYPHENRANGE] = '^\\s*(' + src[XRANGEPLAIN] + ')' + 
'\\s+-\\s+' + 
'(' + src[XRANGEPLAIN] + ')' + 
'\\s*$';

var HYPHENRANGELOOSE=R++;
src[HYPHENRANGELOOSE] = '^\\s*(' + src[XRANGEPLAINLOOSE] + ')' + 
'\\s+-\\s+' + 
'(' + src[XRANGEPLAINLOOSE] + ')' + 
'\\s*$';


var STAR=R++;
src[STAR] = '(<|>)?=?\\s*\\*';



for(var i=0;i < R;i++) {
;
if(!re[i])
re[i] = new RegExp(src[i]);}


exports.parse = parse;
function parse(version,loose){
var r=loose?re[LOOSE]:re[FULL];
return r.test(version)?new SemVer(version,loose):null;}


exports.valid = valid;
function valid(version,loose){
var v=parse(version,loose);
return v?v.version:null;}



exports.clean = clean;
function clean(version,loose){
var s=parse(version,loose);
return s?s.version:null;}


exports.SemVer = SemVer;

function SemVer(version,loose){
if(version instanceof SemVer){
if(version.loose === loose)
return version;else 

version = version.version;}else 
if(typeof version !== 'string'){
throw new TypeError('Invalid Version: ' + version);}


if(!(this instanceof SemVer))
return new SemVer(version,loose);

;
this.loose = loose;
var m=version.trim().match(loose?re[LOOSE]:re[FULL]);

if(!m)
throw new TypeError('Invalid Version: ' + version);

this.raw = version;


this.major = +m[1];
this.minor = +m[2];
this.patch = +m[3];


if(!m[4])
this.prerelease = [];else 

this.prerelease = m[4].split('.').map(function(id){
return (/^[0-9]+$/.test(id)?+id:id);});


this.build = m[5]?m[5].split('.'):[];
this.format();}


SemVer.prototype.format = function(){
this.version = this.major + '.' + this.minor + '.' + this.patch;
if(this.prerelease.length)
this.version += '-' + this.prerelease.join('.');
return this.version;};


SemVer.prototype.inspect = function(){
return '<SemVer "' + this + '">';};


SemVer.prototype.toString = function(){
return this.version;};


SemVer.prototype.compare = function(other){
;
if(!(other instanceof SemVer))
other = new SemVer(other,this.loose);

return this.compareMain(other) || this.comparePre(other);};


SemVer.prototype.compareMain = function(other){
if(!(other instanceof SemVer))
other = new SemVer(other,this.loose);

return compareIdentifiers(this.major,other.major) || 
compareIdentifiers(this.minor,other.minor) || 
compareIdentifiers(this.patch,other.patch);};


SemVer.prototype.comparePre = function(other){
if(!(other instanceof SemVer))
other = new SemVer(other,this.loose);


if(this.prerelease.length && !other.prerelease.length)
return -1;else 
if(!this.prerelease.length && other.prerelease.length)
return 1;else 
if(!this.prerelease.length && !other.prerelease.length)
return 0;

var i=0;
do {
var a=this.prerelease[i];
var b=other.prerelease[i];
;
if(a === undefined && b === undefined)
return 0;else 
if(b === undefined)
return 1;else 
if(a === undefined)
return -1;else 
if(a === b)
continue;else 

return compareIdentifiers(a,b);}while(
++i);};




SemVer.prototype.inc = function(release){
switch(release){
case 'premajor':
this.inc('major');
this.inc('pre');
break;
case 'preminor':
this.inc('minor');
this.inc('pre');
break;
case 'prepatch':



this.prerelease.length = 0;
this.inc('patch');
this.inc('pre');
break;


case 'prerelease':
if(this.prerelease.length === 0)
this.inc('patch');
this.inc('pre');
break;
case 'major':
this.major++;
this.minor = -1;
case 'minor':
this.minor++;
this.patch = 0;
this.prerelease = [];
break;
case 'patch':




if(this.prerelease.length === 0)
this.patch++;
this.prerelease = [];
break;


case 'pre':
if(this.prerelease.length === 0)
this.prerelease = [0];else 
{
var i=this.prerelease.length;
while(--i >= 0) {
if(typeof this.prerelease[i] === 'number'){
this.prerelease[i]++;
i = -2;}}


if(i === -1)
this.prerelease.push(0);}

break;

default:
throw new Error('invalid increment argument: ' + release);}

this.format();
return this;};


exports.inc = inc;
function inc(version,release,loose){
try{
return new SemVer(version,loose).inc(release).version;}
catch(er) {
return null;}}



exports.compareIdentifiers = compareIdentifiers;

var numeric=/^[0-9]+$/;
function compareIdentifiers(a,b){
var anum=numeric.test(a);
var bnum=numeric.test(b);

if(anum && bnum){
a = +a;
b = +b;}


return anum && !bnum?-1:
bnum && !anum?1:
a < b?-1:
a > b?1:
0;}


exports.rcompareIdentifiers = rcompareIdentifiers;
function rcompareIdentifiers(a,b){
return compareIdentifiers(b,a);}


exports.compare = compare;
function compare(a,b,loose){
return new SemVer(a,loose).compare(b);}


exports.compareLoose = compareLoose;
function compareLoose(a,b){
return compare(a,b,true);}


exports.rcompare = rcompare;
function rcompare(a,b,loose){
return compare(b,a,loose);}


exports.sort = sort;
function sort(list,loose){
return list.sort(function(a,b){
return exports.compare(a,b,loose);});}



exports.rsort = rsort;
function rsort(list,loose){
return list.sort(function(a,b){
return exports.rcompare(a,b,loose);});}



exports.gt = gt;
function gt(a,b,loose){
return compare(a,b,loose) > 0;}


exports.lt = lt;
function lt(a,b,loose){
return compare(a,b,loose) < 0;}


exports.eq = eq;
function eq(a,b,loose){
return compare(a,b,loose) === 0;}


exports.neq = neq;
function neq(a,b,loose){
return compare(a,b,loose) !== 0;}


exports.gte = gte;
function gte(a,b,loose){
return compare(a,b,loose) >= 0;}


exports.lte = lte;
function lte(a,b,loose){
return compare(a,b,loose) <= 0;}


exports.cmp = cmp;
function cmp(a,op,b,loose){
var ret;
switch(op){
case '===':ret = a === b;break;
case '!==':ret = a !== b;break;
case '':case '=':case '==':ret = eq(a,b,loose);break;
case '!=':ret = neq(a,b,loose);break;
case '>':ret = gt(a,b,loose);break;
case '>=':ret = gte(a,b,loose);break;
case '<':ret = lt(a,b,loose);break;
case '<=':ret = lte(a,b,loose);break;
default:throw new TypeError('Invalid operator: ' + op);}

return ret;}


exports.Comparator = Comparator;
function Comparator(comp,loose){
if(comp instanceof Comparator){
if(comp.loose === loose)
return comp;else 

comp = comp.value;}


if(!(this instanceof Comparator))
return new Comparator(comp,loose);

;
this.loose = loose;
this.parse(comp);

if(this.semver === ANY)
this.value = '';else 

this.value = this.operator + this.semver.version;}


var ANY={};
Comparator.prototype.parse = function(comp){
var r=this.loose?re[COMPARATORLOOSE]:re[COMPARATOR];
var m=comp.match(r);

if(!m)
throw new TypeError('Invalid comparator: ' + comp);

this.operator = m[1];
if(this.operator === '=')
this.operator = '';


if(!m[2])
this.semver = ANY;else 
{
this.semver = new SemVer(m[2],this.loose);








if(this.operator === '<' && !this.semver.prerelease.length){
this.semver.prerelease = ['0'];
this.semver.format();}}};




Comparator.prototype.inspect = function(){
return '<SemVer Comparator "' + this + '">';};


Comparator.prototype.toString = function(){
return this.value;};


Comparator.prototype.test = function(version){
;
return this.semver === ANY?true:
cmp(version,this.operator,this.semver,this.loose);};



exports.Range = Range;
function Range(range,loose){
if(range instanceof Range && range.loose === loose)
return range;

if(!(this instanceof Range))
return new Range(range,loose);

this.loose = loose;


this.raw = range;
this.set = range.split(/\s*\|\|\s*/).map(function(range){
return this.parseRange(range.trim());},
this).filter(function(c){

return c.length;});


if(!this.set.length){
throw new TypeError('Invalid SemVer Range: ' + range);}


this.format();}


Range.prototype.inspect = function(){
return '<SemVer Range "' + this.range + '">';};


Range.prototype.format = function(){
this.range = this.set.map(function(comps){
return comps.join(' ').trim();}).
join('||').trim();
return this.range;};


Range.prototype.toString = function(){
return this.range;};


Range.prototype.parseRange = function(range){
var loose=this.loose;
range = range.trim();
;

var hr=loose?re[HYPHENRANGELOOSE]:re[HYPHENRANGE];
range = range.replace(hr,hyphenReplace);
;

range = range.replace(re[COMPARATORTRIM],comparatorTrimReplace);
;


range = range.replace(re[TILDETRIM],tildeTrimReplace);


range = range.replace(re[CARETTRIM],caretTrimReplace);


range = range.split(/\s+/).join(' ');




var compRe=loose?re[COMPARATORLOOSE]:re[COMPARATOR];
var set=range.split(' ').map(function(comp){
return parseComparator(comp,loose);}).
join(' ').split(/\s+/);
if(this.loose){

set = set.filter(function(comp){
return !!comp.match(compRe);});}


set = set.map(function(comp){
return new Comparator(comp,loose);});


return set;};



exports.toComparators = toComparators;
function toComparators(range,loose){
return new Range(range,loose).set.map(function(comp){
return comp.map(function(c){
return c.value;}).
join(' ').trim().split(' ');});}






function parseComparator(comp,loose){
;
comp = replaceCarets(comp,loose);
;
comp = replaceTildes(comp,loose);
;
comp = replaceXRanges(comp,loose);
;
comp = replaceStars(comp,loose);
;
return comp;}


function isX(id){
return !id || id.toLowerCase() === 'x' || id === '*';}








function replaceTildes(comp,loose){
return comp.trim().split(/\s+/).map(function(comp){
return replaceTilde(comp,loose);}).
join(' ');}


function replaceTilde(comp,loose){
var r=loose?re[TILDELOOSE]:re[TILDE];
return comp.replace(r,function(_,M,m,p,pr){
;
var ret;

if(isX(M))
ret = '';else 
if(isX(m))
ret = '>=' + M + '.0.0-0 <' + (+M + 1) + '.0.0-0';else 
if(isX(p))

ret = '>=' + M + '.' + m + '.0-0 <' + M + '.' + (+m + 1) + '.0-0';else 
if(pr){
;
if(pr.charAt(0) !== '-')
pr = '-' + pr;
ret = '>=' + M + '.' + m + '.' + p + pr + 
' <' + M + '.' + (+m + 1) + '.0-0';}else 


ret = '>=' + M + '.' + m + '.' + p + '-0' + 
' <' + M + '.' + (+m + 1) + '.0-0';

;
return ret;});}









function replaceCarets(comp,loose){
return comp.trim().split(/\s+/).map(function(comp){
return replaceCaret(comp,loose);}).
join(' ');}


function replaceCaret(comp,loose){
var r=loose?re[CARETLOOSE]:re[CARET];
return comp.replace(r,function(_,M,m,p,pr){
;
var ret;

if(isX(M))
ret = '';else 
if(isX(m))
ret = '>=' + M + '.0.0-0 <' + (+M + 1) + '.0.0-0';else 
if(isX(p)){
if(M === '0')
ret = '>=' + M + '.' + m + '.0-0 <' + M + '.' + (+m + 1) + '.0-0';else 

ret = '>=' + M + '.' + m + '.0-0 <' + (+M + 1) + '.0.0-0';}else 
if(pr){
;
if(pr.charAt(0) !== '-')
pr = '-' + pr;
if(M === '0'){
if(m === '0')
ret = '=' + M + '.' + m + '.' + p + pr;else 

ret = '>=' + M + '.' + m + '.' + p + pr + 
' <' + M + '.' + (+m + 1) + '.0-0';}else 

ret = '>=' + M + '.' + m + '.' + p + pr + 
' <' + (+M + 1) + '.0.0-0';}else 
{
if(M === '0'){
if(m === '0')
ret = '=' + M + '.' + m + '.' + p;else 

ret = '>=' + M + '.' + m + '.' + p + '-0' + 
' <' + M + '.' + (+m + 1) + '.0-0';}else 

ret = '>=' + M + '.' + m + '.' + p + '-0' + 
' <' + (+M + 1) + '.0.0-0';}


;
return ret;});}



function replaceXRanges(comp,loose){
;
return comp.split(/\s+/).map(function(comp){
return replaceXRange(comp,loose);}).
join(' ');}


function replaceXRange(comp,loose){
comp = comp.trim();
var r=loose?re[XRANGELOOSE]:re[XRANGE];
return comp.replace(r,function(ret,gtlt,M,m,p,pr){
;
var xM=isX(M);
var xm=xM || isX(m);
var xp=xm || isX(p);
var anyX=xp;

if(gtlt === '=' && anyX)
gtlt = '';

if(gtlt && anyX){

if(xM)
M = 0;
if(xm)
m = 0;
if(xp)
p = 0;

if(gtlt === '>'){



gtlt = '>=';
if(xM){}else 

if(xm){
M = +M + 1;
m = 0;
p = 0;}else 
if(xp){
m = +m + 1;
p = 0;}}




ret = gtlt + M + '.' + m + '.' + p + '-0';}else 
if(xM){

ret = '*';}else 
if(xm){



ret = '>=' + M + '.0.0-0 <' + (+M + 1) + '.0.0-0';}else 
if(xp){
ret = '>=' + M + '.' + m + '.0-0 <' + M + '.' + (+m + 1) + '.0-0';}


;

return ret;});}





function replaceStars(comp,loose){
;

return comp.trim().replace(re[STAR],'');}







function hyphenReplace($0,
from,fM,fm,fp,fpr,fb,
to,tM,tm,tp,tpr,tb){

if(isX(fM))
from = '';else 
if(isX(fm))
from = '>=' + fM + '.0.0-0';else 
if(isX(fp))
from = '>=' + fM + '.' + fm + '.0-0';else 

from = '>=' + from;

if(isX(tM))
to = '';else 
if(isX(tm))
to = '<' + (+tM + 1) + '.0.0-0';else 
if(isX(tp))
to = '<' + tM + '.' + (+tm + 1) + '.0-0';else 
if(tpr)
to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;else 

to = '<=' + to;

return (from + ' ' + to).trim();}




Range.prototype.test = function(version){
if(!version)
return false;
for(var i=0;i < this.set.length;i++) {
if(testSet(this.set[i],version))
return true;}

return false;};


function testSet(set,version){
for(var i=0;i < set.length;i++) {
if(!set[i].test(version))
return false;}

return true;}


exports.satisfies = satisfies;
function satisfies(version,range,loose){
try{
range = new Range(range,loose);}
catch(er) {
return false;}

return range.test(version);}


exports.maxSatisfying = maxSatisfying;
function maxSatisfying(versions,range,loose){
return versions.filter(function(version){
return satisfies(version,range,loose);}).
sort(function(a,b){
return rcompare(a,b,loose);})[
0] || null;}


exports.validRange = validRange;
function validRange(range,loose){
try{


return new Range(range,loose).range || '*';}
catch(er) {
return null;}}




exports.ltr = ltr;
function ltr(version,range,loose){
return outside(version,range,'<',loose);}



exports.gtr = gtr;
function gtr(version,range,loose){
return outside(version,range,'>',loose);}


exports.outside = outside;
function outside(version,range,hilo,loose){
version = new SemVer(version,loose);
range = new Range(range,loose);

var gtfn,ltefn,ltfn,comp,ecomp;
switch(hilo){
case '>':
gtfn = gt;
ltefn = lte;
ltfn = lt;
comp = '>';
ecomp = '>=';
break;
case '<':
gtfn = lt;
ltefn = gte;
ltfn = gt;
comp = '<';
ecomp = '<=';
break;
default:
throw new TypeError('Must provide a hilo val of "<" or ">"');}



if(satisfies(version,range,loose)){
return false;}





for(var i=0;i < range.set.length;++i) {
var comparators=range.set[i];

var high=null;
var low=null;

comparators.forEach(function(comparator){
high = high || comparator;
low = low || comparator;
if(gtfn(comparator.semver,high.semver,loose)){
high = comparator;}else 
if(ltfn(comparator.semver,low.semver,loose)){
low = comparator;}});





if(high.operator === comp || high.operator === ecomp){
return false;}




if((!low.operator || low.operator === comp) && 
ltefn(version,low.semver)){
return false;}else 
if(low.operator === ecomp && ltfn(version,low.semver)){
return false;}}


return true;}



if(typeof define === 'function' && define.amd)
define(exports);})(


typeof exports === 'object'?exports:
typeof define === 'function' && define.amd?{}:
semver = {});
});
__d('levelup/lib/write-stream.js',["stream-browserify/index.js","util/util.js","xtend/index.js","bl/bl.js","levelup/lib/util.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 





Stream=require('stream-browserify/index.js').Stream,
inherits=require('util/util.js').inherits,
extend=require('xtend/index.js'),
bl=require('bl/bl.js'),

setImmediate=global.setImmediate || process.nextTick,

getOptions=require('levelup/lib/util.js').getOptions,

defaultOptions={type:'put'};

function WriteStream(options,db){
if(!(this instanceof WriteStream))
return new WriteStream(options,db);

Stream.call(this);
this._options = extend(defaultOptions,getOptions(db,options));
this._db = db;
this._buffer = [];
this._status = 'init';
this._end = false;
this.writable = true;
this.readable = false;

var self=this,
ready=function(){
if(!self.writable)
return;
self._status = 'ready';
self.emit('ready');
self._process();};


if(db.isOpen())
setImmediate(ready);else 

db.once('ready',ready);}


inherits(WriteStream,Stream);

WriteStream.prototype.write = function(data){
if(!this.writable)
return false;
this._buffer.push(data);
if(this._status != 'init')
this._processDelayed();
if(this._options.maxBufferLength && 
this._buffer.length > this._options.maxBufferLength){
this._writeBlock = true;
return false;}

return true;};


WriteStream.prototype.end = function(data){
var self=this;
if(data)
this.write(data);
setImmediate(function(){
self._end = true;
self._process();});};



WriteStream.prototype.destroy = function(){
this.writable = false;
this.end();};


WriteStream.prototype.destroySoon = function(){
this.end();};


WriteStream.prototype.add = function(entry){
if(!entry.props)
return;
if(entry.props.Directory)
entry.pipe(this._db.writeStream(this._options));else 
if(entry.props.File || entry.File || entry.type == 'File')
this._write(entry);
return true;};


WriteStream.prototype._processDelayed = function(){
var self=this;
setImmediate(function(){
self._process();});};



WriteStream.prototype._process = function(){
var buffer,
self=this,

cb=function(err){
if(!self.writable)
return;
if(self._status != 'closed')
self._status = 'ready';
if(err){
self.writable = false;
return self.emit('error',err);}

self._process();};


if(self._status != 'ready' && self.writable){
if(self._buffer.length && self._status != 'closed')
self._processDelayed();
return;}


if(self._buffer.length && self.writable){
self._status = 'writing';
buffer = self._buffer;
self._buffer = [];

self._db.batch(buffer.map(function(d){
return {
type:d.type || self._options.type,
key:d.key,
value:d.value,
keyEncoding:d.keyEncoding || self._options.keyEncoding,
valueEncoding:d.valueEncoding || 
d.encoding || 
self._options.valueEncoding};}),

cb);

if(self._writeBlock){
self._writeBlock = false;
self.emit('drain');}



return;}


if(self._end && self._status != 'closed'){
self._status = 'closed';
self.writable = false;
self.emit('close');}};



WriteStream.prototype._write = function(entry){
var key=entry.path || entry.props.path,
self=this;

if(!key)
return;

entry.pipe(bl(function(err,data){
if(err){
self.writable = false;
return self.emit('error',err);}


if(self._options.fstreamRoot && 
key.indexOf(self._options.fstreamRoot) > -1)
key = key.substr(self._options.fstreamRoot.length + 1);

self.write({key:key,value:data.slice(0)});}));};



WriteStream.prototype.toString = function(){
return 'LevelUP.WriteStream';};


module.exports = WriteStream;
});
__d('bl/bl.js',["readable-stream/readable.js","util/util.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var DuplexStream=require('readable-stream/readable.js').Duplex,
util=require('util/util.js');

function BufferList(callback){
if(!(this instanceof BufferList))
return new BufferList(callback);

this._bufs = [];
this.length = 0;

if(typeof callback == 'function'){
this._callback = callback;

var piper=(function(err){
if(this._callback){
this._callback(err);
this._callback = null;}}).

bind(this);

this.on('pipe',function(src){
src.on('error',piper);});

this.on('unpipe',function(src){
src.removeListener('error',piper);});}else 


if(Buffer.isBuffer(callback))
this.append(callback);else 
if(Array.isArray(callback)){
callback.forEach((function(b){
Buffer.isBuffer(b) && this.append(b);}).
bind(this));}


DuplexStream.call(this);}


util.inherits(BufferList,DuplexStream);

BufferList.prototype._offset = function(offset){
var tot=0,i=0,_t;
for(;i < this._bufs.length;i++) {
_t = tot + this._bufs[i].length;
if(offset < _t)
return [i,offset - tot];
tot = _t;}};



BufferList.prototype.append = function(buf){
this._bufs.push(Buffer.isBuffer(buf)?buf:new Buffer(buf));
this.length += buf.length;
return this;};


BufferList.prototype._write = function(buf,encoding,callback){
this.append(buf);
if(callback)
callback();};


BufferList.prototype._read = function(size){
if(!this.length)
return this.push(null);
size = Math.min(size,this.length);
this.push(this.slice(0,size));
this.consume(size);};


BufferList.prototype.end = function(chunk){
DuplexStream.prototype.end.call(this,chunk);

if(this._callback){
this._callback(null,this.slice());
this._callback = null;}};



BufferList.prototype.get = function(index){
return this.slice(index,index + 1)[0];};


BufferList.prototype.slice = function(start,end){
return this.copy(null,0,start,end);};


BufferList.prototype.copy = function(dst,dstStart,srcStart,srcEnd){
if(typeof srcStart != 'number' || srcStart < 0)
srcStart = 0;
if(typeof srcEnd != 'number' || srcEnd > this.length)
srcEnd = this.length;
if(srcStart >= this.length)
return dst || new Buffer(0);
if(srcEnd <= 0)
return dst || new Buffer(0);

var copy=!!dst,
off=this._offset(srcStart),
len=srcEnd - srcStart,
bytes=len,
bufoff=copy && dstStart || 0,
start=off[1],
l,
i;


if(srcStart === 0 && srcEnd == this.length){
if(!copy)
return Buffer.concat(this._bufs);


for(i = 0;i < this._bufs.length;i++) {
this._bufs[i].copy(dst,bufoff);
bufoff += this._bufs[i].length;}


return dst;}



if(bytes <= this._bufs[off[0]].length - start){
return copy?
this._bufs[off[0]].copy(dst,dstStart,start,start + bytes):
this._bufs[off[0]].slice(start,start + bytes);}


if(!copy)
dst = new Buffer(len);

for(i = off[0];i < this._bufs.length;i++) {
l = this._bufs[i].length - start;

if(bytes > l){
this._bufs[i].copy(dst,bufoff,start);}else 
{
this._bufs[i].copy(dst,bufoff,start,start + bytes);
break;}


bufoff += l;
bytes -= l;

if(start)
start = 0;}


return dst;};


BufferList.prototype.toString = function(encoding,start,end){
return this.slice(start,end).toString(encoding);};


BufferList.prototype.consume = function(bytes){
while(this._bufs.length) {
if(bytes > this._bufs[0].length){
bytes -= this._bufs[0].length;
this.length -= this._bufs[0].length;
this._bufs.shift();}else 
{
this._bufs[0] = this._bufs[0].slice(bytes);
this.length -= bytes;
break;}}


return this;};


BufferList.prototype.duplicate = function(){
var i=0,
copy=new BufferList();

for(;i < this._bufs.length;i++) 
copy.append(this._bufs[i]);

return copy;};


BufferList.prototype.destroy = function(){
this._bufs.length = 0;
this.length = 0;
this.push(null);};


(function(){
var methods={
'readDoubleBE':8,
'readDoubleLE':8,
'readFloatBE':4,
'readFloatLE':4,
'readInt32BE':4,
'readInt32LE':4,
'readUInt32BE':4,
'readUInt32LE':4,
'readInt16BE':2,
'readInt16LE':2,
'readUInt16BE':2,
'readUInt16LE':2,
'readInt8':1,
'readUInt8':1};


for(var m in methods) {
(function(m){
BufferList.prototype[m] = function(offset){
return this.slice(offset,offset + methods[m])[m](0);};})(

m);}})();



module.exports = BufferList;
});
__d('levelup/lib/batch.js',["levelup/lib/util.js","levelup/lib/errors.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 





util=require('levelup/lib/util.js'),
WriteError=require('levelup/lib/errors.js').WriteError,

getOptions=util.getOptions,
dispatchError=util.dispatchError;

function Batch(levelup){
this._levelup = levelup;
this.batch = levelup.db.batch();
this.ops = [];}


Batch.prototype.put = function(key_,value_,options){
options = getOptions(this._levelup,options);

var key=util.encodeKey(key_,options),
value=util.encodeValue(value_,options);

try{
this.batch.put(key,value);}
catch(e) {
throw new WriteError(e);}

this.ops.push({type:'put',key:key,value:value});

return this;};


Batch.prototype.del = function(key_,options){
options = getOptions(this._levelup,options);

var key=util.encodeKey(key_,options);

try{
this.batch.del(key);}
catch(err) {
throw new WriteError(err);}

this.ops.push({type:'del',key:key});

return this;};


Batch.prototype.clear = function(){
try{
this.batch.clear();}
catch(err) {
throw new WriteError(err);}


this.ops = [];
return this;};


Batch.prototype.write = function(callback){
var levelup=this._levelup,
ops=this.ops;

try{
this.batch.write(function(err){
if(err)
return dispatchError(levelup,new WriteError(err),callback);
levelup.emit('batch',ops);
if(callback)
callback();});}

catch(err) {
throw new WriteError(err);}};



module.exports = Batch;
});
__d('asyncstorage-down/index.js',["asyncstorage-down/platform.js","util/util.js","abstract-leveldown/abstract-leveldown.js","abstract-leveldown/abstract-leveldown.js","asyncstorage-down/asyncstorage.js","asyncstorage-down/asyncstorage-core.js","asyncstorage-down/utils.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

require('asyncstorage-down/platform.js');
var inherits=require('util/util.js').inherits;
var AbstractLevelDOWN=require('abstract-leveldown/abstract-leveldown.js').AbstractLevelDOWN;
var AbstractIterator=require('abstract-leveldown/abstract-leveldown.js').AbstractIterator;

var Storage=require('asyncstorage-down/asyncstorage.js').Storage;
var StorageCore=require('asyncstorage-down/asyncstorage-core.js');
var utils=require('asyncstorage-down/utils.js');


var nextTick=global.setImmediate || process.nextTick;

function ADIterator(db,options){

AbstractIterator.call(this,db);

this._reverse = !!options.reverse;
this._endkey = options.end;
this._startkey = options.start;
this._gt = options.gt;
this._gte = options.gte;
this._lt = options.lt;
this._lte = options.lte;
this._exclusiveStart = options.exclusiveStart;
this._limit = options.limit;
this._count = 0;

this.onInitCompleteListeners = [];}


inherits(ADIterator,AbstractIterator);

ADIterator.prototype._init = function(callback){
nextTick(function(){
callback();});};



ADIterator.prototype._next = function(callback){
var self=this;

function onInitComplete(){
if(self._pos === self._keys.length || self._pos < 0){
return callback();}


var key=self._keys[self._pos];

if(!!self._endkey && (self._reverse?key < self._endkey:key > self._endkey)){
return callback();}


if(!!self._limit && self._limit > 0 && self._count++ >= self._limit){
return callback();}


if(self._lt && key >= self._lt || 
self._lte && key > self._lte || 
self._gt && key <= self._gt || 
self._gte && key < self._gte){
return callback();}


self._pos += self._reverse?-1:1;
self.db.container.getItem(key,function(err,value){
if(err){
if(err.message === 'NotFound'){
return nextTick(function(){
self._next(callback);});}


return callback(err);}

callback(null,key,value);});}


if(!self.initStarted){
self.initStarted = true;
self._init(function(err){
if(err){
return callback(err);}

self.db.container.keys(function(err,keys){
if(err){
return callback(err);}

self._keys = keys;
if(self._startkey){
var index=utils.sortedIndexOf(self._keys,self._startkey);
var startkey=index >= self._keys.length || index < 0?
undefined:self._keys[index];
self._pos = index;
if(self._reverse){
if(self._exclusiveStart || startkey !== self._startkey){
self._pos--;}}else 

if(self._exclusiveStart && startkey === self._startkey){
self._pos++;}}else 

{
self._pos = self._reverse?self._keys.length - 1:0;}

onInitComplete();

self.initCompleted = true;
var i=-1;
while(++i < self.onInitCompleteListeners) {
nextTick(self.onInitCompleteListeners[i]);}});});}else 



if(!self.initCompleted){
self.onInitCompleteListeners.push(onInitComplete);}else 
{
onInitComplete();}};



function AD(location){
if(!(this instanceof AD)){
return new AD(location);}

AbstractLevelDOWN.call(this,location);
this.container = new Storage(location);}


inherits(AD,AbstractLevelDOWN);

AD.prototype._open = function(options,callback){
this.container.init(callback);};


AD.prototype._put = function(key,value,options,callback){

var err=checkKeyValue(key,'key');

if(err){
return nextTick(function(){
callback(err);});}



err = checkKeyValue(value,'value');

if(err){
return nextTick(function(){
callback(err);});}



if(typeof value === 'object' && !Buffer.isBuffer(value) && value.buffer === undefined){
var obj={};
obj.storetype = 'json';
obj.data = value;
value = JSON.stringify(obj);}


this.container.setItem(key,value,callback);};


AD.prototype._get = function(key,options,callback){

var err=checkKeyValue(key,'key');

if(err){
return nextTick(function(){
callback(err);});}



if(!Buffer.isBuffer(key)){
key = String(key);}

this.container.getItem(key,function(err,value){

if(err){
return callback(err);}


if(options.asBuffer !== false && !Buffer.isBuffer(value)){
value = new Buffer(value);}



if(options.asBuffer === false){
if(value.indexOf('{"storetype":"json","data"') > -1){
var res=JSON.parse(value);
value = res.data;}}


callback(null,value);});};



AD.prototype._del = function(key,options,callback){

var err=checkKeyValue(key,'key');

if(err){
return nextTick(function(){
callback(err);});}


if(!Buffer.isBuffer(key)){
key = String(key);}


this.container.removeItem(key,callback);};


AD.prototype._batch = function(array,options,callback){
var self=this;
nextTick(function(){
var err;
var key;
var value;

var numDone=0;
var overallErr;
function checkDone(){
if(++numDone === array.length){
callback(overallErr);}}



if(!Array.isArray(array) || !array.length)callback();

for(var i=0;i < array.length;i++) {
var task=array[i];
if(task){
key = Buffer.isBuffer(task.key)?task.key:String(task.key);
err = checkKeyValue(key,'key');
if(err){
overallErr = err;
checkDone();}else 
if(task.type === 'del'){
self._del(task.key,options,checkDone);}else 
if(task.type === 'put'){
value = Buffer.isBuffer(task.value)?task.value:String(task.value);
err = checkKeyValue(value,'value');
if(err){
overallErr = err;
checkDone();}else 
{
self._put(key,value,options,checkDone);}}}else 


{
checkDone();}}});};





AD.prototype._iterator = function(options){
return new ADIterator(this,options);};


AD.destroy = function(name,callback){
StorageCore.destroy(name,callback);};


function checkKeyValue(obj,type){
if(obj === null || obj === undefined){
return new Error(type + ' cannot be `null` or `undefined`');}

if(obj === null || obj === undefined){
return new Error(type + ' cannot be `null` or `undefined`');}


if(type === 'key'){

if(obj instanceof Boolean){
return new Error(type + ' cannot be `null` or `undefined`');}

if(obj === ''){
return new Error(type + ' cannot be empty');}}


if(obj.toString().indexOf('[object ArrayBuffer]') === 0){
if(obj.byteLength === 0 || obj.byteLength === undefined){
return new Error(type + ' cannot be an empty Buffer');}}



if(Buffer.isBuffer(obj)){
if(obj.length === 0){
return new Error(type + ' cannot be an empty Buffer');}}else 

if(String(obj) === ''){
return new Error(type + ' cannot be an empty String');}}




module.exports = AD;
});
__d('abstract-leveldown/abstract-leveldown.js',["xtend/index.js","abstract-leveldown/abstract-iterator.js","abstract-leveldown/abstract-chained-batch.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

xtend=require('xtend/index.js'),
AbstractIterator=require('abstract-leveldown/abstract-iterator.js'),
AbstractChainedBatch=require('abstract-leveldown/abstract-chained-batch.js');

function AbstractLevelDOWN(location){
if(!arguments.length || location === undefined)
throw new Error('constructor requires at least a location argument');

if(typeof location != 'string')
throw new Error('constructor requires a location string argument');

this.location = location;}


AbstractLevelDOWN.prototype.open = function(options,callback){
if(typeof options == 'function')
callback = options;

if(typeof callback != 'function')
throw new Error('open() requires a callback argument');

if(typeof options != 'object')
options = {};

if(typeof this._open == 'function')
return this._open(options,callback);

process.nextTick(callback);};


AbstractLevelDOWN.prototype.close = function(callback){
if(typeof callback != 'function')
throw new Error('close() requires a callback argument');

if(typeof this._close == 'function')
return this._close(callback);

process.nextTick(callback);};


AbstractLevelDOWN.prototype.get = function(key,options,callback){
var err;

if(typeof options == 'function')
callback = options;

if(typeof callback != 'function')
throw new Error('get() requires a callback argument');

if(err = this._checkKeyValue(key,'key',this._isBuffer))
return callback(err);

if(!this._isBuffer(key))
key = String(key);

if(typeof options != 'object')
options = {};

if(typeof this._get == 'function')
return this._get(key,options,callback);

process.nextTick(function(){callback(new Error('NotFound'));});};


AbstractLevelDOWN.prototype.put = function(key,value,options,callback){
var err;

if(typeof options == 'function')
callback = options;

if(typeof callback != 'function')
throw new Error('put() requires a callback argument');

if(err = this._checkKeyValue(key,'key',this._isBuffer))
return callback(err);

if(err = this._checkKeyValue(value,'value',this._isBuffer))
return callback(err);

if(!this._isBuffer(key))
key = String(key);



if(!this._isBuffer(value) && !process.browser)
value = String(value);

if(typeof options != 'object')
options = {};

if(typeof this._put == 'function')
return this._put(key,value,options,callback);

process.nextTick(callback);};


AbstractLevelDOWN.prototype.del = function(key,options,callback){
var err;

if(typeof options == 'function')
callback = options;

if(typeof callback != 'function')
throw new Error('del() requires a callback argument');

if(err = this._checkKeyValue(key,'key',this._isBuffer))
return callback(err);

if(!this._isBuffer(key))
key = String(key);

if(typeof options != 'object')
options = {};

if(typeof this._del == 'function')
return this._del(key,options,callback);

process.nextTick(callback);};


AbstractLevelDOWN.prototype.batch = function(array,options,callback){
if(!arguments.length)
return this._chainedBatch();

if(typeof options == 'function')
callback = options;

if(typeof callback != 'function')
throw new Error('batch(array) requires a callback argument');

if(!Array.isArray(array))
return callback(new Error('batch(array) requires an array argument'));

if(typeof options != 'object')
options = {};

var i=0,
l=array.length,
e,
err;

for(;i < l;i++) {
e = array[i];
if(typeof e != 'object')
continue;

if(err = this._checkKeyValue(e.type,'type',this._isBuffer))
return callback(err);

if(err = this._checkKeyValue(e.key,'key',this._isBuffer))
return callback(err);

if(e.type == 'put'){
if(err = this._checkKeyValue(e.value,'value',this._isBuffer))
return callback(err);}}



if(typeof this._batch == 'function')
return this._batch(array,options,callback);

process.nextTick(callback);};



AbstractLevelDOWN.prototype.approximateSize = function(start,end,callback){
if(start == null || 
end == null || 
typeof start == 'function' || 
typeof end == 'function'){
throw new Error('approximateSize() requires valid `start`, `end` and `callback` arguments');}


if(typeof callback != 'function')
throw new Error('approximateSize() requires a callback argument');

if(!this._isBuffer(start))
start = String(start);

if(!this._isBuffer(end))
end = String(end);

if(typeof this._approximateSize == 'function')
return this._approximateSize(start,end,callback);

process.nextTick(function(){
callback(null,0);});};



AbstractLevelDOWN.prototype._setupIteratorOptions = function(options){
var self=this;

options = xtend(options);

['start','end','gt','gte','lt','lte'].forEach(function(o){
if(options[o] && self._isBuffer(options[o]) && options[o].length === 0)
delete options[o];});


options.reverse = !!options.reverse;


if(options.reverse && options.lt)
options.start = options.lt;
if(options.reverse && options.lte)
options.start = options.lte;
if(!options.reverse && options.gt)
options.start = options.gt;
if(!options.reverse && options.gte)
options.start = options.gte;

if(options.reverse && options.lt && !options.lte || 
!options.reverse && options.gt && !options.gte)
options.exclusiveStart = true;

return options;};


AbstractLevelDOWN.prototype.iterator = function(options){
if(typeof options != 'object')
options = {};

options = this._setupIteratorOptions(options);

if(typeof this._iterator == 'function')
return this._iterator(options);

return new AbstractIterator(this);};


AbstractLevelDOWN.prototype._chainedBatch = function(){
return new AbstractChainedBatch(this);};


AbstractLevelDOWN.prototype._isBuffer = function(obj){
return Buffer.isBuffer(obj);};


AbstractLevelDOWN.prototype._checkKeyValue = function(obj,type){
if(obj === null || obj === undefined)
return new Error(type + ' cannot be `null` or `undefined`');

if(obj === null || obj === undefined)
return new Error(type + ' cannot be `null` or `undefined`');

if(this._isBuffer(obj)){
if(obj.length === 0)
return new Error(type + ' cannot be an empty Buffer');}else 
if(String(obj) === '')
return new Error(type + ' cannot be an empty String');};


module.exports.AbstractLevelDOWN = AbstractLevelDOWN;
module.exports.AbstractIterator = AbstractIterator;
module.exports.AbstractChainedBatch = AbstractChainedBatch;
});
__d('xtend/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = extend;

function extend(){
var target={};

for(var i=0;i < arguments.length;i++) {
var source=arguments[i];

for(var key in source) {
if(source.hasOwnProperty(key)){
target[key] = source[key];}}}




return target;}
});
__d('abstract-leveldown/abstract-iterator.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 

AbstractIterator(db){
this.db = db;
this._ended = false;
this._nexting = false;}


AbstractIterator.prototype.next = function(callback){
var self=this;

if(typeof callback != 'function')
throw new Error('next() requires a callback argument');

if(self._ended)
return callback(new Error('cannot call next() after end()'));
if(self._nexting)
return callback(new Error('cannot call next() before previous next() has completed'));

self._nexting = true;
if(typeof self._next == 'function'){
return self._next(function(){
self._nexting = false;
callback.apply(null,arguments);});}



process.nextTick(function(){
self._nexting = false;
callback();});};



AbstractIterator.prototype.end = function(callback){
if(typeof callback != 'function')
throw new Error('end() requires a callback argument');

if(this._ended)
return callback(new Error('end() already called on iterator'));

this._ended = true;

if(typeof this._end == 'function')
return this._end(callback);

process.nextTick(callback);};


module.exports = AbstractIterator;
});
__d('abstract-leveldown/abstract-chained-batch.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 

AbstractChainedBatch(db){
this._db = db;
this._operations = [];
this._written = false;}


AbstractChainedBatch.prototype._checkWritten = function(){
if(this._written)
throw new Error('write() already called on this batch');};


AbstractChainedBatch.prototype.put = function(key,value){
this._checkWritten();

var err=this._db._checkKeyValue(key,'key',this._db._isBuffer);
if(err)throw err;
err = this._db._checkKeyValue(value,'value',this._db._isBuffer);
if(err)throw err;

if(!this._db._isBuffer(key))key = String(key);
if(!this._db._isBuffer(value))value = String(value);

if(typeof this._put == 'function')
this._put(key,value);else 

this._operations.push({type:'put',key:key,value:value});

return this;};


AbstractChainedBatch.prototype.del = function(key){
this._checkWritten();

var err=this._db._checkKeyValue(key,'key',this._db._isBuffer);
if(err)throw err;

if(!this._db._isBuffer(key))key = String(key);

if(typeof this._del == 'function')
this._del(key);else 

this._operations.push({type:'del',key:key});

return this;};


AbstractChainedBatch.prototype.clear = function(){
this._checkWritten();

this._operations = [];

if(typeof this._clear == 'function')
this._clear();

return this;};


AbstractChainedBatch.prototype.write = function(options,callback){
this._checkWritten();

if(typeof options == 'function')
callback = options;
if(typeof callback != 'function')
throw new Error('write() requires a callback argument');
if(typeof options != 'object')
options = {};

this._written = true;

if(typeof this._write == 'function')
return this._write(callback);

if(typeof this._db._batch == 'function')
return this._db._batch(this._operations,options,callback);

process.nextTick(callback);};


module.exports = AbstractChainedBatch;
});
__d('asyncstorage-down/asyncstorage.js',["asyncstorage-down/utils.js","asyncstorage-down/asyncstorage-core.js","asyncstorage-down/taskqueue.js","d64/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



var arrayBuffPrefix='ArrayBuffer:';
var arrayBuffRegex=new RegExp('^' + arrayBuffPrefix);
var uintPrefix='Uint8Array:';
var uintRegex=new RegExp('^' + uintPrefix);


var bufferPrefix='Buff:';
var bufferRegex=new RegExp('^' + bufferPrefix);

var utils=require('asyncstorage-down/utils.js');
var StorageCore=require('asyncstorage-down/asyncstorage-core.js');
var TaskQueue=require('asyncstorage-down/taskqueue.js');
var d64=require('d64/index.js');

function Storage(dbname){
this._store = new StorageCore(dbname);
this._queue = new TaskQueue();}


Storage.prototype.sequentialize = function(callback,fun){
this._queue.add(fun,callback);};


Storage.prototype.init = function(callback){
var self=this;
self.sequentialize(callback,function(callback){
self._store.getKeys(function(err,keys){
if(err){
return callback(err);}

self._keys = keys;
return callback();});});};




Storage.prototype.keys = function(callback){
var self=this;
self.sequentialize(callback,function(callback){
callback(null,self._keys.slice());});};




Storage.prototype.setItem = function(key,value,callback){
var self=this;
self.sequentialize(callback,function(callback){
if(Buffer.isBuffer(value)){
value = bufferPrefix + d64.encode(value);}


var idx=utils.sortedIndexOf(self._keys,key);
if(self._keys[idx] !== key){
self._keys.splice(idx,0,key);}

self._store.put(key,value,callback);});};




Storage.prototype.getItem = function(key,callback){
var self=this;
self.sequentialize(callback,function(callback){
self._store.get(key,function(err,retval){
if(err){
return callback(err);}

if(typeof retval === 'undefined' || retval === null){

return callback(new Error('NotFound'));}

if(typeof retval !== 'undefined'){
if(bufferRegex.test(retval)){
retval = d64.decode(retval.substring(bufferPrefix.length));}else 
if(arrayBuffRegex.test(retval)){



retval = retval.substring(arrayBuffPrefix.length);
retval = new ArrayBuffer(atob(retval).split('').map(function(c){
return c.charCodeAt(0);}));}else 

if(uintRegex.test(retval)){

retval = retval.substring(uintPrefix.length);
retval = new Uint8Array(atob(retval).split('').map(function(c){
return c.charCodeAt(0);}));}}



callback(null,retval);});});};





Storage.prototype.removeItem = function(key,callback){
var self=this;
self.sequentialize(callback,function(callback){
var idx=utils.sortedIndexOf(self._keys,key);
if(self._keys[idx] === key){
self._keys.splice(idx,1);
self._store.remove(key,function(err){
if(err){
return callback(err);}

callback();});}else 

{
callback();}});};




Storage.prototype.length = function(callback){
var self=this;
self.sequentialize(callback,function(callback){
callback(null,self._keys.length);});};



exports.Storage = Storage;
});
__d('asyncstorage-down/utils.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

exports.sortedIndexOf = function(arr,item){
var low=0;
var high=arr.length;
var mid;
while(low < high) {
mid = low + high >>> 1;
if(arr[mid] < item){
low = mid + 1;}else 
{
high = mid;}}


return low;};
});
__d('asyncstorage-down/asyncstorage-core.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var AsyncStorage=require('react-native/Libraries/react-native/react-native.js').AsyncStorage;





function createPrefix(dbname){
return dbname.replace(/!/g,'!!') + '!';}


function prepKey(key,core){
return core._prefix + key;}


function AsyncStorageCore(dbname){
this._prefix = createPrefix(dbname);}


AsyncStorageCore.prototype.getKeys = function(callback){
var keys=[];
var prefix=this._prefix;
var prefixLen=prefix.length;

AsyncStorage.getAllKeys(function(err,allKeys){
if(err)return callback(err);

allKeys.forEach(function(fullKey){
if(fullKey.slice(0,prefixLen) === prefix){
keys.push(fullKey.slice(prefixLen));}});



keys.sort();
callback(null,keys);});};



AsyncStorageCore.prototype.put = function(key,value,callback){
key = prepKey(key,this);
AsyncStorage.setItem(key,value,callback);};


AsyncStorageCore.prototype.get = function(key,callback){
key = prepKey(key,this);
AsyncStorage.getItem(key,callback);};


AsyncStorageCore.prototype.remove = function(key,callback){
key = prepKey(key,this);
AsyncStorage.removeItem(key,callback);};


AsyncStorageCore.destroy = function(dbname,callback){
var prefix=createPrefix(dbname);
var prefixLen=prefix.length;
AsyncStorage.getAllKeys(function(err,keys){
if(err)return callback(err);

keys = keys.filter(function(key){
return key.slice(0,prefixLen) === prefix;});


AsyncStorage.multiRemove(keys,callback);});};



module.exports = AsyncStorageCore;
});
__d('react-native/Libraries/react-native/react-native.js',["React","ActivityIndicatorIOS","DatePickerIOS","Image","ListView","MapView","Navigator","NavigatorIOS","PickerIOS","ProgressViewIOS","ScrollView","SegmentedControlIOS","SliderIOS","SwitchIOS","TabBarIOS","Text","TextInput","TouchableHighlight","TouchableOpacity","TouchableWithoutFeedback","View","WebView","ActionSheetIOS","AdSupportIOS","AlertIOS","Animated","AppRegistry","AppStateIOS","AsyncStorage","CameraRoll","Dimensions","Easing","ImagePickerIOS","InteractionManager","LayoutAnimation","LinkingIOS","NetInfo","PanResponder","PixelRatio","PushNotificationIOS","Settings","StatusBarIOS","StyleSheet","VibrationIOS","RCTDeviceEventEmitter","RCTNativeAppEventEmitter","NativeModules","Platform","requireNativeComponent","EdgeInsetsPropType","PointPropType","LinkedStateMixin","ReactComponentWithPureRenderMixin","NativeModules","ReactUpdates","cloneWithProps","ReactFragment","update","ReactDefaultPerf","ReactTestUtils"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';


















var ReactNative=Object.assign(Object.create(require('React')),{

ActivityIndicatorIOS:require('ActivityIndicatorIOS'),
DatePickerIOS:require('DatePickerIOS'),
Image:require('Image'),
ListView:require('ListView'),
MapView:require('MapView'),
Navigator:require('Navigator'),
NavigatorIOS:require('NavigatorIOS'),
PickerIOS:require('PickerIOS'),
ProgressViewIOS:require('ProgressViewIOS'),
ScrollView:require('ScrollView'),
SegmentedControlIOS:require('SegmentedControlIOS'),
SliderIOS:require('SliderIOS'),
SwitchIOS:require('SwitchIOS'),
TabBarIOS:require('TabBarIOS'),
Text:require('Text'),
TextInput:require('TextInput'),
TouchableHighlight:require('TouchableHighlight'),
TouchableOpacity:require('TouchableOpacity'),
TouchableWithoutFeedback:require('TouchableWithoutFeedback'),
View:require('View'),
WebView:require('WebView'),


ActionSheetIOS:require('ActionSheetIOS'),
AdSupportIOS:require('AdSupportIOS'),
AlertIOS:require('AlertIOS'),
Animated:require('Animated'),
AppRegistry:require('AppRegistry'),
AppStateIOS:require('AppStateIOS'),
AsyncStorage:require('AsyncStorage'),
CameraRoll:require('CameraRoll'),
Dimensions:require('Dimensions'),
Easing:require('Easing'),
ImagePickerIOS:require('ImagePickerIOS'),
InteractionManager:require('InteractionManager'),
LayoutAnimation:require('LayoutAnimation'),
LinkingIOS:require('LinkingIOS'),
NetInfo:require('NetInfo'),
PanResponder:require('PanResponder'),
PixelRatio:require('PixelRatio'),
PushNotificationIOS:require('PushNotificationIOS'),
Settings:require('Settings'),
StatusBarIOS:require('StatusBarIOS'),
StyleSheet:require('StyleSheet'),
VibrationIOS:require('VibrationIOS'),


DeviceEventEmitter:require('RCTDeviceEventEmitter'),
NativeAppEventEmitter:require('RCTNativeAppEventEmitter'),
NativeModules:require('NativeModules'),
Platform:require('Platform'),
requireNativeComponent:require('requireNativeComponent'),


EdgeInsetsPropType:require('EdgeInsetsPropType'),
PointPropType:require('PointPropType'),

addons:{
LinkedStateMixin:require('LinkedStateMixin'),
Perf:undefined,
PureRenderMixin:require('ReactComponentWithPureRenderMixin'),
TestModule:require('NativeModules').TestModule,
TestUtils:undefined,
batchedUpdates:require('ReactUpdates').batchedUpdates,
cloneWithProps:require('cloneWithProps'),
createFragment:require('ReactFragment').create,
update:require('update')}});



if(__DEV__){
ReactNative.addons.Perf = require('ReactDefaultPerf');
ReactNative.addons.TestUtils = require('ReactTestUtils');}


module.exports = ReactNative;
});
__d('React',["ReactNative"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












module.exports = require('ReactNative');
});
__d('ReactNative',["ReactChildren","ReactClass","ReactComponent","ReactContext","ReactCurrentOwner","ReactElement","ReactElementValidator","ReactInstanceHandles","ReactNativeDefaultInjection","ReactNativeMount","ReactPropTypes","deprecated","findNodeHandle","invariant","onlyChild","ReactReconciler","ReactNativeTextComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactChildren=require('ReactChildren');
var ReactClass=require('ReactClass');
var ReactComponent=require('ReactComponent');
var ReactContext=require('ReactContext');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeDefaultInjection=require('ReactNativeDefaultInjection');
var ReactNativeMount=require('ReactNativeMount');
var ReactPropTypes=require('ReactPropTypes');

var deprecated=require('deprecated');
var findNodeHandle=require('findNodeHandle');
var invariant=require('invariant');
var onlyChild=require('onlyChild');

ReactNativeDefaultInjection.inject();

var createElement=ReactElement.createElement;
var createFactory=ReactElement.createFactory;
var cloneElement=ReactElement.cloneElement;

if(__DEV__){
createElement = ReactElementValidator.createElement;
createFactory = ReactElementValidator.createFactory;
cloneElement = ReactElementValidator.cloneElement;}


var resolveDefaultProps=function(element){

var defaultProps=element.type.defaultProps;
var props=element.props;
for(var propName in defaultProps) {
if(props[propName] === undefined){
props[propName] = defaultProps[propName];}}};





var augmentElement=function(element){
if(__DEV__){
invariant(
false,
'This optimized path should never be used in DEV mode because ' + 
'it does not provide validation. Check your JSX transform.');}


element._owner = ReactCurrentOwner.current;
element._context = ReactContext.current;
if(element.type.defaultProps){
resolveDefaultProps(element);}

return element;};


var render=function(
element,
mountInto,
callback)
{
return ReactNativeMount.renderComponent(element,mountInto,callback);};


var ReactNative={
hasReactNativeInitialized:false,
Children:{
map:ReactChildren.map,
forEach:ReactChildren.forEach,
count:ReactChildren.count,
only:onlyChild},

Component:ReactComponent,
PropTypes:ReactPropTypes,
createClass:ReactClass.createClass,
createElement:createElement,
createFactory:createFactory,
cloneElement:cloneElement,
_augmentElement:augmentElement,
findNodeHandle:findNodeHandle,
render:render,
unmountComponentAtNode:ReactNativeMount.unmountComponentAtNode,


__spread:Object.assign,

unmountComponentAtNodeAndRemoveContainer:ReactNativeMount.unmountComponentAtNodeAndRemoveContainer,
isValidClass:ReactElement.isValidFactory,
isValidElement:ReactElement.isValidElement,


renderComponent:deprecated(
'React',
'renderComponent',
'render',
this,
render),

isValidComponent:deprecated(
'React',
'isValidComponent',
'isValidElement',
this,
ReactElement.isValidElement)};






if(
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && 
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function'){
__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
CurrentOwner:ReactCurrentOwner,
InstanceHandles:ReactInstanceHandles,
Mount:ReactNativeMount,
Reconciler:require('ReactReconciler'),
TextComponent:require('ReactNativeTextComponent')});}



module.exports = ReactNative;
});
__d('ReactChildren',["PooledClass","ReactFragment","traverseAllChildren","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PooledClass=require('PooledClass');
var ReactFragment=require('ReactFragment');

var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');

var twoArgumentPooler=PooledClass.twoArgumentPooler;
var threeArgumentPooler=PooledClass.threeArgumentPooler;









function ForEachBookKeeping(forEachFunction,forEachContext){
this.forEachFunction = forEachFunction;
this.forEachContext = forEachContext;}

PooledClass.addPoolingTo(ForEachBookKeeping,twoArgumentPooler);

function forEachSingleChild(traverseContext,child,name,i){
var forEachBookKeeping=traverseContext;
forEachBookKeeping.forEachFunction.call(
forEachBookKeeping.forEachContext,child,i);}












function forEachChildren(children,forEachFunc,forEachContext){
if(children == null){
return children;}


var traverseContext=
ForEachBookKeeping.getPooled(forEachFunc,forEachContext);
traverseAllChildren(children,forEachSingleChild,traverseContext);
ForEachBookKeeping.release(traverseContext);}











function MapBookKeeping(mapResult,mapFunction,mapContext){
this.mapResult = mapResult;
this.mapFunction = mapFunction;
this.mapContext = mapContext;}

PooledClass.addPoolingTo(MapBookKeeping,threeArgumentPooler);

function mapSingleChildIntoContext(traverseContext,child,name,i){
var mapBookKeeping=traverseContext;
var mapResult=mapBookKeeping.mapResult;

var keyUnique=!mapResult.hasOwnProperty(name);
if(__DEV__){
warning(
keyUnique,
'ReactChildren.map(...): Encountered two children with the same key, ' + 
'`%s`. Child keys must be unique; when two children share a key, only ' + 
'the first child will be used.',
name);}



if(keyUnique){
var mappedChild=
mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext,child,i);
mapResult[name] = mappedChild;}}

















function mapChildren(children,func,context){
if(children == null){
return children;}


var mapResult={};
var traverseContext=MapBookKeeping.getPooled(mapResult,func,context);
traverseAllChildren(children,mapSingleChildIntoContext,traverseContext);
MapBookKeeping.release(traverseContext);
return ReactFragment.create(mapResult);}


function forEachSingleChildDummy(traverseContext,child,name,i){
return null;}









function countChildren(children,context){
return traverseAllChildren(children,forEachSingleChildDummy,null);}


var ReactChildren={
forEach:forEachChildren,
map:mapChildren,
count:countChildren};


module.exports = ReactChildren;
});
__d('PooledClass',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');








var oneArgumentPooler=function(copyFieldsFrom){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,copyFieldsFrom);
return instance;}else 
{
return new Klass(copyFieldsFrom);}};



var twoArgumentPooler=function(a1,a2){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2);
return instance;}else 
{
return new Klass(a1,a2);}};



var threeArgumentPooler=function(a1,a2,a3){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3);
return instance;}else 
{
return new Klass(a1,a2,a3);}};



var fiveArgumentPooler=function(a1,a2,a3,a4,a5){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3,a4,a5);
return instance;}else 
{
return new Klass(a1,a2,a3,a4,a5);}};



var standardReleaser=function(instance){
var Klass=this;
invariant(
instance instanceof Klass,
'Trying to release an instance into a pool of a different type.');

if(instance.destructor){
instance.destructor();}

if(Klass.instancePool.length < Klass.poolSize){
Klass.instancePool.push(instance);}};



var DEFAULT_POOL_SIZE=10;
var DEFAULT_POOLER=oneArgumentPooler;










var addPoolingTo=function(CopyConstructor,pooler){
var NewKlass=CopyConstructor;
NewKlass.instancePool = [];
NewKlass.getPooled = pooler || DEFAULT_POOLER;
if(!NewKlass.poolSize){
NewKlass.poolSize = DEFAULT_POOL_SIZE;}

NewKlass.release = standardReleaser;
return NewKlass;};


var PooledClass={
addPoolingTo:addPoolingTo,
oneArgumentPooler:oneArgumentPooler,
twoArgumentPooler:twoArgumentPooler,
threeArgumentPooler:threeArgumentPooler,
fiveArgumentPooler:fiveArgumentPooler};


module.exports = PooledClass;
});
__d('invariant',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";























var invariant=function(condition,format,a,b,c,d,e,f){
if(__DEV__){
if(format === undefined){
throw new Error('invariant requires an error message argument');}}



if(!condition){
var error;
if(format === undefined){
error = new Error(
'Minified exception occurred; use the non-minified dev environment ' + 
'for the full error message and additional helpful warnings.');}else 

{
var args=[a,b,c,d,e,f];
var argIndex=0;
error = new Error(
'Invariant Violation: ' + 
format.replace(/%s/g,function(){return args[argIndex++];}));}



error.framesToPop = 1;
throw error;}};



module.exports = invariant;
});
__d('ReactFragment',["ReactElement","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');

var warning=require('warning');









if(__DEV__){
var fragmentKey='_reactFragment';
var didWarnKey='_reactDidWarn';
var canWarnForReactFragment=false;

try{



var dummy=function(){
return 1;};


Object.defineProperty(
{},
fragmentKey,
{enumerable:false,value:true});


Object.defineProperty(
{},
'key',
{enumerable:true,get:dummy});


canWarnForReactFragment = true;}
catch(x) {}

var proxyPropertyAccessWithWarning=function(obj,key){
Object.defineProperty(obj,key,{
enumerable:true,
get:function(){
warning(
this[didWarnKey],
'A ReactFragment is an opaque type. Accessing any of its ' + 
'properties is deprecated. Pass it to one of the React.Children ' + 
'helpers.');

this[didWarnKey] = true;
return this[fragmentKey][key];},

set:function(value){
warning(
this[didWarnKey],
'A ReactFragment is an immutable opaque type. Mutating its ' + 
'properties is deprecated.');

this[didWarnKey] = true;
this[fragmentKey][key] = value;}});};




var issuedWarnings={};

var didWarnForFragment=function(fragment){


var fragmentCacheKey='';
for(var key in fragment) {
fragmentCacheKey += key + ':' + typeof fragment[key] + ',';}

var alreadyWarnedOnce=!!issuedWarnings[fragmentCacheKey];
issuedWarnings[fragmentCacheKey] = true;
return alreadyWarnedOnce;};}



var ReactFragment={


create:function(object){
if(__DEV__){
if(typeof object !== 'object' || !object || Array.isArray(object)){
warning(
false,
'React.addons.createFragment only accepts a single object.',
object);

return object;}

if(ReactElement.isValidElement(object)){
warning(
false,
'React.addons.createFragment does not accept a ReactElement ' + 
'without a wrapper object.');

return object;}

if(canWarnForReactFragment){
var proxy={};
Object.defineProperty(proxy,fragmentKey,{
enumerable:false,
value:object});

Object.defineProperty(proxy,didWarnKey,{
writable:true,
enumerable:false,
value:false});

for(var key in object) {
proxyPropertyAccessWithWarning(proxy,key);}

Object.preventExtensions(proxy);
return proxy;}}


return object;},



extract:function(fragment){
if(__DEV__){
if(canWarnForReactFragment){
if(!fragment[fragmentKey]){
warning(
didWarnForFragment(fragment),
'Any use of a keyed object should be wrapped in ' + 
'React.addons.createFragment(object) before being passed as a ' + 
'child.');

return fragment;}

return fragment[fragmentKey];}}


return fragment;},




extractIfFragment:function(fragment){
if(__DEV__){
if(canWarnForReactFragment){

if(fragment[fragmentKey]){
return fragment[fragmentKey];}




for(var key in fragment) {
if(fragment.hasOwnProperty(key) && 
ReactElement.isValidElement(fragment[key])){


return ReactFragment.extract(fragment);}}}}




return fragment;}};



module.exports = ReactFragment;
});
__d('ReactElement',["ReactContext","ReactCurrentOwner","Object.assign","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactContext=require('ReactContext');
var ReactCurrentOwner=require('ReactCurrentOwner');

var assign=require('Object.assign');
var warning=require('warning');

var RESERVED_PROPS={
key:true,
ref:true};









function defineWarningProperty(object,key){
Object.defineProperty(object,key,{

configurable:false,
enumerable:true,

get:function(){
if(!this._store){
return null;}

return this._store[key];},


set:function(value){
warning(
false,
'Don\'t set the %s property of the React element. Instead, ' + 
'specify the correct value when initially creating the element.',
key);

this._store[key] = value;}});}








var useMutationMembrane=false;







function defineMutationMembrane(prototype){
try{
var pseudoFrozenProperties={
props:true};

for(var key in pseudoFrozenProperties) {
defineWarningProperty(prototype,key);}

useMutationMembrane = true;}
catch(x) {}}














var ReactElement=function(type,key,ref,owner,context,props){

this.type = type;
this.key = key;
this.ref = ref;


this._owner = owner;



this._context = context;

if(__DEV__){




this._store = {props:props,originalProps:assign({},props)};





try{
Object.defineProperty(this._store,'validated',{
configurable:false,
enumerable:false,
writable:true});}

catch(x) {}

this._store.validated = false;




if(useMutationMembrane){
Object.freeze(this);
return;}}



this.props = props;};




ReactElement.prototype = {
_isReactElement:true};


if(__DEV__){
defineMutationMembrane(ReactElement.prototype);}


ReactElement.createElement = function(type,config,children){
var propName;


var props={};

var key=null;
var ref=null;

if(config != null){
ref = config.ref === undefined?null:config.ref;
key = config.key === undefined?null:'' + config.key;

for(propName in config) {
if(config.hasOwnProperty(propName) && 
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName] = config[propName];}}}






var childrenLength=arguments.length - 2;
if(childrenLength === 1){
props.children = children;}else 
if(childrenLength > 1){
var childArray=Array(childrenLength);
for(var i=0;i < childrenLength;i++) {
childArray[i] = arguments[i + 2];}

props.children = childArray;}



if(type && type.defaultProps){
var defaultProps=type.defaultProps;
for(propName in defaultProps) {
if(typeof props[propName] === 'undefined'){
props[propName] = defaultProps[propName];}}}




return new ReactElement(
type,
key,
ref,
ReactCurrentOwner.current,
ReactContext.current,
props);};



ReactElement.createFactory = function(type){
var factory=ReactElement.createElement.bind(null,type);





factory.type = type;
return factory;};


ReactElement.cloneAndReplaceProps = function(oldElement,newProps){
var newElement=new ReactElement(
oldElement.type,
oldElement.key,
oldElement.ref,
oldElement._owner,
oldElement._context,
newProps);


if(__DEV__){

newElement._store.validated = oldElement._store.validated;}

return newElement;};


ReactElement.cloneElement = function(element,config,children){
var propName;


var props=assign({},element.props);


var key=element.key;
var ref=element.ref;


var owner=element._owner;

if(config != null){
if(config.ref !== undefined){

ref = config.ref;
owner = ReactCurrentOwner.current;}

if(config.key !== undefined){
key = '' + config.key;}


for(propName in config) {
if(config.hasOwnProperty(propName) && 
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName] = config[propName];}}}






var childrenLength=arguments.length - 2;
if(childrenLength === 1){
props.children = children;}else 
if(childrenLength > 1){
var childArray=Array(childrenLength);
for(var i=0;i < childrenLength;i++) {
childArray[i] = arguments[i + 2];}

props.children = childArray;}


return new ReactElement(
element.type,
key,
ref,
owner,
element._context,
props);};








ReactElement.isValidElement = function(object){




var isElement=!!(object && object._isReactElement);





return isElement;};


module.exports = ReactElement;
});
__d('ReactContext',["Object.assign","emptyObject","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var warning=require('warning');

var didWarn=false;







var ReactContext={





current:emptyObject,

















withContext:function(newContext,scopedCallback){
if(__DEV__){
warning(
didWarn,
'withContext is deprecated and will be removed in a future version. ' + 
'Use a wrapper component with getChildContext instead.');


didWarn = true;}


var result;
var previousContext=ReactContext.current;
ReactContext.current = assign({},previousContext,newContext);
try{
result = scopedCallback();}finally 
{
ReactContext.current = previousContext;}

return result;}};




module.exports = ReactContext;
});
__d('Object.assign',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














function assign(target,sources){
if(target == null){
throw new TypeError('Object.assign target cannot be null or undefined');}


var to=Object(target);
var hasOwnProperty=Object.prototype.hasOwnProperty;

for(var nextIndex=1;nextIndex < arguments.length;nextIndex++) {
var nextSource=arguments[nextIndex];
if(nextSource == null){
continue;}


var from=Object(nextSource);






for(var key in from) {
if(hasOwnProperty.call(from,key)){
to[key] = from[key];}}}




return to;}


module.exports = assign;
});
__d('emptyObject',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";












var emptyObject={};

if(__DEV__){
Object.freeze(emptyObject);}


module.exports = emptyObject;
});
__d('warning',["emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";












var emptyFunction=require('emptyFunction');








var warning=emptyFunction;

if(__DEV__){
warning = function(condition,format){for(var _len=arguments.length,args=Array(_len > 2?_len - 2:0),_key=2;_key < _len;_key++) {args[_key - 2] = arguments[_key];}
if(format === undefined){
throw new Error(
'`warning(condition, format, ...args)` requires a warning ' + 
'message argument');}



if(format.length < 10 || /^[s\W]*$/.test(format)){
throw new Error(
'The warning format should be able to uniquely identify this ' + 
'warning. Please, use a more descriptive format than: ' + format);}



if(format.indexOf('Failed Composite propType: ') === 0){
return;}


if(!condition){
var argIndex=0;
var message='Warning: ' + format.replace(/%s/g,function(){return args[argIndex++];});
console.warn(message);
try{



throw new Error(message);}
catch(x) {}}};}




module.exports = warning;
});
__d('emptyFunction',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 










makeEmptyFunction(arg){
return function(){
return arg;};}








function emptyFunction(){}

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function(){return this;};
emptyFunction.thatReturnsArgument = function(arg){return arg;};

module.exports = emptyFunction;
});
__d('ReactCurrentOwner',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var ReactCurrentOwner={





current:null};



module.exports = ReactCurrentOwner;
});
__d('traverseAllChildren',["ReactElement","ReactFragment","ReactInstanceHandles","getIteratorFn","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactInstanceHandles=require('ReactInstanceHandles');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;
var SUBSEPARATOR=':';






var userProvidedKeyEscaperLookup={
'=':'=0',
'.':'=1',
':':'=2'};


var userProvidedKeyEscapeRegex=/[=.:]/g;

var didWarnAboutMaps=false;

function userProvidedKeyEscaper(match){
return userProvidedKeyEscaperLookup[match];}









function getComponentKey(component,index){
if(component && component.key != null){

return wrapUserProvidedKey(component.key);}


return index.toString(36);}








function escapeUserProvidedKey(text){
return ('' + text).replace(
userProvidedKeyEscapeRegex,
userProvidedKeyEscaper);}










function wrapUserProvidedKey(key){
return '$' + escapeUserProvidedKey(key);}











function traverseAllChildrenImpl(
children,
nameSoFar,
indexSoFar,
callback,
traverseContext)
{
var type=typeof children;

if(type === 'undefined' || type === 'boolean'){

children = null;}


if(children === null || 
type === 'string' || 
type === 'number' || 
ReactElement.isValidElement(children)){
callback(
traverseContext,
children,


nameSoFar === ''?SEPARATOR + getComponentKey(children,0):nameSoFar,
indexSoFar);

return 1;}


var child,nextName,nextIndex;
var subtreeCount=0;

if(Array.isArray(children)){
for(var i=0;i < children.length;i++) {
child = children[i];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
getComponentKey(child,i);

nextIndex = indexSoFar + subtreeCount;
subtreeCount += traverseAllChildrenImpl(
child,
nextName,
nextIndex,
callback,
traverseContext);}}else 


{
var iteratorFn=getIteratorFn(children);
if(iteratorFn){
var iterator=iteratorFn.call(children);
var step;
if(iteratorFn !== children.entries){
var ii=0;
while(!(step = iterator.next()).done) {
child = step.value;
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
getComponentKey(child,ii++);

nextIndex = indexSoFar + subtreeCount;
subtreeCount += traverseAllChildrenImpl(
child,
nextName,
nextIndex,
callback,
traverseContext);}}else 


{
if(__DEV__){
warning(
didWarnAboutMaps,
'Using Maps as children is not yet fully supported. It is an ' + 
'experimental feature that might be removed. Convert it to a ' + 
'sequence / iterable of keyed ReactElements instead.');

didWarnAboutMaps = true;}


while(!(step = iterator.next()).done) {
var entry=step.value;
if(entry){
child = entry[1];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + 
getComponentKey(child,0);

nextIndex = indexSoFar + subtreeCount;
subtreeCount += traverseAllChildrenImpl(
child,
nextName,
nextIndex,
callback,
traverseContext);}}}}else 




if(type === 'object'){
invariant(
children.nodeType !== 1,
'traverseAllChildren(...): Encountered an invalid child; DOM ' + 
'elements are not valid children of React components.');

var fragment=ReactFragment.extract(children);
for(var key in fragment) {
if(fragment.hasOwnProperty(key)){
child = fragment[key];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
wrapUserProvidedKey(key) + SUBSEPARATOR + 
getComponentKey(child,0);

nextIndex = indexSoFar + subtreeCount;
subtreeCount += traverseAllChildrenImpl(
child,
nextName,
nextIndex,
callback,
traverseContext);}}}}






return subtreeCount;}


















function traverseAllChildren(children,callback,traverseContext){
if(children == null){
return 0;}


return traverseAllChildrenImpl(children,'',0,callback,traverseContext);}


module.exports = traverseAllChildren;
});
__d('ReactInstanceHandles',["ReactRootIndex","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";




















var ReactRootIndex=require('ReactRootIndex');

var invariant=require('invariant');

var SEPARATOR='.';
var SEPARATOR_LENGTH=SEPARATOR.length;




var MAX_TREE_DEPTH=100;








function getReactRootIDString(index){
return SEPARATOR + index.toString(36);}










function isBoundary(id,index){
return id.charAt(index) === SEPARATOR || index === id.length;}









function isValidID(id){
return id === '' || 
id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;}











function isAncestorIDOf(ancestorID,descendantID){
return (
descendantID.indexOf(ancestorID) === 0 && 
isBoundary(descendantID,ancestorID.length));}










function getParentID(id){
return id?id.substr(0,id.lastIndexOf(SEPARATOR)):'';}











function getNextDescendantID(ancestorID,destinationID){
invariant(
isValidID(ancestorID) && isValidID(destinationID),
'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
ancestorID,
destinationID);

invariant(
isAncestorIDOf(ancestorID,destinationID),
'getNextDescendantID(...): React has made an invalid assumption about ' + 
'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
ancestorID,
destinationID);

if(ancestorID === destinationID){
return ancestorID;}



var start=ancestorID.length + SEPARATOR_LENGTH;
for(var i=start;i < destinationID.length;i++) {
if(isBoundary(destinationID,i)){
break;}}


return destinationID.substr(0,i);}













function getFirstCommonAncestorID(oneID,twoID){
var minLength=Math.min(oneID.length,twoID.length);
if(minLength === 0){
return '';}

var lastCommonMarkerIndex=0;

for(var i=0;i <= minLength;i++) {
if(isBoundary(oneID,i) && isBoundary(twoID,i)){
lastCommonMarkerIndex = i;}else 
if(oneID.charAt(i) !== twoID.charAt(i)){
break;}}


var longestCommonID=oneID.substr(0,lastCommonMarkerIndex);
invariant(
isValidID(longestCommonID),
'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
oneID,
twoID,
longestCommonID);

return longestCommonID;}














function traverseParentPath(start,stop,cb,arg,skipFirst,skipLast){
start = start || '';
stop = stop || '';
invariant(
start !== stop,
'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
start);

var traverseUp=isAncestorIDOf(stop,start);
invariant(
traverseUp || isAncestorIDOf(start,stop),
'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 
'not have a parent path.',
start,
stop);


var depth=0;
var traverse=traverseUp?getParentID:getNextDescendantID;
for(var id=start;;id = traverse(id,stop)) {
var ret;
if((!skipFirst || id !== start) && (!skipLast || id !== stop)){
ret = cb(id,traverseUp,arg);}

if(ret === false || id === stop){

break;}

invariant(
depth++ < MAX_TREE_DEPTH,
'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 
'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
start,stop);}}











var ReactInstanceHandles={





createReactRootID:function(){
return getReactRootIDString(ReactRootIndex.createReactRootIndex());},










createReactID:function(rootID,name){
return rootID + name;},










getReactRootIDFromNodeID:function(id){
if(id && id.charAt(0) === SEPARATOR && id.length > 1){
var index=id.indexOf(SEPARATOR,1);
return index > -1?id.substr(0,index):id;}

return null;},
















traverseEnterLeave:function(leaveID,enterID,cb,upArg,downArg){
var ancestorID=getFirstCommonAncestorID(leaveID,enterID);
if(ancestorID !== leaveID){
traverseParentPath(leaveID,ancestorID,cb,upArg,false,true);}

if(ancestorID !== enterID){
traverseParentPath(ancestorID,enterID,cb,downArg,true,false);}},













traverseTwoPhase:function(targetID,cb,arg){
if(targetID){
traverseParentPath('',targetID,cb,arg,true,false);
traverseParentPath(targetID,'',cb,arg,false,true);}},






traverseTwoPhaseSkipTarget:function(targetID,cb,arg){
if(targetID){
traverseParentPath('',targetID,cb,arg,true,true);
traverseParentPath(targetID,'',cb,arg,true,true);}},















traverseAncestors:function(targetID,cb,arg){
traverseParentPath('',targetID,cb,arg,true,false);},






_getFirstCommonAncestorID:getFirstCommonAncestorID,





_getNextDescendantID:getNextDescendantID,

isAncestorIDOf:isAncestorIDOf,

SEPARATOR:SEPARATOR};



module.exports = ReactInstanceHandles;
});
__d('ReactRootIndex',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactRootIndexInjection={



injectCreateReactRootIndex:function(_createReactRootIndex){
ReactRootIndex.createReactRootIndex = _createReactRootIndex;}};



var ReactRootIndex={
createReactRootIndex:null,
injection:ReactRootIndexInjection};


module.exports = ReactRootIndex;
});
__d('getIteratorFn',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var ITERATOR_SYMBOL=typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL='@@iterator';















function getIteratorFn(maybeIterable){
var iteratorFn=maybeIterable && (
ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || 
maybeIterable[FAUX_ITERATOR_SYMBOL]);

if(typeof iteratorFn === 'function'){
return iteratorFn;}}



module.exports = getIteratorFn;
});
__d('ReactClass',["ReactComponent","ReactCurrentOwner","ReactElement","ReactErrorUtils","ReactInstanceMap","ReactLifeCycle","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactUpdateQueue","Object.assign","invariant","keyMirror","keyOf","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactComponent=require('ReactComponent');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactErrorUtils=require('ReactErrorUtils');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactLifeCycle=require('ReactLifeCycle');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactUpdateQueue=require('ReactUpdateQueue');

var assign=require('Object.assign');
var invariant=require('invariant');
var keyMirror=require('keyMirror');
var keyOf=require('keyOf');
var warning=require('warning');

var MIXINS_KEY=keyOf({mixins:null});




var SpecPolicy=keyMirror({



DEFINE_ONCE:null,




DEFINE_MANY:null,



OVERRIDE_BASE:null,





DEFINE_MANY_MERGED:null});



var injectedMixins=[];























var ReactClassInterface={







mixins:SpecPolicy.DEFINE_MANY,








statics:SpecPolicy.DEFINE_MANY,







propTypes:SpecPolicy.DEFINE_MANY,







contextTypes:SpecPolicy.DEFINE_MANY,







childContextTypes:SpecPolicy.DEFINE_MANY,













getDefaultProps:SpecPolicy.DEFINE_MANY_MERGED,















getInitialState:SpecPolicy.DEFINE_MANY_MERGED,





getChildContext:SpecPolicy.DEFINE_MANY_MERGED,

















render:SpecPolicy.DEFINE_ONCE,












componentWillMount:SpecPolicy.DEFINE_MANY,











componentDidMount:SpecPolicy.DEFINE_MANY,




















componentWillReceiveProps:SpecPolicy.DEFINE_MANY,





















shouldComponentUpdate:SpecPolicy.DEFINE_ONCE,
















componentWillUpdate:SpecPolicy.DEFINE_MANY,













componentDidUpdate:SpecPolicy.DEFINE_MANY,












componentWillUnmount:SpecPolicy.DEFINE_MANY,















updateComponent:SpecPolicy.OVERRIDE_BASE};












var RESERVED_SPEC_KEYS={
displayName:function(Constructor,displayName){
Constructor.displayName = displayName;},

mixins:function(Constructor,mixins){
if(mixins){
for(var i=0;i < mixins.length;i++) {
mixSpecIntoComponent(Constructor,mixins[i]);}}},



childContextTypes:function(Constructor,childContextTypes){
if(__DEV__){
validateTypeDef(
Constructor,
childContextTypes,
ReactPropTypeLocations.childContext);}


Constructor.childContextTypes = assign(
{},
Constructor.childContextTypes,
childContextTypes);},


contextTypes:function(Constructor,contextTypes){
if(__DEV__){
validateTypeDef(
Constructor,
contextTypes,
ReactPropTypeLocations.context);}


Constructor.contextTypes = assign(
{},
Constructor.contextTypes,
contextTypes);},






getDefaultProps:function(Constructor,getDefaultProps){
if(Constructor.getDefaultProps){
Constructor.getDefaultProps = createMergedResultFunction(
Constructor.getDefaultProps,
getDefaultProps);}else 

{
Constructor.getDefaultProps = getDefaultProps;}},


propTypes:function(Constructor,propTypes){
if(__DEV__){
validateTypeDef(
Constructor,
propTypes,
ReactPropTypeLocations.prop);}


Constructor.propTypes = assign(
{},
Constructor.propTypes,
propTypes);},


statics:function(Constructor,statics){
mixStaticSpecIntoComponent(Constructor,statics);}};



function validateTypeDef(Constructor,typeDef,location){
for(var propName in typeDef) {
if(typeDef.hasOwnProperty(propName)){


warning(
typeof typeDef[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually from ' + 
'React.PropTypes.',
Constructor.displayName || 'ReactClass',
ReactPropTypeLocationNames[location],
propName);}}}





function validateMethodOverride(proto,name){
var specPolicy=ReactClassInterface.hasOwnProperty(name)?
ReactClassInterface[name]:
null;


if(ReactClassMixin.hasOwnProperty(name)){
invariant(
specPolicy === SpecPolicy.OVERRIDE_BASE,
'ReactClassInterface: You are attempting to override ' + 
'`%s` from your class specification. Ensure that your method names ' + 
'do not overlap with React methods.',
name);}




if(proto.hasOwnProperty(name)){
invariant(
specPolicy === SpecPolicy.DEFINE_MANY || 
specPolicy === SpecPolicy.DEFINE_MANY_MERGED,
'ReactClassInterface: You are attempting to define ' + 
'`%s` on your component more than once. This conflict may be due ' + 
'to a mixin.',
name);}}








function mixSpecIntoComponent(Constructor,spec){
if(!spec){
return;}


invariant(
typeof spec !== 'function',
'ReactClass: You\'re attempting to ' + 
'use a component class as a mixin. Instead, just use a regular object.');

invariant(
!ReactElement.isValidElement(spec),
'ReactClass: You\'re attempting to ' + 
'use a component as a mixin. Instead, just use a regular object.');


var proto=Constructor.prototype;




if(spec.hasOwnProperty(MIXINS_KEY)){
RESERVED_SPEC_KEYS.mixins(Constructor,spec.mixins);}


for(var name in spec) {
if(!spec.hasOwnProperty(name)){
continue;}


if(name === MIXINS_KEY){

continue;}


var property=spec[name];
validateMethodOverride(proto,name);

if(RESERVED_SPEC_KEYS.hasOwnProperty(name)){
RESERVED_SPEC_KEYS[name](Constructor,property);}else 
{




var isReactClassMethod=
ReactClassInterface.hasOwnProperty(name);
var isAlreadyDefined=proto.hasOwnProperty(name);
var markedDontBind=property && property.__reactDontBind;
var isFunction=typeof property === 'function';
var shouldAutoBind=
isFunction && 
!isReactClassMethod && 
!isAlreadyDefined && 
!markedDontBind;

if(shouldAutoBind){
if(!proto.__reactAutoBindMap){
proto.__reactAutoBindMap = {};}

proto.__reactAutoBindMap[name] = property;
proto[name] = property;}else 
{
if(isAlreadyDefined){
var specPolicy=ReactClassInterface[name];


invariant(
isReactClassMethod && (
specPolicy === SpecPolicy.DEFINE_MANY_MERGED || 
specPolicy === SpecPolicy.DEFINE_MANY),

'ReactClass: Unexpected spec policy %s for key %s ' + 
'when mixing in component specs.',
specPolicy,
name);




if(specPolicy === SpecPolicy.DEFINE_MANY_MERGED){
proto[name] = createMergedResultFunction(proto[name],property);}else 
if(specPolicy === SpecPolicy.DEFINE_MANY){
proto[name] = createChainedFunction(proto[name],property);}}else 

{
proto[name] = property;
if(__DEV__){


if(typeof property === 'function' && spec.displayName){
proto[name].displayName = spec.displayName + '_' + name;}}}}}}}








function mixStaticSpecIntoComponent(Constructor,statics){
if(!statics){
return;}

for(var name in statics) {
var property=statics[name];
if(!statics.hasOwnProperty(name)){
continue;}


var isReserved=(name in RESERVED_SPEC_KEYS);
invariant(
!isReserved,
'ReactClass: You are attempting to define a reserved ' + 
'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 
'as an instance property instead; it will still be accessible on the ' + 
'constructor.',
name);


var isInherited=(name in Constructor);
invariant(
!isInherited,
'ReactClass: You are attempting to define ' + 
'`%s` on your component more than once. This conflict may be ' + 
'due to a mixin.',
name);

Constructor[name] = property;}}










function mergeIntoWithNoDuplicateKeys(one,two){
invariant(
one && two && typeof one === 'object' && typeof two === 'object',
'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');


for(var key in two) {
if(two.hasOwnProperty(key)){
invariant(
one[key] === undefined,
'mergeIntoWithNoDuplicateKeys(): ' + 
'Tried to merge two objects with the same key: `%s`. This conflict ' + 
'may be due to a mixin; in particular, this may be caused by two ' + 
'getInitialState() or getDefaultProps() methods returning objects ' + 
'with clashing keys.',
key);

one[key] = two[key];}}


return one;}










function createMergedResultFunction(one,two){
return function mergedResult(){
var a=one.apply(this,arguments);
var b=two.apply(this,arguments);
if(a == null){
return b;}else 
if(b == null){
return a;}

var c={};
mergeIntoWithNoDuplicateKeys(c,a);
mergeIntoWithNoDuplicateKeys(c,b);
return c;};}











function createChainedFunction(one,two){
return function chainedFunction(){
one.apply(this,arguments);
two.apply(this,arguments);};}










function bindAutoBindMethod(component,method){
var boundMethod=method.bind(component);
if(__DEV__){
boundMethod.__reactBoundContext = component;
boundMethod.__reactBoundMethod = method;
boundMethod.__reactBoundArguments = null;
var componentName=component.constructor.displayName;
var _bind=boundMethod.bind;

boundMethod.bind = function(newThis){for(var _len=arguments.length,args=Array(_len > 1?_len - 1:0),_key=1;_key < _len;_key++) {args[_key - 1] = arguments[_key];}



if(newThis !== component && newThis !== null){
warning(
false,
'bind(): React component methods may only be bound to the ' + 
'component instance. See %s',
componentName);}else 

if(!args.length){
warning(
false,
'bind(): You are binding a component method to the component. ' + 
'React does this for you automatically in a high-performance ' + 
'way, so you can safely remove this call. See %s',
componentName);

return boundMethod;}

var reboundMethod=_bind.apply(boundMethod,arguments);
reboundMethod.__reactBoundContext = component;
reboundMethod.__reactBoundMethod = method;
reboundMethod.__reactBoundArguments = args;
return reboundMethod;};}



return boundMethod;}







function bindAutoBindMethods(component){
for(var autoBindKey in component.__reactAutoBindMap) {
if(component.__reactAutoBindMap.hasOwnProperty(autoBindKey)){
var method=component.__reactAutoBindMap[autoBindKey];
component[autoBindKey] = bindAutoBindMethod(
component,
ReactErrorUtils.guard(
method,
component.constructor.displayName + '.' + autoBindKey));}}}






var typeDeprecationDescriptor={
enumerable:false,
get:function(){
var displayName=this.displayName || this.name || 'Component';
warning(
false,
'%s.type is deprecated. Use %s directly to access the class.',
displayName,
displayName);

Object.defineProperty(this,'type',{
value:this});

return this;}};







var ReactClassMixin={





replaceState:function(newState,callback){
ReactUpdateQueue.enqueueReplaceState(this,newState);
if(callback){
ReactUpdateQueue.enqueueCallback(this,callback);}},









isMounted:function(){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing isMounted inside its render() function. ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.',
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


var internalInstance=ReactInstanceMap.get(this);
return (
internalInstance && 
internalInstance !== ReactLifeCycle.currentlyMountingInstance);},












setProps:function(partialProps,callback){
ReactUpdateQueue.enqueueSetProps(this,partialProps);
if(callback){
ReactUpdateQueue.enqueueCallback(this,callback);}},












replaceProps:function(newProps,callback){
ReactUpdateQueue.enqueueReplaceProps(this,newProps);
if(callback){
ReactUpdateQueue.enqueueCallback(this,callback);}}};




var ReactClassComponent=function(){};
assign(
ReactClassComponent.prototype,
ReactComponent.prototype,
ReactClassMixin);







var ReactClass={








createClass:function(spec){
var Constructor=function(props,context){



if(__DEV__){
warning(
this instanceof Constructor,
'Something is calling a React component directly. Use a factory or ' + 
'JSX instead. See: http://fb.me/react-legacyfactory');}




if(this.__reactAutoBindMap){
bindAutoBindMethods(this);}


this.props = props;
this.context = context;
this.state = null;




var initialState=this.getInitialState?this.getInitialState():null;
if(__DEV__){

if(typeof initialState === 'undefined' && 
this.getInitialState._isMockFunction){


initialState = null;}}


invariant(
typeof initialState === 'object' && !Array.isArray(initialState),
'%s.getInitialState(): must return an object or null',
Constructor.displayName || 'ReactCompositeComponent');


this.state = initialState;};

Constructor.prototype = new ReactClassComponent();
Constructor.prototype.constructor = Constructor;

injectedMixins.forEach(
mixSpecIntoComponent.bind(null,Constructor));


mixSpecIntoComponent(Constructor,spec);


if(Constructor.getDefaultProps){
Constructor.defaultProps = Constructor.getDefaultProps();}


if(__DEV__){




if(Constructor.getDefaultProps){
Constructor.getDefaultProps.isReactClassApproved = {};}

if(Constructor.prototype.getInitialState){
Constructor.prototype.getInitialState.isReactClassApproved = {};}}



invariant(
Constructor.prototype.render,
'createClass(...): Class specification must implement a `render` method.');


if(__DEV__){
warning(
!Constructor.prototype.componentShouldUpdate,
'%s has a method called ' + 
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 
'The name is phrased as a question because the function is ' + 
'expected to return a value.',
spec.displayName || 'A component');}




for(var methodName in ReactClassInterface) {
if(!Constructor.prototype[methodName]){
Constructor.prototype[methodName] = null;}}




Constructor.type = Constructor;
if(__DEV__){
try{
Object.defineProperty(Constructor,'type',typeDeprecationDescriptor);}
catch(x) {}}




return Constructor;},


injection:{
injectMixin:function(mixin){
injectedMixins.push(mixin);}}};





module.exports = ReactClass;
});
__d('ReactComponent',["ReactUpdateQueue","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactUpdateQueue=require('ReactUpdateQueue');

var invariant=require('invariant');
var warning=require('warning');




function ReactComponent(props,context){
this.props = props;
this.context = context;}



























ReactComponent.prototype.setState = function(partialState,callback){
invariant(
typeof partialState === 'object' || 
typeof partialState === 'function' || 
partialState == null,
'setState(...): takes an object of state variables to update or a ' + 
'function which returns an object of state variables.');

if(__DEV__){
warning(
partialState != null,
'setState(...): You passed an undefined or null state object; ' + 
'instead, use forceUpdate().');}


ReactUpdateQueue.enqueueSetState(this,partialState);
if(callback){
ReactUpdateQueue.enqueueCallback(this,callback);}};

















ReactComponent.prototype.forceUpdate = function(callback){
ReactUpdateQueue.enqueueForceUpdate(this);
if(callback){
ReactUpdateQueue.enqueueCallback(this,callback);}};








if(__DEV__){
var deprecatedAPIs={
getDOMNode:'getDOMNode',
isMounted:'isMounted',
replaceProps:'replaceProps',
replaceState:'replaceState',
setProps:'setProps'};

var defineDeprecationWarning=function(methodName,displayName){
try{
Object.defineProperty(ReactComponent.prototype,methodName,{
get:function(){
warning(
false,
'%s(...) is deprecated in plain JavaScript React classes.',
displayName);

return undefined;}});}


catch(x) {}};



for(var fnName in deprecatedAPIs) {
if(deprecatedAPIs.hasOwnProperty(fnName)){
defineDeprecationWarning(fnName,deprecatedAPIs[fnName]);}}}




module.exports = ReactComponent;
});
__d('ReactUpdateQueue',["ReactLifeCycle","ReactCurrentOwner","ReactElement","ReactInstanceMap","ReactUpdates","Object.assign","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactLifeCycle=require('ReactLifeCycle');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');

function enqueueUpdate(internalInstance){
if(internalInstance !== ReactLifeCycle.currentlyMountingInstance){




ReactUpdates.enqueueUpdate(internalInstance);}}



function getInternalInstanceReadyForUpdate(publicInstance,callerName){
invariant(
ReactCurrentOwner.current == null,
'%s(...): Cannot update during an existing state transition ' + 
'(such as within `render`). Render methods should be a pure function ' + 
'of props and state.',
callerName);


var internalInstance=ReactInstanceMap.get(publicInstance);
if(!internalInstance){
if(__DEV__){



warning(
!callerName,
'%s(...): Can only update a mounted or mounting component. ' + 
'This usually means you called %s() on an unmounted ' + 
'component. This is a no-op.',
callerName,
callerName);}


return null;}


if(internalInstance === ReactLifeCycle.currentlyUnmountingInstance){
return null;}


return internalInstance;}






var ReactUpdateQueue={









enqueueCallback:function(publicInstance,callback){
invariant(
typeof callback === 'function',
'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + 
'`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 
'isn\'t callable.');

var internalInstance=getInternalInstanceReadyForUpdate(publicInstance);






if(!internalInstance || 
internalInstance === ReactLifeCycle.currentlyMountingInstance){
return null;}


if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks = [callback];}





enqueueUpdate(internalInstance);},


enqueueCallbackInternal:function(internalInstance,callback){
invariant(
typeof callback === 'function',
'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + 
'`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 
'isn\'t callable.');

if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks = [callback];}

enqueueUpdate(internalInstance);},















enqueueForceUpdate:function(publicInstance){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'forceUpdate');


if(!internalInstance){
return;}


internalInstance._pendingForceUpdate = true;

enqueueUpdate(internalInstance);},













enqueueReplaceState:function(publicInstance,completeState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'replaceState');


if(!internalInstance){
return;}


internalInstance._pendingStateQueue = [completeState];
internalInstance._pendingReplaceState = true;

enqueueUpdate(internalInstance);},












enqueueSetState:function(publicInstance,partialState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'setState');


if(!internalInstance){
return;}


var queue=
internalInstance._pendingStateQueue || (
internalInstance._pendingStateQueue = []);
queue.push(partialState);

enqueueUpdate(internalInstance);},









enqueueSetProps:function(publicInstance,partialProps){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'setProps');


if(!internalInstance){
return;}


invariant(
internalInstance._isTopLevel,
'setProps(...): You called `setProps` on a ' + 
'component with a parent. This is an anti-pattern since props will ' + 
'get reactively updated when rendered. Instead, change the owner\'s ' + 
'`render` method to pass the correct value as props to the component ' + 
'where it is created.');




var element=internalInstance._pendingElement || 
internalInstance._currentElement;
var props=assign({},element.props,partialProps);
internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
element,
props);


enqueueUpdate(internalInstance);},









enqueueReplaceProps:function(publicInstance,props){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'replaceProps');


if(!internalInstance){
return;}


invariant(
internalInstance._isTopLevel,
'replaceProps(...): You called `replaceProps` on a ' + 
'component with a parent. This is an anti-pattern since props will ' + 
'get reactively updated when rendered. Instead, change the owner\'s ' + 
'`render` method to pass the correct value as props to the component ' + 
'where it is created.');




var element=internalInstance._pendingElement || 
internalInstance._currentElement;
internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
element,
props);


enqueueUpdate(internalInstance);},


enqueueElementInternal:function(internalInstance,newElement){
internalInstance._pendingElement = newElement;
enqueueUpdate(internalInstance);}};




module.exports = ReactUpdateQueue;
});
__d('ReactLifeCycle',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




























var ReactLifeCycle={
currentlyMountingInstance:null,
currentlyUnmountingInstance:null};


module.exports = ReactLifeCycle;
});
__d('ReactInstanceMap',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var ReactInstanceMap={






remove:function(key){
key._reactInternalInstance = undefined;},


get:function(key){
return key._reactInternalInstance;},


has:function(key){
return key._reactInternalInstance !== undefined;},


set:function(key,value){
key._reactInternalInstance = value;}};




module.exports = ReactInstanceMap;
});
__d('ReactUpdates',["CallbackQueue","PooledClass","ReactCurrentOwner","ReactPerf","ReactReconciler","Transaction","Object.assign","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');

var dirtyComponents=[];
var asapCallbackQueue=CallbackQueue.getPooled();
var asapEnqueued=false;

var batchingStrategy=null;

function ensureInjected(){
invariant(
ReactUpdates.ReactReconcileTransaction && batchingStrategy,
'ReactUpdates: must inject a reconcile transaction class and batching ' + 
'strategy');}



var NESTED_UPDATES={
initialize:function(){
this.dirtyComponentsLength = dirtyComponents.length;},

close:function(){
if(this.dirtyComponentsLength !== dirtyComponents.length){





dirtyComponents.splice(0,this.dirtyComponentsLength);
flushBatchedUpdates();}else 
{
dirtyComponents.length = 0;}}};




var UPDATE_QUEUEING={
initialize:function(){
this.callbackQueue.reset();},

close:function(){
this.callbackQueue.notifyAll();}};



var TRANSACTION_WRAPPERS=[NESTED_UPDATES,UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction(){
this.reinitializeTransaction();
this.dirtyComponentsLength = null;
this.callbackQueue = CallbackQueue.getPooled();
this.reconcileTransaction = 
ReactUpdates.ReactReconcileTransaction.getPooled();}


assign(
ReactUpdatesFlushTransaction.prototype,
Transaction.Mixin,{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;},


destructor:function(){
this.dirtyComponentsLength = null;
CallbackQueue.release(this.callbackQueue);
this.callbackQueue = null;
ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
this.reconcileTransaction = null;},


perform:function(method,scope,a){


return Transaction.Mixin.perform.call(
this,
this.reconcileTransaction.perform,
this.reconcileTransaction,
method,
scope,
a);}});




PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback,a,b,c,d){
ensureInjected();
batchingStrategy.batchedUpdates(callback,a,b,c,d);}









function mountOrderComparator(c1,c2){
return c1._mountOrder - c2._mountOrder;}


function runBatchedUpdates(transaction){
var len=transaction.dirtyComponentsLength;
invariant(
len === dirtyComponents.length,
'Expected flush transaction\'s stored dirty-components length (%s) to ' + 
'match dirty-components array length (%s).',
len,
dirtyComponents.length);





dirtyComponents.sort(mountOrderComparator);

for(var i=0;i < len;i++) {



var component=dirtyComponents[i];




var callbacks=component._pendingCallbacks;
component._pendingCallbacks = null;

ReactReconciler.performUpdateIfNecessary(
component,
transaction.reconcileTransaction);


if(callbacks){
for(var j=0;j < callbacks.length;j++) {
transaction.callbackQueue.enqueue(
callbacks[j],
component.getPublicInstance());}}}}






var flushBatchedUpdates=function(){




while(dirtyComponents.length || asapEnqueued) {
if(dirtyComponents.length){
var transaction=ReactUpdatesFlushTransaction.getPooled();
transaction.perform(runBatchedUpdates,null,transaction);
ReactUpdatesFlushTransaction.release(transaction);}


if(asapEnqueued){
asapEnqueued = false;
var queue=asapCallbackQueue;
asapCallbackQueue = CallbackQueue.getPooled();
queue.notifyAll();
CallbackQueue.release(queue);}}};



flushBatchedUpdates = ReactPerf.measure(
'ReactUpdates',
'flushBatchedUpdates',
flushBatchedUpdates);






function enqueueUpdate(component){
ensureInjected();






warning(
ReactCurrentOwner.current == null,
'enqueueUpdate(): Render methods should be a pure function of props ' + 
'and state; triggering nested component updates from render is not ' + 
'allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate.');


if(!batchingStrategy.isBatchingUpdates){
batchingStrategy.batchedUpdates(enqueueUpdate,component);
return;}


dirtyComponents.push(component);}






function asap(callback,context){
invariant(
batchingStrategy.isBatchingUpdates,
'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 
'updates are not being batched.');

asapCallbackQueue.enqueue(callback,context);
asapEnqueued = true;}


var ReactUpdatesInjection={
injectReconcileTransaction:function(ReconcileTransaction){
invariant(
ReconcileTransaction,
'ReactUpdates: must provide a reconcile transaction class');

ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;},


injectBatchingStrategy:function(_batchingStrategy){
invariant(
_batchingStrategy,
'ReactUpdates: must provide a batching strategy');

invariant(
typeof _batchingStrategy.batchedUpdates === 'function',
'ReactUpdates: must provide a batchedUpdates() function');

invariant(
typeof _batchingStrategy.isBatchingUpdates === 'boolean',
'ReactUpdates: must provide an isBatchingUpdates boolean attribute');

batchingStrategy = _batchingStrategy;}};



var ReactUpdates={






ReactReconcileTransaction:null,

batchedUpdates:batchedUpdates,
enqueueUpdate:enqueueUpdate,
flushBatchedUpdates:flushBatchedUpdates,
injection:ReactUpdatesInjection,
asap:asap};


module.exports = ReactUpdates;
});
__d('CallbackQueue',["PooledClass","Object.assign","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var invariant=require('invariant');












function CallbackQueue(){
this._callbacks = null;
this._contexts = null;}


assign(CallbackQueue.prototype,{








enqueue:function(callback,context){
this._callbacks = this._callbacks || [];
this._contexts = this._contexts || [];
this._callbacks.push(callback);
this._contexts.push(context);},








notifyAll:function(){
var callbacks=this._callbacks;
var contexts=this._contexts;
if(callbacks){
invariant(
callbacks.length === contexts.length,
'Mismatched list of contexts in callback queue');

this._callbacks = null;
this._contexts = null;
for(var i=0,l=callbacks.length;i < l;i++) {
callbacks[i].call(contexts[i]);}

callbacks.length = 0;
contexts.length = 0;}},








reset:function(){
this._callbacks = null;
this._contexts = null;},





destructor:function(){
this.reset();}});




PooledClass.addPoolingTo(CallbackQueue);

module.exports = CallbackQueue;
});
__d('ReactPerf',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var ReactPerf={




enableMeasure:false,





storedMeasure:_noMeasure,






measureMethods:function(object,objectName,methodNames){
if(__DEV__){
for(var key in methodNames) {
if(!methodNames.hasOwnProperty(key)){
continue;}

object[key] = ReactPerf.measure(
objectName,
methodNames[key],
object[key]);}}},













measure:function(objName,fnName,func){
if(__DEV__){
var measuredFunc=null;
var wrapper=function(){
if(ReactPerf.enableMeasure){
if(!measuredFunc){
measuredFunc = ReactPerf.storedMeasure(objName,fnName,func);}

return measuredFunc.apply(this,arguments);}

return func.apply(this,arguments);};

wrapper.displayName = objName + '_' + fnName;
return wrapper;}

return func;},


injection:{



injectMeasure:function(measure){
ReactPerf.storedMeasure = measure;}}};












function _noMeasure(objName,fnName,func){
return func;}


module.exports = ReactPerf;
});
__d('ReactReconciler',["ReactRef","ReactElementValidator"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactRef=require('ReactRef');
var ReactElementValidator=require('ReactElementValidator');





function attachRefs(){
ReactRef.attachRefs(this,this._currentElement);}


var ReactReconciler={











mountComponent:function(internalInstance,rootID,transaction,context){
var markup=internalInstance.mountComponent(rootID,transaction,context);
if(__DEV__){
ReactElementValidator.checkAndWarnForMutatedProps(
internalInstance._currentElement);}


transaction.getReactMountReady().enqueue(attachRefs,internalInstance);
return markup;},








unmountComponent:function(internalInstance){
ReactRef.detachRefs(internalInstance,internalInstance._currentElement);
internalInstance.unmountComponent();},











receiveComponent:function(
internalInstance,nextElement,transaction,context)
{
var prevElement=internalInstance._currentElement;

if(nextElement === prevElement && nextElement._owner != null){







return;}


if(__DEV__){
ReactElementValidator.checkAndWarnForMutatedProps(nextElement);}


var refsChanged=ReactRef.shouldUpdateRefs(
prevElement,
nextElement);


if(refsChanged){
ReactRef.detachRefs(internalInstance,prevElement);}


internalInstance.receiveComponent(nextElement,transaction,context);

if(refsChanged){
transaction.getReactMountReady().enqueue(attachRefs,internalInstance);}},










performUpdateIfNecessary:function(
internalInstance,
transaction)
{
internalInstance.performUpdateIfNecessary(transaction);}};




module.exports = ReactReconciler;
});
__d('ReactRef',["ReactOwner"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactOwner=require('ReactOwner');

var ReactRef={};

function attachRef(ref,component,owner){
if(typeof ref === 'function'){
ref(component.getPublicInstance());}else 
{

ReactOwner.addComponentAsRefTo(component,ref,owner);}}



function detachRef(ref,component,owner){
if(typeof ref === 'function'){
ref(null);}else 
{

ReactOwner.removeComponentAsRefFrom(component,ref,owner);}}



ReactRef.attachRefs = function(instance,element){
var ref=element.ref;
if(ref != null){
attachRef(ref,instance,element._owner);}};



ReactRef.shouldUpdateRefs = function(prevElement,nextElement){












return (
nextElement._owner !== prevElement._owner || 
nextElement.ref !== prevElement.ref);};



ReactRef.detachRefs = function(instance,element){
var ref=element.ref;
if(ref != null){
detachRef(ref,instance,element._owner);}};



module.exports = ReactRef;
});
__d('ReactOwner',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');































var ReactOwner={






isValidOwner:function(object){
return !!(
object && 
typeof object.attachRef === 'function' && 
typeof object.detachRef === 'function');},












addComponentAsRefTo:function(component,ref,owner){
invariant(
ReactOwner.isValidOwner(owner),
'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' + 
'usually means that you\'re trying to add a ref to a component that ' + 
'doesn\'t have an owner (that is, was not created inside of another ' + 
'component\'s `render` method). Try rendering this component inside of ' + 
'a new top-level component which will hold the ref.');

owner.attachRef(ref,component);},











removeComponentAsRefFrom:function(component,ref,owner){
invariant(
ReactOwner.isValidOwner(owner),
'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' + 
'usually means that you\'re trying to remove a ref to a component that ' + 
'doesn\'t have an owner (that is, was not created inside of another ' + 
'component\'s `render` method). Try rendering this component inside of ' + 
'a new top-level component which will hold the ref.');



if(owner.getPublicInstance().refs[ref] === component.getPublicInstance()){
owner.detachRef(ref);}}};





module.exports = ReactOwner;
});
__d('ReactElementValidator',["ReactElement","ReactFragment","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactCurrentOwner","ReactNativeComponent","getIteratorFn","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactNativeComponent=require('ReactNativeComponent');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

function getDeclarationErrorAddendum(){
if(ReactCurrentOwner.current){
var name=ReactCurrentOwner.current.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}







var ownerHasKeyUseWarning={};

var loggedTypeFailures={};

var NUMERIC_PROPERTY_REGEX=/^\d+$/;







function getName(instance){
var publicInstance=instance && instance.getPublicInstance();
if(!publicInstance){
return undefined;}

var constructor=publicInstance.constructor;
if(!constructor){
return undefined;}

return constructor.displayName || constructor.name || undefined;}








function getCurrentOwnerDisplayName(){
var current=ReactCurrentOwner.current;
return (
current && getName(current) || undefined);}













function validateExplicitKey(element,parentType){
if(element._store.validated || element.key != null){
return;}

element._store.validated = true;

warnAndMonitorForKeyUse(
'Each child in an array or iterator should have a unique "key" prop.',
element,
parentType);}












function validatePropertyKey(name,element,parentType){
if(!NUMERIC_PROPERTY_REGEX.test(name)){
return;}

warnAndMonitorForKeyUse(
'Child objects should have non-numeric keys so ordering is preserved.',
element,
parentType);}











function warnAndMonitorForKeyUse(message,element,parentType){
var ownerName=getCurrentOwnerDisplayName();
var parentName=typeof parentType === 'string'?
parentType:parentType.displayName || parentType.name;

var useName=ownerName || parentName;
var memoizer=ownerHasKeyUseWarning[message] || (
ownerHasKeyUseWarning[message] = {});

if(memoizer.hasOwnProperty(useName)){
return;}

memoizer[useName] = true;

var parentOrOwnerAddendum=
ownerName?' Check the render method of ' + ownerName + '.':
parentName?' Check the React.render call using <' + parentName + '>.':
'';




var childOwnerAddendum='';
if(element && 
element._owner && 
element._owner !== ReactCurrentOwner.current){

var childOwnerName=getName(element._owner);

childOwnerAddendum = ' It was passed a child from ' + childOwnerName + '.';}


warning(
false,
message + '%s%s See http://fb.me/react-warning-keys for more information.',
parentOrOwnerAddendum,
childOwnerAddendum);}












function validateChildKeys(node,parentType){
if(Array.isArray(node)){
for(var i=0;i < node.length;i++) {
var child=node[i];
if(ReactElement.isValidElement(child)){
validateExplicitKey(child,parentType);}}}else 


if(ReactElement.isValidElement(node)){

node._store.validated = true;}else 
if(node){
var iteratorFn=getIteratorFn(node);

if(iteratorFn){
if(iteratorFn !== node.entries){
var iterator=iteratorFn.call(node);
var step;
while(!(step = iterator.next()).done) {
if(ReactElement.isValidElement(step.value)){
validateExplicitKey(step.value,parentType);}}}}else 



if(typeof node === 'object'){
var fragment=ReactFragment.extractIfFragment(node);
for(var key in fragment) {
if(fragment.hasOwnProperty(key)){
validatePropertyKey(key,fragment[key],parentType);}}}}}















function checkPropTypes(componentName,propTypes,props,location){
for(var propName in propTypes) {
if(propTypes.hasOwnProperty(propName)){
var error;



try{


invariant(
typeof propTypes[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually from ' + 
'React.PropTypes.',
componentName || 'React class',
ReactPropTypeLocationNames[location],
propName);

error = propTypes[propName](props,propName,componentName,location);}
catch(ex) {
error = ex;}

if(error instanceof Error && !(error.message in loggedTypeFailures)){


loggedTypeFailures[error.message] = true;

var addendum=getDeclarationErrorAddendum(this);
warning(false,'Failed propType: %s%s',error.message,addendum);}}}}





var warnedPropsMutations={};







function warnForPropsMutation(propName,element){
var type=element.type;
var elementName=typeof type === 'string'?type:type.displayName;
var ownerName=element._owner?
element._owner.getPublicInstance().constructor.displayName:null;

var warningKey=propName + '|' + elementName + '|' + ownerName;
if(warnedPropsMutations.hasOwnProperty(warningKey)){
return;}

warnedPropsMutations[warningKey] = true;

var elementInfo='';
if(elementName){
elementInfo = ' <' + elementName + ' />';}

var ownerInfo='';
if(ownerName){
ownerInfo = ' The element was created by ' + ownerName + '.';}


warning(
false,
'Don\'t set .props.%s of the React component%s. Instead, specify the ' + 
'correct value when initially creating the element or use ' + 
'React.cloneElement to make a new element with updated props.%s',
propName,
elementInfo,
ownerInfo);}




function is(a,b){
if(a !== a){

return b !== b;}

if(a === 0 && b === 0){

return 1 / a === 1 / b;}

return a === b;}










function checkAndWarnForMutatedProps(element){
if(!element._store){


return;}


var originalProps=element._store.originalProps;
var props=element.props;

for(var propName in props) {
if(props.hasOwnProperty(propName)){
if(!originalProps.hasOwnProperty(propName) || 
!is(originalProps[propName],props[propName])){
warnForPropsMutation(propName,element);


originalProps[propName] = props[propName];}}}}











function validatePropTypes(element){
if(element.type == null){

return;}





var componentClass=ReactNativeComponent.getComponentClassForElement(
element);

var name=componentClass.displayName || componentClass.name;
if(componentClass.propTypes){
checkPropTypes(
name,
componentClass.propTypes,
element.props,
ReactPropTypeLocations.prop);}


if(typeof componentClass.getDefaultProps === 'function'){
warning(
componentClass.getDefaultProps.isReactClassApproved,
'getDefaultProps is only used on classic React.createClass ' + 
'definitions. Use a static property named `defaultProps` instead.');}}




var ReactElementValidator={

checkAndWarnForMutatedProps:checkAndWarnForMutatedProps,

createElement:function(type,props,children){


warning(
type != null,
'React.createElement: type should not be null or undefined. It should ' + 
'be a string (for DOM elements) or a ReactClass (for composite ' + 
'components).');


var element=ReactElement.createElement.apply(this,arguments);



if(element == null){
return element;}


for(var i=2;i < arguments.length;i++) {
validateChildKeys(arguments[i],type);}


validatePropTypes(element);

return element;},


createFactory:function(type){
var validatedFactory=ReactElementValidator.createElement.bind(
null,
type);


validatedFactory.type = type;

if(__DEV__){
try{
Object.defineProperty(
validatedFactory,
'type',
{
enumerable:false,
get:function(){
warning(
false,
'Factory.type is deprecated. Access the class directly ' + 
'before passing it to createFactory.');

Object.defineProperty(this,'type',{
value:type});

return type;}});}



catch(x) {}}





return validatedFactory;},


cloneElement:function(element,props,children){
var newElement=ReactElement.cloneElement.apply(this,arguments);
for(var i=2;i < arguments.length;i++) {
validateChildKeys(arguments[i],newElement.type);}

validatePropTypes(newElement);
return newElement;}};




module.exports = ReactElementValidator;
});
__d('ReactPropTypeLocations',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var ReactPropTypeLocations=keyMirror({
prop:null,
context:null,
childContext:null});


module.exports = ReactPropTypeLocations;
});
__d('keyMirror',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var invariant=require('invariant');



















var keyMirror=function(obj){
var ret={};
var key;
invariant(
obj instanceof Object && !Array.isArray(obj),
'keyMirror(...): Argument must be an object.');

for(key in obj) {
if(!obj.hasOwnProperty(key)){
continue;}

ret[key] = key;}

return ret;};


module.exports = keyMirror;
});
__d('ReactPropTypeLocationNames',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypeLocationNames={};

if(__DEV__){
ReactPropTypeLocationNames = {
prop:'prop',
context:'context',
childContext:'child context'};}



module.exports = ReactPropTypeLocationNames;
});
__d('ReactNativeComponent',["Object.assign","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var invariant=require('invariant');

var autoGenerateWrapperClass=null;
var genericComponentClass=null;

var tagToComponentClass={};
var textComponentClass=null;

var ReactNativeComponentInjection={


injectGenericComponentClass:function(componentClass){
genericComponentClass = componentClass;},



injectTextComponentClass:function(componentClass){
textComponentClass = componentClass;},



injectComponentClasses:function(componentClasses){
assign(tagToComponentClass,componentClasses);},



injectAutoWrapper:function(wrapperFactory){
autoGenerateWrapperClass = wrapperFactory;}};









function getComponentClassForElement(element){
if(typeof element.type === 'function'){
return element.type;}

var tag=element.type;
var componentClass=tagToComponentClass[tag];
if(componentClass == null){
tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);}

return componentClass;}








function createInternalComponent(element){
invariant(
genericComponentClass,
'There is no registered component for the tag %s',
element.type);

return new genericComponentClass(element.type,element.props);}






function createInstanceForText(text){
return new textComponentClass(text);}






function isTextComponent(component){
return component instanceof textComponentClass;}


var ReactNativeComponent={
getComponentClassForElement:getComponentClassForElement,
createInternalComponent:createInternalComponent,
createInstanceForText:createInstanceForText,
isTextComponent:isTextComponent,
injection:ReactNativeComponentInjection};


module.exports = ReactNativeComponent;
});
__d('Transaction',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');






























































var Mixin={







reinitializeTransaction:function(){
this.transactionWrappers = this.getTransactionWrappers();
if(!this.wrapperInitData){
this.wrapperInitData = [];}else 
{
this.wrapperInitData.length = 0;}

this._isInTransaction = false;},


_isInTransaction:false,





getTransactionWrappers:null,

isInTransaction:function(){
return !!this._isInTransaction;},













perform:function(method,scope,a,b,c,d,e,f){
invariant(
!this.isInTransaction(),
'Transaction.perform(...): Cannot initialize a transaction when there ' + 
'is already an outstanding transaction.');

var errorThrown;
var ret;
try{
this._isInTransaction = true;




errorThrown = true;
this.initializeAll(0);
ret = method.call(scope,a,b,c,d,e,f);
errorThrown = false;}finally 
{
try{
if(errorThrown){


try{
this.closeAll(0);}
catch(err) {}}else 

{


this.closeAll(0);}}finally 

{
this._isInTransaction = false;}}


return ret;},


initializeAll:function(startIndex){
var transactionWrappers=this.transactionWrappers;
for(var i=startIndex;i < transactionWrappers.length;i++) {
var wrapper=transactionWrappers[i];
try{




this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
this.wrapperInitData[i] = wrapper.initialize?
wrapper.initialize.call(this):
null;}finally 
{
if(this.wrapperInitData[i] === Transaction.OBSERVED_ERROR){



try{
this.initializeAll(i + 1);}
catch(err) {}}}}},












closeAll:function(startIndex){
invariant(
this.isInTransaction(),
'Transaction.closeAll(): Cannot close transaction when none are open.');

var transactionWrappers=this.transactionWrappers;
for(var i=startIndex;i < transactionWrappers.length;i++) {
var wrapper=transactionWrappers[i];
var initData=this.wrapperInitData[i];
var errorThrown;
try{




errorThrown = true;
if(initData !== Transaction.OBSERVED_ERROR && wrapper.close){
wrapper.close.call(this,initData);}

errorThrown = false;}finally 
{
if(errorThrown){



try{
this.closeAll(i + 1);}
catch(e) {}}}}




this.wrapperInitData.length = 0;}};



var Transaction={

Mixin:Mixin,




OBSERVED_ERROR:{}};



module.exports = Transaction;
});
__d('ReactErrorUtils',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";













var ReactErrorUtils={









guard:function(func,name){
return func;}};



module.exports = ReactErrorUtils;
});
__d('keyOf',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 




















keyOf=function(oneKeyObj){
var key;
for(key in oneKeyObj) {
if(!oneKeyObj.hasOwnProperty(key)){
continue;}

return key;}

return null;};



module.exports = keyOf;
});
__d('ReactNativeDefaultInjection',["InitializeJavaScriptAppEngine","EventPluginHub","EventPluginUtils","IOSDefaultEventPluginOrder","IOSNativeBridgeEventPlugin","NodeHandle","ReactComponentEnvironment","ReactDefaultBatchingStrategy","ReactEmptyComponent","ReactInstanceHandles","ReactNativeComponentEnvironment","ReactNativeGlobalInteractionHandler","ReactNativeGlobalResponderHandler","ReactNativeMount","ReactNativeTextComponent","ReactNativeComponent","ReactUpdates","ResponderEventPlugin","UniversalWorkerNodeHandle","createReactNativeComponentClass","invariant","RCTEventEmitter","RCTLog","JSTimersExecution"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















require('InitializeJavaScriptAppEngine');
var EventPluginHub=require('EventPluginHub');
var EventPluginUtils=require('EventPluginUtils');
var IOSDefaultEventPluginOrder=require('IOSDefaultEventPluginOrder');
var IOSNativeBridgeEventPlugin=require('IOSNativeBridgeEventPlugin');
var NodeHandle=require('NodeHandle');
var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactDefaultBatchingStrategy=require('ReactDefaultBatchingStrategy');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeComponentEnvironment=require('ReactNativeComponentEnvironment');
var ReactNativeGlobalInteractionHandler=require('ReactNativeGlobalInteractionHandler');
var ReactNativeGlobalResponderHandler=require('ReactNativeGlobalResponderHandler');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTextComponent=require('ReactNativeTextComponent');
var ReactNativeComponent=require('ReactNativeComponent');
var ReactUpdates=require('ReactUpdates');
var ResponderEventPlugin=require('ResponderEventPlugin');
var UniversalWorkerNodeHandle=require('UniversalWorkerNodeHandle');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var invariant=require('invariant');


require('RCTEventEmitter');
require('RCTLog');
require('JSTimersExecution');

function inject(){



EventPluginHub.injection.injectEventPluginOrder(IOSDefaultEventPluginOrder);
EventPluginHub.injection.injectInstanceHandle(ReactInstanceHandles);

ResponderEventPlugin.injection.injectGlobalResponderHandler(
ReactNativeGlobalResponderHandler);


ResponderEventPlugin.injection.injectGlobalInteractionHandler(
ReactNativeGlobalInteractionHandler);






EventPluginHub.injection.injectEventPluginsByName({
'ResponderEventPlugin':ResponderEventPlugin,
'IOSNativeBridgeEventPlugin':IOSNativeBridgeEventPlugin});


ReactUpdates.injection.injectReconcileTransaction(
ReactNativeComponentEnvironment.ReactReconcileTransaction);


ReactUpdates.injection.injectBatchingStrategy(
ReactDefaultBatchingStrategy);


ReactComponentEnvironment.injection.injectEnvironment(
ReactNativeComponentEnvironment);



var RCTView=createReactNativeComponentClass({
validAttributes:{},
uiViewClassName:'RCTView'});

ReactEmptyComponent.injection.injectEmptyComponent(RCTView);

EventPluginUtils.injection.injectMount(ReactNativeMount);

ReactNativeComponent.injection.injectTextComponentClass(
ReactNativeTextComponent);

ReactNativeComponent.injection.injectAutoWrapper(function(tag){

var info='';
if(typeof tag === 'string' && /^[a-z]/.test(tag)){
info += ' Each component name should start with an uppercase letter.';}

invariant(false,'Expected a component class, got %s.%s',tag,info);});


NodeHandle.injection.injectImplementation(UniversalWorkerNodeHandle);}


module.exports = {
inject:inject};
});
__d('InitializeJavaScriptAppEngine',["RCTDebugComponentOwnership","RCTDeviceEventEmitter","PerformanceLogger","ExceptionsManager","ErrorUtils","ExceptionsManager","Platform","JSTimers","NativeModules","Promise","XMLHttpRequest","FormData","fetch","Geolocation","WebSocket","BridgeProfiling"],function(global, require, requireDynamic, requireLazy, module, exports) {  require(
























'RCTDebugComponentOwnership');
require('RCTDeviceEventEmitter');
require('PerformanceLogger');

if(typeof GLOBAL === 'undefined'){
GLOBAL = this;}


if(typeof window === 'undefined'){
window = GLOBAL;}


function handleError(e,isFatal){
try{
require('ExceptionsManager').handleException(e,isFatal);}
catch(ee) {
console.log('Failed to print error: ',ee.message);}}



function setUpRedBoxErrorHandler(){
var ErrorUtils=require('ErrorUtils');
ErrorUtils.setGlobalHandler(handleError);}


function setUpRedBoxConsoleErrorHandler(){

var ExceptionsManager=require('ExceptionsManager');
var Platform=require('Platform');

if(__DEV__ && Platform.OS === 'ios'){
ExceptionsManager.installConsoleErrorReporter();}}










function setUpTimers(){
var JSTimers=require('JSTimers');
GLOBAL.setTimeout = JSTimers.setTimeout;
GLOBAL.setInterval = JSTimers.setInterval;
GLOBAL.setImmediate = JSTimers.setImmediate;
GLOBAL.clearTimeout = JSTimers.clearTimeout;
GLOBAL.clearInterval = JSTimers.clearInterval;
GLOBAL.clearImmediate = JSTimers.clearImmediate;
GLOBAL.cancelAnimationFrame = JSTimers.clearInterval;
GLOBAL.requestAnimationFrame = function(cb){

return JSTimers.requestAnimationFrame(cb);};}



function setUpAlert(){
var RCTAlertManager=require('NativeModules').AlertManager;
if(!GLOBAL.alert){
GLOBAL.alert = function(text){
var alertOpts={
title:'Alert',
message:'' + text,
buttons:[{'cancel':'OK'}]};

RCTAlertManager.alertWithArgs(alertOpts,null);};}}




function setUpPromise(){


GLOBAL.Promise = require('Promise');}


function setUpXHR(){


GLOBAL.XMLHttpRequest = require('XMLHttpRequest');
GLOBAL.FormData = require('FormData');

var fetchPolyfill=require('fetch');
GLOBAL.fetch = fetchPolyfill.fetch;
GLOBAL.Headers = fetchPolyfill.Headers;
GLOBAL.Request = fetchPolyfill.Request;
GLOBAL.Response = fetchPolyfill.Response;}


function setUpGeolocation(){
GLOBAL.navigator = GLOBAL.navigator || {};
GLOBAL.navigator.geolocation = require('Geolocation');}


function setUpWebSockets(){
GLOBAL.WebSocket = require('WebSocket');}


function setupProfile(){
console.profile = console.profile || GLOBAL.consoleProfile || function(){};
console.profileEnd = console.profileEnd || GLOBAL.consoleProfileEnd || function(){};
require('BridgeProfiling').swizzleReactPerf();}


setUpRedBoxErrorHandler();
setUpTimers();
setUpAlert();
setUpPromise();
setUpXHR();
setUpRedBoxConsoleErrorHandler();
setUpGeolocation();
setUpWebSockets();
setupProfile();
});
__d('RCTDebugComponentOwnership',["NativeModules","InspectorUtils","ReactNativeTagHandles"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
















var DebugComponentOwnershipModule=require('NativeModules').DebugComponentOwnershipModule;
var InspectorUtils=require('InspectorUtils');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

function componentToString(component){
return component.getName?component.getName():'Unknown';}


function getRootTagForTag(tag){
var rootNodeID=ReactNativeTagHandles.tagToRootNodeID[tag];
if(!rootNodeID){
return null;}

var rootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootNodeID);
if(!rootID){
return null;}

return ReactNativeTagHandles.rootNodeIDToTag[rootID];}


module.exports = {








getOwnerHierarchy:function(requestID,tag){
var rootTag=getRootTagForTag(tag);
var instance=InspectorUtils.findInstanceByNativeTag(rootTag,tag);
var ownerHierarchy=instance?
InspectorUtils.getOwnerHierarchy(instance).map(componentToString):
null;
DebugComponentOwnershipModule.receiveOwnershipHierarchy(requestID,tag,ownerHierarchy);}};
});
__d('NativeModules',["BatchedBridge","nativeModulePrefixNormalizer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('BatchedBridge').RemoteModules;

var nativeModulePrefixNormalizer=require('nativeModulePrefixNormalizer');

nativeModulePrefixNormalizer(NativeModules);

module.exports = NativeModules;
});
__d('BatchedBridge',["MessageQueue"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var MessageQueue=require('MessageQueue');

var BatchedBridge=new MessageQueue(
__fbBatchedBridgeConfig.remoteModuleConfig,
__fbBatchedBridgeConfig.localModulesConfig);


module.exports = BatchedBridge;
});
__d('MessageQueue',["BridgeProfiling","ErrorUtils","JSTimersExecution","ReactUpdates","invariant","keyMirror","stringifySafe"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _objectWithoutProperties(obj,keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i] = obj[i];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}














var BridgeProfiling=require('BridgeProfiling');
var ErrorUtils=require('ErrorUtils');
var JSTimersExecution=require('JSTimersExecution');
var ReactUpdates=require('ReactUpdates');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var stringifySafe=require('stringifySafe');

var MODULE_IDS=0;
var METHOD_IDS=1;
var PARAMS=2;

var SPY_MODE=false;

var MethodTypes=keyMirror({
local:null,
remote:null,
remoteAsync:null});


var guard=function(fn){
try{
fn();}
catch(error) {
ErrorUtils.reportFatalError(error);}};var 



MessageQueue=(function(){

function MessageQueue(remoteModules,localModules,customRequire){var _this=this;_classCallCheck(this,MessageQueue);
this.RemoteModules = {};

this._require = customRequire || require;
this._queue = [[],[],[]];
this._moduleTable = {};
this._methodTable = {};
this._callbacks = [];
this._callbackID = 0;

[
'processBatch',
'invokeCallbackAndReturnFlushedQueue',
'callFunctionReturnFlushedQueue',
'flushedQueue'].
forEach(function(fn){return _this[fn] = _this[fn].bind(_this);});

this._genModules(remoteModules);
localModules && this._genLookupTables(
localModules,this._moduleTable,this._methodTable);

if(__DEV__){
this._debugInfo = {};
this._remoteModuleTable = {};
this._remoteMethodTable = {};
this._genLookupTables(
remoteModules,this._remoteModuleTable,this._remoteMethodTable);}}_createClass(MessageQueue,[{key:'processBatch',value:






function processBatch(batch){var _this2=this;
guard(function(){
ReactUpdates.batchedUpdates(function(){
batch.forEach(function(call){
var method=call.method === 'callFunctionReturnFlushedQueue'?
'__callFunction':'__invokeCallback';
guard(function(){return _this2[method].apply(_this2,call.args);});});

BridgeProfiling.profile('ReactUpdates.batchedUpdates()');});

BridgeProfiling.profileEnd();});

return this.flushedQueue();}},{key:'callFunctionReturnFlushedQueue',value:


function callFunctionReturnFlushedQueue(module,method,args){var _this3=this;
guard(function(){return _this3.__callFunction(module,method,args);});
return this.flushedQueue();}},{key:'invokeCallbackAndReturnFlushedQueue',value:


function invokeCallbackAndReturnFlushedQueue(cbID,args){var _this4=this;
guard(function(){return _this4.__invokeCallback(cbID,args);});
return this.flushedQueue();}},{key:'flushedQueue',value:


function flushedQueue(){
BridgeProfiling.profile('JSTimersExecution.callImmediates()');
guard(function(){return JSTimersExecution.callImmediates();});
BridgeProfiling.profileEnd();
var queue=this._queue;
this._queue = [[],[],[]];
return queue[0].length?queue:null;}},{key:'__nativeCall',value:





function __nativeCall(module,method,params,onFail,onSucc){
if(onFail || onSucc){
if(__DEV__){

this._callbackID > 1 << 5 && (
this._debugInfo[this._callbackID >> 5] = null);

this._debugInfo[this._callbackID >> 1] = [module,method];
if(SPY_MODE && isFinite(module)){
console.log('JS->N : ' + this._remoteModuleTable[module] + '.' + 
this._remoteMethodTable[module][method] + '(' + JSON.stringify(params) + ')');}}


onFail && params.push(this._callbackID);
this._callbacks[this._callbackID++] = onFail;
onSucc && params.push(this._callbackID);
this._callbacks[this._callbackID++] = onSucc;}

this._queue[MODULE_IDS].push(module);
this._queue[METHOD_IDS].push(method);
this._queue[PARAMS].push(params);}},{key:'__callFunction',value:


function __callFunction(module,method,args){
BridgeProfiling.profile(function(){return module + '.' + method + '(' + stringifySafe(args) + ')';});
if(isFinite(module)){
method = this._methodTable[module][method];
module = this._moduleTable[module];}

if(__DEV__ && SPY_MODE){
console.log('N->JS : ' + module + '.' + method + '(' + JSON.stringify(args) + ')');}

module = this._require(module);
module[method].apply(module,args);
BridgeProfiling.profileEnd();}},{key:'__invokeCallback',value:


function __invokeCallback(cbID,args){
BridgeProfiling.profile(
function(){return 'MessageQueue.invokeCallback(' + cbID + ', ' + stringifySafe(args) + ')';});
var callback=this._callbacks[cbID];
if(__DEV__){
var debug=this._debugInfo[cbID >> 1];
var _module=debug && this._remoteModuleTable[debug[0]];
var method=debug && this._remoteMethodTable[debug[0]][debug[1]];
if(!callback){
console.error('Callback with id ' + cbID + ': ' + _module + '.' + method + '() not found');}else 
if(SPY_MODE){
console.log('N->JS : <callback for ' + _module + '.' + method + '>(' + JSON.stringify(args) + ')');}}


this._callbacks[cbID & ~1] = null;
this._callbacks[cbID | 1] = null;
callback.apply(null,args);
BridgeProfiling.profileEnd();}},{key:'_genLookupTables',value:





function _genLookupTables(localModules,moduleTable,methodTable){
var moduleNames=Object.keys(localModules);
for(var i=0,l=moduleNames.length;i < l;i++) {
var moduleName=moduleNames[i];
var methods=localModules[moduleName].methods;
var moduleID=localModules[moduleName].moduleID;
moduleTable[moduleID] = moduleName;
methodTable[moduleID] = {};

var methodNames=Object.keys(methods);
for(var j=0,k=methodNames.length;j < k;j++) {
var methodName=methodNames[j];
var methodConfig=methods[methodName];
methodTable[moduleID][methodConfig.methodID] = methodName;}}}},{key:'_genModules',value:




function _genModules(remoteModules){
var moduleNames=Object.keys(remoteModules);
for(var i=0,l=moduleNames.length;i < l;i++) {
var moduleName=moduleNames[i];
var moduleConfig=remoteModules[moduleName];
this.RemoteModules[moduleName] = this._genModule({},moduleConfig);}}},{key:'_genModule',value:



function _genModule(module,moduleConfig){
var methodNames=Object.keys(moduleConfig.methods);
for(var i=0,l=methodNames.length;i < l;i++) {
var methodName=methodNames[i];
var methodConfig=moduleConfig.methods[methodName];
module[methodName] = this._genMethod(
moduleConfig.moduleID,methodConfig.methodID,methodConfig.type);}

Object.assign(module,moduleConfig.constants);
return module;}},{key:'_genMethod',value:


function _genMethod(module,method,type){
if(type === MethodTypes.local){
return null;}


var self=this;
if(type === MethodTypes.remoteAsync){
return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key < _len;_key++) {args[_key] = arguments[_key];}
return new Promise(function(resolve,reject){
self.__nativeCall(module,method,args,resolve,function(errorData){
var error=createErrorFromErrorData(errorData);
reject(error);});});};}else 



{
return function(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2 < _len2;_key2++) {args[_key2] = arguments[_key2];}
var lastArg=args.length > 0?args[args.length - 1]:null;
var secondLastArg=args.length > 1?args[args.length - 2]:null;
var hasSuccCB=typeof lastArg === 'function';
var hasErrorCB=typeof secondLastArg === 'function';
hasErrorCB && invariant(
hasSuccCB,
'Cannot have a non-function arg after a function arg.');

var numCBs=hasSuccCB + hasErrorCB;
var onSucc=hasSuccCB?lastArg:null;
var onFail=hasErrorCB?secondLastArg:null;
args = args.slice(0,args.length - numCBs);
return self.__nativeCall(module,method,args,onFail,onSucc);};}}}]);return MessageQueue;})();






function createErrorFromErrorData(errorData){var 

message=

errorData.message;var extraErrorInfo=_objectWithoutProperties(errorData,['message']);
var error=new Error(message);
error.framesToPop = 1;
return Object.assign(error,extraErrorInfo);}


module.exports = MessageQueue;
});
__d('BridgeProfiling',["ReactPerf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var GLOBAL=GLOBAL || this;

var BridgeProfiling={
profile:function(profileName,args){
if(GLOBAL.__BridgeProfilingIsProfiling){
if(args){
try{
args = JSON.stringify(args);}
catch(err) {
args = err.message;}}


profileName = typeof profileName === 'function'?
profileName():profileName;
console.profile(profileName,args);}},



profileEnd:function(profileName){
if(GLOBAL.__BridgeProfilingIsProfiling){
console.profileEnd(profileName);}},



swizzleReactPerf:function(){
var ReactPerf=require('ReactPerf');
var originalMeasure=ReactPerf.measure;
ReactPerf.measure = function(objName,fnName,func){
func = originalMeasure.call(ReactPerf,objName,fnName,func);
return function(component){
BridgeProfiling.profile();
var ret=func.apply(this,arguments);
if(GLOBAL.__BridgeProfilingIsProfiling){
var name=this._instance && this._instance.constructor && (
this._instance.constructor.displayName || 
this._instance.constructor.name);
BridgeProfiling.profileEnd(objName + '.' + fnName + '(' + name + ')');}

return ret;};};}};





module.exports = BridgeProfiling;
});
__d('ErrorUtils',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











GLOBAL=this;













module.exports = GLOBAL.ErrorUtils;
});
__d('JSTimersExecution',["invariant","keyMirror","performanceNow","warning","JSTimers","JSTimers"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var invariant=require('invariant');
var keyMirror=require('keyMirror');
var performanceNow=require('performanceNow');
var warning=require('warning');






var JSTimersExecution={
GUID:1,
Type:keyMirror({
setTimeout:null,
setInterval:null,
requestAnimationFrame:null,
setImmediate:null}),



callbacks:[],
types:[],
timerIDs:[],
immediates:[],






callTimer:function(timerID){
warning(timerID <= JSTimersExecution.GUID,'Tried to call timer with ID ' + timerID + ' but no such timer exists');
var timerIndex=JSTimersExecution.timerIDs.indexOf(timerID);





if(timerIndex === -1){
return;}

var type=JSTimersExecution.types[timerIndex];
var callback=JSTimersExecution.callbacks[timerIndex];


if(type === JSTimersExecution.Type.setTimeout || 
type === JSTimersExecution.Type.setImmediate || 
type === JSTimersExecution.Type.requestAnimationFrame){
JSTimersExecution._clearIndex(timerIndex);}


try{
if(type === JSTimersExecution.Type.setTimeout || 
type === JSTimersExecution.Type.setInterval || 
type === JSTimersExecution.Type.setImmediate){
callback();}else 
if(type === JSTimersExecution.Type.requestAnimationFrame){
var currentTime=performanceNow();
callback(currentTime);}else 
{
console.error('Tried to call a callback with invalid type: ' + type);
return;}}

catch(e) {

JSTimersExecution.errors = JSTimersExecution.errors || [];
JSTimersExecution.errors.push(e);}},







callTimers:function(timerIDs){
invariant(timerIDs.length !== 0,'Probably shouldn\'t call "callTimers" with no timerIDs');

JSTimersExecution.errors = null;
timerIDs.forEach(JSTimersExecution.callTimer);

var errors=JSTimersExecution.errors;
if(errors){
var errorCount=errors.length;
if(errorCount > 1){


for(var ii=1;ii < errorCount;ii++) {
require('JSTimers').setTimeout(
(function(error){throw error;}).bind(null,errors[ii]),
0);}}



throw errors[0];}},







callImmediates:function(){
JSTimersExecution.errors = null;
while(JSTimersExecution.immediates.length !== 0) {
JSTimersExecution.callTimer(JSTimersExecution.immediates.shift());}

if(JSTimersExecution.errors){
JSTimersExecution.errors.forEach(function(error){return (
require('JSTimers').setTimeout(function(){throw error;},0));});}},




_clearIndex:function(i){
JSTimersExecution.timerIDs[i] = null;
JSTimersExecution.callbacks[i] = null;
JSTimersExecution.types[i] = null;}};



module.exports = JSTimersExecution;
});
__d('performanceNow',["performance"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











performance=require('performance');






if(!performance || !performance.now){
performance = Date;}


var performanceNow=performance.now.bind(performance);

module.exports = performanceNow;
});
__d('performance',["ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";













var ExecutionEnvironment=require('ExecutionEnvironment');

var performance;

if(ExecutionEnvironment.canUseDOM){
performance = 
window.performance || 
window.msPerformance || 
window.webkitPerformance;}


module.exports = performance || {};
});
__d('ExecutionEnvironment',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";























var canUseDOM=false;







var ExecutionEnvironment={

canUseDOM:canUseDOM,

canUseWorkers:typeof Worker !== 'undefined',

canUseEventListeners:
canUseDOM && !!(window.addEventListener || window.attachEvent),

canUseViewport:canUseDOM && !!window.screen,

isInWorker:!canUseDOM};



module.exports = ExecutionEnvironment;
});
__d('JSTimers',["NativeModules","JSTimersExecution"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var RCTTiming=require('NativeModules').Timing;
var JSTimersExecution=require('JSTimersExecution');






var JSTimers={
Types:JSTimersExecution.Types,





_getFreeIndex:function(){
var freeIndex=JSTimersExecution.timerIDs.indexOf(null);
if(freeIndex === -1){
freeIndex = JSTimersExecution.timerIDs.length;}

return freeIndex;},






setTimeout:function(func,duration){for(var _len=arguments.length,args=Array(_len > 2?_len - 2:0),_key=2;_key < _len;_key++) {args[_key - 2] = arguments[_key];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setTimeout;
RCTTiming.createTimer(newID,duration,Date.now(),false);
return newID;},






setInterval:function(func,duration){for(var _len2=arguments.length,args=Array(_len2 > 2?_len2 - 2:0),_key2=2;_key2 < _len2;_key2++) {args[_key2 - 2] = arguments[_key2];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setInterval;
RCTTiming.createTimer(newID,duration,Date.now(),true);
return newID;},






setImmediate:function(func){for(var _len3=arguments.length,args=Array(_len3 > 1?_len3 - 1:0),_key3=1;_key3 < _len3;_key3++) {args[_key3 - 1] = arguments[_key3];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setImmediate;
JSTimersExecution.immediates.push(newID);
return newID;},





requestAnimationFrame:function(func){
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = func;
JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.requestAnimationFrame;
RCTTiming.createTimer(newID,1,Date.now(),false);
return newID;},


clearTimeout:function(timerID){
JSTimers._clearTimerID(timerID);},


clearInterval:function(timerID){
JSTimers._clearTimerID(timerID);},


clearImmediate:function(timerID){
JSTimers._clearTimerID(timerID);
JSTimersExecution.immediates.splice(
JSTimersExecution.immediates.indexOf(timerID),
1);},



cancelAnimationFrame:function(timerID){
JSTimers._clearTimerID(timerID);},


_clearTimerID:function(timerID){


if(timerID == null){
return;}


var index=JSTimersExecution.timerIDs.indexOf(timerID);

if(index !== -1){
JSTimersExecution._clearIndex(index);
if(JSTimersExecution.types[index] !== JSTimersExecution.Type.setImmediate){
RCTTiming.deleteTimer(timerID);}}}};





module.exports = JSTimers;
});
__d('stringifySafe',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
















function stringifySafe(arg){
var ret;
var type=typeof arg;
if(arg === undefined){
ret = 'undefined';}else 
if(arg === null){
ret = 'null';}else 
if(type === 'string'){
ret = '"' + arg + '"';}else 
if(type === 'function'){
try{
ret = arg.toString();}
catch(e) {
ret = '[function unknown]';}}else 

{


try{
ret = JSON.stringify(arg);}
catch(e) {
if(typeof arg.toString === 'function'){
try{
ret = arg.toString();}
catch(E) {}}}}



return ret || '["' + type + '" failed to stringify]';}


module.exports = stringifySafe;
});
__d('nativeModulePrefixNormalizer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













function nativeModulePrefixNormalizer(
modules)
{
Object.keys(modules).forEach(function(moduleName){
var strippedName=moduleName.replace(/^(RCT|RK)/,'');
if(modules['RCT' + strippedName] && modules['RK' + strippedName]){
throw new Error(
'Module cannot be registered as both RCT and RK: ' + moduleName);}


if(strippedName !== moduleName){
modules[strippedName] = modules[moduleName];
delete modules[moduleName];}});}




module.exports = nativeModulePrefixNormalizer;
});
__d('InspectorUtils',["ReactInstanceHandles","ReactInstanceMap","ReactNativeMount","ReactNativeTagHandles"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

function traverseOwnerTreeUp(hierarchy,instance){
if(instance){
hierarchy.unshift(instance);
traverseOwnerTreeUp(hierarchy,instance._currentElement._owner);}}



function findInstance(component,targetID){
if(targetID === findRootNodeID(component)){
return component;}

if(component._renderedComponent){
return findInstance(component._renderedComponent,targetID);}else 
{
for(var key in component._renderedChildren) {
var child=component._renderedChildren[key];
if(ReactInstanceHandles.isAncestorIDOf(findRootNodeID(child),targetID)){
var instance=findInstance(child,targetID);
if(instance){
return instance;}}}}}






function findRootNodeID(component){
var internalInstance=ReactInstanceMap.get(component);
return internalInstance?internalInstance._rootNodeID:component._rootNodeID;}


function findInstanceByNativeTag(rootTag,nativeTag){
var containerID=ReactNativeTagHandles.tagToRootNodeID[rootTag];
var rootInstance=ReactNativeMount._instancesByContainerID[containerID];
var targetID=ReactNativeTagHandles.tagToRootNodeID[nativeTag];
if(!targetID){
return undefined;}

return findInstance(rootInstance,targetID);}


function getOwnerHierarchy(instance){
var hierarchy=[];
traverseOwnerTreeUp(hierarchy,instance);
return hierarchy;}


module.exports = {findInstanceByNativeTag:findInstanceByNativeTag,getOwnerHierarchy:getOwnerHierarchy};
});
__d('ReactNativeMount',["NativeModules","ReactNativeTagHandles","ReactPerf","ReactReconciler","ReactUpdateQueue","ReactUpdates","emptyObject","instantiateReactComponent","shouldUpdateReactComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTUIManager=require('NativeModules').UIManager;

var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');

var emptyObject=require('emptyObject');
var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');

function instanceNumberToChildRootID(rootNodeID,instanceNumber){
return rootNodeID + '[' + instanceNumber + ']';}










function mountComponentIntoNode(
componentInstance,
rootID,
container,
transaction){
var markup=ReactReconciler.mountComponent(
componentInstance,rootID,transaction,emptyObject);

componentInstance._isTopLevel = true;
ReactNativeMount._mountImageIntoNode(markup,container);}









function batchedMountComponentIntoNode(
componentInstance,
rootID,
container){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
transaction.perform(
mountComponentIntoNode,
null,
componentInstance,
rootID,
container,
transaction);

ReactUpdates.ReactReconcileTransaction.release(transaction);}






var ReactNativeMount={
instanceCount:0,

_instancesByContainerID:{},





renderComponent:function(
nextElement,
containerTag,
callback)
{
var topRootNodeID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
if(topRootNodeID){
var prevComponent=ReactNativeMount._instancesByContainerID[topRootNodeID];
if(prevComponent){
var prevElement=prevComponent._currentElement;
if(shouldUpdateReactComponent(prevElement,nextElement)){
ReactUpdateQueue.enqueueElementInternal(prevComponent,nextElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent,callback);}

return prevComponent;}else 
{
ReactNativeMount.unmountComponentAtNode(containerTag);}}}




if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return;}


var topRootNodeID=ReactNativeTagHandles.allocateRootNodeIDForTag(containerTag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
topRootNodeID,
containerTag);


var instance=instantiateReactComponent(nextElement);
ReactNativeMount._instancesByContainerID[topRootNodeID] = instance;

var childRootNodeID=instanceNumberToChildRootID(
topRootNodeID,
ReactNativeMount.instanceCount++);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode,
instance,
childRootNodeID,
topRootNodeID);

var component=instance.getPublicInstance();
if(callback){
callback.call(component);}

return component;},






_mountImageIntoNode:ReactPerf.measure(

'ReactComponentBrowserEnvironment',
'mountImageIntoNode',
function(mountImage,containerID){


ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
mountImage.rootNodeID,
mountImage.tag);

var addChildTags=[mountImage.tag];
var addAtIndices=[0];
RCTUIManager.manageChildren(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID),
null,
null,
addChildTags,
addAtIndices,
null);}),












unmountComponentAtNodeAndRemoveContainer:function(
containerTag)
{
ReactNativeMount.unmountComponentAtNode(containerTag);

RCTUIManager.removeRootView(containerTag);},







unmountComponentAtNode:function(containerTag){
if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return false;}


var containerID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
var instance=ReactNativeMount._instancesByContainerID[containerID];
if(!instance){
return false;}

ReactNativeMount.unmountComponentFromNode(instance,containerID);
delete ReactNativeMount._instancesByContainerID[containerID];
return true;},











unmountComponentFromNode:function(
instance,
containerID)
{

ReactReconciler.unmountComponent(instance);
var containerTag=
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID);
RCTUIManager.removeSubviewsFromContainerWithID(containerTag);},


getNode:function(id){
return id;}};



ReactNativeMount.renderComponent = ReactPerf.measure(
'ReactMount',
'_renderNewRootComponent',
ReactNativeMount.renderComponent);


module.exports = ReactNativeMount;
});
__d('ReactNativeTagHandles',["invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');
var warning=require('warning');














var INITIAL_TAG_COUNT=1;
var NATIVE_TOP_ROOT_ID_SEPARATOR='{TOP_LEVEL}';
var ReactNativeTagHandles={
tagsStartAt:INITIAL_TAG_COUNT,
tagCount:INITIAL_TAG_COUNT,

allocateTag:function(){

while(this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount)) {
ReactNativeTagHandles.tagCount++;}

var tag=ReactNativeTagHandles.tagCount;
ReactNativeTagHandles.tagCount++;
return tag;},











associateRootNodeIDWithMountedNodeHandle:function(
rootNodeID,
tag)
{
warning(rootNodeID && tag,'Root node or tag is null when associating');
if(rootNodeID && tag){
ReactNativeTagHandles.tagToRootNodeID[tag] = rootNodeID;
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID] = tag;}},



allocateRootNodeIDForTag:function(tag){
invariant(
this.reactTagIsNativeTopRootID(tag),
'Expect a native root tag, instead got ',tag);

return '.r[' + tag + ']' + NATIVE_TOP_ROOT_ID_SEPARATOR;},


reactTagIsNativeTopRootID:function(reactTag){

return reactTag % 10 === 1;},


getNativeTopRootIDFromNodeID:function(nodeID){
if(!nodeID){
return null;}

var index=nodeID.indexOf(NATIVE_TOP_ROOT_ID_SEPARATOR);
if(index === -1){
return null;}

return nodeID.substr(0,index + NATIVE_TOP_ROOT_ID_SEPARATOR.length);},














mostRecentMountedNodeHandleForRootNodeID:function(
rootNodeID)
{
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];},


tagToRootNodeID:[],

rootNodeIDToTag:{}};


module.exports = ReactNativeTagHandles;
});
__d('instantiateReactComponent',["ReactCompositeComponent","ReactEmptyComponent","ReactNativeComponent","Object.assign","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactNativeComponent=require('ReactNativeComponent');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');


var ReactCompositeComponentWrapper=function(){};
assign(
ReactCompositeComponentWrapper.prototype,
ReactCompositeComponent.Mixin,
{
_instantiateReactComponent:instantiateReactComponent});










function isInternalComponentType(type){
return (
typeof type === 'function' && 
typeof type.prototype !== 'undefined' && 
typeof type.prototype.mountComponent === 'function' && 
typeof type.prototype.receiveComponent === 'function');}











function instantiateReactComponent(node,parentCompositeType){
var instance;

if(node === null || node === false){
node = ReactEmptyComponent.emptyElement;}


if(typeof node === 'object'){
var element=node;
if(__DEV__){
warning(
element && (typeof element.type === 'function' || 
typeof element.type === 'string'),
'Only functions or strings can be mounted as React components.');}




if(parentCompositeType === element.type && 
typeof element.type === 'string'){

instance = ReactNativeComponent.createInternalComponent(element);}else 


if(isInternalComponentType(element.type)){



instance = new element.type(element);}else 
{
instance = new ReactCompositeComponentWrapper();}}else 

if(typeof node === 'string' || typeof node === 'number'){
instance = ReactNativeComponent.createInstanceForText(node);}else 
{
invariant(
false,
'Encountered invalid React node of type %s',
typeof node);}



if(__DEV__){
warning(
typeof instance.construct === 'function' && 
typeof instance.mountComponent === 'function' && 
typeof instance.receiveComponent === 'function' && 
typeof instance.unmountComponent === 'function',
'Only React Components can be mounted.');}




instance.construct(node);




instance._mountIndex = 0;
instance._mountImage = null;

if(__DEV__){
instance._isOwnerNecessary = false;
instance._warnedAboutRefsInRender = false;}




if(__DEV__){
if(Object.preventExtensions){
Object.preventExtensions(instance);}}



return instance;}


module.exports = instantiateReactComponent;
});
__d('ReactCompositeComponent',["ReactComponentEnvironment","ReactContext","ReactCurrentOwner","ReactElement","ReactElementValidator","ReactInstanceMap","ReactLifeCycle","ReactNativeComponent","ReactPerf","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactReconciler","ReactUpdates","Object.assign","emptyObject","invariant","shouldUpdateReactComponent","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactContext=require('ReactContext');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactLifeCycle=require('ReactLifeCycle');
var ReactNativeComponent=require('ReactNativeComponent');
var ReactPerf=require('ReactPerf');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactReconciler=require('ReactReconciler');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var warning=require('warning');

function getDeclarationErrorAddendum(component){
var owner=component._currentElement._owner || null;
if(owner){
var name=owner.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}



































var nextMountID=1;




var ReactCompositeComponentMixin={








construct:function(element){
this._currentElement = element;
this._rootNodeID = null;
this._instance = null;


this._pendingElement = null;
this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;

this._renderedComponent = null;

this._context = null;
this._mountOrder = 0;
this._isTopLevel = false;


this._pendingCallbacks = null;},











mountComponent:function(rootID,transaction,context){
this._context = context;
this._mountOrder = nextMountID++;
this._rootNodeID = rootID;

var publicProps=this._processProps(this._currentElement.props);
var publicContext=this._processContext(this._currentElement._context);

var Component=ReactNativeComponent.getComponentClassForElement(
this._currentElement);



var inst=new Component(publicProps,publicContext);

if(__DEV__){


warning(
inst.render != null,
'%s(...): No `render` method found on the returned component ' + 
'instance: you may have forgotten to define `render` in your ' + 
'component or you may have accidentally tried to render an element ' + 
'whose type is a function that isn\'t a React component.',
Component.displayName || Component.name || 'Component');}





inst.props = publicProps;
inst.context = publicContext;
inst.refs = emptyObject;

this._instance = inst;


ReactInstanceMap.set(inst,this);

if(__DEV__){
this._warnIfContextsDiffer(this._currentElement._context,context);}


if(__DEV__){



warning(
!inst.getInitialState || 
inst.getInitialState.isReactClassApproved,
'getInitialState was defined on %s, a plain JavaScript class. ' + 
'This is only supported for classes created using React.createClass. ' + 
'Did you mean to define a state property instead?',
this.getName() || 'a component');

warning(
!inst.getDefaultProps || 
inst.getDefaultProps.isReactClassApproved,
'getDefaultProps was defined on %s, a plain JavaScript class. ' + 
'This is only supported for classes created using React.createClass. ' + 
'Use a static property to define defaultProps instead.',
this.getName() || 'a component');

warning(
!inst.propTypes,
'propTypes was defined as an instance property on %s. Use a static ' + 
'property to define propTypes instead.',
this.getName() || 'a component');

warning(
!inst.contextTypes,
'contextTypes was defined as an instance property on %s. Use a ' + 
'static property to define contextTypes instead.',
this.getName() || 'a component');

warning(
typeof inst.componentShouldUpdate !== 'function',
'%s has a method called ' + 
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 
'The name is phrased as a question because the function is ' + 
'expected to return a value.',
this.getName() || 'A component');}



var initialState=inst.state;
if(initialState === undefined){
inst.state = initialState = null;}

invariant(
typeof initialState === 'object' && !Array.isArray(initialState),
'%s.state: must be set to an object or null',
this.getName() || 'ReactCompositeComponent');


this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;

var renderedElement;

var previouslyMounting=ReactLifeCycle.currentlyMountingInstance;
ReactLifeCycle.currentlyMountingInstance = this;
try{
if(inst.componentWillMount){
inst.componentWillMount();


if(this._pendingStateQueue){
inst.state = this._processPendingState(inst.props,inst.context);}}



renderedElement = this._renderValidatedComponent();}finally 
{
ReactLifeCycle.currentlyMountingInstance = previouslyMounting;}


this._renderedComponent = this._instantiateReactComponent(
renderedElement,
this._currentElement.type);


var markup=ReactReconciler.mountComponent(
this._renderedComponent,
rootID,
transaction,
this._processChildContext(context));

if(inst.componentDidMount){
transaction.getReactMountReady().enqueue(inst.componentDidMount,inst);}


return markup;},








unmountComponent:function(){
var inst=this._instance;

if(inst.componentWillUnmount){
var previouslyUnmounting=ReactLifeCycle.currentlyUnmountingInstance;
ReactLifeCycle.currentlyUnmountingInstance = this;
try{
inst.componentWillUnmount();}finally 
{
ReactLifeCycle.currentlyUnmountingInstance = previouslyUnmounting;}}



ReactReconciler.unmountComponent(this._renderedComponent);
this._renderedComponent = null;


this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;
this._pendingCallbacks = null;
this._pendingElement = null;



this._context = null;
this._rootNodeID = null;




ReactInstanceMap.remove(inst);},
















_setPropsInternal:function(partialProps,callback){


var element=this._pendingElement || this._currentElement;
this._pendingElement = ReactElement.cloneAndReplaceProps(
element,
assign({},element.props,partialProps));

ReactUpdates.enqueueUpdate(this,callback);},










_maskContext:function(context){
var maskedContext=null;


if(typeof this._currentElement.type === 'string'){
return emptyObject;}

var contextTypes=this._currentElement.type.contextTypes;
if(!contextTypes){
return emptyObject;}

maskedContext = {};
for(var contextName in contextTypes) {
maskedContext[contextName] = context[contextName];}

return maskedContext;},










_processContext:function(context){
var maskedContext=this._maskContext(context);
if(__DEV__){
var Component=ReactNativeComponent.getComponentClassForElement(
this._currentElement);

if(Component.contextTypes){
this._checkPropTypes(
Component.contextTypes,
maskedContext,
ReactPropTypeLocations.context);}}



return maskedContext;},







_processChildContext:function(currentContext){
var inst=this._instance;
var childContext=inst.getChildContext && inst.getChildContext();
if(childContext){
invariant(
typeof inst.constructor.childContextTypes === 'object',
'%s.getChildContext(): childContextTypes must be defined in order to ' + 
'use getChildContext().',
this.getName() || 'ReactCompositeComponent');

if(__DEV__){
this._checkPropTypes(
inst.constructor.childContextTypes,
childContext,
ReactPropTypeLocations.childContext);}


for(var name in childContext) {
invariant(
name in inst.constructor.childContextTypes,
'%s.getChildContext(): key "%s" is not defined in childContextTypes.',
this.getName() || 'ReactCompositeComponent',
name);}


return assign({},currentContext,childContext);}

return currentContext;},











_processProps:function(newProps){
if(__DEV__){
var Component=ReactNativeComponent.getComponentClassForElement(
this._currentElement);

if(Component.propTypes){
this._checkPropTypes(
Component.propTypes,
newProps,
ReactPropTypeLocations.prop);}}



return newProps;},










_checkPropTypes:function(propTypes,props,location){


var componentName=this.getName();
for(var propName in propTypes) {
if(propTypes.hasOwnProperty(propName)){
var error;
try{


invariant(
typeof propTypes[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually ' + 
'from React.PropTypes.',
componentName || 'React class',
ReactPropTypeLocationNames[location],
propName);

error = propTypes[propName](props,propName,componentName,location);}
catch(ex) {
error = ex;}

if(error instanceof Error){



var addendum=getDeclarationErrorAddendum(this);

if(location === ReactPropTypeLocations.prop){

warning(
false,
'Failed Composite propType: %s%s',
error.message,
addendum);}else 

{
warning(
false,
'Failed Context Types: %s%s',
error.message,
addendum);}}}}},







receiveComponent:function(nextElement,transaction,nextContext){
var prevElement=this._currentElement;
var prevContext=this._context;

this._pendingElement = null;

this.updateComponent(
transaction,
prevElement,
nextElement,
prevContext,
nextContext);},










performUpdateIfNecessary:function(transaction){
if(this._pendingElement != null){
ReactReconciler.receiveComponent(
this,
this._pendingElement || this._currentElement,
transaction,
this._context);}



if(this._pendingStateQueue !== null || this._pendingForceUpdate){
if(__DEV__){
ReactElementValidator.checkAndWarnForMutatedProps(
this._currentElement);}



this.updateComponent(
transaction,
this._currentElement,
this._currentElement,
this._context,
this._context);}},








_warnIfContextsDiffer:function(ownerBasedContext,parentBasedContext){
ownerBasedContext = this._maskContext(ownerBasedContext);
parentBasedContext = this._maskContext(parentBasedContext);
var parentKeys=Object.keys(parentBasedContext).sort();
var displayName=this.getName() || 'ReactCompositeComponent';
for(var i=0;i < parentKeys.length;i++) {
var key=parentKeys[i];
warning(
ownerBasedContext[key] === parentBasedContext[key],
'owner-based and parent-based contexts differ ' + 
'(values: `%s` vs `%s`) for key (%s) while mounting %s ' + 
'(see: http://fb.me/react-context-by-parent)',
ownerBasedContext[key],
parentBasedContext[key],
key,
displayName);}},



















updateComponent:function(
transaction,
prevParentElement,
nextParentElement,
prevUnmaskedContext,
nextUnmaskedContext)
{
var inst=this._instance;

var nextContext=inst.context;
var nextProps=inst.props;


if(prevParentElement !== nextParentElement){
nextContext = this._processContext(nextParentElement._context);
nextProps = this._processProps(nextParentElement.props);

if(__DEV__){
if(nextUnmaskedContext != null){
this._warnIfContextsDiffer(
nextParentElement._context,
nextUnmaskedContext);}}








if(inst.componentWillReceiveProps){
inst.componentWillReceiveProps(nextProps,nextContext);}}



var nextState=this._processPendingState(nextProps,nextContext);

var shouldUpdate=
this._pendingForceUpdate || 
!inst.shouldComponentUpdate || 
inst.shouldComponentUpdate(nextProps,nextState,nextContext);

if(__DEV__){
warning(
typeof shouldUpdate !== 'undefined',
'%s.shouldComponentUpdate(): Returned undefined instead of a ' + 
'boolean value. Make sure to return true or false.',
this.getName() || 'ReactCompositeComponent');}



if(shouldUpdate){
this._pendingForceUpdate = false;

this._performComponentUpdate(
nextParentElement,
nextProps,
nextState,
nextContext,
transaction,
nextUnmaskedContext);}else 

{


this._currentElement = nextParentElement;
this._context = nextUnmaskedContext;
inst.props = nextProps;
inst.state = nextState;
inst.context = nextContext;}},



_processPendingState:function(props,context){
var inst=this._instance;
var queue=this._pendingStateQueue;
var replace=this._pendingReplaceState;
this._pendingReplaceState = false;
this._pendingStateQueue = null;

if(!queue){
return inst.state;}


var nextState=assign({},replace?queue[0]:inst.state);
for(var i=replace?1:0;i < queue.length;i++) {
var partial=queue[i];
assign(
nextState,
typeof partial === 'function'?
partial.call(inst,nextState,props,context):
partial);}



return nextState;},














_performComponentUpdate:function(
nextElement,
nextProps,
nextState,
nextContext,
transaction,
unmaskedContext)
{
var inst=this._instance;

var prevProps=inst.props;
var prevState=inst.state;
var prevContext=inst.context;

if(inst.componentWillUpdate){
inst.componentWillUpdate(nextProps,nextState,nextContext);}


this._currentElement = nextElement;
this._context = unmaskedContext;
inst.props = nextProps;
inst.state = nextState;
inst.context = nextContext;

this._updateRenderedComponent(transaction,unmaskedContext);

if(inst.componentDidUpdate){
transaction.getReactMountReady().enqueue(
inst.componentDidUpdate.bind(inst,prevProps,prevState,prevContext),
inst);}},










_updateRenderedComponent:function(transaction,context){
var prevComponentInstance=this._renderedComponent;
var prevRenderedElement=prevComponentInstance._currentElement;
var nextRenderedElement=this._renderValidatedComponent();
if(shouldUpdateReactComponent(prevRenderedElement,nextRenderedElement)){
ReactReconciler.receiveComponent(
prevComponentInstance,
nextRenderedElement,
transaction,
this._processChildContext(context));}else 

{

var thisID=this._rootNodeID;
var prevComponentID=prevComponentInstance._rootNodeID;
ReactReconciler.unmountComponent(prevComponentInstance);

this._renderedComponent = this._instantiateReactComponent(
nextRenderedElement,
this._currentElement.type);

var nextMarkup=ReactReconciler.mountComponent(
this._renderedComponent,
thisID,
transaction,
this._processChildContext(context));

this._replaceNodeWithMarkupByID(prevComponentID,nextMarkup);}},






_replaceNodeWithMarkupByID:function(prevComponentID,nextMarkup){
ReactComponentEnvironment.replaceNodeWithMarkupByID(
prevComponentID,
nextMarkup);},






_renderValidatedComponentWithoutOwnerOrContext:function(){
var inst=this._instance;
var renderedComponent=inst.render();
if(__DEV__){

if(typeof renderedComponent === 'undefined' && 
inst.render._isMockFunction){


renderedComponent = null;}}



return renderedComponent;},





_renderValidatedComponent:function(){
var renderedComponent;
var previousContext=ReactContext.current;
ReactContext.current = this._processChildContext(
this._currentElement._context);

ReactCurrentOwner.current = this;
try{
renderedComponent = 
this._renderValidatedComponentWithoutOwnerOrContext();}finally 
{
ReactContext.current = previousContext;
ReactCurrentOwner.current = null;}

invariant(

renderedComponent === null || renderedComponent === false || 
ReactElement.isValidElement(renderedComponent),
'%s.render(): A valid ReactComponent must be returned. You may have ' + 
'returned undefined, an array or some other invalid object.',
this.getName() || 'ReactCompositeComponent');

return renderedComponent;},










attachRef:function(ref,component){
var inst=this.getPublicInstance();
var refs=inst.refs === emptyObject?inst.refs = {}:inst.refs;
refs[ref] = component.getPublicInstance();},









detachRef:function(ref){
var refs=this.getPublicInstance().refs;
delete refs[ref];},








getName:function(){
var type=this._currentElement.type;
var constructor=this._instance && this._instance.constructor;
return (
type.displayName || constructor && constructor.displayName || 
type.name || constructor && constructor.name || 
null);},











getPublicInstance:function(){
return this._instance;},



_instantiateReactComponent:null};



ReactPerf.measureMethods(
ReactCompositeComponentMixin,
'ReactCompositeComponent',
{
mountComponent:'mountComponent',
updateComponent:'updateComponent',
_renderValidatedComponent:'_renderValidatedComponent'});



var ReactCompositeComponent={

Mixin:ReactCompositeComponentMixin};



module.exports = ReactCompositeComponent;
});
__d('ReactComponentEnvironment',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');

var injected=false;

var ReactComponentEnvironment={






unmountIDFromEnvironment:null,





replaceNodeWithMarkupByID:null,





processChildrenUpdates:null,

injection:{
injectEnvironment:function(environment){
invariant(
!injected,
'ReactCompositeComponent: injectEnvironment() can only be called once.');

ReactComponentEnvironment.unmountIDFromEnvironment = 
environment.unmountIDFromEnvironment;
ReactComponentEnvironment.replaceNodeWithMarkupByID = 
environment.replaceNodeWithMarkupByID;
ReactComponentEnvironment.processChildrenUpdates = 
environment.processChildrenUpdates;
injected = true;}}};





module.exports = ReactComponentEnvironment;
});
__d('shouldUpdateReactComponent',["warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var warning=require('warning');












function shouldUpdateReactComponent(prevElement,nextElement){
if(prevElement != null && nextElement != null){
var prevType=typeof prevElement;
var nextType=typeof nextElement;
if(prevType === 'string' || prevType === 'number'){
return nextType === 'string' || nextType === 'number';}else 
{
if(nextType === 'object' && 
prevElement.type === nextElement.type && 
prevElement.key === nextElement.key){
var ownersMatch=prevElement._owner === nextElement._owner;
var prevName=null;
var nextName=null;
var nextDisplayName=null;
if(__DEV__){
if(!ownersMatch){
if(prevElement._owner != null && 
prevElement._owner.getPublicInstance() != null && 
prevElement._owner.getPublicInstance().constructor != null){
prevName = 
prevElement._owner.getPublicInstance().constructor.displayName;}

if(nextElement._owner != null && 
nextElement._owner.getPublicInstance() != null && 
nextElement._owner.getPublicInstance().constructor != null){
nextName = 
nextElement._owner.getPublicInstance().constructor.displayName;}

if(nextElement.type != null && 
nextElement.type.displayName != null){
nextDisplayName = nextElement.type.displayName;}

if(nextElement.type != null && typeof nextElement.type === 'string'){
nextDisplayName = nextElement.type;}

if(typeof nextElement.type !== 'string' || 
nextElement.type === 'input' || 
nextElement.type === 'textarea'){
if(prevElement._owner != null && 
prevElement._owner._isOwnerNecessary === false || 
nextElement._owner != null && 
nextElement._owner._isOwnerNecessary === false){
if(prevElement._owner != null){
prevElement._owner._isOwnerNecessary = true;}

if(nextElement._owner != null){
nextElement._owner._isOwnerNecessary = true;}

warning(
false,
'<%s /> is being rendered by both %s and %s using the same ' + 
'key (%s) in the same place. Currently, this means that ' + 
'they don\'t preserve state. This behavior should be very ' + 
'rare so we\'re considering deprecating it. Please contact ' + 
'the React team and explain your use case so that we can ' + 
'take that into consideration.',
nextDisplayName || 'Unknown Component',
prevName || '[Unknown]',
nextName || '[Unknown]',
prevElement.key);}}}}





return ownersMatch;}}}



return false;}


module.exports = shouldUpdateReactComponent;
});
__d('ReactEmptyComponent',["ReactElement","ReactInstanceMap","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');

var invariant=require('invariant');

var component;


var nullComponentIDsRegistry={};

var ReactEmptyComponentInjection={
injectEmptyComponent:function(emptyComponent){
component = ReactElement.createFactory(emptyComponent);}};



var ReactEmptyComponentType=function(){};
ReactEmptyComponentType.prototype.componentDidMount = function(){
var internalInstance=ReactInstanceMap.get(this);




if(!internalInstance){
return;}

registerNullComponentID(internalInstance._rootNodeID);};

ReactEmptyComponentType.prototype.componentWillUnmount = function(){
var internalInstance=ReactInstanceMap.get(this);

if(!internalInstance){
return;}

deregisterNullComponentID(internalInstance._rootNodeID);};

ReactEmptyComponentType.prototype.render = function(){
invariant(
component,
'Trying to return null from a render, but no null placeholder component ' + 
'was injected.');

return component();};


var emptyElement=ReactElement.createElement(ReactEmptyComponentType);





function registerNullComponentID(id){
nullComponentIDsRegistry[id] = true;}






function deregisterNullComponentID(id){
delete nullComponentIDsRegistry[id];}






function isNullComponentID(id){
return !!nullComponentIDsRegistry[id];}


var ReactEmptyComponent={
emptyElement:emptyElement,
injection:ReactEmptyComponentInjection,
isNullComponentID:isNullComponentID};


module.exports = ReactEmptyComponent;
});
__d('RCTDeviceEventEmitter',["EventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');

var RCTDeviceEventEmitter=new EventEmitter();

module.exports = RCTDeviceEventEmitter;
});
__d('EventEmitter',["EmitterSubscription","ErrorUtils","EventSubscriptionVendor","emptyFunction","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

















var EmitterSubscription=require('EmitterSubscription');
var ErrorUtils=require('ErrorUtils');
var EventSubscriptionVendor=require('EventSubscriptionVendor');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');var 














EventEmitter=(function(){



function EventEmitter(){_classCallCheck(this,EventEmitter);
this._subscriber = new EventSubscriptionVendor();}_createClass(EventEmitter,[{key:'addListener',value:
















function addListener(
eventType,listener,context){
return this._subscriber.addSubscription(
eventType,
new EmitterSubscription(this._subscriber,listener,context));}},{key:'once',value:












function once(eventType,listener,context){
var emitter=this;
return this.addListener(eventType,function(){
emitter.removeCurrentListener();
listener.apply(context,arguments);});}},{key:'removeAllListeners',value:










function removeAllListeners(eventType){
this._subscriber.removeAllSubscriptions(eventType);}},{key:'removeCurrentListener',value:























function removeCurrentListener(){
invariant(
!!this._currentSubscription,
'Not in an emitting cycle; there is no current subscription');

this._subscriber.removeSubscription(this._currentSubscription);}},{key:'listeners',value:









function listeners(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
return subscriptions?
subscriptions.filter(emptyFunction.thatReturnsTrue).map(
function(subscription){
return subscription.listener;}):

[];}},{key:'emit',value:
















function emit(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
if(subscriptions){
var keys=Object.keys(subscriptions);
for(var ii=0;ii < keys.length;ii++) {
var key=keys[ii];
var subscription=subscriptions[key];


if(subscription){
this._currentSubscription = subscription;

ErrorUtils.applyWithGuard(
subscription.listener,
subscription.context,
Array.prototype.slice.call(arguments,1),
null,
'EventEmitter:' + eventType);}}



this._currentSubscription = null;}}}]);return EventEmitter;})();




module.exports = EventEmitter;
});
__d('EmitterSubscription',["EventSubscription"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}


















var EventSubscription=require('EventSubscription');var 




EmitterSubscription=(function(_EventSubscription){_inherits(EmitterSubscription,_EventSubscription);









function EmitterSubscription(subscriber,listener,context){_classCallCheck(this,EmitterSubscription);
_get(Object.getPrototypeOf(EmitterSubscription.prototype),'constructor',this).call(this,subscriber);
this.listener = listener;
this.context = context;}return EmitterSubscription;})(EventSubscription);



module.exports = EmitterSubscription;
});
__d('EventSubscription',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 






















EventSubscription=(function(){





function EventSubscription(subscriber){_classCallCheck(this,EventSubscription);
this.subscriber = subscriber;}_createClass(EventSubscription,[{key:'remove',value:





function remove(){
this.subscriber.removeSubscription(this);}}]);return EventSubscription;})();



module.exports = EventSubscription;
});
__d('EventSubscriptionVendor',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}


















var invariant=require('invariant');var 





EventSubscriptionVendor=(function(){

function EventSubscriptionVendor(){_classCallCheck(this,EventSubscriptionVendor);
this._subscriptionsForType = {};
this._currentSubscription = null;}_createClass(EventSubscriptionVendor,[{key:'addSubscription',value:








function addSubscription(
eventType,subscription){
invariant(
subscription.subscriber === this,
'The subscriber of the subscription is incorrectly set.');
if(!this._subscriptionsForType[eventType]){
this._subscriptionsForType[eventType] = [];}

var key=this._subscriptionsForType[eventType].length;
this._subscriptionsForType[eventType].push(subscription);
subscription.eventType = eventType;
subscription.key = key;
return subscription;}},{key:'removeAllSubscriptions',value:








function removeAllSubscriptions(eventType){
if(eventType === undefined){
this._subscriptionsForType = {};}else 
{
delete this._subscriptionsForType[eventType];}}},{key:'removeSubscription',value:









function removeSubscription(subscription){
var eventType=subscription.eventType;
var key=subscription.key;

var subscriptionsForType=this._subscriptionsForType[eventType];
if(subscriptionsForType){
delete subscriptionsForType[key];}}},{key:'getSubscriptionsForType',value:















function getSubscriptionsForType(eventType){
return this._subscriptionsForType[eventType];}}]);return EventSubscriptionVendor;})();



module.exports = EventSubscriptionVendor;
});
__d('PerformanceLogger',["performanceNow"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var performanceNow=require('performanceNow');

var timespans={};





var PerformanceLogger={
addTimespan:function(key,lengthInMs,description){
if(timespans[key]){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to add a timespan that already exists');}


return;}


timespans[key] = {
description:description,
totalTime:lengthInMs};},



startTimespan:function(key,description){
if(timespans[key]){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to start a timespan that already exists');}


return;}


timespans[key] = {
description:description,
startTime:performanceNow()};},



stopTimespan:function(key){
if(!timespans[key] || !timespans[key].startTime){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to end a timespan that has not started');}


return;}


timespans[key].endTime = performanceNow();
timespans[key].totalTime = 
timespans[key].endTime - timespans[key].startTime;},


clearTimespans:function(){
timespans = {};},


getTimespans:function(){
return timespans;},


logTimespans:function(){
for(var key in timespans) {
console.log(key + ': ' + timespans[key].totalTime + 'ms');}},



addTimespans:function(newTimespans,labels){
for(var i=0,l=newTimespans.length;i < l;i += 2) {
var label=labels[i / 2];
PerformanceLogger.addTimespan(
label,
newTimespans[i + 1] - newTimespans[i],
label);}}};





module.exports = PerformanceLogger;
});
__d('ExceptionsManager',["NativeModules","loadSourceMap","parseErrorStack","stringifySafe"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTExceptionsManager=require('NativeModules').ExceptionsManager;

var loadSourceMap=require('loadSourceMap');
var parseErrorStack=require('parseErrorStack');
var stringifySafe=require('stringifySafe');

var sourceMapPromise;







function reportException(e,isFatal,stack){
if(RCTExceptionsManager){
if(!stack){
stack = parseErrorStack(e);}

if(isFatal){
RCTExceptionsManager.reportFatalException(e.message,stack);}else 
{
RCTExceptionsManager.reportSoftException(e.message,stack);}

if(__DEV__){
(sourceMapPromise = sourceMapPromise || loadSourceMap()).
then(function(map){
var prettyStack=parseErrorStack(e,map);
RCTExceptionsManager.updateExceptionMessage(e.message,prettyStack);}).

catch(function(error){


console.warn('Unable to load source map: ' + error.message);});}}}





function handleException(e,isFatal){
var stack=parseErrorStack(e);
var msg=
'Error: ' + e.message + 
'\n stack: \n' + stackToString(stack) + 
'\n URL: ' + e.sourceURL + 
'\n line: ' + e.line + 
'\n message: ' + e.message;
if(console.errorOriginal){
console.errorOriginal(msg);}else 
{
console.error(msg);}

reportException(e,isFatal,stack);}






function installConsoleErrorReporter(){
if(console.reportException){
return;}

console.reportException = reportException;
console.errorOriginal = console.error.bind(console);
console.error = function reactConsoleError(){
console.errorOriginal.apply(null,arguments);
if(!console.reportErrorsAsExceptions){
return;}

var str=Array.prototype.map.call(arguments,stringifySafe).join(', ');
var error=new Error('console.error: ' + str);
error.framesToPop = 1;
reportException(error,false);};

if(console.reportErrorsAsExceptions === undefined){
console.reportErrorsAsExceptions = true;}}



function stackToString(stack){
var maxLength=Math.max.apply(null,stack.map(function(frame){return frame.methodName.length;}));
return stack.map(function(frame){return stackFrameToString(frame,maxLength);}).join('\n');}


function stackFrameToString(stackFrame,maxLength){
var fileNameParts=stackFrame.file.split('/');
var fileName=fileNameParts[fileNameParts.length - 1];

if(fileName.length > 18){
fileName = fileName.substr(0,17) + '\u2026';}


var spaces=fillSpaces(maxLength - stackFrame.methodName.length);
return '  ' + stackFrame.methodName + spaces + '  ' + fileName + ':' + stackFrame.lineNumber;}


function fillSpaces(n){
return new Array(n + 1).join(' ');}


module.exports = {handleException:handleException,installConsoleErrorReporter:installConsoleErrorReporter};
});
__d('loadSourceMap',["Promise","NativeModules","SourceMap","react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var Promise=require('Promise');
var NativeModules=require('NativeModules');
var SourceMapConsumer=require('SourceMap').SourceMapConsumer;
var SourceMapURL=require('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js');

var RCTSourceCode=NativeModules.SourceCode;
var RCTNetworking=NativeModules.Networking;

function loadSourceMap(){
return fetchSourceMap().
then(function(map){return new SourceMapConsumer(map);});}


function fetchSourceMap(){
if(global.RAW_SOURCE_MAP){
return Promise.resolve(global.RAW_SOURCE_MAP);}


if(!RCTSourceCode){
return Promise.reject(new Error('RCTSourceCode module is not available'));}


if(!RCTNetworking){

return Promise.reject(new Error('RCTNetworking module is not available'));}


return new Promise(RCTSourceCode.getScriptText).
then(extractSourceMapURL).
then(function(url){
if(url === null){
return Promise.reject(new Error('No source map URL found. May be running from bundled file.'));}

return Promise.resolve(url);}).

then(fetch).
then(function(response){return response.text();});}


function extractSourceMapURL(_ref){var url=_ref.url;var text=_ref.text;var fullSourceMappingURL=_ref.fullSourceMappingURL;
if(fullSourceMappingURL){
return fullSourceMappingURL;}

var mapURL=SourceMapURL.getFrom(text);
if(!mapURL){
return null;}

var baseURL=url.match(/(.+:\/\/.*?)\//)[1];
return baseURL + mapURL;}


module.exports = loadSourceMap;
});
__d('Promise',["setImmediate","promise/setimmediate/es6-extensions.js","promise/setimmediate/done.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';























global.setImmediate = require('setImmediate');
var Promise=require('promise/setimmediate/es6-extensions.js');
require('promise/setimmediate/done.js');




Promise.prototype.finally = function(onSettled){
return this.then(onSettled,onSettled);};



module.exports = Promise;
});
__d('setImmediate',["ImmediateImplementation"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.
















exports = global.setImmediate || 
require('ImmediateImplementation').setImmediate;
});
__d('ImmediateImplementation',[],function(global, require, requireDynamic, requireLazy, module, exports) {  /**
 * @generated SignedSource<<57d0446bbd1186485d372efe6b323dca>>
 *
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * !! This file is a check-in of a static_upstream project!      !!
 * !!                                                            !!
 * !! You should not modify this file directly. Instead:         !!
 * !! 1) Use `fjs use-upstream` to temporarily replace this with !!
 * !!    the latest version from upstream.                       !!
 * !! 2) Make your changes, test them, etc.                      !!
 * !! 3) Use `fjs push-upstream` to copy your changes back to    !!
 * !!    static_upstream.                                        !!
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 *
 * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic
 * Denicola
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @preserve-header
 * @providesModule ImmediateImplementation
 */

(function(global,undefined){
"use strict";

var nextHandle=1;
var tasksByHandle={};
var queueHead={};
var queueTail=queueHead;
var currentlyRunningATask=false;
var doc=global.document;
var setImmediate;

function addFromSetImmediateArguments(args){
var handler=args[0];
args = Array.prototype.slice.call(args,1);
tasksByHandle[nextHandle] = function(){
handler.apply(undefined,args);};

queueTail = queueTail.next = {handle:nextHandle++};
return queueTail.handle;}


function flushQueue(){
var next,task;
while(!currentlyRunningATask && (next = queueHead.next)) {
queueHead = next;
if(task = tasksByHandle[next.handle]){
currentlyRunningATask = true;
try{
task();
currentlyRunningATask = false;}finally 
{
clearImmediate(next.handle);
if(currentlyRunningATask){
currentlyRunningATask = false;






if(queueHead.next){
setImmediate(flushQueue);}}}}}}







function clearImmediate(handle){
delete tasksByHandle[handle];}


function canUsePostMessage(){


if(global.postMessage && !global.importScripts){
var postMessageIsAsynchronous=true;

var onMessage=function(){
postMessageIsAsynchronous = false;
if(global.removeEventListener){
global.removeEventListener("message",onMessage,false);}else 
{
global.detachEvent("onmessage",onMessage);}};



if(global.addEventListener){
global.addEventListener("message",onMessage,false);}else 
if(global.attachEvent){
global.attachEvent("onmessage",onMessage);}else 
{
return false;}


global.postMessage("","*");
return postMessageIsAsynchronous;}}



function installPostMessageImplementation(){


var messagePrefix="setImmediate$" + Math.random() + "$";
var onGlobalMessage=function(event){
if(event.source === global && 
typeof event.data === "string" && 
event.data.indexOf(messagePrefix) === 0){
flushQueue();}};



if(global.addEventListener){
global.addEventListener("message",onGlobalMessage,false);}else 
{
global.attachEvent("onmessage",onGlobalMessage);}


setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);
global.postMessage(messagePrefix + handle,"*");
return handle;};}



function installMessageChannelImplementation(){
var channel=new MessageChannel();
channel.port1.onmessage = flushQueue;
setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);
channel.port2.postMessage(handle);
return handle;};}



function installReadyStateChangeImplementation(){
var html=doc.documentElement;
setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);


var script=doc.createElement("script");
script.onreadystatechange = function(){
script.onreadystatechange = null;
html.removeChild(script);
script = null;
flushQueue();};

html.appendChild(script);
return handle;};}



function installSetTimeoutImplementation(){
setImmediate = function(){
setTimeout(flushQueue,0);
return addFromSetImmediateArguments(arguments);};}



if(canUsePostMessage()){

installPostMessageImplementation();}else 

if(global.MessageChannel){

installMessageChannelImplementation();}else 

if(doc && "onreadystatechange" in doc.createElement("script")){

installReadyStateChangeImplementation();}else 

{

installSetTimeoutImplementation();}


exports.setImmediate = setImmediate;
exports.clearImmediate = clearImmediate;})(
Function("return this")());
});
__d('promise/setimmediate/es6-extensions.js',["promise/setimmediate/core.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



var Promise=require('promise/setimmediate/core.js');


module.exports = Promise;



var TRUE=valuePromise(true);
var FALSE=valuePromise(false);
var NULL=valuePromise(null);
var UNDEFINED=valuePromise(undefined);
var ZERO=valuePromise(0);
var EMPTYSTRING=valuePromise('');

function valuePromise(value){
var p=new Promise(Promise._1);
p._41 = 1;
p._86 = value;
return p;}

Promise.resolve = function(value){
if(value instanceof Promise)return value;

if(value === null)return NULL;
if(value === undefined)return UNDEFINED;
if(value === true)return TRUE;
if(value === false)return FALSE;
if(value === 0)return ZERO;
if(value === '')return EMPTYSTRING;

if(typeof value === 'object' || typeof value === 'function'){
try{
var then=value.then;
if(typeof then === 'function'){
return new Promise(then.bind(value));}}

catch(ex) {
return new Promise(function(resolve,reject){
reject(ex);});}}



return valuePromise(value);};


Promise.all = function(arr){
var args=Array.prototype.slice.call(arr);

return new Promise(function(resolve,reject){
if(args.length === 0)return resolve([]);
var remaining=args.length;
function res(i,val){
if(val && (typeof val === 'object' || typeof val === 'function')){
if(val instanceof Promise && val.then === Promise.prototype.then){
while(val._41 === 3) {
val = val._86;}

if(val._41 === 1)return res(i,val._86);
if(val._41 === 2)reject(val._86);
val.then(function(val){
res(i,val);},
reject);
return;}else 
{
var then=val.then;
if(typeof then === 'function'){
var p=new Promise(then.bind(val));
p.then(function(val){
res(i,val);},
reject);
return;}}}



args[i] = val;
if(--remaining === 0){
resolve(args);}}


for(var i=0;i < args.length;i++) {
res(i,args[i]);}});};




Promise.reject = function(value){
return new Promise(function(resolve,reject){
reject(value);});};



Promise.race = function(values){
return new Promise(function(resolve,reject){
values.forEach(function(value){
Promise.resolve(value).then(resolve,reject);});});};






Promise.prototype['catch'] = function(onRejected){
return this.then(null,onRejected);};
});
__d('promise/setimmediate/core.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



function noop(){}


















var LAST_ERROR=null;
var IS_ERROR={};
function getThen(obj){
try{
return obj.then;}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}



function tryCallOne(fn,a){
try{
return fn(a);}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}


function tryCallTwo(fn,a,b){
try{
fn(a,b);}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}



module.exports = Promise;

function Promise(fn){
if(typeof this !== 'object'){
throw new TypeError('Promises must be constructed via new');}

if(typeof fn !== 'function'){
throw new TypeError('not a function');}

this._41 = 0;
this._86 = null;
this._17 = [];
if(fn === noop)return;
doResolve(fn,this);}

Promise._1 = noop;

Promise.prototype.then = function(onFulfilled,onRejected){
if(this.constructor !== Promise){
return safeThen(this,onFulfilled,onRejected);}

var res=new Promise(noop);
handle(this,new Handler(onFulfilled,onRejected,res));
return res;};


function safeThen(self,onFulfilled,onRejected){
return new self.constructor(function(resolve,reject){
var res=new Promise(noop);
res.then(resolve,reject);
handle(self,new Handler(onFulfilled,onRejected,res));});}

;
function handle(self,deferred){
while(self._41 === 3) {
self = self._86;}

if(self._41 === 0){
self._17.push(deferred);
return;}

setImmediate(function(){
var cb=self._41 === 1?deferred.onFulfilled:deferred.onRejected;
if(cb === null){
if(self._41 === 1){
resolve(deferred.promise,self._86);}else 
{
reject(deferred.promise,self._86);}

return;}

var ret=tryCallOne(cb,self._86);
if(ret === IS_ERROR){
reject(deferred.promise,LAST_ERROR);}else 
{
resolve(deferred.promise,ret);}});}



function resolve(self,newValue){

if(newValue === self){
return reject(
self,
new TypeError('A promise cannot be resolved with itself.'));}


if(
newValue && (
typeof newValue === 'object' || typeof newValue === 'function'))
{
var then=getThen(newValue);
if(then === IS_ERROR){
return reject(self,LAST_ERROR);}

if(
then === self.then && 
newValue instanceof Promise)
{
self._41 = 3;
self._86 = newValue;
finale(self);
return;}else 
if(typeof then === 'function'){
doResolve(then.bind(newValue),self);
return;}}


self._41 = 1;
self._86 = newValue;
finale(self);}


function reject(self,newValue){
self._41 = 2;
self._86 = newValue;
finale(self);}

function finale(self){
for(var i=0;i < self._17.length;i++) {
handle(self,self._17[i]);}

self._17 = null;}


function Handler(onFulfilled,onRejected,promise){
this.onFulfilled = typeof onFulfilled === 'function'?onFulfilled:null;
this.onRejected = typeof onRejected === 'function'?onRejected:null;
this.promise = promise;}








function doResolve(fn,promise){
var done=false;
var res=tryCallTwo(fn,function(value){
if(done)return;
done = true;
resolve(promise,value);},
function(reason){
if(done)return;
done = true;
reject(promise,reason);});

if(!done && res === IS_ERROR){
done = true;
reject(promise,LAST_ERROR);}}
});
__d('promise/setimmediate/done.js',["promise/setimmediate/core.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var Promise=require('promise/setimmediate/core.js');

module.exports = Promise;
Promise.prototype.done = function(onFulfilled,onRejected){
var self=arguments.length?this.then.apply(this,arguments):this;
self.then(null,function(err){
setTimeout(function(){
throw err;},
0);});};
});
__d('SourceMap',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 























scope={};
wrapper.call(scope);

module.exports = scope.sourceMap;

function wrapper(){














function define(moduleName,deps,payload){
if(typeof moduleName != "string"){
throw new TypeError('Expected string, got: ' + moduleName);}


if(arguments.length == 2){
payload = deps;}


if(moduleName in define.modules){
throw new Error("Module already defined: " + moduleName);}

define.modules[moduleName] = payload;}
;




define.modules = {};










function Domain(){
this.modules = {};
this._currentModule = null;}


(function(){
















Domain.prototype.require = function(deps,callback){
if(Array.isArray(deps)){
var params=deps.map(function(dep){
return this.lookup(dep);},
this);
if(callback){
callback.apply(null,params);}

return undefined;}else 

{
return this.lookup(deps);}};



function normalize(path){
var bits=path.split('/');
var i=1;
while(i < bits.length) {
if(bits[i] === '..'){
bits.splice(i - 1,1);}else 
if(bits[i] === '.'){
bits.splice(i,1);}else 
{
i++;}}


return bits.join('/');}


function join(a,b){
a = a.trim();
b = b.trim();
if(/^\//.test(b)){
return b;}else 
{
return a.replace(/\/*$/,'/') + b;}}



function dirname(path){
var bits=path.split('/');
bits.pop();
return bits.join('/');}








Domain.prototype.lookup = function(moduleName){
if(/^\./.test(moduleName)){
moduleName = normalize(join(dirname(this._currentModule),moduleName));}


if(moduleName in this.modules){
var module=this.modules[moduleName];
return module;}


if(!(moduleName in define.modules)){
throw new Error("Module not defined: " + moduleName);}


var module=define.modules[moduleName];

if(typeof module == "function"){
var exports={};
var previousModule=this._currentModule;
this._currentModule = moduleName;
module(this.require.bind(this),exports,{id:moduleName,uri:""});
this._currentModule = previousModule;
module = exports;}



this.modules[moduleName] = module;

return module;};})();




define.Domain = Domain;
define.globalDomain = new Domain();
var require=define.globalDomain.require.bind(define.globalDomain);






define('source-map/source-map-generator',['require','exports','module','source-map/base64-vlq','source-map/util','source-map/array-set'],function(require,exports,module){

var base64VLQ=require('./base64-vlq');
var util=require('./util');
var ArraySet=require('./array-set').ArraySet;









function SourceMapGenerator(aArgs){
this._file = util.getArg(aArgs,'file');
this._sourceRoot = util.getArg(aArgs,'sourceRoot',null);
this._sources = new ArraySet();
this._names = new ArraySet();
this._mappings = [];
this._sourcesContents = null;}


SourceMapGenerator.prototype._version = 3;






SourceMapGenerator.fromSourceMap = 
function SourceMapGenerator_fromSourceMap(aSourceMapConsumer){
var sourceRoot=aSourceMapConsumer.sourceRoot;
var generator=new SourceMapGenerator({
file:aSourceMapConsumer.file,
sourceRoot:sourceRoot});

aSourceMapConsumer.eachMapping(function(mapping){
var newMapping={
generated:{
line:mapping.generatedLine,
column:mapping.generatedColumn}};



if(mapping.source){
newMapping.source = mapping.source;
if(sourceRoot){
newMapping.source = util.relative(sourceRoot,newMapping.source);}


newMapping.original = {
line:mapping.originalLine,
column:mapping.originalColumn};


if(mapping.name){
newMapping.name = mapping.name;}}



generator.addMapping(newMapping);});

aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
generator.setSourceContent(sourceFile,content);}});


return generator;};












SourceMapGenerator.prototype.addMapping = 
function SourceMapGenerator_addMapping(aArgs){
var generated=util.getArg(aArgs,'generated');
var original=util.getArg(aArgs,'original',null);
var source=util.getArg(aArgs,'source',null);
var name=util.getArg(aArgs,'name',null);

this._validateMapping(generated,original,source,name);

if(source && !this._sources.has(source)){
this._sources.add(source);}


if(name && !this._names.has(name)){
this._names.add(name);}


this._mappings.push({
generatedLine:generated.line,
generatedColumn:generated.column,
originalLine:original != null && original.line,
originalColumn:original != null && original.column,
source:source,
name:name});};






SourceMapGenerator.prototype.setSourceContent = 
function SourceMapGenerator_setSourceContent(aSourceFile,aSourceContent){
var source=aSourceFile;
if(this._sourceRoot){
source = util.relative(this._sourceRoot,source);}


if(aSourceContent !== null){


if(!this._sourcesContents){
this._sourcesContents = {};}

this._sourcesContents[util.toSetString(source)] = aSourceContent;}else 
{


delete this._sourcesContents[util.toSetString(source)];
if(Object.keys(this._sourcesContents).length === 0){
this._sourcesContents = null;}}};














SourceMapGenerator.prototype.applySourceMap = 
function SourceMapGenerator_applySourceMap(aSourceMapConsumer,aSourceFile){

if(!aSourceFile){
aSourceFile = aSourceMapConsumer.file;}

var sourceRoot=this._sourceRoot;

if(sourceRoot){
aSourceFile = util.relative(sourceRoot,aSourceFile);}



var newSources=new ArraySet();
var newNames=new ArraySet();


this._mappings.forEach(function(mapping){
if(mapping.source === aSourceFile && mapping.originalLine){

var original=aSourceMapConsumer.originalPositionFor({
line:mapping.originalLine,
column:mapping.originalColumn});

if(original.source !== null){

if(sourceRoot){
mapping.source = util.relative(sourceRoot,original.source);}else 
{
mapping.source = original.source;}

mapping.originalLine = original.line;
mapping.originalColumn = original.column;
if(original.name !== null && mapping.name !== null){


mapping.name = original.name;}}}




var source=mapping.source;
if(source && !newSources.has(source)){
newSources.add(source);}


var name=mapping.name;
if(name && !newNames.has(name)){
newNames.add(name);}},


this);
this._sources = newSources;
this._names = newNames;


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
if(sourceRoot){
sourceFile = util.relative(sourceRoot,sourceFile);}

this.setSourceContent(sourceFile,content);}},

this);};













SourceMapGenerator.prototype._validateMapping = 
function SourceMapGenerator_validateMapping(aGenerated,aOriginal,aSource,
aName){
if(aGenerated && 'line' in aGenerated && 'column' in aGenerated && 
aGenerated.line > 0 && aGenerated.column >= 0 && 
!aOriginal && !aSource && !aName){

return;}else 

if(aGenerated && 'line' in aGenerated && 'column' in aGenerated && 
aOriginal && 'line' in aOriginal && 'column' in aOriginal && 
aGenerated.line > 0 && aGenerated.column >= 0 && 
aOriginal.line > 0 && aOriginal.column >= 0 && 
aSource){

return;}else 

{
throw new Error('Invalid mapping: ' + JSON.stringify({
generated:aGenerated,
source:aSource,
orginal:aOriginal,
name:aName}));}};








SourceMapGenerator.prototype._serializeMappings = 
function SourceMapGenerator_serializeMappings(){
var previousGeneratedColumn=0;
var previousGeneratedLine=1;
var previousOriginalColumn=0;
var previousOriginalLine=0;
var previousName=0;
var previousSource=0;
var result='';
var mapping;






this._mappings.sort(util.compareByGeneratedPositions);

for(var i=0,len=this._mappings.length;i < len;i++) {
mapping = this._mappings[i];

if(mapping.generatedLine !== previousGeneratedLine){
previousGeneratedColumn = 0;
while(mapping.generatedLine !== previousGeneratedLine) {
result += ';';
previousGeneratedLine++;}}else 


{
if(i > 0){
if(!util.compareByGeneratedPositions(mapping,this._mappings[i - 1])){
continue;}

result += ',';}}



result += base64VLQ.encode(mapping.generatedColumn - 
previousGeneratedColumn);
previousGeneratedColumn = mapping.generatedColumn;

if(mapping.source){
result += base64VLQ.encode(this._sources.indexOf(mapping.source) - 
previousSource);
previousSource = this._sources.indexOf(mapping.source);


result += base64VLQ.encode(mapping.originalLine - 1 - 
previousOriginalLine);
previousOriginalLine = mapping.originalLine - 1;

result += base64VLQ.encode(mapping.originalColumn - 
previousOriginalColumn);
previousOriginalColumn = mapping.originalColumn;

if(mapping.name){
result += base64VLQ.encode(this._names.indexOf(mapping.name) - 
previousName);
previousName = this._names.indexOf(mapping.name);}}}




return result;};


SourceMapGenerator.prototype._generateSourcesContent = 
function SourceMapGenerator_generateSourcesContent(aSources,aSourceRoot){
return aSources.map(function(source){
if(!this._sourcesContents){
return null;}

if(aSourceRoot){
source = util.relative(aSourceRoot,source);}

var key=util.toSetString(source);
return Object.prototype.hasOwnProperty.call(this._sourcesContents,
key)?
this._sourcesContents[key]:
null;},
this);};





SourceMapGenerator.prototype.toJSON = 
function SourceMapGenerator_toJSON(){
var map={
version:this._version,
file:this._file,
sources:this._sources.toArray(),
names:this._names.toArray(),
mappings:this._serializeMappings()};

if(this._sourceRoot){
map.sourceRoot = this._sourceRoot;}

if(this._sourcesContents){
map.sourcesContent = this._generateSourcesContent(map.sources,map.sourceRoot);}


return map;};





SourceMapGenerator.prototype.toString = 
function SourceMapGenerator_toString(){
return JSON.stringify(this);};


exports.SourceMapGenerator = SourceMapGenerator;});






































define('source-map/base64-vlq',['require','exports','module','source-map/base64'],function(require,exports,module){

var base64=require('./base64');













var VLQ_BASE_SHIFT=5;


var VLQ_BASE=1 << VLQ_BASE_SHIFT;


var VLQ_BASE_MASK=VLQ_BASE - 1;


var VLQ_CONTINUATION_BIT=VLQ_BASE;







function toVLQSigned(aValue){
return aValue < 0?
(-aValue << 1) + 1:
(aValue << 1) + 0;}








function fromVLQSigned(aValue){
var isNegative=(aValue & 1) === 1;
var shifted=aValue >> 1;
return isNegative?
-shifted:
shifted;}





exports.encode = function base64VLQ_encode(aValue){
var encoded="";
var digit;

var vlq=toVLQSigned(aValue);

do {
digit = vlq & VLQ_BASE_MASK;
vlq >>>= VLQ_BASE_SHIFT;
if(vlq > 0){


digit |= VLQ_CONTINUATION_BIT;}

encoded += base64.encode(digit);}while(
vlq > 0);

return encoded;};






exports.decode = function base64VLQ_decode(aStr){
var i=0;
var strLen=aStr.length;
var result=0;
var shift=0;
var continuation,digit;

do {
if(i >= strLen){
throw new Error("Expected more digits in base 64 VLQ value.");}

digit = base64.decode(aStr.charAt(i++));
continuation = !!(digit & VLQ_CONTINUATION_BIT);
digit &= VLQ_BASE_MASK;
result = result + (digit << shift);
shift += VLQ_BASE_SHIFT;}while(
continuation);

return {
value:fromVLQSigned(result),
rest:aStr.slice(i)};};});










define('source-map/base64',['require','exports','module'],function(require,exports,module){

var charToIntMap={};
var intToCharMap={};

'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.
split('').
forEach(function(ch,index){
charToIntMap[ch] = index;
intToCharMap[index] = ch;});





exports.encode = function base64_encode(aNumber){
if(aNumber in intToCharMap){
return intToCharMap[aNumber];}

throw new TypeError("Must be between 0 and 63: " + aNumber);};





exports.decode = function base64_decode(aChar){
if(aChar in charToIntMap){
return charToIntMap[aChar];}

throw new TypeError("Not a valid base 64 digit: " + aChar);};});









define('source-map/util',['require','exports','module'],function(require,exports,module){











function getArg(aArgs,aName,aDefaultValue){
if(aName in aArgs){
return aArgs[aName];}else 
if(arguments.length === 3){
return aDefaultValue;}else 
{
throw new Error('"' + aName + '" is a required argument.');}}


exports.getArg = getArg;

var urlRegexp=/([\w+\-.]+):\/\/((\w+:\w+)@)?([\w.]+)?(:(\d+))?(\S+)?/;
var dataUrlRegexp=/^data:.+\,.+/;

function urlParse(aUrl){
var match=aUrl.match(urlRegexp);
if(!match){
return null;}

return {
scheme:match[1],
auth:match[3],
host:match[4],
port:match[6],
path:match[7]};}


exports.urlParse = urlParse;

function urlGenerate(aParsedUrl){
var url=aParsedUrl.scheme + "://";
if(aParsedUrl.auth){
url += aParsedUrl.auth + "@";}

if(aParsedUrl.host){
url += aParsedUrl.host;}

if(aParsedUrl.port){
url += ":" + aParsedUrl.port;}

if(aParsedUrl.path){
url += aParsedUrl.path;}

return url;}

exports.urlGenerate = urlGenerate;

function join(aRoot,aPath){
var url;

if(aPath.match(urlRegexp) || aPath.match(dataUrlRegexp)){
return aPath;}


if(aPath.charAt(0) === '/' && (url = urlParse(aRoot))){
url.path = aPath;
return urlGenerate(url);}


return aRoot.replace(/\/$/,'') + '/' + aPath;}

exports.join = join;










function toSetString(aStr){
return '$' + aStr;}

exports.toSetString = toSetString;

function fromSetString(aStr){
return aStr.substr(1);}

exports.fromSetString = fromSetString;

function relative(aRoot,aPath){
aRoot = aRoot.replace(/\/$/,'');

var url=urlParse(aRoot);
if(aPath.charAt(0) == "/" && url && url.path == "/"){
return aPath.slice(1);}


return aPath.indexOf(aRoot + '/') === 0?
aPath.substr(aRoot.length + 1):
aPath;}

exports.relative = relative;

function strcmp(aStr1,aStr2){
var s1=aStr1 || "";
var s2=aStr2 || "";
return (s1 > s2) - (s1 < s2);}










function compareByOriginalPositions(mappingA,mappingB,onlyCompareOriginal){
var cmp;

cmp = strcmp(mappingA.source,mappingB.source);
if(cmp){
return cmp;}


cmp = mappingA.originalLine - mappingB.originalLine;
if(cmp){
return cmp;}


cmp = mappingA.originalColumn - mappingB.originalColumn;
if(cmp || onlyCompareOriginal){
return cmp;}


cmp = strcmp(mappingA.name,mappingB.name);
if(cmp){
return cmp;}


cmp = mappingA.generatedLine - mappingB.generatedLine;
if(cmp){
return cmp;}


return mappingA.generatedColumn - mappingB.generatedColumn;}
;
exports.compareByOriginalPositions = compareByOriginalPositions;










function compareByGeneratedPositions(mappingA,mappingB,onlyCompareGenerated){
var cmp;

cmp = mappingA.generatedLine - mappingB.generatedLine;
if(cmp){
return cmp;}


cmp = mappingA.generatedColumn - mappingB.generatedColumn;
if(cmp || onlyCompareGenerated){
return cmp;}


cmp = strcmp(mappingA.source,mappingB.source);
if(cmp){
return cmp;}


cmp = mappingA.originalLine - mappingB.originalLine;
if(cmp){
return cmp;}


cmp = mappingA.originalColumn - mappingB.originalColumn;
if(cmp){
return cmp;}


return strcmp(mappingA.name,mappingB.name);}
;
exports.compareByGeneratedPositions = compareByGeneratedPositions;});








define('source-map/array-set',['require','exports','module','source-map/util'],function(require,exports,module){

var util=require('./util');







function ArraySet(){
this._array = [];
this._set = {};}





ArraySet.fromArray = function ArraySet_fromArray(aArray,aAllowDuplicates){
var set=new ArraySet();
for(var i=0,len=aArray.length;i < len;i++) {
set.add(aArray[i],aAllowDuplicates);}

return set;};







ArraySet.prototype.add = function ArraySet_add(aStr,aAllowDuplicates){
var isDuplicate=this.has(aStr);
var idx=this._array.length;
if(!isDuplicate || aAllowDuplicates){
this._array.push(aStr);}

if(!isDuplicate){
this._set[util.toSetString(aStr)] = idx;}};








ArraySet.prototype.has = function ArraySet_has(aStr){
return Object.prototype.hasOwnProperty.call(this._set,
util.toSetString(aStr));};







ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr){
if(this.has(aStr)){
return this._set[util.toSetString(aStr)];}

throw new Error('"' + aStr + '" is not in the set.');};







ArraySet.prototype.at = function ArraySet_at(aIdx){
if(aIdx >= 0 && aIdx < this._array.length){
return this._array[aIdx];}

throw new Error('No element indexed by ' + aIdx);};







ArraySet.prototype.toArray = function ArraySet_toArray(){
return this._array.slice();};


exports.ArraySet = ArraySet;});








define('source-map/source-map-consumer',['require','exports','module','source-map/util','source-map/binary-search','source-map/array-set','source-map/base64-vlq'],function(require,exports,module){

var util=require('./util');
var binarySearch=require('./binary-search');
var ArraySet=require('./array-set').ArraySet;
var base64VLQ=require('./base64-vlq');































function SourceMapConsumer(aSourceMap){
var sourceMap=aSourceMap;
if(typeof aSourceMap === 'string'){
sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/,''));}


var version=util.getArg(sourceMap,'version');
var sources=util.getArg(sourceMap,'sources');


var names=util.getArg(sourceMap,'names',[]);
var sourceRoot=util.getArg(sourceMap,'sourceRoot',null);
var sourcesContent=util.getArg(sourceMap,'sourcesContent',null);
var mappings=util.getArg(sourceMap,'mappings');
var file=util.getArg(sourceMap,'file',null);



if(version != this._version){
throw new Error('Unsupported version: ' + version);}






this._names = ArraySet.fromArray(names,true);
this._sources = ArraySet.fromArray(sources,true);

this.sourceRoot = sourceRoot;
this.sourcesContent = sourcesContent;
this._mappings = mappings;
this.file = file;}









SourceMapConsumer.fromSourceMap = 
function SourceMapConsumer_fromSourceMap(aSourceMap){
var smc=Object.create(SourceMapConsumer.prototype);

smc._names = ArraySet.fromArray(aSourceMap._names.toArray(),true);
smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(),true);
smc.sourceRoot = aSourceMap._sourceRoot;
smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),
smc.sourceRoot);
smc.file = aSourceMap._file;

smc.__generatedMappings = aSourceMap._mappings.slice().
sort(util.compareByGeneratedPositions);
smc.__originalMappings = aSourceMap._mappings.slice().
sort(util.compareByOriginalPositions);

return smc;};





SourceMapConsumer.prototype._version = 3;




Object.defineProperty(SourceMapConsumer.prototype,'sources',{
get:function(){
return this._sources.toArray().map(function(s){
return this.sourceRoot?util.join(this.sourceRoot,s):s;},
this);}});

































SourceMapConsumer.prototype.__generatedMappings = null;
Object.defineProperty(SourceMapConsumer.prototype,'_generatedMappings',{
get:function(){
if(!this.__generatedMappings){
this.__generatedMappings = [];
this.__originalMappings = [];
this._parseMappings(this._mappings,this.sourceRoot);}


return this.__generatedMappings;}});



SourceMapConsumer.prototype.__originalMappings = null;
Object.defineProperty(SourceMapConsumer.prototype,'_originalMappings',{
get:function(){
if(!this.__originalMappings){
this.__generatedMappings = [];
this.__originalMappings = [];
this._parseMappings(this._mappings,this.sourceRoot);}


return this.__originalMappings;}});








SourceMapConsumer.prototype._parseMappings = 
function SourceMapConsumer_parseMappings(aStr,aSourceRoot){
var generatedLine=1;
var previousGeneratedColumn=0;
var previousOriginalLine=0;
var previousOriginalColumn=0;
var previousSource=0;
var previousName=0;
var mappingSeparator=/^[,;]/;
var str=aStr;
var mapping;
var temp;

while(str.length > 0) {
if(str.charAt(0) === ';'){
generatedLine++;
str = str.slice(1);
previousGeneratedColumn = 0;}else 

if(str.charAt(0) === ','){
str = str.slice(1);}else 

{
mapping = {};
mapping.generatedLine = generatedLine;


temp = base64VLQ.decode(str);
mapping.generatedColumn = previousGeneratedColumn + temp.value;
previousGeneratedColumn = mapping.generatedColumn;
str = temp.rest;

if(str.length > 0 && !mappingSeparator.test(str.charAt(0))){

temp = base64VLQ.decode(str);
mapping.source = this._sources.at(previousSource + temp.value);
previousSource += temp.value;
str = temp.rest;
if(str.length === 0 || mappingSeparator.test(str.charAt(0))){
throw new Error('Found a source, but no line and column');}



temp = base64VLQ.decode(str);
mapping.originalLine = previousOriginalLine + temp.value;
previousOriginalLine = mapping.originalLine;

mapping.originalLine += 1;
str = temp.rest;
if(str.length === 0 || mappingSeparator.test(str.charAt(0))){
throw new Error('Found a source and line, but no column');}



temp = base64VLQ.decode(str);
mapping.originalColumn = previousOriginalColumn + temp.value;
previousOriginalColumn = mapping.originalColumn;
str = temp.rest;

if(str.length > 0 && !mappingSeparator.test(str.charAt(0))){

temp = base64VLQ.decode(str);
mapping.name = this._names.at(previousName + temp.value);
previousName += temp.value;
str = temp.rest;}}



this.__generatedMappings.push(mapping);
if(typeof mapping.originalLine === 'number'){
this.__originalMappings.push(mapping);}}}




this.__originalMappings.sort(util.compareByOriginalPositions);};






SourceMapConsumer.prototype._findMapping = 
function SourceMapConsumer_findMapping(aNeedle,aMappings,aLineName,
aColumnName,aComparator){





if(aNeedle[aLineName] <= 0){
throw new TypeError('Line must be greater than or equal to 1, got ' + 
aNeedle[aLineName]);}

if(aNeedle[aColumnName] < 0){
throw new TypeError('Column must be greater than or equal to 0, got ' + 
aNeedle[aColumnName]);}


return binarySearch.search(aNeedle,aMappings,aComparator);};

















SourceMapConsumer.prototype.originalPositionFor = 
function SourceMapConsumer_originalPositionFor(aArgs){
var needle={
generatedLine:util.getArg(aArgs,'line'),
generatedColumn:util.getArg(aArgs,'column')};


var mapping=this._findMapping(needle,
this._generatedMappings,
"generatedLine",
"generatedColumn",
util.compareByGeneratedPositions);

if(mapping){
var source=util.getArg(mapping,'source',null);
if(source && this.sourceRoot){
source = util.join(this.sourceRoot,source);}

return {
source:source,
line:util.getArg(mapping,'originalLine',null),
column:util.getArg(mapping,'originalColumn',null),
name:util.getArg(mapping,'name',null)};}



return {
source:null,
line:null,
column:null,
name:null};};








SourceMapConsumer.prototype.sourceContentFor = 
function SourceMapConsumer_sourceContentFor(aSource){
if(!this.sourcesContent){
return null;}


if(this.sourceRoot){
aSource = util.relative(this.sourceRoot,aSource);}


if(this._sources.has(aSource)){
return this.sourcesContent[this._sources.indexOf(aSource)];}


var url;
if(this.sourceRoot && (
url = util.urlParse(this.sourceRoot))){




var fileUriAbsPath=aSource.replace(/^file:\/\//,"");
if(url.scheme == "file" && 
this._sources.has(fileUriAbsPath)){
return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];}


if((!url.path || url.path == "/") && 
this._sources.has("/" + aSource)){
return this.sourcesContent[this._sources.indexOf("/" + aSource)];}}



throw new Error('"' + aSource + '" is not in the SourceMap.');};
















SourceMapConsumer.prototype.generatedPositionFor = 
function SourceMapConsumer_generatedPositionFor(aArgs){
var needle={
source:util.getArg(aArgs,'source'),
originalLine:util.getArg(aArgs,'line'),
originalColumn:util.getArg(aArgs,'column')};


if(this.sourceRoot){
needle.source = util.relative(this.sourceRoot,needle.source);}


var mapping=this._findMapping(needle,
this._originalMappings,
"originalLine",
"originalColumn",
util.compareByOriginalPositions);

if(mapping){
return {
line:util.getArg(mapping,'generatedLine',null),
column:util.getArg(mapping,'generatedColumn',null)};}



return {
line:null,
column:null};};



SourceMapConsumer.GENERATED_ORDER = 1;
SourceMapConsumer.ORIGINAL_ORDER = 2;

















SourceMapConsumer.prototype.eachMapping = 
function SourceMapConsumer_eachMapping(aCallback,aContext,aOrder){
var context=aContext || null;
var order=aOrder || SourceMapConsumer.GENERATED_ORDER;

var mappings;
switch(order){
case SourceMapConsumer.GENERATED_ORDER:
mappings = this._generatedMappings;
break;
case SourceMapConsumer.ORIGINAL_ORDER:
mappings = this._originalMappings;
break;
default:
throw new Error("Unknown order of iteration.");}


var sourceRoot=this.sourceRoot;
mappings.map(function(mapping){
var source=mapping.source;
if(source && sourceRoot){
source = util.join(sourceRoot,source);}

return {
source:source,
generatedLine:mapping.generatedLine,
generatedColumn:mapping.generatedColumn,
originalLine:mapping.originalLine,
originalColumn:mapping.originalColumn,
name:mapping.name};}).

forEach(aCallback,context);};


exports.SourceMapConsumer = SourceMapConsumer;});








define('source-map/binary-search',['require','exports','module'],function(require,exports,module){










function recursiveSearch(aLow,aHigh,aNeedle,aHaystack,aCompare){










var mid=Math.floor((aHigh - aLow) / 2) + aLow;
var cmp=aCompare(aNeedle,aHaystack[mid],true);
if(cmp === 0){

return aHaystack[mid];}else 

if(cmp > 0){

if(aHigh - mid > 1){

return recursiveSearch(mid,aHigh,aNeedle,aHaystack,aCompare);}



return aHaystack[mid];}else 

{

if(mid - aLow > 1){

return recursiveSearch(aLow,mid,aNeedle,aHaystack,aCompare);}



return aLow < 0?
null:
aHaystack[aLow];}}
















exports.search = function search(aNeedle,aHaystack,aCompare){
return aHaystack.length > 0?
recursiveSearch(-1,aHaystack.length,aNeedle,aHaystack,aCompare):
null;};});









define('source-map/source-node',['require','exports','module','source-map/source-map-generator','source-map/util'],function(require,exports,module){

var SourceMapGenerator=require('./source-map-generator').SourceMapGenerator;
var util=require('./util');













function SourceNode(aLine,aColumn,aSource,aChunks,aName){
this.children = [];
this.sourceContents = {};
this.line = aLine === undefined?null:aLine;
this.column = aColumn === undefined?null:aColumn;
this.source = aSource === undefined?null:aSource;
this.name = aName === undefined?null:aName;
if(aChunks != null)this.add(aChunks);}








SourceNode.fromStringWithSourceMap = 
function SourceNode_fromStringWithSourceMap(aGeneratedCode,aSourceMapConsumer){


var node=new SourceNode();



var remainingLines=aGeneratedCode.split('\n');


var lastGeneratedLine=1,lastGeneratedColumn=0;




var lastMapping=null;

aSourceMapConsumer.eachMapping(function(mapping){
if(lastMapping === null){



while(lastGeneratedLine < mapping.generatedLine) {
node.add(remainingLines.shift() + "\n");
lastGeneratedLine++;}

if(lastGeneratedColumn < mapping.generatedColumn){
var nextLine=remainingLines[0];
node.add(nextLine.substr(0,mapping.generatedColumn));
remainingLines[0] = nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn = mapping.generatedColumn;}}else 

{


if(lastGeneratedLine < mapping.generatedLine){
var code="";

do {
code += remainingLines.shift() + "\n";
lastGeneratedLine++;
lastGeneratedColumn = 0;}while(
lastGeneratedLine < mapping.generatedLine);


if(lastGeneratedColumn < mapping.generatedColumn){
var nextLine=remainingLines[0];
code += nextLine.substr(0,mapping.generatedColumn);
remainingLines[0] = nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn = mapping.generatedColumn;}


addMappingWithCode(lastMapping,code);}else 
{



var nextLine=remainingLines[0];
var code=nextLine.substr(0,mapping.generatedColumn - 
lastGeneratedColumn);
remainingLines[0] = nextLine.substr(mapping.generatedColumn - 
lastGeneratedColumn);
lastGeneratedColumn = mapping.generatedColumn;
addMappingWithCode(lastMapping,code);}}


lastMapping = mapping;},
this);



addMappingWithCode(lastMapping,remainingLines.join("\n"));


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
node.setSourceContent(sourceFile,content);}});



return node;

function addMappingWithCode(mapping,code){
if(mapping === null || mapping.source === undefined){
node.add(code);}else 
{
node.add(new SourceNode(mapping.originalLine,
mapping.originalColumn,
mapping.source,
code,
mapping.name));}}};










SourceNode.prototype.add = function SourceNode_add(aChunk){
if(Array.isArray(aChunk)){
aChunk.forEach(function(chunk){
this.add(chunk);},
this);}else 

if(aChunk instanceof SourceNode || typeof aChunk === "string"){
if(aChunk){
this.children.push(aChunk);}}else 


{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk);}


return this;};








SourceNode.prototype.prepend = function SourceNode_prepend(aChunk){
if(Array.isArray(aChunk)){
for(var i=aChunk.length - 1;i >= 0;i--) {
this.prepend(aChunk[i]);}}else 


if(aChunk instanceof SourceNode || typeof aChunk === "string"){
this.children.unshift(aChunk);}else 

{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk);}


return this;};









SourceNode.prototype.walk = function SourceNode_walk(aFn){
var chunk;
for(var i=0,len=this.children.length;i < len;i++) {
chunk = this.children[i];
if(chunk instanceof SourceNode){
chunk.walk(aFn);}else 

{
if(chunk !== ''){
aFn(chunk,{source:this.source,
line:this.line,
column:this.column,
name:this.name});}}}};











SourceNode.prototype.join = function SourceNode_join(aSep){
var newChildren;
var i;
var len=this.children.length;
if(len > 0){
newChildren = [];
for(i = 0;i < len - 1;i++) {
newChildren.push(this.children[i]);
newChildren.push(aSep);}

newChildren.push(this.children[i]);
this.children = newChildren;}

return this;};









SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern,aReplacement){
var lastChild=this.children[this.children.length - 1];
if(lastChild instanceof SourceNode){
lastChild.replaceRight(aPattern,aReplacement);}else 

if(typeof lastChild === 'string'){
this.children[this.children.length - 1] = lastChild.replace(aPattern,aReplacement);}else 

{
this.children.push(''.replace(aPattern,aReplacement));}

return this;};









SourceNode.prototype.setSourceContent = 
function SourceNode_setSourceContent(aSourceFile,aSourceContent){
this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;};








SourceNode.prototype.walkSourceContents = 
function SourceNode_walkSourceContents(aFn){
for(var i=0,len=this.children.length;i < len;i++) {
if(this.children[i] instanceof SourceNode){
this.children[i].walkSourceContents(aFn);}}



var sources=Object.keys(this.sourceContents);
for(var i=0,len=sources.length;i < len;i++) {
aFn(util.fromSetString(sources[i]),this.sourceContents[sources[i]]);}};







SourceNode.prototype.toString = function SourceNode_toString(){
var str="";
this.walk(function(chunk){
str += chunk;});

return str;};






SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs){
var generated={
code:"",
line:1,
column:0};

var map=new SourceMapGenerator(aArgs);
var sourceMappingActive=false;
var lastOriginalSource=null;
var lastOriginalLine=null;
var lastOriginalColumn=null;
var lastOriginalName=null;
this.walk(function(chunk,original){
generated.code += chunk;
if(original.source !== null && 
original.line !== null && 
original.column !== null){
if(lastOriginalSource !== original.source || 
lastOriginalLine !== original.line || 
lastOriginalColumn !== original.column || 
lastOriginalName !== original.name){
map.addMapping({
source:original.source,
original:{
line:original.line,
column:original.column},

generated:{
line:generated.line,
column:generated.column},

name:original.name});}


lastOriginalSource = original.source;
lastOriginalLine = original.line;
lastOriginalColumn = original.column;
lastOriginalName = original.name;
sourceMappingActive = true;}else 
if(sourceMappingActive){
map.addMapping({
generated:{
line:generated.line,
column:generated.column}});


lastOriginalSource = null;
sourceMappingActive = false;}

chunk.split('').forEach(function(ch){
if(ch === '\n'){
generated.line++;
generated.column = 0;}else 
{
generated.column++;}});});



this.walkSourceContents(function(sourceFile,sourceContent){
map.setSourceContent(sourceFile,sourceContent);});


return {code:generated.code,map:map};};


exports.SourceNode = SourceNode;});





this.sourceMap = {
SourceMapConsumer:require('source-map/source-map-consumer').SourceMapConsumer,
SourceMapGenerator:require('source-map/source-map-generator').SourceMapGenerator,
SourceNode:require('source-map/source-node').SourceNode};}
});
__d('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (














function(){
var define=null;




void (function(root,factory){
if(typeof define === "function" && define.amd){
define(factory);}else 
if(typeof exports === "object"){
module.exports = factory();}else 
{
root.sourceMappingURL = factory();}})(

this,function(){

var innerRegex=/[#@] sourceMappingURL=([^\s'"]*)/;

var regex=RegExp(
"(?:" + 
"/\\*" + 
"(?:\\s*\r?\n(?://)?)?" + 
"(?:" + innerRegex.source + ")" + 
"\\s*" + 
"\\*/" + 
"|" + 
"//(?:" + innerRegex.source + ")" + 
")" + 
"\\s*$");


return {

regex:regex,
_innerRegex:innerRegex,

getFrom:function(code){
var match=code.match(regex);
return match?match[1] || match[2] || "":null;},


existsIn:function(code){
return regex.test(code);},


removeFrom:function(code){
return code.replace(regex,"");},


insertBefore:function(code,string){
var match=code.match(regex);
if(match){
return code.slice(0,match.index) + string + code.slice(match.index);}else 
{
return code + string;}}};});})();
});
__d('parseErrorStack',["stacktrace-parser/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var stacktraceParser=require('stacktrace-parser/index.js');

function resolveSourceMaps(sourceMapInstance,stackFrame){
try{
var orig=sourceMapInstance.originalPositionFor({
line:stackFrame.lineNumber,
column:stackFrame.column});

if(orig){
stackFrame.file = orig.source;
stackFrame.lineNumber = orig.line;
stackFrame.column = orig.column;}}

catch(innerEx) {}}



function parseErrorStack(e,sourceMapInstance){
if(!e || !e.stack){
return [];}


var stack=stacktraceParser.parse(e.stack);

var framesToPop=e.framesToPop || 0;
while(framesToPop--) {
stack.shift();}


if(sourceMapInstance){
stack.forEach(resolveSourceMaps.bind(null,sourceMapInstance));}


return stack;}


module.exports = parseErrorStack;
});
__d('stacktrace-parser/index.js',["stacktrace-parser/lib/stacktrace-parser.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = require('stacktrace-parser/lib/stacktrace-parser.js');
});
__d('stacktrace-parser/lib/stacktrace-parser.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

UNKNOWN_FUNCTION='<unknown>';

var StackTraceParser={




parse:function(stackString){
var chrome=/^\s*at (?:(?:(?:Anonymous function)?|((?:\[object object\])?\S+(?: \[as \S+\])?)) )?\(?((?:file|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
gecko=/^(?:\s*(\S*)(?:\((.*?)\))?@)?((?:\w).*?):(\d+)(?::(\d+))?\s*$/i,
node=/^\s*at (?:((?:\[object object\])?\S+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i,
lines=stackString.split('\n'),
stack=[],
parts,
element;

for(var i=0,j=lines.length;i < j;++i) {
if(parts = gecko.exec(lines[i])){
element = {
'file':parts[3],
'methodName':parts[1] || UNKNOWN_FUNCTION,
'lineNumber':+parts[4],
'column':parts[5]?+parts[5]:null};}else 

if(parts = chrome.exec(lines[i])){
element = {
'file':parts[2],
'methodName':parts[1] || UNKNOWN_FUNCTION,
'lineNumber':+parts[3],
'column':parts[4]?+parts[4]:null};}else 

if(parts = node.exec(lines[i])){
element = {
'file':parts[2],
'methodName':parts[1] || UNKNOWN_FUNCTION,
'lineNumber':+parts[3],
'column':parts[4]?+parts[4]:null};}else 

{
continue;}


stack.push(element);}


return stack;}};




module.exports = StackTraceParser;
});
__d('Platform',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var Platform={
OS:'ios'};


module.exports = Platform;
});
__d('XMLHttpRequest',["FormData","NativeModules","RCTDeviceEventEmitter","XMLHttpRequestBase"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var FormData=require('FormData');
var RCTNetworking=require('NativeModules').Networking;
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');

var XMLHttpRequestBase=require('XMLHttpRequestBase');var 

XMLHttpRequest=(function(_XMLHttpRequestBase){_inherits(XMLHttpRequest,_XMLHttpRequestBase);




function XMLHttpRequest(){_classCallCheck(this,XMLHttpRequest);
_get(Object.getPrototypeOf(XMLHttpRequest.prototype),'constructor',this).call(this);
this._requestId = null;
this._subscriptions = [];}_createClass(XMLHttpRequest,[{key:'_didCreateRequest',value:


function _didCreateRequest(requestId){var _this=this;
this._requestId = requestId;
this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didReceiveNetworkResponse',
function(args){return _this._didReceiveResponse.call(_this,args[0],args[1],args[2]);}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didReceiveNetworkData',
function(args){return _this._didReceiveData.call(_this,args[0],args[1]);}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didCompleteNetworkResponse',
function(args){return _this._didCompleteResponse.call(_this,args[0],args[1]);}));}},{key:'_didReceiveResponse',value:



function _didReceiveResponse(requestId,status,responseHeaders){
if(requestId === this._requestId){
this.status = status;
this.setResponseHeaders(responseHeaders);
this.setReadyState(this.HEADERS_RECEIVED);}}},{key:'_didReceiveData',value:



function _didReceiveData(requestId,responseText){
if(requestId === this._requestId){
if(!this.responseText){
this.responseText = responseText;}else 
{
this.responseText += responseText;}

this.setReadyState(this.LOADING);}}},{key:'_didCompleteResponse',value:



function _didCompleteResponse(requestId,error){
if(requestId === this._requestId){
if(error){
this.responseText = error;}

this._clearSubscriptions();
this._requestId = null;
this.setReadyState(this.DONE);}}},{key:'_clearSubscriptions',value:



function _clearSubscriptions(){
for(var i=0;i < this._subscriptions.length;i++) {
var sub=this._subscriptions[i];
sub.remove();}

this._subscriptions = [];}},{key:'sendImpl',value:


function sendImpl(method,url,headers,data){
if(typeof data === 'string'){
data = {string:data};}

if(data instanceof FormData){
data = {formData:data.getParts()};}

RCTNetworking.sendRequest(
{
method:method,
url:url,
data:data,
headers:headers,
incrementalUpdates:this.onreadystatechange?true:false},

this._didCreateRequest.bind(this));}},{key:'abortImpl',value:



function abortImpl(){
if(this._requestId){
RCTNetworking.cancelRequest(this._requestId);
this._clearSubscriptions();
this._requestId = null;}}}]);return XMLHttpRequest;})(XMLHttpRequestBase);




module.exports = XMLHttpRequest;
});
__d('FormData',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _slicedToArray=(function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n = (_s = _i.next()).done);_n = true) {_arr.push(_s.value);if(i && _arr.length === i)break;}}catch(err) {_d = true;_e = err;}finally {try{if(!_n && _i['return'])_i['return']();}finally {if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else {throw new TypeError('Invalid attempt to destructure non-iterable instance');}};})();var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 



















FormData=(function(){



function FormData(){_classCallCheck(this,FormData);
this._parts = [];
this._partsByKey = {};}_createClass(FormData,[{key:'append',value:


function append(key,value){
var parts=this._partsByKey[key];
if(parts){




parts[1] = value;
return;}

parts = [key,value];
this._parts.push(parts);
this._partsByKey[key] = parts;}},{key:'getParts',value:


function getParts(){
return this._parts.map(function(_ref){var _ref2=_slicedToArray(_ref,2);var name=_ref2[0];var value=_ref2[1];
if(typeof value === 'string'){
return {
string:value,
headers:{
'content-disposition':'form-data; name="' + name + '"'}};}



var contentDisposition='form-data; name="' + name + '"';
if(typeof value.name === 'string'){
contentDisposition += '; filename="' + value.name + '"';}

return _extends({},
value,{
headers:{'content-disposition':contentDisposition}});});}}]);return FormData;})();





module.exports = FormData;
});
__d('XMLHttpRequestBase',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 















XMLHttpRequestBase=(function(){






















function XMLHttpRequestBase(){_classCallCheck(this,XMLHttpRequestBase);
this.UNSENT = 0;
this.OPENED = 1;
this.HEADERS_RECEIVED = 2;
this.LOADING = 3;
this.DONE = 4;

this.onreadystatechange = null;
this.onload = null;
this.upload = undefined;

this._reset();
this._method = null;
this._url = null;
this._aborted = false;}_createClass(XMLHttpRequestBase,[{key:'_reset',value:


function _reset(){
this.readyState = this.UNSENT;
this.responseHeaders = undefined;
this.responseText = '';
this.status = 0;

this._headers = {};
this._sent = false;
this._lowerCaseResponseHeaders = {};}},{key:'getAllResponseHeaders',value:


function getAllResponseHeaders(){
if(!this.responseHeaders){

return null;}

var headers=this.responseHeaders || {};
return Object.keys(headers).map(function(headerName){
return headerName + ': ' + headers[headerName];}).
join('\n');}},{key:'getResponseHeader',value:


function getResponseHeader(header){
var value=this._lowerCaseResponseHeaders[header.toLowerCase()];
return value !== undefined?value:null;}},{key:'setRequestHeader',value:


function setRequestHeader(header,value){
if(this.readyState !== this.OPENED){
throw new Error('Request has not been opened');}

this._headers[header.toLowerCase()] = value;}},{key:'open',value:


function open(method,url,async){

if(this.readyState !== this.UNSENT){
throw new Error('Cannot open, already sending');}

if(async !== undefined && !async){

throw new Error('Synchronous http requests are not supported');}

this._reset();
this._method = method;
this._url = url;
this._aborted = false;
this.setReadyState(this.OPENED);}},{key:'sendImpl',value:


function sendImpl(method,url,headers,data){
throw new Error('Subclass must define sendImpl method');}},{key:'abortImpl',value:


function abortImpl(){
throw new Error('Subclass must define abortImpl method');}},{key:'send',value:


function send(data){
if(this.readyState !== this.OPENED){
throw new Error('Request has not been opened');}

if(this._sent){
throw new Error('Request has already been sent');}

this._sent = true;
this.sendImpl(this._method,this._url,this._headers,data);}},{key:'abort',value:


function abort(){
this._aborted = true;
this.abortImpl();


if(!(this.readyState === this.UNSENT || 
this.readyState === this.OPENED && !this._sent || 
this.readyState === this.DONE)){
this._reset();
this.setReadyState(this.DONE);}


this._reset();}},{key:'callback',value:


function callback(status,responseHeaders,responseText){
if(this._aborted){
return;}

this.status = status;
this.setResponseHeaders(responseHeaders || {});
this.responseText = responseText;
this.setReadyState(this.DONE);}},{key:'setResponseHeaders',value:


function setResponseHeaders(responseHeaders){
this.responseHeaders = responseHeaders || null;
var headers=responseHeaders || {};
this._lowerCaseResponseHeaders = 
Object.keys(headers).reduce(function(lcaseHeaders,headerName){
lcaseHeaders[headerName.toLowerCase()] = headers[headerName];
return lcaseHeaders;},
{});}},{key:'setReadyState',value:


function setReadyState(newState){
this.readyState = newState;

var onreadystatechange=this.onreadystatechange;
if(onreadystatechange){


onreadystatechange(null);}

if(newState === this.DONE && !this._aborted){
this._sendLoad();}}},{key:'_sendLoad',value:



function _sendLoad(){

var onload=this.onload;
if(onload){


onload(null);}}}]);return XMLHttpRequestBase;})();




module.exports = XMLHttpRequestBase;
});
__d('fetch',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
















var self={};

/**
 * Copyright (c) 2014 GitHub, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @preserve-header
 */
(function(){
'use strict';

if(self.fetch){
return;}


function normalizeName(name){
if(typeof name !== 'string'){
name = name.toString();}

if(/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)){
throw new TypeError('Invalid character in header field name');}

return name.toLowerCase();}


function normalizeValue(value){
if(typeof value !== 'string'){
value = value.toString();}

return value;}


function Headers(headers){
this.map = {};

var self=this;
if(headers instanceof Headers){
headers.forEach(function(name,values){
values.forEach(function(value){
self.append(name,value);});});}else 



if(headers){
Object.getOwnPropertyNames(headers).forEach(function(name){
self.append(name,headers[name]);});}}




Headers.prototype.append = function(name,value){
name = normalizeName(name);
value = normalizeValue(value);
var list=this.map[name];
if(!list){
list = [];
this.map[name] = list;}

list.push(value);};


Headers.prototype['delete'] = function(name){
delete this.map[normalizeName(name)];};


Headers.prototype.get = function(name){
var values=this.map[normalizeName(name)];
return values?values[0]:null;};


Headers.prototype.getAll = function(name){
return this.map[normalizeName(name)] || [];};


Headers.prototype.has = function(name){
return this.map.hasOwnProperty(normalizeName(name));};


Headers.prototype.set = function(name,value){
this.map[normalizeName(name)] = [normalizeValue(value)];};



Headers.prototype.forEach = function(callback){
var self=this;
Object.getOwnPropertyNames(this.map).forEach(function(name){
callback(name,self.map[name]);});};



function consumed(body){
if(body.bodyUsed){
return Promise.reject(new TypeError('Already read'));}

body.bodyUsed = true;}


function fileReaderReady(reader){
return new Promise(function(resolve,reject){
reader.onload = function(){
resolve(reader.result);};

reader.onerror = function(){
reject(reader.error);};});}




function readBlobAsArrayBuffer(blob){
var reader=new FileReader();
reader.readAsArrayBuffer(blob);
return fileReaderReady(reader);}


function readBlobAsText(blob){
var reader=new FileReader();
reader.readAsText(blob);
return fileReaderReady(reader);}


var support={
blob:'FileReader' in self && 'Blob' in self && (function(){
try{
new Blob();
return true;}
catch(e) {
return false;}})(),


formData:'FormData' in self};


function Body(){
this.bodyUsed = false;


this._initBody = function(body){
this._bodyInit = body;
if(typeof body === 'string'){
this._bodyText = body;}else 
if(support.blob && Blob.prototype.isPrototypeOf(body)){
this._bodyBlob = body;}else 
if(support.formData && FormData.prototype.isPrototypeOf(body)){
this._bodyFormData = body;}else 
if(!body){
this._bodyText = '';}else 
{
throw new Error('unsupported BodyInit type');}};



if(support.blob){
this.blob = function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return Promise.resolve(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as blob');}else 
{
return Promise.resolve(new Blob([this._bodyText]));}};



this.arrayBuffer = function(){
return this.blob().then(readBlobAsArrayBuffer);};


this.text = function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return readBlobAsText(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as text');}else 
{
return Promise.resolve(this._bodyText);}};}else 


{
this.text = function(){
var rejected=consumed(this);
return rejected?rejected:Promise.resolve(this._bodyText);};}



if(support.formData){
this.formData = function(){
return this.text().then(decode);};}



this.json = function(){
return this.text().then(JSON.parse);};


return this;}



var methods=['DELETE','GET','HEAD','OPTIONS','POST','PUT'];

function normalizeMethod(method){
var upcased=method.toUpperCase();
return methods.indexOf(upcased) > -1?upcased:method;}


function Request(url,options){
options = options || {};
this.url = url;

this.credentials = options.credentials || 'omit';
this.headers = new Headers(options.headers);
this.method = normalizeMethod(options.method || 'GET');
this.mode = options.mode || null;
this.referrer = null;

if((this.method === 'GET' || this.method === 'HEAD') && options.body){
throw new TypeError('Body not allowed for GET or HEAD requests');}

this._initBody(options.body);}


function decode(body){
var form=new FormData();
body.trim().split('&').forEach(function(bytes){
if(bytes){
var split=bytes.split('=');
var name=split.shift().replace(/\+/g,' ');
var value=split.join('=').replace(/\+/g,' ');
form.append(decodeURIComponent(name),decodeURIComponent(value));}});


return form;}


function headers(xhr){
var head=new Headers();
var pairs=xhr.getAllResponseHeaders().trim().split('\n');
pairs.forEach(function(header){
var split=header.trim().split(':');
var key=split.shift().trim();
var value=split.join(':').trim();
head.append(key,value);});

return head;}


Body.call(Request.prototype);

function Response(bodyInit,options){
if(!options){
options = {};}


this._initBody(bodyInit);
this.type = 'default';
this.url = null;
this.status = options.status;
this.ok = this.status >= 200 && this.status < 300;
this.statusText = options.statusText;
this.headers = options.headers instanceof Headers?options.headers:new Headers(options.headers);
this.url = options.url || '';}


Body.call(Response.prototype);

self.Headers = Headers;
self.Request = Request;
self.Response = Response;

self.fetch = function(input,init){

var request;
if(Request.prototype.isPrototypeOf(input) && !init){
request = input;}else 
{
request = new Request(input,init);}


return new Promise(function(resolve,reject){
var xhr=new XMLHttpRequest();
if(request.credentials === 'cors'){
xhr.withCredentials = true;}


function responseURL(){
if('responseURL' in xhr){
return xhr.responseURL;}



if(/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())){
return xhr.getResponseHeader('X-Request-URL');}


return;}


xhr.onload = function(){
var status=xhr.status === 1223?204:xhr.status;
if(status < 100 || status > 599){
reject(new TypeError('Network request failed'));
return;}

var options={
status:status,
statusText:xhr.statusText,
headers:headers(xhr),
url:responseURL()};

var body='response' in xhr?xhr.response:xhr.responseText;
resolve(new Response(body,options));};


xhr.onerror = function(){
reject(new TypeError('Network request failed'));};


xhr.open(request.method,request.url,true);

if('responseType' in xhr && support.blob){
xhr.responseType = 'blob';}


request.headers.forEach(function(name,values){
values.forEach(function(value){
xhr.setRequestHeader(name,value);});});



xhr.send(typeof request._bodyInit === 'undefined'?null:request._bodyInit);});};


self.fetch.polyfill = true;})();




module.exports = self;
});
__d('Geolocation',["RCTDeviceEventEmitter","NativeModules","invariant","logError","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLocationObserver=require('NativeModules').LocationObserver;

var invariant=require('invariant');
var logError=require('logError');
var warning=require('warning');

var subscriptions=[];

var updatesEnabled=false;















var Geolocation={





getCurrentPosition:function(
geo_success,
geo_error,
geo_options)
{
invariant(
typeof geo_success === 'function',
'Must provide a valid geo_success callback.');

RCTLocationObserver.getCurrentPosition(
geo_options || {},
geo_success,
geo_error || logError);},







watchPosition:function(success,error,options){
if(!updatesEnabled){
RCTLocationObserver.startObserving(options || {});
updatesEnabled = true;}

var watchID=subscriptions.length;
subscriptions.push([
RCTDeviceEventEmitter.addListener(
'geolocationDidChange',
success),

error?RCTDeviceEventEmitter.addListener(
'geolocationError',
error):
null]);

return watchID;},


clearWatch:function(watchID){
var sub=subscriptions[watchID];
if(!sub){


return;}


sub[0].remove();

var sub1=sub[1];sub1 && sub1.remove();
subscriptions[watchID] = undefined;
var noWatchers=true;
for(var ii=0;ii < subscriptions.length;ii++) {
if(subscriptions[ii]){
noWatchers = false;}}


if(noWatchers){
Geolocation.stopObserving();}},



stopObserving:function(){
if(updatesEnabled){
RCTLocationObserver.stopObserving();
updatesEnabled = false;
for(var ii=0;ii < subscriptions.length;ii++) {
var sub=subscriptions[ii];
if(sub){
warning('Called stopObserving with existing subscriptions.');
sub[0].remove();

var sub1=sub[1];sub1 && sub1.remove();}}


subscriptions = [];}}};




module.exports = Geolocation;
});
__d('logError',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var logError=function(){
if(arguments.length === 1 && arguments[0] instanceof Error){
var err=arguments[0];
console.error('Error: "' + err.message + '".  Stack:\n' + err.stack);}else 
{
console.error.apply(console,arguments);}};



module.exports = logError;
});
__d('WebSocket',["RCTDeviceEventEmitter","NativeModules","WebSocketBase"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTWebSocketManager=require('NativeModules').WebSocketManager;

var WebSocketBase=require('WebSocketBase');

var WebSocketId=0;var 

WebSocket=(function(_WebSocketBase){_inherits(WebSocket,_WebSocketBase);function WebSocket(){_classCallCheck(this,WebSocket);_get(Object.getPrototypeOf(WebSocket.prototype),'constructor',this).apply(this,arguments);}_createClass(WebSocket,[{key:'connectToSocketImpl',value:



function connectToSocketImpl(url){
this._socketId = WebSocketId++;
RCTWebSocketManager.connect(url,this._socketId);
this._registerEvents(this._socketId);}},{key:'closeConnectionImpl',value:


function closeConnectionImpl(){
RCTWebSocketManager.close(this._socketId);}},{key:'cancelConnectionImpl',value:


function cancelConnectionImpl(){
RCTWebSocketManager.close(this._socketId);}},{key:'sendStringImpl',value:


function sendStringImpl(message){
RCTWebSocketManager.send(message,this._socketId);}},{key:'sendArrayBufferImpl',value:


function sendArrayBufferImpl(){

console.warn('Sending ArrayBuffers is not yet supported');}},{key:'_unregisterEvents',value:


function _unregisterEvents(){
this._subs.forEach(function(e){return e.remove();});
this._subs = [];}},{key:'_registerEvents',value:


function _registerEvents(id){
this._subs = [
RCTDeviceEventEmitter.addListener(
'websocketMessage',
(function(ev){
if(ev.id !== id){
return;}

this.onmessage && this.onmessage({
data:ev.data});}).

bind(this)),

RCTDeviceEventEmitter.addListener(
'websocketOpen',
(function(ev){
if(ev.id !== id){
return;}

this.readyState = this.OPEN;
this.onopen && this.onopen();}).
bind(this)),

RCTDeviceEventEmitter.addListener(
'websocketClosed',
(function(ev){
if(ev.id !== id){
return;}

this.readyState = this.CLOSED;
this.onclose && this.onclose(ev);
this._unregisterEvents();
RCTWebSocketManager.close(id);}).
bind(this)),

RCTDeviceEventEmitter.addListener(
'websocketFailed',
(function(ev){
if(ev.id !== id){
return;}

this.onerror && this.onerror(new Error(ev.message));
this._unregisterEvents();
RCTWebSocketManager.close(id);}).
bind(this))];}}]);return WebSocket;})(WebSocketBase);






module.exports = WebSocket;
});
__d('WebSocketBase',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 















WebSocketBase=(function(){

















function WebSocketBase(url,protocols){_classCallCheck(this,WebSocketBase);
this.CONNECTING = 0;
this.OPEN = 1;
this.CLOSING = 2;
this.CLOSED = 3;

if(!protocols){
protocols = [];}


this.connectToSocketImpl(url);}_createClass(WebSocketBase,[{key:'close',value:


function close(){
if(this.readyState === WebSocketBase.CLOSING || 
this.readyState === WebSocketBase.CLOSED){
return;}


if(this.readyState === WebSocketBase.CONNECTING){
this.cancelConnectionImpl();}


this.closeConnectionImpl();}},{key:'send',value:


function send(data){
if(this.readyState === WebSocketBase.CONNECTING){
throw new Error('INVALID_STATE_ERR');}


if(typeof data === 'string'){
this.sendStringImpl(data);}else 
if(data instanceof ArrayBuffer){
this.sendArrayBufferImpl(data);}else 
{
throw new Error('Not supported data type');}}},{key:'closeConnectionImpl',value:



function closeConnectionImpl(){
throw new Error('Subclass must define closeConnectionImpl method');}},{key:'connectToSocketImpl',value:


function connectToSocketImpl(){
throw new Error('Subclass must define connectToSocketImpl method');}},{key:'cancelConnectionImpl',value:


function cancelConnectionImpl(){
throw new Error('Subclass must define cancelConnectionImpl method');}},{key:'sendStringImpl',value:


function sendStringImpl(){
throw new Error('Subclass must define sendStringImpl method');}},{key:'sendArrayBufferImpl',value:


function sendArrayBufferImpl(){
throw new Error('Subclass must define sendArrayBufferImpl method');}}]);return WebSocketBase;})();




module.exports = WebSocketBase;
});
__d('EventPluginHub',["EventPluginRegistry","EventPluginUtils","accumulateInto","forEachAccumulated","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPluginRegistry=require('EventPluginRegistry');
var EventPluginUtils=require('EventPluginUtils');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');
var invariant=require('invariant');




var listenerBank={};





var eventQueue=null;







var executeDispatchesAndRelease=function(event){
if(event){
var executeDispatch=EventPluginUtils.executeDispatch;

var PluginModule=EventPluginRegistry.getPluginModuleForEvent(event);
if(PluginModule && PluginModule.executeDispatch){
executeDispatch = PluginModule.executeDispatch;}

EventPluginUtils.executeDispatchesInOrder(event,executeDispatch);

if(!event.isPersistent()){
event.constructor.release(event);}}};








var InstanceHandle=null;

function validateInstanceHandle(){
var valid=
InstanceHandle && 
InstanceHandle.traverseTwoPhase && 
InstanceHandle.traverseEnterLeave;
invariant(
valid,
'InstanceHandle not injected before use!');}

























var EventPluginHub={




injection:{





injectMount:EventPluginUtils.injection.injectMount,





injectInstanceHandle:function(InjectedInstanceHandle){
InstanceHandle = InjectedInstanceHandle;
if(__DEV__){
validateInstanceHandle();}},



getInstanceHandle:function(){
if(__DEV__){
validateInstanceHandle();}

return InstanceHandle;},






injectEventPluginOrder:EventPluginRegistry.injectEventPluginOrder,




injectEventPluginsByName:EventPluginRegistry.injectEventPluginsByName},



eventNameDispatchConfigs:EventPluginRegistry.eventNameDispatchConfigs,

registrationNameModules:EventPluginRegistry.registrationNameModules,








putListener:function(id,registrationName,listener){
invariant(
!listener || typeof listener === 'function',
'Expected %s listener to be a function, instead got type %s',
registrationName,typeof listener);


var bankForRegistrationName=
listenerBank[registrationName] || (listenerBank[registrationName] = {});
bankForRegistrationName[id] = listener;},







getListener:function(id,registrationName){
var bankForRegistrationName=listenerBank[registrationName];
return bankForRegistrationName && bankForRegistrationName[id];},








deleteListener:function(id,registrationName){
var bankForRegistrationName=listenerBank[registrationName];
if(bankForRegistrationName){
delete bankForRegistrationName[id];}},








deleteAllListeners:function(id){
for(var registrationName in listenerBank) {
delete listenerBank[registrationName][id];}},














extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent){
var events;
var plugins=EventPluginRegistry.plugins;
for(var i=0,l=plugins.length;i < l;i++) {

var possiblePlugin=plugins[i];
if(possiblePlugin){
var extractedEvents=possiblePlugin.extractEvents(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent);

if(extractedEvents){
events = accumulateInto(events,extractedEvents);}}}



return events;},









enqueueEvents:function(events){
if(events){
eventQueue = accumulateInto(eventQueue,events);}},








processEventQueue:function(){


var processingEventQueue=eventQueue;
eventQueue = null;
forEachAccumulated(processingEventQueue,executeDispatchesAndRelease);
invariant(
!eventQueue,
'processEventQueue(): Additional events were enqueued while processing ' + 
'an event queue. Support for this has not yet been implemented.');},






__purge:function(){
listenerBank = {};},


__getListenerBank:function(){
return listenerBank;}};




module.exports = EventPluginHub;
});
__d('EventPluginRegistry',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var invariant=require('invariant');




var EventPluginOrder=null;




var namesToPlugins={};






function recomputePluginOrdering(){
if(!EventPluginOrder){

return;}

for(var pluginName in namesToPlugins) {
var PluginModule=namesToPlugins[pluginName];
var pluginIndex=EventPluginOrder.indexOf(pluginName);
invariant(
pluginIndex > -1,
'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 
'the plugin ordering, `%s`.',
pluginName);

if(EventPluginRegistry.plugins[pluginIndex]){
continue;}

invariant(
PluginModule.extractEvents,
'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 
'method, but `%s` does not.',
pluginName);

EventPluginRegistry.plugins[pluginIndex] = PluginModule;
var publishedEvents=PluginModule.eventTypes;
for(var eventName in publishedEvents) {
invariant(
publishEventForPlugin(
publishedEvents[eventName],
PluginModule,
eventName),

'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
eventName,
pluginName);}}}













function publishEventForPlugin(dispatchConfig,PluginModule,eventName){
invariant(
!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),
'EventPluginHub: More than one plugin attempted to publish the same ' + 
'event name, `%s`.',
eventName);

EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

var phasedRegistrationNames=dispatchConfig.phasedRegistrationNames;
if(phasedRegistrationNames){
for(var phaseName in phasedRegistrationNames) {
if(phasedRegistrationNames.hasOwnProperty(phaseName)){
var phasedRegistrationName=phasedRegistrationNames[phaseName];
publishRegistrationName(
phasedRegistrationName,
PluginModule,
eventName);}}



return true;}else 
if(dispatchConfig.registrationName){
publishRegistrationName(
dispatchConfig.registrationName,
PluginModule,
eventName);

return true;}

return false;}










function publishRegistrationName(registrationName,PluginModule,eventName){
invariant(
!EventPluginRegistry.registrationNameModules[registrationName],
'EventPluginHub: More than one plugin attempted to publish the same ' + 
'registration name, `%s`.',
registrationName);

EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
EventPluginRegistry.registrationNameDependencies[registrationName] = 
PluginModule.eventTypes[eventName].dependencies;}







var EventPluginRegistry={




plugins:[],




eventNameDispatchConfigs:{},




registrationNameModules:{},




registrationNameDependencies:{},










injectEventPluginOrder:function(InjectedEventPluginOrder){
invariant(
!EventPluginOrder,
'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 
'once. You are likely trying to load more than one copy of React.');


EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
recomputePluginOrdering();},












injectEventPluginsByName:function(injectedNamesToPlugins){
var isOrderingDirty=false;
for(var pluginName in injectedNamesToPlugins) {
if(!injectedNamesToPlugins.hasOwnProperty(pluginName)){
continue;}

var PluginModule=injectedNamesToPlugins[pluginName];
if(!namesToPlugins.hasOwnProperty(pluginName) || 
namesToPlugins[pluginName] !== PluginModule){
invariant(
!namesToPlugins[pluginName],
'EventPluginRegistry: Cannot inject two different event plugins ' + 
'using the same name, `%s`.',
pluginName);

namesToPlugins[pluginName] = PluginModule;
isOrderingDirty = true;}}


if(isOrderingDirty){
recomputePluginOrdering();}},










getPluginModuleForEvent:function(event){
var dispatchConfig=event.dispatchConfig;
if(dispatchConfig.registrationName){
return EventPluginRegistry.registrationNameModules[
dispatchConfig.registrationName] || 
null;}

for(var phase in dispatchConfig.phasedRegistrationNames) {
if(!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)){
continue;}

var PluginModule=EventPluginRegistry.registrationNameModules[
dispatchConfig.phasedRegistrationNames[phase]];

if(PluginModule){
return PluginModule;}}


return null;},






_resetEventPlugins:function(){
EventPluginOrder = null;
for(var pluginName in namesToPlugins) {
if(namesToPlugins.hasOwnProperty(pluginName)){
delete namesToPlugins[pluginName];}}


EventPluginRegistry.plugins.length = 0;

var eventNameDispatchConfigs=EventPluginRegistry.eventNameDispatchConfigs;
for(var eventName in eventNameDispatchConfigs) {
if(eventNameDispatchConfigs.hasOwnProperty(eventName)){
delete eventNameDispatchConfigs[eventName];}}



var registrationNameModules=EventPluginRegistry.registrationNameModules;
for(var registrationName in registrationNameModules) {
if(registrationNameModules.hasOwnProperty(registrationName)){
delete registrationNameModules[registrationName];}}}};






module.exports = EventPluginRegistry;
});
__d('EventPluginUtils',["EventConstants","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventConstants=require('EventConstants');

var invariant=require('invariant');









var injection={
Mount:null,
injectMount:function(InjectedMount){
injection.Mount = InjectedMount;
if(__DEV__){
invariant(
InjectedMount && InjectedMount.getNode,
'EventPluginUtils.injection.injectMount(...): Injected Mount module ' + 
'is missing getNode.');}}};





var topLevelTypes=EventConstants.topLevelTypes;

function isEndish(topLevelType){
return topLevelType === topLevelTypes.topMouseUp || 
topLevelType === topLevelTypes.topTouchEnd || 
topLevelType === topLevelTypes.topTouchCancel;}


function isMoveish(topLevelType){
return topLevelType === topLevelTypes.topMouseMove || 
topLevelType === topLevelTypes.topTouchMove;}

function isStartish(topLevelType){
return topLevelType === topLevelTypes.topMouseDown || 
topLevelType === topLevelTypes.topTouchStart;}



var validateEventDispatches;
if(__DEV__){
validateEventDispatches = function(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;

var listenersIsArr=Array.isArray(dispatchListeners);
var idsIsArr=Array.isArray(dispatchIDs);
var IDsLen=idsIsArr?dispatchIDs.length:dispatchIDs?1:0;
var listenersLen=listenersIsArr?
dispatchListeners.length:
dispatchListeners?1:0;

invariant(
idsIsArr === listenersIsArr && IDsLen === listenersLen,
'EventPluginUtils: Invalid `event`.');};}









function forEachEventDispatch(event,cb){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0;i < dispatchListeners.length;i++) {
if(event.isPropagationStopped()){
break;}


cb(event,dispatchListeners[i],dispatchIDs[i]);}}else 

if(dispatchListeners){
cb(event,dispatchListeners,dispatchIDs);}}









function executeDispatch(event,listener,domID){
event.currentTarget = injection.Mount.getNode(domID);
var returnValue=listener(event,domID);
event.currentTarget = null;
return returnValue;}





function executeDispatchesInOrder(event,cb){
forEachEventDispatch(event,cb);
event._dispatchListeners = null;
event._dispatchIDs = null;}









function executeDispatchesInOrderStopAtTrueImpl(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0;i < dispatchListeners.length;i++) {
if(event.isPropagationStopped()){
break;}


if(dispatchListeners[i](event,dispatchIDs[i])){
return dispatchIDs[i];}}}else 


if(dispatchListeners){
if(dispatchListeners(event,dispatchIDs)){
return dispatchIDs;}}


return null;}





function executeDispatchesInOrderStopAtTrue(event){
var ret=executeDispatchesInOrderStopAtTrueImpl(event);
event._dispatchIDs = null;
event._dispatchListeners = null;
return ret;}











function executeDirectDispatch(event){
if(__DEV__){
validateEventDispatches(event);}

var dispatchListener=event._dispatchListeners;
var dispatchID=event._dispatchIDs;
invariant(
!Array.isArray(dispatchListener),
'executeDirectDispatch(...): Invalid `event`.');

var res=dispatchListener?
dispatchListener(event,dispatchID):
null;
event._dispatchListeners = null;
event._dispatchIDs = null;
return res;}






function hasDispatches(event){
return !!event._dispatchListeners;}





var EventPluginUtils={
isEndish:isEndish,
isMoveish:isMoveish,
isStartish:isStartish,

executeDirectDispatch:executeDirectDispatch,
executeDispatch:executeDispatch,
executeDispatchesInOrder:executeDispatchesInOrder,
executeDispatchesInOrderStopAtTrue:executeDispatchesInOrderStopAtTrue,
hasDispatches:hasDispatches,
injection:injection,
useTouchEvents:false};


module.exports = EventPluginUtils;
});
__d('EventConstants',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var PropagationPhases=keyMirror({bubbled:null,captured:null});




var topLevelTypes=keyMirror({
topBlur:null,
topChange:null,
topClick:null,
topCompositionEnd:null,
topCompositionStart:null,
topCompositionUpdate:null,
topContextMenu:null,
topCopy:null,
topCut:null,
topDoubleClick:null,
topDrag:null,
topDragEnd:null,
topDragEnter:null,
topDragExit:null,
topDragLeave:null,
topDragOver:null,
topDragStart:null,
topDrop:null,
topError:null,
topFocus:null,
topInput:null,
topKeyDown:null,
topKeyPress:null,
topKeyUp:null,
topLoad:null,
topMouseDown:null,
topMouseMove:null,
topMouseOut:null,
topMouseOver:null,
topMouseUp:null,
topPaste:null,
topReset:null,
topScroll:null,
topSelectionChange:null,
topSubmit:null,
topTextInput:null,
topTouchCancel:null,
topTouchEnd:null,
topTouchMove:null,
topTouchStart:null,
topWheel:null});


var EventConstants={
topLevelTypes:topLevelTypes,
PropagationPhases:PropagationPhases};


module.exports = EventConstants;
});
__d('accumulateInto',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');















function accumulateInto(current,next){
invariant(
next != null,
'accumulateInto(...): Accumulated items must not be null or undefined.');

if(current == null){
return next;}




var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);

if(currentIsArray && nextIsArray){
current.push.apply(current,next);
return current;}


if(currentIsArray){
current.push(next);
return current;}


if(nextIsArray){

return [current].concat(next);}


return [current,next];}


module.exports = accumulateInto;
});
__d('forEachAccumulated',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var forEachAccumulated=function(arr,cb,scope){
if(Array.isArray(arr)){
arr.forEach(cb,scope);}else 
if(arr){
cb.call(scope,arr);}};



module.exports = forEachAccumulated;
});
__d('IOSDefaultEventPluginOrder',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var IOSDefaultEventPluginOrder=[
'ResponderEventPlugin',
'IOSNativeBridgeEventPlugin'];


module.exports = IOSDefaultEventPluginOrder;
});
__d('IOSNativeBridgeEventPlugin',["EventPropagators","NativeModules","SyntheticEvent","merge","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPropagators=require('EventPropagators');
var NativeModules=require('NativeModules');
var SyntheticEvent=require('SyntheticEvent');

var merge=require('merge');
var warning=require('warning');

var RCTUIManager=NativeModules.UIManager;

var customBubblingEventTypes=RCTUIManager.customBubblingEventTypes;
var customDirectEventTypes=RCTUIManager.customDirectEventTypes;

var allTypesByEventName={};

for(var bubblingTypeName in customBubblingEventTypes) {
allTypesByEventName[bubblingTypeName] = customBubblingEventTypes[bubblingTypeName];}


for(var directTypeName in customDirectEventTypes) {
warning(
!customBubblingEventTypes[directTypeName],
'Event cannot be both direct and bubbling: %s',
directTypeName);

allTypesByEventName[directTypeName] = customDirectEventTypes[directTypeName];}


var IOSNativeBridgeEventPlugin={

eventTypes:merge(customBubblingEventTypes,customDirectEventTypes),









extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent)
{
var bubbleDispatchConfig=customBubblingEventTypes[topLevelType];
var directDispatchConfig=customDirectEventTypes[topLevelType];
var event=SyntheticEvent.getPooled(
bubbleDispatchConfig || directDispatchConfig,
topLevelTargetID,
nativeEvent);

if(bubbleDispatchConfig){
EventPropagators.accumulateTwoPhaseDispatches(event);}else 
if(directDispatchConfig){
EventPropagators.accumulateDirectDispatches(event);}else 
{
return null;}

return event;}};



module.exports = IOSNativeBridgeEventPlugin;
});
__d('EventPropagators',["EventConstants","EventPluginHub","accumulateInto","forEachAccumulated"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";



















var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');

var PropagationPhases=EventConstants.PropagationPhases;
var getListener=EventPluginHub.getListener;





function listenerAtPhase(id,event,propagationPhase){
var registrationName=
event.dispatchConfig.phasedRegistrationNames[propagationPhase];
return getListener(id,registrationName);}








function accumulateDirectionalDispatches(domID,upwards,event){
if(__DEV__){
if(!domID){
throw new Error('Dispatching id must not be null');}}


var phase=upwards?PropagationPhases.bubbled:PropagationPhases.captured;
var listener=listenerAtPhase(domID,event,phase);
if(listener){
event._dispatchListeners = 
accumulateInto(event._dispatchListeners,listener);
event._dispatchIDs = accumulateInto(event._dispatchIDs,domID);}}










function accumulateTwoPhaseDispatchesSingle(event){
if(event && event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
event.dispatchMarker,
accumulateDirectionalDispatches,
event);}}







function accumulateTwoPhaseDispatchesSingleSkipTarget(event){
if(event && event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(
event.dispatchMarker,
accumulateDirectionalDispatches,
event);}}










function accumulateDispatches(id,ignoredDirection,event){
if(event && event.dispatchConfig.registrationName){
var registrationName=event.dispatchConfig.registrationName;
var listener=getListener(id,registrationName);
if(listener){
event._dispatchListeners = 
accumulateInto(event._dispatchListeners,listener);
event._dispatchIDs = accumulateInto(event._dispatchIDs,id);}}}









function accumulateDirectDispatchesSingle(event){
if(event && event.dispatchConfig.registrationName){
accumulateDispatches(event.dispatchMarker,null,event);}}



function accumulateTwoPhaseDispatches(events){
forEachAccumulated(events,accumulateTwoPhaseDispatchesSingle);}


function accumulateTwoPhaseDispatchesSkipTarget(events){
forEachAccumulated(events,accumulateTwoPhaseDispatchesSingleSkipTarget);}


function accumulateEnterLeaveDispatches(leave,enter,fromID,toID){
EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
fromID,
toID,
accumulateDispatches,
leave,
enter);}




function accumulateDirectDispatches(events){
forEachAccumulated(events,accumulateDirectDispatchesSingle);}















var EventPropagators={
accumulateTwoPhaseDispatches:accumulateTwoPhaseDispatches,
accumulateTwoPhaseDispatchesSkipTarget:accumulateTwoPhaseDispatchesSkipTarget,
accumulateDirectDispatches:accumulateDirectDispatches,
accumulateEnterLeaveDispatches:accumulateEnterLeaveDispatches};


module.exports = EventPropagators;
});
__d('SyntheticEvent',["PooledClass","Object.assign","emptyFunction","getEventTarget"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var getEventTarget=require('getEventTarget');





var EventInterface={
type:null,
target:getEventTarget,

currentTarget:emptyFunction.thatReturnsNull,
eventPhase:null,
bubbles:null,
cancelable:null,
timeStamp:function(event){
return event.timeStamp || Date.now();},

defaultPrevented:null,
isTrusted:null};



















function SyntheticEvent(dispatchConfig,dispatchMarker,nativeEvent){
this.dispatchConfig = dispatchConfig;
this.dispatchMarker = dispatchMarker;
this.nativeEvent = nativeEvent;

var Interface=this.constructor.Interface;
for(var propName in Interface) {
if(!Interface.hasOwnProperty(propName)){
continue;}

var normalize=Interface[propName];
if(normalize){
this[propName] = normalize(nativeEvent);}else 
{
this[propName] = nativeEvent[propName];}}



var defaultPrevented=nativeEvent.defaultPrevented != null?
nativeEvent.defaultPrevented:
nativeEvent.returnValue === false;
if(defaultPrevented){
this.isDefaultPrevented = emptyFunction.thatReturnsTrue;}else 
{
this.isDefaultPrevented = emptyFunction.thatReturnsFalse;}

this.isPropagationStopped = emptyFunction.thatReturnsFalse;}


assign(SyntheticEvent.prototype,{

preventDefault:function(){
this.defaultPrevented = true;
var event=this.nativeEvent;
if(event.preventDefault){
event.preventDefault();}else 
{
event.returnValue = false;}

this.isDefaultPrevented = emptyFunction.thatReturnsTrue;},


stopPropagation:function(){
var event=this.nativeEvent;
if(event.stopPropagation){
event.stopPropagation();}else 
{
event.cancelBubble = true;}

this.isPropagationStopped = emptyFunction.thatReturnsTrue;},







persist:function(){
this.isPersistent = emptyFunction.thatReturnsTrue;},







isPersistent:emptyFunction.thatReturnsFalse,




destructor:function(){
var Interface=this.constructor.Interface;
for(var propName in Interface) {
this[propName] = null;}

this.dispatchConfig = null;
this.dispatchMarker = null;
this.nativeEvent = null;}});




SyntheticEvent.Interface = EventInterface;







SyntheticEvent.augmentClass = function(Class,Interface){
var Super=this;

var prototype=Object.create(Super.prototype);
assign(prototype,Class.prototype);
Class.prototype = prototype;
Class.prototype.constructor = Class;

Class.Interface = assign({},Super.Interface,Interface);
Class.augmentClass = Super.augmentClass;

PooledClass.addPoolingTo(Class,PooledClass.threeArgumentPooler);};


PooledClass.addPoolingTo(SyntheticEvent,PooledClass.threeArgumentPooler);

module.exports = SyntheticEvent;
});
__d('getEventTarget',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















function getEventTarget(nativeEvent){
var target=nativeEvent.target || nativeEvent.srcElement || window;


return target.nodeType === 3?target.parentNode:target;}


module.exports = getEventTarget;
});
__d('merge',["mergeInto"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";
































var mergeInto=require('mergeInto');








var merge=function(one,two){
var result={};
mergeInto(result,one);
mergeInto(result,two);
return result;};


module.exports = merge;
});
__d('mergeInto',["mergeHelpers"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

































var mergeHelpers=require('mergeHelpers');

var checkMergeObjectArg=mergeHelpers.checkMergeObjectArg;
var checkMergeIntoObjectArg=mergeHelpers.checkMergeIntoObjectArg;







function mergeInto(one,two){
checkMergeIntoObjectArg(one);
if(two != null){
checkMergeObjectArg(two);
for(var key in two) {
if(!two.hasOwnProperty(key)){
continue;}

one[key] = two[key];}}}




module.exports = mergeInto;
});
__d('mergeHelpers',["invariant","keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";


































var invariant=require('invariant');
var keyMirror=require('keyMirror');





var MAX_MERGE_DEPTH=36;







var isTerminal=function(o){
return typeof o !== 'object' || o === null;};


var mergeHelpers={

MAX_MERGE_DEPTH:MAX_MERGE_DEPTH,

isTerminal:isTerminal,







normalizeMergeArg:function(arg){
return arg === undefined || arg === null?{}:arg;},










checkMergeArrayArgs:function(one,two){
invariant(
Array.isArray(one) && Array.isArray(two),
'Tried to merge arrays, instead got %s and %s.',
one,
two);},







checkMergeObjectArgs:function(one,two){
mergeHelpers.checkMergeObjectArg(one);
mergeHelpers.checkMergeObjectArg(two);},





checkMergeObjectArg:function(arg){
invariant(
!isTerminal(arg) && !Array.isArray(arg),
'Tried to merge an object, instead got %s.',
arg);},






checkMergeIntoObjectArg:function(arg){
invariant(
(!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg),
'Tried to merge into an object, instead got %s.',
arg);},









checkMergeLevel:function(level){
invariant(
level < MAX_MERGE_DEPTH,
'Maximum deep merge depth exceeded. You may be attempting to merge ' + 
'circular structures in an unsupported way.');},








checkArrayStrategy:function(strategy){
invariant(
strategy === undefined || strategy in mergeHelpers.ArrayStrategies,
'You must provide an array strategy to deep merge functions to ' + 
'instruct the deep merge how to resolve merging two arrays.');},










ArrayStrategies:keyMirror({
Clobber:true,
IndexByIndex:true})};




module.exports = mergeHelpers;
});
__d('NodeHandle',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 




























































NodeHandle={



injection:{
injectImplementation:function(Impl){
NodeHandle._Implementation = Impl;}},



_Implementation:null,





getRootNodeID:function(nodeHandle){
return NodeHandle._Implementation.getRootNodeID(nodeHandle);}};



module.exports = NodeHandle;
});
__d('ReactDefaultBatchingStrategy',["ReactUpdates","Transaction","Object.assign","emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactUpdates=require('ReactUpdates');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');

var RESET_BATCHED_UPDATES={
initialize:emptyFunction,
close:function(){
ReactDefaultBatchingStrategy.isBatchingUpdates = false;}};



var FLUSH_BATCHED_UPDATES={
initialize:emptyFunction,
close:ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)};


var TRANSACTION_WRAPPERS=[FLUSH_BATCHED_UPDATES,RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction(){
this.reinitializeTransaction();}


assign(
ReactDefaultBatchingStrategyTransaction.prototype,
Transaction.Mixin,
{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;}});




var transaction=new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy={
isBatchingUpdates:false,





batchedUpdates:function(callback,a,b,c,d){
var alreadyBatchingUpdates=ReactDefaultBatchingStrategy.isBatchingUpdates;

ReactDefaultBatchingStrategy.isBatchingUpdates = true;


if(alreadyBatchingUpdates){
callback(a,b,c,d);}else 
{
transaction.perform(callback,null,a,b,c,d);}}};




module.exports = ReactDefaultBatchingStrategy;
});
__d('ReactNativeComponentEnvironment',["ReactNativeDOMIDOperations","ReactNativeReconcileTransaction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeDOMIDOperations=require('ReactNativeDOMIDOperations');
var ReactNativeReconcileTransaction=require('ReactNativeReconcileTransaction');

var ReactNativeComponentEnvironment={

processChildrenUpdates:ReactNativeDOMIDOperations.dangerouslyProcessChildrenUpdates,

replaceNodeWithMarkupByID:ReactNativeDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,






unmountIDFromEnvironment:function(){},






clearNode:function(){},



ReactReconcileTransaction:ReactNativeReconcileTransaction};


module.exports = ReactNativeComponentEnvironment;
});
__d('ReactNativeDOMIDOperations',["ReactNativeTagHandles","ReactMultiChildUpdateTypes","NativeModules","ReactPerf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');
var RCTUIManager=require('NativeModules').UIManager;
var ReactPerf=require('ReactPerf');













var dangerouslyProcessChildrenUpdates=function(childrenUpdates,markupList){
if(!childrenUpdates.length){
return;}

var byContainerTag={};


for(var i=0;i < childrenUpdates.length;i++) {
var update=childrenUpdates[i];
var containerTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(update.parentID);
var updates=byContainerTag[containerTag] || (byContainerTag[containerTag] = {});
if(update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING){
(updates.moveFromIndices || (updates.moveFromIndices = [])).push(update.fromIndex);
(updates.moveToIndices || (updates.moveToIndices = [])).push(update.toIndex);}else 
if(update.type === ReactMultiChildUpdateTypes.REMOVE_NODE){
(updates.removeAtIndices || (updates.removeAtIndices = [])).push(update.fromIndex);}else 
if(update.type === ReactMultiChildUpdateTypes.INSERT_MARKUP){
var mountImage=markupList[update.markupIndex];
var tag=mountImage.tag;
var rootNodeID=mountImage.rootNodeID;
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(rootNodeID,tag);
(updates.addAtIndices || (updates.addAtIndices = [])).push(update.toIndex);
(updates.addChildTags || (updates.addChildTags = [])).push(tag);}}





for(var updateParentTagString in byContainerTag) {
var updateParentTagNumber=+updateParentTagString;
var childUpdatesToSend=byContainerTag[updateParentTagNumber];
RCTUIManager.manageChildren(
updateParentTagNumber,
childUpdatesToSend.moveFromIndices,
childUpdatesToSend.moveToIndices,
childUpdatesToSend.addChildTags,
childUpdatesToSend.addAtIndices,
childUpdatesToSend.removeAtIndices);}};








var ReactNativeDOMIDOperations={
dangerouslyProcessChildrenUpdates:ReactPerf.measure(

'ReactDOMIDOperations',
'dangerouslyProcessChildrenUpdates',
dangerouslyProcessChildrenUpdates),








dangerouslyReplaceNodeWithMarkupByID:ReactPerf.measure(
'ReactDOMIDOperations',
'dangerouslyReplaceNodeWithMarkupByID',
function(id,mountImage){
var oldTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(id);
RCTUIManager.replaceExistingNonRootView(oldTag,mountImage.tag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(id,mountImage.tag);})};




module.exports = ReactNativeDOMIDOperations;
});
__d('ReactMultiChildUpdateTypes',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');









var ReactMultiChildUpdateTypes=keyMirror({
INSERT_MARKUP:null,
MOVE_EXISTING:null,
REMOVE_NODE:null,
TEXT_CONTENT:null});


module.exports = ReactMultiChildUpdateTypes;
});
__d('ReactNativeReconcileTransaction',["CallbackQueue","PooledClass","Transaction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var Transaction=require('Transaction');





var ON_DOM_READY_QUEUEING={



initialize:function(){
this.reactMountReady.reset();},





close:function(){
this.reactMountReady.notifyAll();}};








var TRANSACTION_WRAPPERS=[ON_DOM_READY_QUEUEING];















function ReactNativeReconcileTransaction(){
this.reinitializeTransaction();
this.reactMountReady = CallbackQueue.getPooled(null);}


var Mixin={







getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;},






getReactMountReady:function(){
return this.reactMountReady;},






destructor:function(){
CallbackQueue.release(this.reactMountReady);
this.reactMountReady = null;}};



Object.assign(
ReactNativeReconcileTransaction.prototype,
Transaction.Mixin,
ReactNativeReconcileTransaction,
Mixin);


PooledClass.addPoolingTo(ReactNativeReconcileTransaction);

module.exports = ReactNativeReconcileTransaction;
});
__d('ReactNativeGlobalInteractionHandler',["InteractionManager"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var InteractionManager=require('InteractionManager');



var interactionHandle=null;

var ReactNativeGlobalInteractionHandler={
onChange:function(numberActiveTouches){
if(numberActiveTouches === 0){
if(interactionHandle){
InteractionManager.clearInteractionHandle(interactionHandle);
interactionHandle = null;}}else 

if(!interactionHandle){
interactionHandle = InteractionManager.createInteractionHandle();}}};




module.exports = ReactNativeGlobalInteractionHandler;
});
__d('InteractionManager',["ErrorUtils","EventEmitter","Set","invariant","keyMirror","setImmediate"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ErrorUtils=require('ErrorUtils');
var EventEmitter=require('EventEmitter');
var Set=require('Set');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var setImmediate=require('setImmediate');



var _emitter=new EventEmitter();
var _interactionSet=new Set();
var _addInteractionSet=new Set();
var _deleteInteractionSet=new Set();
var _nextUpdateHandle=null;
var _queue=[];
var _inc=0;




































var InteractionManager={
Events:keyMirror({
interactionStart:true,
interactionComplete:true}),





runAfterInteractions:function(callback){
invariant(
typeof callback === 'function',
'Must specify a function to schedule.');

scheduleUpdate();
_queue.push(callback);},





createInteractionHandle:function(){
scheduleUpdate();
var handle=++_inc;
_addInteractionSet.add(handle);
return handle;},





clearInteractionHandle:function(handle){
invariant(
!!handle,
'Must provide a handle to clear.');

scheduleUpdate();
_addInteractionSet.delete(handle);
_deleteInteractionSet.add(handle);},


addListener:_emitter.addListener.bind(_emitter)};





function scheduleUpdate(){
if(!_nextUpdateHandle){
_nextUpdateHandle = setImmediate(processUpdate);}}






function processUpdate(){
_nextUpdateHandle = null;

var interactionCount=_interactionSet.size;
_addInteractionSet.forEach(function(handle){return (
_interactionSet.add(handle));});

_deleteInteractionSet.forEach(function(handle){return (
_interactionSet.delete(handle));});

var nextInteractionCount=_interactionSet.size;

if(interactionCount !== 0 && nextInteractionCount === 0){

_emitter.emit(InteractionManager.Events.interactionComplete);}else 
if(interactionCount === 0 && nextInteractionCount !== 0){

_emitter.emit(InteractionManager.Events.interactionStart);}



if(nextInteractionCount === 0){
var queue=_queue;
_queue = [];
queue.forEach(function(callback){
ErrorUtils.applyWithGuard(callback);});}



_addInteractionSet.clear();
_deleteInteractionSet.clear();}


module.exports = InteractionManager;
});
__d('Set',["Map","toIterator","_shouldPolyfillES6Collection"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}



















var Map=require('Map');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports = (function(global,undefined){





if(!_shouldPolyfillES6Collection('Set')){
return global.Set;}var 











































Set=(function(){










function Set(iterable){_classCallCheck(this,Set);
if(this == null || 
typeof this !== 'object' && typeof this !== 'function'){
throw new TypeError('Wrong set object type.');}


initSet(this);

if(iterable != null){
var it=toIterator(iterable);
var next;
while(!(next = it.next()).done) {
this.add(next.value);}}}_createClass(Set,[{key:'add',value:












function add(value){
this._map.set(value,value);
this.size = this._map.size;
return this;}},{key:'clear',value:







function clear(){
initSet(this);}},{key:'delete',value:











function _delete(value){
var ret=this._map.delete(value);
this.size = this._map.size;
return ret;}},{key:'entries',value:







function entries(){
return this._map.entries();}},{key:'forEach',value:









function forEach(callback){
var thisArg=arguments[1];
var it=this._map.keys();
var next;
while(!(next = it.next()).done) {
callback.call(thisArg,next.value,next.value,this);}}},{key:'has',value:











function has(value){
return this._map.has(value);}},{key:'values',value:







function values(){
return this._map.values();}}]);return Set;})();




Set.prototype[toIterator.ITERATOR_SYMBOL] = Set.prototype.values;


Set.prototype.keys = Set.prototype.values;

function initSet(set){
set._map = new Map();
set.size = set._map.size;}


return Set;})(
Function('return this')());
});
__d('Map',["guid","isNode","toIterator","_shouldPolyfillES6Collection"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}



















var guid=require('guid');
var isNode=require('isNode');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports = (function(global,undefined){




if(!_shouldPolyfillES6Collection('Map')){
return global.Map;}

























































var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VALUE='key+value';



var KEY_PREFIX='$map_';



var SECRET_SIZE_PROP;
if(__DEV__){
SECRET_SIZE_PROP = '$size' + guid();}



var OLD_IE_HASH_PREFIX='IE_HASH_';var 

Map=(function(){










function Map(iterable){_classCallCheck(this,Map);
if(!isObject(this)){
throw new TypeError('Wrong map object type.');}


initMap(this);

if(iterable != null){
var it=toIterator(iterable);
var next;
while(!(next = it.next()).done) {
if(!isObject(next.value)){
throw new TypeError('Expected iterable items to be pair objects.');}

this.set(next.value[0],next.value[1]);}}}_createClass(Map,[{key:'clear',value:








function clear(){
initMap(this);}},{key:'has',value:









function has(key){
var index=getIndex(this,key);
return !!(index != null && this._mapData[index]);}},{key:'set',value:










function set(key,value){
var index=getIndex(this,key);

if(index != null && this._mapData[index]){
this._mapData[index][1] = value;}else 
{
index = this._mapData.push([
key,
value]) - 
1;
setIndex(this,key,index);
if(__DEV__){
this[SECRET_SIZE_PROP] += 1;}else 
{
this.size += 1;}}



return this;}},{key:'get',value:









function get(key){
var index=getIndex(this,key);
if(index == null){
return undefined;}else 
{
return this._mapData[index][1];}}},{key:'delete',value:











function _delete(key){
var index=getIndex(this,key);
if(index != null && this._mapData[index]){
setIndex(this,key,undefined);
this._mapData[index] = undefined;
if(__DEV__){
this[SECRET_SIZE_PROP] -= 1;}else 
{
this.size -= 1;}

return true;}else 
{
return false;}}},{key:'entries',value:










function entries(){
return new MapIterator(this,KIND_KEY_VALUE);}},{key:'keys',value:








function keys(){
return new MapIterator(this,KIND_KEY);}},{key:'values',value:








function values(){
return new MapIterator(this,KIND_VALUE);}},{key:'forEach',value:











function forEach(callback,thisArg){
if(typeof callback !== 'function'){
throw new TypeError('Callback must be callable.');}


var boundCallback=callback.bind(thisArg || undefined);
var mapData=this._mapData;




for(var i=0;i < mapData.length;i++) {
var entry=mapData[i];
if(entry != null){
boundCallback(entry[1],entry[0],this);}}}}]);return Map;})();






Map.prototype[toIterator.ITERATOR_SYMBOL] = Map.prototype.entries;var 

MapIterator=(function(){









function MapIterator(map,kind){_classCallCheck(this,MapIterator);
if(!(isObject(map) && map['_mapData'])){
throw new TypeError('Object is not a map.');}


if([KIND_KEY,KIND_KEY_VALUE,KIND_VALUE].indexOf(kind) === -1){
throw new Error('Invalid iteration kind.');}


this._map = map;
this._nextIndex = 0;
this._kind = kind;}_createClass(MapIterator,[{key:'next',value:








function next(){
if(!this instanceof Map){
throw new TypeError('Expected to be called on a MapIterator.');}


var map=this._map;
var index=this._nextIndex;
var kind=this._kind;

if(map == null){
return createIterResultObject(undefined,true);}


var entries=map['_mapData'];

while(index < entries.length) {
var record=entries[index];

index += 1;
this._nextIndex = index;

if(record){
if(kind === KIND_KEY){
return createIterResultObject(record[0],false);}else 
if(kind === KIND_VALUE){
return createIterResultObject(record[1],false);}else 
if(kind){
return createIterResultObject(record,false);}}}




this._map = undefined;

return createIterResultObject(undefined,true);}}]);return MapIterator;})();






MapIterator.prototype[toIterator.ITERATOR_SYMBOL] = function(){
return this;};













function getIndex(map,key){
if(isObject(key)){
var hash=getHash(key);
return map._objectIndex[hash];}else 
{
var prefixedKey=KEY_PREFIX + key;
if(typeof key === 'string'){
return map._stringIndex[prefixedKey];}else 
{
return map._otherIndex[prefixedKey];}}}










function setIndex(map,key,index){
var shouldDelete=index == null;

if(isObject(key)){
var hash=getHash(key);
if(shouldDelete){
delete map._objectIndex[hash];}else 
{
map._objectIndex[hash] = index;}}else 

{
var prefixedKey=KEY_PREFIX + key;
if(typeof key === 'string'){
if(shouldDelete){
delete map._stringIndex[prefixedKey];}else 
{
map._stringIndex[prefixedKey] = index;}}else 

{
if(shouldDelete){
delete map._otherIndex[prefixedKey];}else 
{
map._otherIndex[prefixedKey] = index;}}}}










function initMap(map){






map._mapData = [];







map._objectIndex = {};


map._stringIndex = {};


map._otherIndex = {};







if(__DEV__){
if(isES5){



if(map.hasOwnProperty(SECRET_SIZE_PROP)){
map[SECRET_SIZE_PROP] = 0;}else 
{
Object.defineProperty(map,SECRET_SIZE_PROP,{
value:0,
writable:true});

Object.defineProperty(map,'size',{
set:function(v){
console.error(
'PLEASE FIX ME: You are changing the map size property which ' + 
'should not be writable and will break in production.');

throw new Error('The map size property is not writable.');},

get:function(){return map[SECRET_SIZE_PROP];}});}




return;}}





map.size = 0;}








function isObject(o){
return o != null && (typeof o === 'object' || typeof o === 'function');}









function createIterResultObject(value,done){
return {value:value,done:done};}



var isES5=(function(){
try{
Object.defineProperty({},'x',{});
return true;}
catch(e) {
return false;}})();









function isExtensible(o){
if(!isES5){
return true;}else 
{
return Object.isExtensible(o);}}











function getIENodeHash(node){
var uniqueID;
switch(node.nodeType){
case 1:
uniqueID = node.uniqueID;
break;
case 9:
uniqueID = node.documentElement.uniqueID;
break;
default:
return null;}


if(uniqueID){
return OLD_IE_HASH_PREFIX + uniqueID;}else 
{
return null;}}



var getHash=(function(){
var propIsEnumerable=Object.prototype.propertyIsEnumerable;
var hashProperty=guid();
var hashCounter=0;







return function getHash(o){
if(o[hashProperty]){
return o[hashProperty];}else 
if(!isES5 && 
o.propertyIsEnumerable && 
o.propertyIsEnumerable[hashProperty]){
return o.propertyIsEnumerable[hashProperty];}else 
if(!isES5 && 
isNode(o) && 
getIENodeHash(o)){
return getIENodeHash(o);}else 
if(!isES5 && o[hashProperty]){
return o[hashProperty];}


if(isExtensible(o)){
hashCounter += 1;
if(isES5){
Object.defineProperty(o,hashProperty,{
enumerable:false,
writable:false,
configurable:false,
value:hashCounter});}else 

if(o.propertyIsEnumerable){




o.propertyIsEnumerable = function(){
return propIsEnumerable.apply(this,arguments);};

o.propertyIsEnumerable[hashProperty] = hashCounter;}else 
if(isNode(o)){




o[hashProperty] = hashCounter;}else 
{
throw new Error('Unable to set a non-enumerable property on object.');}

return hashCounter;}else 
{
throw new Error('Non-extensible objects are not allowed as keys.');}};})();




return Map;})(
Function('return this')());
});
__d('guid',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 

























guid(){
return 'f' + (Math.random() * (1 << 30)).toString(16).replace('.','');}


module.exports = guid;
});
__d('isNode',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 















isNode(object){
return !!(object && (
typeof Node === 'function'?object instanceof Node:
typeof object === 'object' && 
typeof object.nodeType === 'number' && 
typeof object.nodeName === 'string'));}



module.exports = isNode;
});
__d('toIterator',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}






























var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VAL='key+value';

var ITERATOR_SYMBOL=typeof Symbol === 'function'?
Symbol.iterator:
'@@iterator';

var toIterator=(function(){
if(!(Array.prototype[ITERATOR_SYMBOL] && 
String.prototype[ITERATOR_SYMBOL])){

return (function(){var 
ArrayIterator=(function(){

function ArrayIterator(array,kind){_classCallCheck(this,ArrayIterator);
if(!Array.isArray(array)){
throw new TypeError('Object is not an Array');}

this._iteratedObject = array;
this._kind = kind;
this._nextIndex = 0;}_createClass(ArrayIterator,[{key:'next',value:



function next(){
if(!this instanceof ArrayIterator){
throw new TypeError('Object is not an ArrayIterator');}


if(this._iteratedObject == null){
return createIterResultObject(undefined,true);}


var array=this._iteratedObject;
var len=this._iteratedObject.length;
var index=this._nextIndex;
var kind=this._kind;

if(index >= len){
this._iteratedObject = undefined;
return createIterResultObject(undefined,true);}


this._nextIndex = index + 1;

if(kind === KIND_KEY){
return createIterResultObject(index,false);}else 
if(kind === KIND_VALUE){
return createIterResultObject(array[index],false);}else 
if(kind === KIND_KEY_VAL){
return createIterResultObject([index,array[index]],false);}}},{key:




'@@iterator',value:function iterator(){
return this;}}]);return ArrayIterator;})();var 



StringIterator=(function(){

function StringIterator(string){_classCallCheck(this,StringIterator);
if(typeof string !== 'string'){
throw new TypeError('Object is not a string');}

this._iteratedString = string;
this._nextIndex = 0;}_createClass(StringIterator,[{key:'next',value:



function next(){
if(!this instanceof StringIterator){
throw new TypeError('Object is not a StringIterator');}


if(this._iteratedString == null){
return createIterResultObject(undefined,true);}


var index=this._nextIndex;
var s=this._iteratedString;
var len=s.length;

if(index >= len){
this._iteratedString = undefined;
return createIterResultObject(undefined,true);}


var ret;
var first=s.charCodeAt(index);

if(first < 0xD800 || first > 0xDBFF || index + 1 === len){
ret = s[index];}else 
{
var second=s.charCodeAt(index + 1);
if(second < 0xDC00 || second > 0xDFFF){
ret = s[index];}else 
{
ret = s[index] + s[index + 1];}}



this._nextIndex = index + ret.length;

return createIterResultObject(ret,false);}},{key:



'@@iterator',value:function iterator(){
return this;}}]);return StringIterator;})();




function createIterResultObject(value,done){
return {value:value,done:done};}


return function(object,kind){
if(typeof object === 'string'){
return new StringIterator(object);}else 
if(Array.isArray(object)){
return new ArrayIterator(object,kind || KIND_VALUE);}else 
{
return object[ITERATOR_SYMBOL]();}};})();}else 



{
return function(object){
return object[ITERATOR_SYMBOL]();};}})();








Object.assign(toIterator,{
KIND_KEY:KIND_KEY,
KIND_VALUE:KIND_VALUE,
KIND_KEY_VAL:KIND_KEY_VAL,
ITERATOR_SYMBOL:ITERATOR_SYMBOL});


module.exports = toIterator;
});
__d('_shouldPolyfillES6Collection',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

























function shouldPolyfillES6Collection(collectionName){
var Collection=global[collectionName];
if(Collection == null){
return true;}


var proto=Collection.prototype;


return Collection == null || 
typeof Collection !== 'function' || 
typeof proto.clear !== 'function' || 
new Collection().size !== 0 || 
typeof proto.keys !== 'function' || 
typeof proto.forEach !== 'function' || 
isCallableWithoutNew(Collection) || 
!supportsSubclassing(Collection);}







function supportsSubclassing(Collection){var 
SubCollection=(function(_Collection){_inherits(SubCollection,_Collection);function SubCollection(){_classCallCheck(this,SubCollection);_get(Object.getPrototypeOf(SubCollection.prototype),'constructor',this).apply(this,arguments);}return SubCollection;})(Collection);
try{
var s=new SubCollection([]);


s.size;
return s instanceof Collection;}
catch(e) {
return false;}}








function isCallableWithoutNew(Collection){
try{
Collection();}
catch(e) {
return false;}

return true;}


module.exports = shouldPolyfillES6Collection;
});
__d('ReactNativeGlobalResponderHandler',["NativeModules","ReactNativeTagHandles"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTUIManager=require('NativeModules').UIManager;
var ReactNativeTagHandles=require('ReactNativeTagHandles');

var ReactNativeGlobalResponderHandler={
onChange:function(from,to,blockNativeResponder){
if(to !== null){
RCTUIManager.setJSResponder(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(to),
blockNativeResponder);}else 

{
RCTUIManager.clearJSResponder();}}};




module.exports = ReactNativeGlobalResponderHandler;
});
__d('ReactNativeTextComponent',["ReactNativeTagHandles","NativeModules","Object.assign"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var RCTUIManager=require('NativeModules').UIManager;

var assign=require('Object.assign');

var ReactNativeTextComponent=function(props){};



assign(ReactNativeTextComponent.prototype,{

construct:function(text){

this._currentElement = text;
this._stringText = '' + text;
this._rootNodeID = null;},


mountComponent:function(rootID,transaction,context){
this._rootNodeID = rootID;
var tag=ReactNativeTagHandles.allocateTag();
var nativeTopRootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootID);
RCTUIManager.createView(
tag,
'RCTRawText',
nativeTopRootID?ReactNativeTagHandles.rootNodeIDToTag[nativeTopRootID]:null,
{text:this._stringText});

return {
rootNodeID:rootID,
tag:tag};},



receiveComponent:function(nextText,transaction,context){
if(nextText !== this._currentElement){
this._currentElement = nextText;
var nextStringText='' + nextText;
if(nextStringText !== this._stringText){
this._stringText = nextStringText;
RCTUIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(
this._rootNodeID),

'RCTRawText',
{text:this._stringText});}}},





unmountComponent:function(){
this._currentElement = null;
this._stringText = null;
this._rootNodeID = null;}});




module.exports = ReactNativeTextComponent;
});
__d('ResponderEventPlugin',["EventConstants","EventPluginUtils","EventPropagators","NodeHandle","ReactInstanceHandles","ResponderSyntheticEvent","ResponderTouchHistoryStore","accumulate","invariant","keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var EventConstants=require('EventConstants');
var EventPluginUtils=require('EventPluginUtils');
var EventPropagators=require('EventPropagators');
var NodeHandle=require('NodeHandle');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ResponderSyntheticEvent=require('ResponderSyntheticEvent');
var ResponderTouchHistoryStore=require('ResponderTouchHistoryStore');

var accumulate=require('accumulate');
var invariant=require('invariant');
var keyOf=require('keyOf');

var isStartish=EventPluginUtils.isStartish;
var isMoveish=EventPluginUtils.isMoveish;
var isEndish=EventPluginUtils.isEndish;
var executeDirectDispatch=EventPluginUtils.executeDirectDispatch;
var hasDispatches=EventPluginUtils.hasDispatches;
var executeDispatchesInOrderStopAtTrue=
EventPluginUtils.executeDispatchesInOrderStopAtTrue;





var responderID=null;





var trackedTouchCount=0;




var previousActiveTouches=0;

var changeResponder=function(nextResponderID,blockNativeResponder){
var oldResponderID=responderID;
responderID = nextResponderID;
if(ResponderEventPlugin.GlobalResponderHandler !== null){
ResponderEventPlugin.GlobalResponderHandler.onChange(
oldResponderID,
nextResponderID,
blockNativeResponder);}};




var eventTypes={




startShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onStartShouldSetResponder:null}),
captured:keyOf({onStartShouldSetResponderCapture:null})}},












scrollShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onScrollShouldSetResponder:null}),
captured:keyOf({onScrollShouldSetResponderCapture:null})}},










selectionChangeShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onSelectionChangeShouldSetResponder:null}),
captured:keyOf({onSelectionChangeShouldSetResponderCapture:null})}},







moveShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onMoveShouldSetResponder:null}),
captured:keyOf({onMoveShouldSetResponderCapture:null})}},






responderStart:{registrationName:keyOf({onResponderStart:null})},
responderMove:{registrationName:keyOf({onResponderMove:null})},
responderEnd:{registrationName:keyOf({onResponderEnd:null})},
responderRelease:{registrationName:keyOf({onResponderRelease:null})},
responderTerminationRequest:{
registrationName:keyOf({onResponderTerminationRequest:null})},

responderGrant:{registrationName:keyOf({onResponderGrant:null})},
responderReject:{registrationName:keyOf({onResponderReject:null})},
responderTerminate:{registrationName:keyOf({onResponderTerminate:null})}};






































































































































































































function setResponderAndExtractTransfer(
topLevelType,
topLevelTargetID,
nativeEvent){
var shouldSetEventType=
isStartish(topLevelType)?eventTypes.startShouldSetResponder:
isMoveish(topLevelType)?eventTypes.moveShouldSetResponder:
topLevelType === EventConstants.topLevelTypes.topSelectionChange?
eventTypes.selectionChangeShouldSetResponder:
eventTypes.scrollShouldSetResponder;


var bubbleShouldSetFrom=!responderID?
topLevelTargetID:
ReactInstanceHandles._getFirstCommonAncestorID(responderID,topLevelTargetID);





var skipOverBubbleShouldSetFrom=bubbleShouldSetFrom === responderID;
var shouldSetEvent=ResponderSyntheticEvent.getPooled(
shouldSetEventType,
bubbleShouldSetFrom,
nativeEvent);

shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
if(skipOverBubbleShouldSetFrom){
EventPropagators.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);}else 
{
EventPropagators.accumulateTwoPhaseDispatches(shouldSetEvent);}

var wantsResponderID=executeDispatchesInOrderStopAtTrue(shouldSetEvent);
if(!shouldSetEvent.isPersistent()){
shouldSetEvent.constructor.release(shouldSetEvent);}


if(!wantsResponderID || wantsResponderID === responderID){
return null;}

var extracted;
var grantEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderGrant,
wantsResponderID,
nativeEvent);

grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;

EventPropagators.accumulateDirectDispatches(grantEvent);
var blockNativeResponder=executeDirectDispatch(grantEvent) === true;
if(responderID){

var terminationRequestEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderTerminationRequest,
responderID,
nativeEvent);

terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminationRequestEvent);
var shouldSwitch=!hasDispatches(terminationRequestEvent) || 
executeDirectDispatch(terminationRequestEvent);
if(!terminationRequestEvent.isPersistent()){
terminationRequestEvent.constructor.release(terminationRequestEvent);}


if(shouldSwitch){
var terminateType=eventTypes.responderTerminate;
var terminateEvent=ResponderSyntheticEvent.getPooled(
terminateType,
responderID,
nativeEvent);

terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminateEvent);
extracted = accumulate(extracted,[grantEvent,terminateEvent]);
changeResponder(wantsResponderID,blockNativeResponder);}else 
{
var rejectEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderReject,
wantsResponderID,
nativeEvent);

rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(rejectEvent);
extracted = accumulate(extracted,rejectEvent);}}else 

{
extracted = accumulate(extracted,grantEvent);
changeResponder(wantsResponderID,blockNativeResponder);}

return extracted;}










function canTriggerTransfer(topLevelType,topLevelTargetID){
return topLevelTargetID && (
topLevelType === EventConstants.topLevelTypes.topScroll || 
trackedTouchCount > 0 && 
topLevelType === EventConstants.topLevelTypes.topSelectionChange || 
isStartish(topLevelType) || 
isMoveish(topLevelType));}










function noResponderTouches(nativeEvent){
var touches=nativeEvent.touches;
if(!touches || touches.length === 0){
return true;}

for(var i=0;i < touches.length;i++) {
var activeTouch=touches[i];
var target=activeTouch.target;
if(target !== null && target !== undefined && target !== 0){

var commonAncestor=
ReactInstanceHandles._getFirstCommonAncestorID(
responderID,
NodeHandle.getRootNodeID(target));

if(commonAncestor === responderID){
return false;}}}



return true;}



var ResponderEventPlugin={

getResponderID:function(){
return responderID;},


eventTypes:eventTypes,













extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent){

if(isStartish(topLevelType)){
trackedTouchCount += 1;}else 
if(isEndish(topLevelType)){
trackedTouchCount -= 1;
invariant(
trackedTouchCount >= 0,
'Ended a touch event which was not counted in trackedTouchCount.');}



ResponderTouchHistoryStore.recordTouchTrack(topLevelType,nativeEvent);

var extracted=canTriggerTransfer(topLevelType,topLevelTargetID)?
setResponderAndExtractTransfer(topLevelType,topLevelTargetID,nativeEvent):
null;










var isResponderTouchStart=responderID && isStartish(topLevelType);
var isResponderTouchMove=responderID && isMoveish(topLevelType);
var isResponderTouchEnd=responderID && isEndish(topLevelType);
var incrementalTouch=
isResponderTouchStart?eventTypes.responderStart:
isResponderTouchMove?eventTypes.responderMove:
isResponderTouchEnd?eventTypes.responderEnd:
null;

if(incrementalTouch){
var gesture=
ResponderSyntheticEvent.getPooled(incrementalTouch,responderID,nativeEvent);
gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(gesture);
extracted = accumulate(extracted,gesture);}


var isResponderTerminate=
responderID && 
topLevelType === EventConstants.topLevelTypes.topTouchCancel;
var isResponderRelease=
responderID && 
!isResponderTerminate && 
isEndish(topLevelType) && 
noResponderTouches(nativeEvent);
var finalTouch=
isResponderTerminate?eventTypes.responderTerminate:
isResponderRelease?eventTypes.responderRelease:
null;
if(finalTouch){
var finalEvent=
ResponderSyntheticEvent.getPooled(finalTouch,responderID,nativeEvent);
finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(finalEvent);
extracted = accumulate(extracted,finalEvent);
changeResponder(null);}


var numberActiveTouches=
ResponderTouchHistoryStore.touchHistory.numberActiveTouches;
if(ResponderEventPlugin.GlobalInteractionHandler && 
numberActiveTouches !== previousActiveTouches){
ResponderEventPlugin.GlobalInteractionHandler.onChange(
numberActiveTouches);}


previousActiveTouches = numberActiveTouches;

return extracted;},


GlobalResponderHandler:null,
GlobalInteractionHandler:null,

injection:{





injectGlobalResponderHandler:function(GlobalResponderHandler){
ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;},






injectGlobalInteractionHandler:function(GlobalInteractionHandler){
ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;}}};




module.exports = ResponderEventPlugin;
});
__d('ResponderSyntheticEvent',["SyntheticEvent"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";




















var SyntheticEvent=require('SyntheticEvent');






var ResponderEventInterface={
touchHistory:function(nativeEvent){
return null;}};









function ResponderSyntheticEvent(dispatchConfig,dispatchMarker,nativeEvent){
SyntheticEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent);}


SyntheticEvent.augmentClass(ResponderSyntheticEvent,ResponderEventInterface);

module.exports = ResponderSyntheticEvent;
});
__d('ResponderTouchHistoryStore',["EventPluginUtils","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var EventPluginUtils=require('EventPluginUtils');

var invariant=require('invariant');

var isMoveish=EventPluginUtils.isMoveish;
var isStartish=EventPluginUtils.isStartish;
var isEndish=EventPluginUtils.isEndish;

var MAX_TOUCH_BANK=20;
















var touchHistory={
touchBank:[],
numberActiveTouches:0,



indexOfSingleActiveTouch:-1,
mostRecentTimeStamp:0};


var timestampForTouch=function(touch){



return touch.timeStamp || touch.timestamp;};







var initializeTouchData=function(touch){
return {
touchActive:true,
startTimeStamp:timestampForTouch(touch),
startPageX:touch.pageX,
startPageY:touch.pageY,
currentPageX:touch.pageX,
currentPageY:touch.pageY,
currentTimeStamp:timestampForTouch(touch),
previousPageX:touch.pageX,
previousPageY:touch.pageY,
previousTimeStamp:timestampForTouch(touch)};};



var reinitializeTouchTrack=function(touchTrack,touch){
touchTrack.touchActive = true;
touchTrack.startTimeStamp = timestampForTouch(touch);
touchTrack.startPageX = touch.pageX;
touchTrack.startPageY = touch.pageY;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchTrack.previousPageX = touch.pageX;
touchTrack.previousPageY = touch.pageY;
touchTrack.previousTimeStamp = timestampForTouch(touch);};


var validateTouch=function(touch){
var identifier=touch.identifier;
invariant(identifier != null,'Touch object is missing identifier');
if(identifier > MAX_TOUCH_BANK){
console.warn(
'Touch identifier ' + identifier + ' is greater than maximum ' + 
'supported ' + MAX_TOUCH_BANK + ' which causes performance issues ' + 
'backfilling array locations for all of the indices.');}};




var recordStartTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var identifier=touch.identifier;
var touchTrack=touchBank[identifier];
if(__DEV__){
validateTouch(touch);}

if(!touchTrack){
touchBank[touch.identifier] = initializeTouchData(touch);}else 
{
reinitializeTouchTrack(touchTrack,touch);}

touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var recordMoveTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack,'Touch data should have been recorded on start');}

touchTrack.touchActive = true;
touchTrack.previousPageX = touchTrack.currentPageX;
touchTrack.previousPageY = touchTrack.currentPageY;
touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var recordEndTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack,'Touch data should have been recorded on start');}

touchTrack.previousPageX = touchTrack.currentPageX;
touchTrack.previousPageY = touchTrack.currentPageY;
touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchTrack.touchActive = false;
touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var ResponderTouchHistoryStore={
recordTouchTrack:function(topLevelType,nativeEvent){
var touchBank=touchHistory.touchBank;
if(isMoveish(topLevelType)){
nativeEvent.changedTouches.forEach(recordMoveTouchData);}else 
if(isStartish(topLevelType)){
nativeEvent.changedTouches.forEach(recordStartTouchData);
touchHistory.numberActiveTouches = nativeEvent.touches.length;
if(touchHistory.numberActiveTouches === 1){
touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;}}else 

if(isEndish(topLevelType)){
nativeEvent.changedTouches.forEach(recordEndTouchData);
touchHistory.numberActiveTouches = nativeEvent.touches.length;
if(touchHistory.numberActiveTouches === 1){
for(var i=0;i < touchBank.length;i++) {
var touchTrackToCheck=touchBank[i];
if(touchTrackToCheck != null && touchTrackToCheck.touchActive){
touchHistory.indexOfSingleActiveTouch = i;
break;}}


if(__DEV__){
var activeTouchData=touchBank[touchHistory.indexOfSingleActiveTouch];
var foundActive=activeTouchData != null && !!activeTouchData.touchActive;
invariant(foundActive,'Cannot find single active touch');}}}},





touchHistory:touchHistory};



module.exports = ResponderTouchHistoryStore;
});
__d('accumulate',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');








function accumulate(current,next){
invariant(
next != null,
'accumulate(...): Accumulated items must be not be null or undefined.');

if(current == null){
return next;}else 
{


var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);
if(currentIsArray){
return current.concat(next);}else 
{
if(nextIsArray){
return [current].concat(next);}else 
{
return [current,next];}}}}





module.exports = accumulate;
});
__d('UniversalWorkerNodeHandle',["ReactNativeTagHandles","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 



ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');

var UniversalWorkerNodeHandle={
getRootNodeID:function(nodeHandle){
invariant(
nodeHandle !== undefined && nodeHandle !== null && nodeHandle !== 0,
'No node handle defined');

return ReactNativeTagHandles.tagToRootNodeID[nodeHandle];}};



module.exports = UniversalWorkerNodeHandle;
});
__d('createReactNativeComponentClass',["ReactNativeBaseComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactNativeBaseComponent=require('ReactNativeBaseComponent');











var createReactNativeComponentClass=function(
viewConfig)
{
var Constructor=function(element){
this._currentElement = element;

this._rootNodeID = null;
this._renderedChildren = null;
this.previousFlattenedStyle = null;};

Constructor.displayName = viewConfig.uiViewClassName;
Constructor.viewConfig = viewConfig;
Constructor.prototype = new ReactNativeBaseComponent(viewConfig);
Constructor.prototype.constructor = Constructor;

return Constructor;};


module.exports = createReactNativeComponentClass;
});
__d('ReactNativeBaseComponent',["NativeMethodsMixin","ReactNativeEventEmitter","ReactNativeStyleAttributes","ReactNativeTagHandles","ReactMultiChild","NativeModules","styleDiffer","deepFreezeAndThrowOnMutationInDev","diffRawProperties","flattenStyle","precomputeStyle","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var ReactNativeEventEmitter=require('ReactNativeEventEmitter');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChild=require('ReactMultiChild');
var RCTUIManager=require('NativeModules').UIManager;

var styleDiffer=require('styleDiffer');
var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');
var diffRawProperties=require('diffRawProperties');
var flattenStyle=require('flattenStyle');
var precomputeStyle=require('precomputeStyle');
var warning=require('warning');

var registrationNames=ReactNativeEventEmitter.registrationNames;
var putListener=ReactNativeEventEmitter.putListener;
var deleteAllListeners=ReactNativeEventEmitter.deleteAllListeners;












var ReactNativeBaseComponent=function(
viewConfig)
{
this.viewConfig = viewConfig;};












var cachedIndexArray=function(size){
var cachedResult=cachedIndexArray._cache[size];
if(!cachedResult){
var arr=[];
for(var i=0;i < size;i++) {
arr[i] = i;}

cachedIndexArray._cache[size] = arr;
return arr;}else 
{
return cachedResult;}};


cachedIndexArray._cache = {};





ReactNativeBaseComponent.Mixin = {
getPublicInstance:function(){

return this;},


construct:function(element){
this._currentElement = element;},


unmountComponent:function(){
deleteAllListeners(this._rootNodeID);
this.unmountChildren();
this._rootNodeID = null;},










initializeChildren:function(children,containerTag,transaction,context){
var mountImages=this.mountChildren(children,transaction,context);



if(mountImages.length){
var indexes=cachedIndexArray(mountImages.length);


var createdTags=[];
for(var i=0;i < mountImages.length;i++) {
var mountImage=mountImages[i];
var childTag=mountImage.tag;
var childID=mountImage.rootNodeID;
warning(
mountImage && mountImage.rootNodeID && mountImage.tag,
'Mount image returned does not have required data');

ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
childID,
childTag);

createdTags[i] = mountImage.tag;}

RCTUIManager.
manageChildren(containerTag,null,null,createdTags,indexes,null);}},












computeUpdatedProperties:function(prevProps,nextProps,validAttributes){
if(__DEV__){
for(var key in nextProps) {
if(nextProps.hasOwnProperty(key) && 
nextProps[key] && 
validAttributes[key]){
deepFreezeAndThrowOnMutationInDev(nextProps[key]);}}}




var updatePayload=diffRawProperties(
null,
prevProps,
nextProps,
validAttributes);







if(styleDiffer(nextProps.style,prevProps.style)){
var nextFlattenedStyle=precomputeStyle(flattenStyle(nextProps.style));
updatePayload = diffRawProperties(
updatePayload,
this.previousFlattenedStyle,
nextFlattenedStyle,
ReactNativeStyleAttributes);

this.previousFlattenedStyle = nextFlattenedStyle;}


return updatePayload;},











receiveComponent:function(nextElement,transaction,context){
var prevElement=this._currentElement;
this._currentElement = nextElement;

var updatePayload=this.computeUpdatedProperties(
prevElement.props,
nextElement.props,
this.viewConfig.validAttributes);


if(updatePayload){
RCTUIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(this._rootNodeID),
this.viewConfig.uiViewClassName,
updatePayload);}



this._reconcileListenersUponUpdate(
prevElement.props,
nextElement.props);

this.updateChildren(nextElement.props.children,transaction,context);},





_registerListenersUponCreation:function(initialProps){
for(var key in initialProps) {


if(registrationNames[key] && initialProps[key]){
var listener=initialProps[key];
putListener(this._rootNodeID,key,listener);}}},









_reconcileListenersUponUpdate:function(prevProps,nextProps){
for(var key in nextProps) {
if(registrationNames[key] && nextProps[key] !== prevProps[key]){
putListener(this._rootNodeID,key,nextProps[key]);}}},









mountComponent:function(rootID,transaction,context){
this._rootNodeID = rootID;

var tag=ReactNativeTagHandles.allocateTag();

this.previousFlattenedStyle = {};
var updatePayload=this.computeUpdatedProperties(
{},
this._currentElement.props,
this.viewConfig.validAttributes);


var nativeTopRootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootID);
RCTUIManager.createView(
tag,
this.viewConfig.uiViewClassName,
nativeTopRootID?ReactNativeTagHandles.rootNodeIDToTag[nativeTopRootID]:null,
updatePayload);


this._registerListenersUponCreation(this._currentElement.props);
this.initializeChildren(
this._currentElement.props.children,
tag,
transaction,
context);

return {
rootNodeID:rootID,
tag:tag};}};








Object.assign(
ReactNativeBaseComponent.prototype,
ReactMultiChild.Mixin,
ReactNativeBaseComponent.Mixin,
NativeMethodsMixin);


module.exports = ReactNativeBaseComponent;
});
__d('NativeMethodsMixin',["NativeModules","TextInputState","findNodeHandle","flattenStyle","invariant","mergeFast","precomputeStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTPOPAnimationManager=NativeModules.POPAnimationManager;
var RCTUIManager=NativeModules.UIManager;
var TextInputState=require('TextInputState');

var findNodeHandle=require('findNodeHandle');
var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var mergeFast=require('mergeFast');
var precomputeStyle=require('precomputeStyle');

















var animationIDInvariant=function(
funcName,
anim)
{
invariant(
anim,
funcName + ' must be called with a valid animation ID returned from' + 
' POPAnimation.createAnimation, received: "' + anim + '"');};



var NativeMethodsMixin={
addAnimation:function(anim,callback){
animationIDInvariant('addAnimation',anim);
RCTPOPAnimationManager.addAnimation(
findNodeHandle(this),
anim,
mountSafeCallback(this,callback));},



removeAnimation:function(anim){
animationIDInvariant('removeAnimation',anim);
RCTPOPAnimationManager.removeAnimation(findNodeHandle(this),anim);},


measure:function(callback){
RCTUIManager.measure(
findNodeHandle(this),
mountSafeCallback(this,callback));},



measureLayout:function(
relativeToNativeNode,
onSuccess,
onFail)
{
RCTUIManager.measureLayout(
findNodeHandle(this),
relativeToNativeNode,
mountSafeCallback(this,onFail),
mountSafeCallback(this,onSuccess));},








setNativeProps:function(nativeProps){





var hasOnlyStyle=true;
for(var key in nativeProps) {
if(key !== 'style'){
hasOnlyStyle = false;
break;}}


var style=precomputeStyle(flattenStyle(nativeProps.style));

var props=null;
if(hasOnlyStyle){
props = style;}else 
if(!style){
props = nativeProps;}else 
{
props = mergeFast(nativeProps,style);}


RCTUIManager.updateView(
findNodeHandle(this),
this.viewConfig.uiViewClassName,
props);},



focus:function(){
TextInputState.focusTextInput(findNodeHandle(this));},


blur:function(){
TextInputState.blurTextInput(findNodeHandle(this));}};



function throwOnStylesProp(component,props){
if(props.styles !== undefined){
var owner=component._owner || null;
var name=component.constructor.displayName;
var msg='`styles` is not a supported property of `' + name + '`, did ' + 
'you mean `style` (singular)?';
if(owner && owner.constructor && owner.constructor.displayName){
msg += '\n\nCheck the `' + owner.constructor.displayName + '` parent ' + 
' component.';}

throw new Error(msg);}}


if(__DEV__){



var NativeMethodsMixin_DEV=NativeMethodsMixin;
invariant(
!NativeMethodsMixin_DEV.componentWillMount && 
!NativeMethodsMixin_DEV.componentWillReceiveProps,
'Do not override existing functions.');

NativeMethodsMixin_DEV.componentWillMount = function(){
throwOnStylesProp(this,this.props);};

NativeMethodsMixin_DEV.componentWillReceiveProps = function(newProps){
throwOnStylesProp(this,newProps);};}







var mountSafeCallback=function(context,callback){
return function(){
if(!callback || context.isMounted && !context.isMounted()){
return;}

return callback.apply(context,arguments);};};



module.exports = NativeMethodsMixin;
});
__d('TextInputState',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
















var RCTUIManager=require('NativeModules').UIManager;

var TextInputState={



_currentlyFocusedID:null,





currentlyFocusedField:function(){
return this._currentlyFocusedID;},







focusTextInput:function(textFieldID){
if(this._currentlyFocusedID !== textFieldID && textFieldID !== null){
this._currentlyFocusedID = textFieldID;
RCTUIManager.focus(textFieldID);}},








blurTextInput:function(textFieldID){
if(this._currentlyFocusedID === textFieldID && textFieldID !== null){
this._currentlyFocusedID = null;
RCTUIManager.blur(textFieldID);}}};




module.exports = TextInputState;
});
__d('findNodeHandle',["ReactCurrentOwner","ReactInstanceMap","ReactNativeTagHandles","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');
var warning=require('warning');































function findNodeHandle(componentOrHandle){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing findNodeHandle inside its render(). ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.',
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


if(componentOrHandle == null){
return null;}

if(typeof componentOrHandle === 'number'){

return componentOrHandle;}


var component=componentOrHandle;



var internalInstance=ReactInstanceMap.get(component);
if(internalInstance){
return ReactNativeTagHandles.rootNodeIDToTag[internalInstance._rootNodeID];}else 
{
var rootNodeID=component._rootNodeID;
if(rootNodeID){
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];}else 
{
invariant(


typeof component === 'object' && 
'_rootNodeID' in component || 


component.render != null && 
typeof component.render === 'function',

'findNodeHandle(...): Argument is not a component ' + 
'(type: %s, keys: %s)',
typeof component,
Object.keys(component));

invariant(
false,
'findNodeHandle(...): Unable to find node handle for unmounted ' + 
'component.');}}}





module.exports = findNodeHandle;
});
__d('flattenStyle',["StyleSheetRegistry","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var StyleSheetRegistry=require('StyleSheetRegistry');
var invariant=require('invariant');




function getStyle(style){
if(typeof style === 'number'){
return StyleSheetRegistry.getStyleByID(style);}

return style;}


function flattenStyle(style){
if(!style){
return undefined;}

invariant(style !== true,'style may be false but not true');

if(!Array.isArray(style)){
return getStyle(style);}


var result={};
for(var i=0;i < style.length;++i) {
var computedStyle=flattenStyle(style[i]);
if(computedStyle){
for(var key in computedStyle) {
result[key] = computedStyle[key];

if(__DEV__){
var value=computedStyle[key];}}}}




return result;}


module.exports = flattenStyle;
});
__d('StyleSheetRegistry',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var styles={};
var uniqueID=1;
var emptyStyle={};var 

StyleSheetRegistry=(function(){function StyleSheetRegistry(){_classCallCheck(this,StyleSheetRegistry);}_createClass(StyleSheetRegistry,null,[{key:'registerStyle',value:
function registerStyle(style){
var id=++uniqueID;
if(__DEV__){
Object.freeze(style);}

styles[id] = style;
return id;}},{key:'getStyleByID',value:


function getStyleByID(id){
if(!id){


return emptyStyle;}


var style=styles[id];
if(!style){
console.warn('Invalid style with id `' + id + '`. Skipping ...');
return emptyStyle;}

return style;}}]);return StyleSheetRegistry;})();



module.exports = StyleSheetRegistry;
});
__d('mergeFast',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





















var mergeFast=function(one,two){
var ret={};
for(var keyOne in one) {
ret[keyOne] = one[keyOne];}

for(var keyTwo in two) {
ret[keyTwo] = two[keyTwo];}

return ret;};


module.exports = mergeFast;
});
__d('precomputeStyle',["MatrixMath","Platform","deepFreezeAndThrowOnMutationInDev","invariant","stringifySafe"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var MatrixMath=require('MatrixMath');
var Platform=require('Platform');

var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');
var invariant=require('invariant');
var stringifySafe=require('stringifySafe');





function precomputeStyle(style){
if(!style || !style.transform){
return style;}

invariant(
!style.transformMatrix,
'transformMatrix and transform styles cannot be used on the same component');

var newStyle=_precomputeTransforms(_extends({},style));
deepFreezeAndThrowOnMutationInDev(newStyle);
return newStyle;}










function _precomputeTransforms(style){var 
transform=style.transform;
var result=MatrixMath.createIdentityMatrix();

transform.forEach(function(transformation){
var key=Object.keys(transformation)[0];
var value=transformation[key];
if(__DEV__){
_validateTransform(key,value,transformation);}


switch(key){
case 'matrix':
MatrixMath.multiplyInto(result,result,value);
break;
case 'rotate':
_multiplyTransform(result,MatrixMath.reuseRotateZCommand,[_convertToRadians(value)]);
break;
case 'scale':
_multiplyTransform(result,MatrixMath.reuseScaleCommand,[value]);
break;
case 'scaleX':
_multiplyTransform(result,MatrixMath.reuseScaleXCommand,[value]);
break;
case 'scaleY':
_multiplyTransform(result,MatrixMath.reuseScaleYCommand,[value]);
break;
case 'translate':
_multiplyTransform(result,MatrixMath.reuseTranslate3dCommand,[value[0],value[1],value[2] || 0]);
break;
case 'translateX':
_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[value,0]);
break;
case 'translateY':
_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[0,value]);
break;
default:
throw new Error('Invalid transform name: ' + key);}});







if(Platform.OS === 'android'){
return _extends({},
style,{
transformMatrix:result,
decomposedMatrix:MatrixMath.decomposeMatrix(result)});}


return _extends({},
style,{
transformMatrix:result});}






function _multiplyTransform(
result,
matrixMathFunction,
args)
{
var matrixToApply=MatrixMath.createIdentityMatrix();
var argsWithIdentity=[matrixToApply].concat(args);
matrixMathFunction.apply(this,argsWithIdentity);
MatrixMath.multiplyInto(result,result,matrixToApply);}






function _convertToRadians(value){
var floatValue=parseFloat(value,10);
return value.indexOf('rad') > -1?floatValue:floatValue * Math.PI / 180;}


function _validateTransform(key,value,transformation){
invariant(
!value.getValue,
'You passed an Animated.Value to a normal component. ' + 
'You need to wrap that component in an Animated. For example, ' + 
'replace <View /> by <Animated.View />.');


var multivalueTransforms=[
'matrix',
'translate'];

if(multivalueTransforms.indexOf(key) !== -1){
invariant(
Array.isArray(value),
'Transform with key of %s must have an array as the value: %s',
key,
stringifySafe(transformation));}


switch(key){
case 'matrix':
invariant(
value.length === 9 || value.length === 16,
'Matrix transform must have a length of 9 (2d) or 16 (3d). ' + 
'Provided matrix has a length of %s: %s',
value.length,
stringifySafe(transformation));

break;
case 'translate':
break;
case 'rotate':
invariant(
typeof value === 'string',
'Transform with key of "%s" must be a string: %s',
key,
stringifySafe(transformation));

invariant(
value.indexOf('deg') > -1 || value.indexOf('rad') > -1,
'Rotate transform must be expressed in degrees (deg) or radians ' + 
'(rad): %s',
stringifySafe(transformation));

break;
default:
invariant(
typeof value === 'number',
'Transform with key of "%s" must be a number: %s',
key,
stringifySafe(transformation));}}




module.exports = precomputeStyle;
});
__d('MatrixMath',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';







var invariant=require('invariant');





var MatrixMath={
createIdentityMatrix:function(){
return [
1,0,0,0,
0,1,0,0,
0,0,1,0,
0,0,0,1];},



createCopy:function(m){
return [
m[0],m[1],m[2],m[3],
m[4],m[5],m[6],m[7],
m[8],m[9],m[10],m[11],
m[12],m[13],m[14],m[15]];},



createTranslate2d:function(x,y){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseTranslate2dCommand(mat,x,y);
return mat;},


reuseTranslate2dCommand:function(matrixCommand,x,y){
matrixCommand[12] = x;
matrixCommand[13] = y;},


reuseTranslate3dCommand:function(matrixCommand,x,y,z){
matrixCommand[12] = x;
matrixCommand[13] = y;
matrixCommand[14] = z;},


createScale:function(factor){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseScaleCommand(mat,factor);
return mat;},


reuseScaleCommand:function(matrixCommand,factor){
matrixCommand[0] = factor;
matrixCommand[5] = factor;},


reuseScale3dCommand:function(matrixCommand,x,y,z){
matrixCommand[0] = x;
matrixCommand[5] = y;
matrixCommand[10] = z;},


reuseScaleXCommand:function(matrixCommand,factor){
matrixCommand[0] = factor;},


reuseScaleYCommand:function(matrixCommand,factor){
matrixCommand[5] = factor;},


reuseScaleZCommand:function(matrixCommand,factor){
matrixCommand[10] = factor;},


reuseRotateXCommand:function(matrixCommand,radians){
matrixCommand[5] = Math.cos(radians);
matrixCommand[6] = Math.sin(radians);
matrixCommand[9] = -Math.sin(radians);
matrixCommand[10] = Math.cos(radians);},


reuseRotateYCommand:function(matrixCommand,amount){
matrixCommand[0] = Math.cos(amount);
matrixCommand[2] = -Math.sin(amount);
matrixCommand[8] = Math.sin(amount);
matrixCommand[10] = Math.cos(amount);},



reuseRotateZCommand:function(matrixCommand,radians){
matrixCommand[0] = Math.cos(radians);
matrixCommand[1] = Math.sin(radians);
matrixCommand[4] = -Math.sin(radians);
matrixCommand[5] = Math.cos(radians);},


createRotateZ:function(radians){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseRotateZCommand(mat,radians);
return mat;},


multiplyInto:function(out,a,b){
var a00=a[0],a01=a[1],a02=a[2],a03=a[3],
a10=a[4],a11=a[5],a12=a[6],a13=a[7],
a20=a[8],a21=a[9],a22=a[10],a23=a[11],
a30=a[12],a31=a[13],a32=a[14],a33=a[15];

var b0=b[0],b1=b[1],b2=b[2],b3=b[3];
out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];
out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];
out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];
out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;},


determinant:function(matrix){var 

m00=



matrix[0];var m01=matrix[1];var m02=matrix[2];var m03=matrix[3];var m10=matrix[4];var m11=matrix[5];var m12=matrix[6];var m13=matrix[7];var m20=matrix[8];var m21=matrix[9];var m22=matrix[10];var m23=matrix[11];var m30=matrix[12];var m31=matrix[13];var m32=matrix[14];var m33=matrix[15];
return (
m03 * m12 * m21 * m30 - m02 * m13 * m21 * m30 - 
m03 * m11 * m22 * m30 + m01 * m13 * m22 * m30 + 
m02 * m11 * m23 * m30 - m01 * m12 * m23 * m30 - 
m03 * m12 * m20 * m31 + m02 * m13 * m20 * m31 + 
m03 * m10 * m22 * m31 - m00 * m13 * m22 * m31 - 
m02 * m10 * m23 * m31 + m00 * m12 * m23 * m31 + 
m03 * m11 * m20 * m32 - m01 * m13 * m20 * m32 - 
m03 * m10 * m21 * m32 + m00 * m13 * m21 * m32 + 
m01 * m10 * m23 * m32 - m00 * m11 * m23 * m32 - 
m02 * m11 * m20 * m33 + m01 * m12 * m20 * m33 + 
m02 * m10 * m21 * m33 - m00 * m12 * m21 * m33 - 
m01 * m10 * m22 * m33 + m00 * m11 * m22 * m33);},










inverse:function(matrix){
var det=MatrixMath.determinant(matrix);
if(!det){
return matrix;}var 


m00=



matrix[0];var m01=matrix[1];var m02=matrix[2];var m03=matrix[3];var m10=matrix[4];var m11=matrix[5];var m12=matrix[6];var m13=matrix[7];var m20=matrix[8];var m21=matrix[9];var m22=matrix[10];var m23=matrix[11];var m30=matrix[12];var m31=matrix[13];var m32=matrix[14];var m33=matrix[15];
return [
(m12 * m23 * m31 - m13 * m22 * m31 + m13 * m21 * m32 - m11 * m23 * m32 - m12 * m21 * m33 + m11 * m22 * m33) / det,
(m03 * m22 * m31 - m02 * m23 * m31 - m03 * m21 * m32 + m01 * m23 * m32 + m02 * m21 * m33 - m01 * m22 * m33) / det,
(m02 * m13 * m31 - m03 * m12 * m31 + m03 * m11 * m32 - m01 * m13 * m32 - m02 * m11 * m33 + m01 * m12 * m33) / det,
(m03 * m12 * m21 - m02 * m13 * m21 - m03 * m11 * m22 + m01 * m13 * m22 + m02 * m11 * m23 - m01 * m12 * m23) / det,
(m13 * m22 * m30 - m12 * m23 * m30 - m13 * m20 * m32 + m10 * m23 * m32 + m12 * m20 * m33 - m10 * m22 * m33) / det,
(m02 * m23 * m30 - m03 * m22 * m30 + m03 * m20 * m32 - m00 * m23 * m32 - m02 * m20 * m33 + m00 * m22 * m33) / det,
(m03 * m12 * m30 - m02 * m13 * m30 - m03 * m10 * m32 + m00 * m13 * m32 + m02 * m10 * m33 - m00 * m12 * m33) / det,
(m02 * m13 * m20 - m03 * m12 * m20 + m03 * m10 * m22 - m00 * m13 * m22 - m02 * m10 * m23 + m00 * m12 * m23) / det,
(m11 * m23 * m30 - m13 * m21 * m30 + m13 * m20 * m31 - m10 * m23 * m31 - m11 * m20 * m33 + m10 * m21 * m33) / det,
(m03 * m21 * m30 - m01 * m23 * m30 - m03 * m20 * m31 + m00 * m23 * m31 + m01 * m20 * m33 - m00 * m21 * m33) / det,
(m01 * m13 * m30 - m03 * m11 * m30 + m03 * m10 * m31 - m00 * m13 * m31 - m01 * m10 * m33 + m00 * m11 * m33) / det,
(m03 * m11 * m20 - m01 * m13 * m20 - m03 * m10 * m21 + m00 * m13 * m21 + m01 * m10 * m23 - m00 * m11 * m23) / det,
(m12 * m21 * m30 - m11 * m22 * m30 - m12 * m20 * m31 + m10 * m22 * m31 + m11 * m20 * m32 - m10 * m21 * m32) / det,
(m01 * m22 * m30 - m02 * m21 * m30 + m02 * m20 * m31 - m00 * m22 * m31 - m01 * m20 * m32 + m00 * m21 * m32) / det,
(m02 * m11 * m30 - m01 * m12 * m30 - m02 * m10 * m31 + m00 * m12 * m31 + m01 * m10 * m32 - m00 * m11 * m32) / det,
(m01 * m12 * m20 - m02 * m11 * m20 + m02 * m10 * m21 - m00 * m12 * m21 - m01 * m10 * m22 + m00 * m11 * m22) / det];},






transpose:function(m){
return [
m[0],m[4],m[8],m[12],
m[1],m[5],m[9],m[13],
m[2],m[6],m[10],m[14],
m[3],m[7],m[11],m[15]];},






multiplyVectorByMatrix:function(
v,
m)
{var 
vx=v[0];var vy=v[1];var vz=v[2];var vw=v[3];
return [
vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12],
vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13],
vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14],
vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15]];},






v3Length:function(a){
return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);},





v3Normalize:function(
vector,
v3Length)
{
var im=1 / (v3Length || MatrixMath.v3Length(vector));
return [
vector[0] * im,
vector[1] * im,
vector[2] * im];},







v3Dot:function(a,b){
return a[0] * b[0] + 
a[1] * b[1] + 
a[2] * b[2];},






v3Combine:function(
a,
b,
aScale,
bScale)
{
return [
aScale * a[0] + bScale * b[0],
aScale * a[1] + bScale * b[1],
aScale * a[2] + bScale * b[2]];},







v3Cross:function(a,b){
return [
a[1] * b[2] - a[2] * b[1],
a[2] * b[0] - a[0] * b[2],
a[0] * b[1] - a[1] * b[0]];},



















quaternionToDegreesXYZ:function(q,matrix,row){var 
qx=q[0];var qy=q[1];var qz=q[2];var qw=q[3];
var qw2=qw * qw;
var qx2=qx * qx;
var qy2=qy * qy;
var qz2=qz * qz;
var test=qx * qy + qz * qw;
var unit=qw2 + qx2 + qy2 + qz2;
var conv=180 / Math.PI;

if(test > 0.49999 * unit){
return [0,2 * Math.atan2(qx,qw) * conv,90];}

if(test < -0.49999 * unit){
return [0,-2 * Math.atan2(qx,qw) * conv,-90];}


return [
MatrixMath.roundTo3Places(
Math.atan2(2 * qx * qw - 2 * qy * qz,1 - 2 * qx2 - 2 * qz2) * conv),

MatrixMath.roundTo3Places(
Math.atan2(2 * qy * qw - 2 * qx * qz,1 - 2 * qy2 - 2 * qz2) * conv),

MatrixMath.roundTo3Places(
Math.asin(2 * qx * qy + 2 * qz * qw) * conv)];},








roundTo3Places:function(n){
var arr=n.toString().split('e');
return Math.round(arr[0] + 'e' + (arr[1]?+arr[1] - 3:3)) * 0.001;},













decomposeMatrix:function(transformMatrix){

invariant(
transformMatrix.length === 16,
'Matrix decomposition needs a list of 3d matrix values, received %s',
transformMatrix);



var perspective=[];
var quaternion=[];
var scale=[];
var skew=[];
var translation=[];



if(!transformMatrix[15]){
return;}

var matrix=[];
var perspectiveMatrix=[];
for(var i=0;i < 4;i++) {
matrix.push([]);
for(var j=0;j < 4;j++) {
var value=transformMatrix[i * 4 + j] / transformMatrix[15];
matrix[i].push(value);
perspectiveMatrix.push(j === 3?0:value);}}


perspectiveMatrix[15] = 1;


if(!MatrixMath.determinant(perspectiveMatrix)){
return;}



if(matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0){


var rightHandSide=[
matrix[0][3],
matrix[1][3],
matrix[2][3],
matrix[3][3]];




var inversePerspectiveMatrix=MatrixMath.inverse3x3(
perspectiveMatrix);

var transposedInversePerspectiveMatrix=MatrixMath.transpose4x4(
inversePerspectiveMatrix);

var perspective=MatrixMath.multiplyVectorByMatrix(
rightHandSide,
transposedInversePerspectiveMatrix);}else 

{

perspective[0] = perspective[1] = perspective[2] = 0;
perspective[3] = 1;}



for(var i=0;i < 3;i++) {
translation[i] = matrix[3][i];}




var row=[];
for(i = 0;i < 3;i++) {
row[i] = [
matrix[i][0],
matrix[i][1],
matrix[i][2]];}




scale[0] = MatrixMath.v3Length(row[0]);
row[0] = MatrixMath.v3Normalize(row[0],scale[0]);


skew[0] = MatrixMath.v3Dot(row[0],row[1]);
row[1] = MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);


skew[0] = MatrixMath.v3Dot(row[0],row[1]);
row[1] = MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);


scale[1] = MatrixMath.v3Length(row[1]);
row[1] = MatrixMath.v3Normalize(row[1],scale[1]);
skew[0] /= scale[1];


skew[1] = MatrixMath.v3Dot(row[0],row[2]);
row[2] = MatrixMath.v3Combine(row[2],row[0],1.0,-skew[1]);
skew[2] = MatrixMath.v3Dot(row[1],row[2]);
row[2] = MatrixMath.v3Combine(row[2],row[1],1.0,-skew[2]);


scale[2] = MatrixMath.v3Length(row[2]);
row[2] = MatrixMath.v3Normalize(row[2],scale[2]);
skew[1] /= scale[2];
skew[2] /= scale[2];




var pdum3=MatrixMath.v3Cross(row[1],row[2]);
if(MatrixMath.v3Dot(row[0],pdum3) < 0){
for(i = 0;i < 3;i++) {
scale[i] *= -1;
row[i][0] *= -1;
row[i][1] *= -1;
row[i][2] *= -1;}}




quaternion[0] = 
0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2],0));
quaternion[1] = 
0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2],0));
quaternion[2] = 
0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2],0));
quaternion[3] = 
0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2],0));

if(row[2][1] > row[1][2]){
quaternion[0] = -quaternion[0];}

if(row[0][2] > row[2][0]){
quaternion[1] = -quaternion[1];}

if(row[1][0] > row[0][1]){
quaternion[2] = -quaternion[2];}



var rotationDegrees;
if(
quaternion[0] < 0.001 && quaternion[0] >= 0 && 
quaternion[1] < 0.001 && quaternion[1] >= 0)
{

rotationDegrees = [0,0,MatrixMath.roundTo3Places(
Math.atan2(row[0][1],row[0][0]) * 180 / Math.PI)];}else 

{
rotationDegrees = MatrixMath.quaternionToDegreesXYZ(quaternion,matrix,row);}



return {
rotationDegrees:rotationDegrees,
perspective:perspective,
quaternion:quaternion,
scale:scale,
skew:skew,
translation:translation,

rotate:rotationDegrees[2],
scaleX:scale[0],
scaleY:scale[1],
translateX:translation[0],
translateY:translation[1]};}};





module.exports = MatrixMath;
});
__d('deepFreezeAndThrowOnMutationInDev',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






























function deepFreezeAndThrowOnMutationInDev(object){
if(__DEV__){
if(typeof object !== 'object' || 
object === null || 
Object.isFrozen(object) || 
Object.isSealed(object)){
return;}


for(var key in object) {
if(object.hasOwnProperty(key)){
object.__defineGetter__(key,identity.bind(null,object[key]));
object.__defineSetter__(key,throwOnImmutableMutation.bind(null,key));
deepFreezeAndThrowOnMutationInDev(object[key]);}}


Object.freeze(object);
Object.seal(object);}}



function throwOnImmutableMutation(key,value){
throw Error(
'You attempted to set the key `' + key + '` with the value `' + 
JSON.stringify(value) + '` on an object that is meant to be immutable ' + 
'and has been frozen.');}



function identity(value){
return value;}


module.exports = deepFreezeAndThrowOnMutationInDev;
});
__d('ReactNativeEventEmitter',["EventPluginHub","ReactEventEmitterMixin","ReactNativeTagHandles","NodeHandle","EventConstants","merge","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var NodeHandle=require('NodeHandle');
var EventConstants=require('EventConstants');

var merge=require('merge');
var warning=require('warning');

var topLevelTypes=EventConstants.topLevelTypes;







var EMPTY_NATIVE_EVENT={};








var touchSubsequence=function(touches,indices){
var ret=[];
for(var i=0;i < indices.length;i++) {
ret.push(touches[indices[i]]);}

return ret;};













var removeTouchesAtIndices=function(
touches,
indices)
{
var rippedOut=[];


var temp=touches;
for(var i=0;i < indices.length;i++) {
var index=indices[i];
rippedOut.push(touches[index]);
temp[index] = null;}

var fillAt=0;
for(var j=0;j < temp.length;j++) {
var cur=temp[j];
if(cur !== null){
temp[fillAt++] = cur;}}


temp.length = fillAt;
return rippedOut;};











var ReactNativeEventEmitter=merge(ReactEventEmitterMixin,{

registrationNames:EventPluginHub.registrationNameModules,

putListener:EventPluginHub.putListener,

getListener:EventPluginHub.getListener,

deleteListener:EventPluginHub.deleteListener,

deleteAllListeners:EventPluginHub.deleteAllListeners,











_receiveRootNodeIDEvent:function(
rootNodeID,
topLevelType,
nativeEventParam)
{
var nativeEvent=nativeEventParam || EMPTY_NATIVE_EVENT;
ReactNativeEventEmitter.handleTopLevel(
topLevelType,
rootNodeID,
rootNodeID,
nativeEvent);},










receiveEvent:function(
tag,
topLevelType,
nativeEventParam)
{
var rootNodeID=ReactNativeTagHandles.tagToRootNodeID[tag];
ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID,
topLevelType,
nativeEventParam);},



























receiveTouches:function(
eventTopLevelType,
touches,
changedIndices)
{
var changedTouches=
eventTopLevelType === topLevelTypes.topTouchEnd || 
eventTopLevelType === topLevelTypes.topTouchCancel?
removeTouchesAtIndices(touches,changedIndices):
touchSubsequence(touches,changedIndices);

for(var jj=0;jj < changedTouches.length;jj++) {
var touch=changedTouches[jj];


touch.changedTouches = changedTouches;
touch.touches = touches;
var nativeEvent=touch;
var rootNodeID=null;
var target=nativeEvent.target;
if(target !== null && target !== undefined){
if(target < ReactNativeTagHandles.tagsStartAt){
if(__DEV__){
warning(
false,
'A view is reporting that a touch occured on tag zero.');}}else 


{
rootNodeID = NodeHandle.getRootNodeID(target);}}


ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID,
eventTopLevelType,
nativeEvent);}}});





module.exports = ReactNativeEventEmitter;
});
__d('ReactEventEmitterMixin',["EventPluginHub"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');

function runEventQueueInBatch(events){
EventPluginHub.enqueueEvents(events);
EventPluginHub.processEventQueue();}


var ReactEventEmitterMixin={










handleTopLevel:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent){
var events=EventPluginHub.extractEvents(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent);


runEventQueueInBatch(events);}};



module.exports = ReactEventEmitterMixin;
});
__d('ReactNativeStyleAttributes',["ImageStylePropTypes","TextStylePropTypes","ViewStylePropTypes","keyMirror","matricesDiffer","sizesDiffer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var ImageStylePropTypes=require('ImageStylePropTypes');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var keyMirror=require('keyMirror');
var matricesDiffer=require('matricesDiffer');
var sizesDiffer=require('sizesDiffer');

var ReactNativeStyleAttributes=_extends({},
keyMirror(ViewStylePropTypes),
keyMirror(TextStylePropTypes),
keyMirror(ImageStylePropTypes));


ReactNativeStyleAttributes.transformMatrix = {diff:matricesDiffer};
ReactNativeStyleAttributes.shadowOffset = {diff:sizesDiffer};


ReactNativeStyleAttributes.decomposedMatrix = 'decomposedMatrix';

module.exports = ReactNativeStyleAttributes;
});
__d('ImageStylePropTypes',["ImageResizeMode","LayoutPropTypes","ReactPropTypes","TransformPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var ImageResizeMode=require('ImageResizeMode');
var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');

var ImageStylePropTypes=_extends({},
LayoutPropTypes,
TransformPropTypes,{
resizeMode:ReactPropTypes.oneOf(Object.keys(ImageResizeMode)),
backgroundColor:ReactPropTypes.string,
borderColor:ReactPropTypes.string,
borderWidth:ReactPropTypes.number,
borderRadius:ReactPropTypes.number,



tintColor:ReactPropTypes.string,
opacity:ReactPropTypes.number});


module.exports = ImageStylePropTypes;
});
__d('ImageResizeMode',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');





var ImageResizeMode=keyMirror({




contain:null,




cover:null,





stretch:null});


module.exports = ImageResizeMode;
});
__d('LayoutPropTypes',["ReactPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');






var LayoutPropTypes={
width:ReactPropTypes.number,
height:ReactPropTypes.number,
top:ReactPropTypes.number,
left:ReactPropTypes.number,
right:ReactPropTypes.number,
bottom:ReactPropTypes.number,
margin:ReactPropTypes.number,
marginVertical:ReactPropTypes.number,
marginHorizontal:ReactPropTypes.number,
marginTop:ReactPropTypes.number,
marginBottom:ReactPropTypes.number,
marginLeft:ReactPropTypes.number,
marginRight:ReactPropTypes.number,
padding:ReactPropTypes.number,
paddingVertical:ReactPropTypes.number,
paddingHorizontal:ReactPropTypes.number,
paddingTop:ReactPropTypes.number,
paddingBottom:ReactPropTypes.number,
paddingLeft:ReactPropTypes.number,
paddingRight:ReactPropTypes.number,
borderWidth:ReactPropTypes.number,
borderTopWidth:ReactPropTypes.number,
borderRightWidth:ReactPropTypes.number,
borderBottomWidth:ReactPropTypes.number,
borderLeftWidth:ReactPropTypes.number,

position:ReactPropTypes.oneOf([
'absolute',
'relative']),



flexDirection:ReactPropTypes.oneOf([
'row',
'column']),



flexWrap:ReactPropTypes.oneOf([
'wrap',
'nowrap']),




justifyContent:ReactPropTypes.oneOf([
'flex-start',
'flex-end',
'center',
'space-between',
'space-around']),




alignItems:ReactPropTypes.oneOf([
'flex-start',
'flex-end',
'center',
'stretch']),




alignSelf:ReactPropTypes.oneOf([
'auto',
'flex-start',
'flex-end',
'center',
'stretch']),



flex:ReactPropTypes.number};


module.exports = LayoutPropTypes;
});
__d('ReactPropTypes',["ReactElement","ReactFragment","ReactPropTypeLocationNames","emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var emptyFunction=require('emptyFunction');
















































var ANONYMOUS='<<anonymous>>';

var elementTypeChecker=createElementTypeChecker();
var nodeTypeChecker=createNodeChecker();

var ReactPropTypes={
array:createPrimitiveTypeChecker('array'),
bool:createPrimitiveTypeChecker('boolean'),
func:createPrimitiveTypeChecker('function'),
number:createPrimitiveTypeChecker('number'),
object:createPrimitiveTypeChecker('object'),
string:createPrimitiveTypeChecker('string'),

any:createAnyTypeChecker(),
arrayOf:createArrayOfTypeChecker,
element:elementTypeChecker,
instanceOf:createInstanceTypeChecker,
node:nodeTypeChecker,
objectOf:createObjectOfTypeChecker,
oneOf:createEnumTypeChecker,
oneOfType:createUnionTypeChecker,
shape:createShapeTypeChecker};


function createChainableTypeChecker(validate){
function checkType(isRequired,props,propName,componentName,location){
componentName = componentName || ANONYMOUS;
if(props[propName] == null){
var locationName=ReactPropTypeLocationNames[location];
if(isRequired){
return new Error(
'Required ' + locationName + ' `' + propName + '` was not specified in ' + ('`' + 
componentName + '`.'));}


return null;}else 
{
return validate(props,propName,componentName,location);}}



var chainedCheckType=checkType.bind(null,false);
chainedCheckType.isRequired = checkType.bind(null,true);

return chainedCheckType;}


function createPrimitiveTypeChecker(expectedType){
function validate(props,propName,componentName,location){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== expectedType){
var locationName=ReactPropTypeLocationNames[location];



var preciseType=getPreciseType(propValue);

return new Error(
'Invalid ' + locationName + ' `' + propName + '` of type `' + preciseType + '` ' + ('supplied to `' + 
componentName + '`, expected `' + expectedType + '`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createAnyTypeChecker(){
return createChainableTypeChecker(emptyFunction.thatReturns(null));}


function createArrayOfTypeChecker(typeChecker){
function validate(props,propName,componentName,location){
var propValue=props[propName];
if(!Array.isArray(propValue)){
var locationName=ReactPropTypeLocationNames[location];
var propType=getPropType(propValue);
return new Error(
'Invalid ' + locationName + ' `' + propName + '` of type ' + ('`' + 
propType + '` supplied to `' + componentName + '`, expected an array.'));}


for(var i=0;i < propValue.length;i++) {
var error=typeChecker(propValue,i,componentName,location);
if(error instanceof Error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function createElementTypeChecker(){
function validate(props,propName,componentName,location){
if(!ReactElement.isValidElement(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` supplied to ' + ('`' + 
componentName + '`, expected a ReactElement.'));}


return null;}

return createChainableTypeChecker(validate);}


function createInstanceTypeChecker(expectedClass){
function validate(props,propName,componentName,location){
if(!(props[propName] instanceof expectedClass)){
var locationName=ReactPropTypeLocationNames[location];
var expectedClassName=expectedClass.name || ANONYMOUS;
return new Error(
'Invalid ' + locationName + ' `' + propName + '` supplied to ' + ('`' + 
componentName + '`, expected instance of `' + expectedClassName + '`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createEnumTypeChecker(expectedValues){
function validate(props,propName,componentName,location){
var propValue=props[propName];
for(var i=0;i < expectedValues.length;i++) {
if(propValue === expectedValues[i]){
return null;}}



var locationName=ReactPropTypeLocationNames[location];
var valuesString=JSON.stringify(expectedValues);
return new Error(
'Invalid ' + locationName + ' `' + propName + '` of value `' + propValue + '` ' + ('supplied to `' + 
componentName + '`, expected one of ' + valuesString + '.'));}


return createChainableTypeChecker(validate);}


function createObjectOfTypeChecker(typeChecker){
function validate(props,propName,componentName,location){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== 'object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` of type ' + ('`' + 
propType + '` supplied to `' + componentName + '`, expected an object.'));}


for(var key in propValue) {
if(propValue.hasOwnProperty(key)){
var error=typeChecker(propValue,key,componentName,location);
if(error instanceof Error){
return error;}}}



return null;}

return createChainableTypeChecker(validate);}


function createUnionTypeChecker(arrayOfTypeCheckers){
function validate(props,propName,componentName,location){
for(var i=0;i < arrayOfTypeCheckers.length;i++) {
var checker=arrayOfTypeCheckers[i];
if(checker(props,propName,componentName,location) == null){
return null;}}



var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` supplied to ' + ('`' + 
componentName + '`.'));}


return createChainableTypeChecker(validate);}


function createNodeChecker(){
function validate(props,propName,componentName,location){
if(!isNode(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` supplied to ' + ('`' + 
componentName + '`, expected a ReactNode.'));}


return null;}

return createChainableTypeChecker(validate);}


function createShapeTypeChecker(shapeTypes){
function validate(props,propName,componentName,location){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== 'object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` of type `' + propType + '` ' + ('supplied to `' + 
componentName + '`, expected `object`.'));}


for(var key in shapeTypes) {
var checker=shapeTypes[key];
if(!checker){
continue;}

var error=checker(propValue,key,componentName,location);
if(error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function isNode(propValue){
switch(typeof propValue){
case 'number':
case 'string':
case 'undefined':
return true;
case 'boolean':
return !propValue;
case 'object':
if(Array.isArray(propValue)){
return propValue.every(isNode);}

if(propValue === null || ReactElement.isValidElement(propValue)){
return true;}

propValue = ReactFragment.extractIfFragment(propValue);
for(var k in propValue) {
if(!isNode(propValue[k])){
return false;}}


return true;
default:
return false;}}




function getPropType(propValue){
var propType=typeof propValue;
if(Array.isArray(propValue)){
return 'array';}

if(propValue instanceof RegExp){



return 'object';}

return propType;}




function getPreciseType(propValue){
var propType=getPropType(propValue);
if(propType === 'object'){
if(propValue instanceof Date){
return 'date';}else 
if(propValue instanceof RegExp){
return 'regexp';}}


return propType;}


module.exports = ReactPropTypes;
});
__d('TransformPropTypes',["ReactPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');

var TransformPropTypes={
transform:ReactPropTypes.arrayOf(
ReactPropTypes.oneOfType([
ReactPropTypes.shape({rotate:ReactPropTypes.string}),
ReactPropTypes.shape({scaleX:ReactPropTypes.number}),
ReactPropTypes.shape({scaleY:ReactPropTypes.number}),
ReactPropTypes.shape({translateX:ReactPropTypes.number}),
ReactPropTypes.shape({translateY:ReactPropTypes.number})])),








transformMatrix:ReactPropTypes.arrayOf(ReactPropTypes.number),


rotation:ReactPropTypes.number,
scaleX:ReactPropTypes.number,
scaleY:ReactPropTypes.number,
translateX:ReactPropTypes.number,
translateY:ReactPropTypes.number};


module.exports = TransformPropTypes;
});
__d('TextStylePropTypes',["ReactPropTypes","ViewStylePropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');


var TextStylePropTypes=Object.assign(Object.create(ViewStylePropTypes),{
fontFamily:ReactPropTypes.string,
fontSize:ReactPropTypes.number,
fontWeight:ReactPropTypes.oneOf(
['normal','bold',
'100','200','300','400','500','600','700','800','900']),

fontStyle:ReactPropTypes.oneOf(['normal','italic']),
lineHeight:ReactPropTypes.number,
color:ReactPropTypes.string,

textAlign:ReactPropTypes.oneOf(
['auto','left','right','center','justify']),

writingDirection:ReactPropTypes.oneOf(
['auto','ltr','rtl']),

letterSpacing:ReactPropTypes.number,
textDecorationLine:ReactPropTypes.oneOf(
['none','underline','line-through','underline line-through']),

textDecorationStyle:ReactPropTypes.oneOf(
['solid','double','dotted','dashed']),

textDecorationColor:ReactPropTypes.string});



var unsupportedProps=Object.keys({
padding:null,
paddingTop:null,
paddingLeft:null,
paddingRight:null,
paddingBottom:null,
paddingVertical:null,
paddingHorizontal:null});


for(var ii=0;ii < unsupportedProps.length;ii++) {
delete TextStylePropTypes[unsupportedProps[ii]];}


module.exports = TextStylePropTypes;
});
__d('ViewStylePropTypes',["LayoutPropTypes","ReactPropTypes","TransformPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');




var ViewStylePropTypes=_extends({},
LayoutPropTypes,
TransformPropTypes,{
backgroundColor:ReactPropTypes.string,
borderColor:ReactPropTypes.string,
borderTopColor:ReactPropTypes.string,
borderRightColor:ReactPropTypes.string,
borderBottomColor:ReactPropTypes.string,
borderLeftColor:ReactPropTypes.string,
borderRadius:ReactPropTypes.number,
borderTopLeftRadius:ReactPropTypes.number,
borderTopRightRadius:ReactPropTypes.number,
borderBottomLeftRadius:ReactPropTypes.number,
borderBottomRightRadius:ReactPropTypes.number,
borderStyle:ReactPropTypes.oneOf(['solid','dotted','dashed']),
opacity:ReactPropTypes.number,
overflow:ReactPropTypes.oneOf(['visible','hidden']),
shadowColor:ReactPropTypes.string,
shadowOffset:ReactPropTypes.shape(
{width:ReactPropTypes.number,height:ReactPropTypes.number}),

shadowOpacity:ReactPropTypes.number,
shadowRadius:ReactPropTypes.number});


module.exports = ViewStylePropTypes;
});
__d('matricesDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var matricesDiffer=function(one,two){
if(one === two){
return false;}

return !one || !two || 
one[12] !== two[12] || 
one[13] !== two[13] || 
one[14] !== two[14] || 
one[5] !== two[5] || 
one[10] !== two[10] || 
one[1] !== two[1] || 
one[2] !== two[2] || 
one[3] !== two[3] || 
one[4] !== two[4] || 
one[6] !== two[6] || 
one[7] !== two[7] || 
one[8] !== two[8] || 
one[9] !== two[9] || 
one[11] !== two[11] || 
one[15] !== two[15];};


module.exports = matricesDiffer;
});
__d('sizesDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






var dummySize={width:undefined,height:undefined};

var sizesDiffer=function(one,two){
one = one || dummySize;
two = two || dummySize;
return one !== two && (
one.width !== two.width || 
one.height !== two.height);};



module.exports = sizesDiffer;
});
__d('ReactMultiChild',["ReactComponentEnvironment","ReactMultiChildUpdateTypes","ReactReconciler","ReactChildReconciler"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');

var ReactReconciler=require('ReactReconciler');
var ReactChildReconciler=require('ReactChildReconciler');








var updateDepth=0;









var updateQueue=[];







var markupQueue=[];









function enqueueMarkup(parentID,markup,toIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.INSERT_MARKUP,
markupIndex:markupQueue.push(markup) - 1,
textContent:null,
fromIndex:null,
toIndex:toIndex});}











function enqueueMove(parentID,fromIndex,toIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.MOVE_EXISTING,
markupIndex:null,
textContent:null,
fromIndex:fromIndex,
toIndex:toIndex});}










function enqueueRemove(parentID,fromIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.REMOVE_NODE,
markupIndex:null,
textContent:null,
fromIndex:fromIndex,
toIndex:null});}










function enqueueTextContent(parentID,textContent){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.TEXT_CONTENT,
markupIndex:null,
textContent:textContent,
fromIndex:null,
toIndex:null});}








function processQueue(){
if(updateQueue.length){
ReactComponentEnvironment.processChildrenUpdates(
updateQueue,
markupQueue);

clearQueue();}}








function clearQueue(){
updateQueue.length = 0;
markupQueue.length = 0;}








var ReactMultiChild={








Mixin:{









mountChildren:function(nestedChildren,transaction,context){
var children=ReactChildReconciler.instantiateChildren(
nestedChildren,transaction,context);

this._renderedChildren = children;
var mountImages=[];
var index=0;
for(var name in children) {
if(children.hasOwnProperty(name)){
var child=children[name];

var rootID=this._rootNodeID + name;
var mountImage=ReactReconciler.mountComponent(
child,
rootID,
transaction,
context);

child._mountIndex = index;
mountImages.push(mountImage);
index++;}}


return mountImages;},








updateTextContent:function(nextContent){
updateDepth++;
var errorThrown=true;
try{
var prevChildren=this._renderedChildren;

ReactChildReconciler.unmountChildren(prevChildren);

for(var name in prevChildren) {
if(prevChildren.hasOwnProperty(name)){
this._unmountChildByName(prevChildren[name],name);}}



this.setTextContent(nextContent);
errorThrown = false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},












updateChildren:function(nextNestedChildren,transaction,context){
updateDepth++;
var errorThrown=true;
try{
this._updateChildren(nextNestedChildren,transaction,context);
errorThrown = false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},















_updateChildren:function(nextNestedChildren,transaction,context){
var prevChildren=this._renderedChildren;
var nextChildren=ReactChildReconciler.updateChildren(
prevChildren,nextNestedChildren,transaction,context);

this._renderedChildren = nextChildren;
if(!nextChildren && !prevChildren){
return;}

var name;


var lastIndex=0;
var nextIndex=0;
for(name in nextChildren) {
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren && prevChildren[name];
var nextChild=nextChildren[name];
if(prevChild === nextChild){
this.moveChild(prevChild,nextIndex,lastIndex);
lastIndex = Math.max(prevChild._mountIndex,lastIndex);
prevChild._mountIndex = nextIndex;}else 
{
if(prevChild){

lastIndex = Math.max(prevChild._mountIndex,lastIndex);
this._unmountChildByName(prevChild,name);}


this._mountChildByNameAtIndex(
nextChild,name,nextIndex,transaction,context);}


nextIndex++;}


for(name in prevChildren) {
if(prevChildren.hasOwnProperty(name) && 
!(nextChildren && nextChildren.hasOwnProperty(name))){
this._unmountChildByName(prevChildren[name],name);}}},










unmountChildren:function(){
var renderedChildren=this._renderedChildren;
ReactChildReconciler.unmountChildren(renderedChildren);
this._renderedChildren = null;},










moveChild:function(child,toIndex,lastIndex){



if(child._mountIndex < lastIndex){
enqueueMove(this._rootNodeID,child._mountIndex,toIndex);}},










createChild:function(child,mountImage){
enqueueMarkup(this._rootNodeID,mountImage,child._mountIndex);},








removeChild:function(child){
enqueueRemove(this._rootNodeID,child._mountIndex);},








setTextContent:function(textContent){
enqueueTextContent(this._rootNodeID,textContent);},













_mountChildByNameAtIndex:function(
child,
name,
index,
transaction,
context){

var rootID=this._rootNodeID + name;
var mountImage=ReactReconciler.mountComponent(
child,
rootID,
transaction,
context);

child._mountIndex = index;
this.createChild(child,mountImage);},











_unmountChildByName:function(child,name){
this.removeChild(child);
child._mountIndex = null;}}};






module.exports = ReactMultiChild;
});
__d('ReactChildReconciler',["ReactReconciler","flattenChildren","instantiateReactComponent","shouldUpdateReactComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactReconciler=require('ReactReconciler');

var flattenChildren=require('flattenChildren');
var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');






var ReactChildReconciler={









instantiateChildren:function(nestedChildNodes,transaction,context){
var children=flattenChildren(nestedChildNodes);
for(var name in children) {
if(children.hasOwnProperty(name)){
var child=children[name];


var childInstance=instantiateReactComponent(child,null);
children[name] = childInstance;}}


return children;},












updateChildren:function(
prevChildren,
nextNestedChildNodes,
transaction,
context){





var nextChildren=flattenChildren(nextNestedChildNodes);
if(!nextChildren && !prevChildren){
return null;}

var name;
for(name in nextChildren) {
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren && prevChildren[name];
var prevElement=prevChild && prevChild._currentElement;
var nextElement=nextChildren[name];
if(shouldUpdateReactComponent(prevElement,nextElement)){
ReactReconciler.receiveComponent(
prevChild,nextElement,transaction,context);

nextChildren[name] = prevChild;}else 
{
if(prevChild){
ReactReconciler.unmountComponent(prevChild,name);}


var nextChildInstance=instantiateReactComponent(
nextElement,
null);

nextChildren[name] = nextChildInstance;}}



for(name in prevChildren) {
if(prevChildren.hasOwnProperty(name) && 
!(nextChildren && nextChildren.hasOwnProperty(name))){
ReactReconciler.unmountComponent(prevChildren[name]);}}


return nextChildren;},









unmountChildren:function(renderedChildren){
for(var name in renderedChildren) {
var renderedChild=renderedChildren[name];
ReactReconciler.unmountComponent(renderedChild);}}};





module.exports = ReactChildReconciler;
});
__d('flattenChildren',["traverseAllChildren","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');






function flattenSingleChildIntoContext(traverseContext,child,name){

var result=traverseContext;
var keyUnique=!result.hasOwnProperty(name);
if(__DEV__){
warning(
keyUnique,
'flattenChildren(...): Encountered two children with the same key, ' + 
'`%s`. Child keys must be unique; when two children share a key, only ' + 
'the first child will be used.',
name);}


if(keyUnique && child != null){
result[name] = child;}}








function flattenChildren(children){
if(children == null){
return children;}

var result={};
traverseAllChildren(children,flattenSingleChildIntoContext,result);
return result;}


module.exports = flattenChildren;
});
__d('styleDiffer',["deepDiffer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var deepDiffer=require('deepDiffer');

function styleDiffer(a,b){
return !styleEqual(a,b);}


function styleEqual(a,b){
if(!a){
return !b;}

if(!b){
return !a;}

if(typeof a !== typeof b){
return false;}

if(typeof a === 'number'){
return a === b;}


if(Array.isArray(a)){
if(!Array.isArray(b) || a.length !== b.length){
return false;}

for(var i=0;i < a.length;++i) {
if(!styleEqual(a[i],b[i])){
return false;}}


return true;}


for(var key in a) {
if(deepDiffer(a[key],b[key])){
return false;}}



for(var key in b) {
if(!a.hasOwnProperty(key)){
return false;}}



return true;}


module.exports = styleDiffer;
});
__d('deepDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















var deepDiffer=function(one,two){
if(one === two){

return false;}

if(typeof one === 'function' && typeof two === 'function'){

return false;}

if(typeof one !== 'object' || one === null){

return one !== two;}

if(typeof two !== 'object' || two === null){


return true;}

if(one.constructor !== two.constructor){
return true;}

if(Array.isArray(one)){

var len=one.length;
if(two.length !== len){
return true;}

for(var ii=0;ii < len;ii++) {
if(deepDiffer(one[ii],two[ii])){
return true;}}}else 


{
for(var key in one) {
if(deepDiffer(one[key],two[key])){
return true;}}


for(var twoKey in two) {


if(one[twoKey] === undefined && two[twoKey] !== undefined){
return true;}}}



return false;};


module.exports = deepDiffer;
});
__d('diffRawProperties',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';























function diffRawProperties(
updatePayload,
prevProps,
nextProps,
validAttributes)
{
var validAttributeConfig;
var nextProp;
var prevProp;
var isScalar;
var shouldUpdate;

if(nextProps){
for(var propKey in nextProps) {
validAttributeConfig = validAttributes[propKey];
if(!validAttributeConfig){
continue;}

prevProp = prevProps && prevProps[propKey];
nextProp = nextProps[propKey];



if(typeof prevProp === 'function'){
prevProp = true;}

if(typeof nextProp === 'function'){
nextProp = true;}


if(prevProp !== nextProp){




isScalar = typeof nextProp !== 'object' || nextProp === null;
shouldUpdate = isScalar || 
!prevProp || 
validAttributeConfig.diff && 
validAttributeConfig.diff(prevProp,nextProp);

if(shouldUpdate){
updatePayload = updatePayload || {};
updatePayload[propKey] = nextProp;}}}}








if(prevProps){
for(var propKey in prevProps) {
validAttributeConfig = validAttributes[propKey];
if(!validAttributeConfig){
continue;}

if(updatePayload && updatePayload[propKey] !== undefined){
continue;}

prevProp = prevProps[propKey];
nextProp = nextProps && nextProps[propKey];



if(typeof prevProp === 'function'){
prevProp = true;}

if(typeof nextProp === 'function'){
nextProp = true;}


if(prevProp !== nextProp){
if(nextProp === undefined){
nextProp = null;}





isScalar = typeof nextProp !== 'object' || nextProp === null;
shouldUpdate = isScalar && prevProp !== nextProp || 
validAttributeConfig.diff && 
validAttributeConfig.diff(prevProp,nextProp);
if(shouldUpdate){
updatePayload = updatePayload || {};
updatePayload[propKey] = nextProp;}}}}




return updatePayload;}


module.exports = diffRawProperties;
});
__d('RCTEventEmitter',["ReactNativeEventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeEventEmitter=require('ReactNativeEventEmitter');


module.exports = ReactNativeEventEmitter;
});
__d('RCTLog',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var invariant=require('invariant');

var levelsMap={
log:'log',
info:'info',
warn:'warn',
error:'error',
mustfix:'error'};var 


RCTLog=(function(){function RCTLog(){_classCallCheck(this,RCTLog);}_createClass(RCTLog,null,[{key:'logIfNoNativeHook',value:

function logIfNoNativeHook(){
var args=Array.prototype.slice.call(arguments);
var level=args.shift();
var logFn=levelsMap[level];
invariant(
logFn,
'Level "' + level + '" not one of ' + Object.keys(levelsMap));

if(typeof global.nativeLoggingHook === 'undefined'){

console[logFn].apply(console,args);}

return true;}}]);return RCTLog;})();



module.exports = RCTLog;
});
__d('deprecated',["Object.assign","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var warning=require('warning');












function deprecated(namespace,oldName,newName,ctx,fn){
var warned=false;
if(__DEV__){
var newFn=function(){
warning(
warned,
'%s.%s will be deprecated in a future version. ' + 
'Use %s.%s instead.',
namespace,
oldName,
namespace,
newName);

warned = true;
return fn.apply(ctx,arguments);};

newFn.displayName = namespace + '_' + oldName;


return assign(newFn,fn);}


return fn;}


module.exports = deprecated;
});
__d('onlyChild',["ReactElement","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var ReactElement=require('ReactElement');

var invariant=require('invariant');












function onlyChild(children){
invariant(
ReactElement.isValidElement(children),
'onlyChild must be passed a children with exactly one child.');

return children;}


module.exports = onlyChild;
});
__d('ActivityIndicatorIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","View","requireNativeComponent","verifyPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';function _objectWithoutProperties(obj,keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i] = obj[i];}return target;}












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var verifyPropTypes=require('verifyPropTypes');

var GRAY='#999999';








var ActivityIndicatorIOS=React.createClass({displayName:'ActivityIndicatorIOS',
mixins:[NativeMethodsMixin],

propTypes:{



animating:PropTypes.bool,



color:PropTypes.string,



hidesWhenStopped:PropTypes.bool,



size:PropTypes.oneOf([
'small',
'large']),






onLayout:PropTypes.func},


getDefaultProps:function(){
return {
animating:true,
color:GRAY,
hidesWhenStopped:true,
size:'small'};},



render:function(){var _props=
this.props;var onLayout=_props.onLayout;var style=_props.style;var props=_objectWithoutProperties(_props,['onLayout','style']);
var sizeStyle=this.props.size === 'large'?styles.sizeLarge:styles.sizeSmall;
return (
React.createElement(View,{
onLayout:onLayout,
style:[styles.container,sizeStyle,style]},
React.createElement(RCTActivityIndicatorView,props)));}});





var styles=StyleSheet.create({
container:{
alignItems:'center',
justifyContent:'center'},

sizeSmall:{
width:20,
height:20},

sizeLarge:{
width:36,
height:36}});



var RCTActivityIndicatorView=requireNativeComponent(
'RCTActivityIndicatorView',
null);

if(__DEV__){
var nativeOnlyProps={activityIndicatorViewStyle:true};
verifyPropTypes(
ActivityIndicatorIOS,
RCTActivityIndicatorView.viewConfig,
nativeOnlyProps);}



module.exports = ActivityIndicatorIOS;
});
__d('StyleSheet',["StyleSheetRegistry","StyleSheetValidation"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var StyleSheetRegistry=require('StyleSheetRegistry');
var StyleSheetValidation=require('StyleSheetValidation');var 













































StyleSheet=(function(){function StyleSheet(){_classCallCheck(this,StyleSheet);}_createClass(StyleSheet,null,[{key:'create',value:
function create(obj){
var result={};
for(var key in obj) {
StyleSheetValidation.validateStyle(key,obj);
result[key] = StyleSheetRegistry.registerStyle(obj[key]);}

return result;}}]);return StyleSheet;})();



module.exports = StyleSheet;
});
__d('StyleSheetValidation',["ImageStylePropTypes","ReactPropTypeLocations","TextStylePropTypes","ViewStylePropTypes","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var ImageStylePropTypes=require('ImageStylePropTypes');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var invariant=require('invariant');var 

StyleSheetValidation=(function(){function StyleSheetValidation(){_classCallCheck(this,StyleSheetValidation);}_createClass(StyleSheetValidation,null,[{key:'validateStyleProp',value:
function validateStyleProp(prop,style,caller){
if(!__DEV__){
return;}

if(allStylePropTypes[prop] === undefined){
var message1='"' + prop + '" is not a valid style property.';
var message2='\nValid style props: ' + 
JSON.stringify(Object.keys(allStylePropTypes).sort(),null,'  ');
styleError(message1,style,caller,message2);}

var error=allStylePropTypes[prop](
style,
prop,
caller,
ReactPropTypeLocations.prop);

if(error){
styleError(error.message,style,caller);}}},{key:'validateStyle',value:



function validateStyle(name,styles){
if(!__DEV__){
return;}

for(var prop in styles[name]) {
StyleSheetValidation.validateStyleProp(prop,styles[name],'StyleSheet ' + name);}}},{key:'addValidStylePropTypes',value:



function addValidStylePropTypes(stylePropTypes){
for(var key in stylePropTypes) {
invariant(
allStylePropTypes[key] === undefined || 
allStylePropTypes[key] === stylePropTypes[key],
'Attemped to redefine existing style prop type "' + key + '".');

allStylePropTypes[key] = stylePropTypes[key];}}}]);return StyleSheetValidation;})();




var styleError=function(message1,style,caller,message2){
invariant(
false,
message1 + '\n' + (caller || '<<unknown>>') + ': ' + 
JSON.stringify(style,null,'  ') + (message2 || ''));};



var allStylePropTypes={};

StyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);

module.exports = StyleSheetValidation;
});
__d('View',["NativeMethodsMixin","ReactPropTypes","NativeModules","React","ReactNativeStyleAttributes","ReactNativeViewAttributes","StyleSheetPropType","ViewStylePropTypes","createReactNativeComponentClass"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var RCTUIManager=require('NativeModules').UIManager;
var React=require('React');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var ViewStylePropTypes=require('ViewStylePropTypes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');

var stylePropType=StyleSheetPropType(ViewStylePropTypes);

var AccessibilityTraits=[
'none',
'button',
'link',
'header',
'search',
'image',
'selected',
'plays',
'key',
'text',
'summary',
'disabled',
'frequentUpdates',
'startsMedia',
'adjustable',
'allowsDirectInteraction',
'pageTurn'];






















var View=React.createClass({displayName:'View',
mixins:[NativeMethodsMixin],





viewConfig:{
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RCTView},


propTypes:{




accessible:PropTypes.bool,






accessibilityLabel:PropTypes.string,





accessibilityTraits:PropTypes.oneOfType([
PropTypes.oneOf(AccessibilityTraits),
PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]),






onAcccessibilityTap:PropTypes.func,





onMagicTap:PropTypes.func,




testID:PropTypes.string,






onMoveShouldSetResponder:PropTypes.func,
onResponderGrant:PropTypes.func,
onResponderMove:PropTypes.func,
onResponderReject:PropTypes.func,
onResponderRelease:PropTypes.func,
onResponderTerminate:PropTypes.func,
onResponderTerminationRequest:PropTypes.func,
onStartShouldSetResponder:PropTypes.func,
onStartShouldSetResponderCapture:PropTypes.func,






onLayout:PropTypes.func,































pointerEvents:PropTypes.oneOf([
'box-none',
'none',
'box-only',
'auto']),

style:stylePropType,









removeClippedSubviews:PropTypes.bool,













renderToHardwareTextureAndroid:PropTypes.bool},


render:function(){
return React.createElement(RCTView,this.props);}});



var RCTView=createReactNativeComponentClass({
validAttributes:ReactNativeViewAttributes.RCTView,
uiViewClassName:'RCTView'});

RCTView.propTypes = View.propTypes;
if(__DEV__){
var viewConfig=RCTUIManager.viewConfigs && RCTUIManager.viewConfigs.RCTView || {};
for(var prop in viewConfig.nativeProps) {
var viewAny=View;
if(!viewAny.propTypes[prop] && !ReactNativeStyleAttributes[prop]){
throw new Error(
'View is missing propType for native prop `' + prop + '`');}}}





var ViewToExport=RCTView;
if(__DEV__){
ViewToExport = View;}


module.exports = ViewToExport;
});
__d('ReactNativeViewAttributes',["merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var merge=require('merge');

var ReactNativeViewAttributes={};

ReactNativeViewAttributes.UIView = {
pointerEvents:true,
accessible:true,
accessibilityLabel:true,
accessibilityTraits:true,
testID:true,
onLayout:true,
onAccessibilityTap:true,
onMagicTap:true};


ReactNativeViewAttributes.RCTView = merge(
ReactNativeViewAttributes.UIView,{






removeClippedSubviews:true});


module.exports = ReactNativeViewAttributes;
});
__d('StyleSheetPropType',["createStrictShapeTypeChecker","flattenStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var flattenStyle=require('flattenStyle');

function StyleSheetPropType(
shape)
{
var shapePropType=createStrictShapeTypeChecker(shape);
return function(props,propName,componentName,location){
var newProps=props;
if(props[propName]){

newProps = {};
newProps[propName] = flattenStyle(props[propName]);}

return shapePropType(newProps,propName,componentName,location);};}



module.exports = StyleSheetPropType;
});
__d('createStrictShapeTypeChecker',["ReactPropTypeLocationNames","invariant","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var invariant=require('invariant');
var merge=require('merge');

function createStrictShapeTypeChecker(
shapeTypes)
{
function checkType(isRequired,props,propName,componentName,location){
if(!props[propName]){
if(isRequired){
invariant(
false,
'Required object `' + propName + '` was not specified in ' + ('`' + 
componentName + '`.'));}


return;}

var propValue=props[propName];
var propType=typeof propValue;
var locationName=
location && ReactPropTypeLocationNames[location] || '(unknown)';
if(propType !== 'object'){
invariant(
false,
'Invalid ' + locationName + ' `' + propName + '` of type `' + propType + '` ' + ('supplied to `' + 
componentName + '`, expected `object`.'));}




var allKeys=merge(props[propName],shapeTypes);
for(var key in allKeys) {
var checker=shapeTypes[key];
if(!checker){
invariant(
false,
'Invalid props.' + propName + ' key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + 
JSON.stringify(props[propName],null,'  ') + '\nValid keys: ' + 
JSON.stringify(Object.keys(shapeTypes),null,'  '));}


var error=checker(propValue,key,componentName,location);
if(error){
invariant(
false,
error.message + '\nBad object: ' + 
JSON.stringify(props[propName],null,'  '));}}}




function chainedCheckType(
props,
propName,
componentName,
location)
{
return checkType(false,props,propName,componentName,location);}

chainedCheckType.isRequired = checkType.bind(null,true);
return chainedCheckType;}


module.exports = createStrictShapeTypeChecker;
});
__d('requireNativeComponent',["NativeModules","UnimplementedView","createReactNativeComponentClass","deepDiffer","insetsDiffer","pointsDiffer","matricesDiffer","sizesDiffer","verifyPropTypes","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var RCTUIManager=require('NativeModules').UIManager;
var UnimplementedView=require('UnimplementedView');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var insetsDiffer=require('insetsDiffer');
var pointsDiffer=require('pointsDiffer');
var matricesDiffer=require('matricesDiffer');
var sizesDiffer=require('sizesDiffer');
var verifyPropTypes=require('verifyPropTypes');
var warning=require('warning');
















function requireNativeComponent(
viewName,
wrapperComponent)
{
var viewConfig=RCTUIManager[viewName];
if(!viewConfig || !viewConfig.NativeProps){
warning(false,'Native component for "%s" does not exist',viewName);
return UnimplementedView;}

var nativeProps=_extends({},
RCTUIManager.RCTView.NativeProps,
viewConfig.NativeProps);

viewConfig.uiViewClassName = viewName;
viewConfig.validAttributes = {};
for(var key in nativeProps) {

var differ=TypeToDifferMap[nativeProps[key]] || deepDiffer;
viewConfig.validAttributes[key] = {diff:differ};}

if(__DEV__){
wrapperComponent && verifyPropTypes(wrapperComponent,viewConfig);}

return createReactNativeComponentClass(viewConfig);}


var TypeToDifferMap={

CATransform3D:matricesDiffer,
CGPoint:pointsDiffer,
CGSize:sizesDiffer,
UIEdgeInsets:insetsDiffer};




module.exports = requireNativeComponent;
});
__d('UnimplementedView',["React","StyleSheet","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';








var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var UnimplementedView=React.createClass({displayName:'UnimplementedView',
setNativeProps:function(){},




render:function(){
return (
React.createElement(View,{style:[styles.unimplementedView,this.props.style]},
this.props.children));}});





var styles=StyleSheet.create({
unimplementedView:{
borderWidth:1,
borderColor:'red',
alignSelf:'flex-start'}});



module.exports = UnimplementedView;
});
__d('insetsDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var dummyInsets={
top:undefined,
left:undefined,
right:undefined,
bottom:undefined};


var insetsDiffer=function(
one,
two)
{
one = one || dummyInsets;
two = two || dummyInsets;
return one !== two && (
one.top !== two.top || 
one.left !== two.left || 
one.right !== two.right || 
one.bottom !== two.bottom);};



module.exports = insetsDiffer;
});
__d('pointsDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var dummyPoint={x:undefined,y:undefined};

var pointsDiffer=function(one,two){
one = one || dummyPoint;
two = two || dummyPoint;
return one !== two && (
one.x !== two.x || 
one.y !== two.y);};



module.exports = pointsDiffer;
});
__d('verifyPropTypes',["ReactNativeStyleAttributes","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var View=require('View');

function verifyPropTypes(
component,
viewConfig,
nativePropsToIgnore)
{
if(!viewConfig){
return;}

var componentName=component.name || component.displayName;
if(!component.propTypes){
throw new Error(
'`' + componentName + '` has no propTypes defined`');}



var nativeProps=viewConfig.NativeProps;
for(var prop in nativeProps) {
if(!component.propTypes[prop] && 
!View.propTypes[prop] && 
!ReactNativeStyleAttributes[prop] && (
!nativePropsToIgnore || !nativePropsToIgnore[prop])){
throw new Error(
'`' + componentName + '` has no propType for native prop `' + 
viewConfig.uiViewClassName + '.' + prop + '` of native type `' + 
nativeProps[prop] + '`');}}}





module.exports = verifyPropTypes;
});
__d('DatePickerIOS',["NativeMethodsMixin","ReactPropTypes","React","NativeModules","StyleSheet","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var RCTDatePickerIOSConsts=require('NativeModules').UIManager.RCTDatePicker.Constants;
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var DATEPICKER='datepicker';














var DatePickerIOS=React.createClass({displayName:'DatePickerIOS',
mixins:[NativeMethodsMixin],

propTypes:{



date:PropTypes.instanceOf(Date).isRequired,








onDateChange:PropTypes.func.isRequired,






maximumDate:PropTypes.instanceOf(Date),






minimumDate:PropTypes.instanceOf(Date),




mode:PropTypes.oneOf(['date','time','datetime']),




minuteInterval:PropTypes.oneOf([1,2,3,4,5,6,10,12,15,20,30]),








timeZoneOffsetInMinutes:PropTypes.number},


getDefaultProps:function(){
return {
mode:'datetime'};},



_onChange:function(event){
var nativeTimeStamp=event.nativeEvent.timestamp;
this.props.onDateChange && this.props.onDateChange(
new Date(nativeTimeStamp));

this.props.onChange && this.props.onChange(event);





var propsTimeStamp=this.props.date.getTime();
if(nativeTimeStamp !== propsTimeStamp){
this.refs[DATEPICKER].setNativeProps({
date:propsTimeStamp});}},




render:function(){
var props=this.props;
return (
React.createElement(View,{style:props.style},
React.createElement(RCTDatePickerIOS,{
ref:DATEPICKER,
style:styles.datePickerIOS,
date:props.date.getTime(),
maximumDate:
props.maximumDate?props.maximumDate.getTime():undefined,

minimumDate:
props.minimumDate?props.minimumDate.getTime():undefined,

mode:props.mode,
minuteInterval:props.minuteInterval,
timeZoneOffsetInMinutes:props.timeZoneOffsetInMinutes,
onChange:this._onChange})));}});






var styles=StyleSheet.create({
datePickerIOS:{
height:RCTDatePickerIOSConsts.ComponentHeight,
width:RCTDatePickerIOSConsts.ComponentWidth}});



var RCTDatePickerIOS=requireNativeComponent('RCTDatePicker',DatePickerIOS);

module.exports = DatePickerIOS;
});
__d('Image',["EdgeInsetsPropType","ImageResizeMode","ImageStylePropTypes","NativeMethodsMixin","NativeModules","ReactPropTypes","React","ReactNativeViewAttributes","StyleSheet","StyleSheetPropType","flattenStyle","invariant","merge","requireNativeComponent","resolveAssetSource","verifyPropTypes","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var ImageResizeMode=require('ImageResizeMode');
var ImageStylePropTypes=require('ImageStylePropTypes');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');

var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var merge=require('merge');
var requireNativeComponent=require('requireNativeComponent');
var resolveAssetSource=require('resolveAssetSource');
var verifyPropTypes=require('verifyPropTypes');
var warning=require('warning');


























var Image=React.createClass({displayName:'Image',
propTypes:{





source:PropTypes.shape({
uri:PropTypes.string}),





defaultSource:PropTypes.shape({
uri:PropTypes.string}),




accessible:PropTypes.bool,



accessibilityLabel:PropTypes.string,







capInsets:EdgeInsetsPropType,




resizeMode:PropTypes.oneOf(['cover','contain','stretch']),
style:StyleSheetPropType(ImageStylePropTypes),




testID:PropTypes.string,





onLayout:PropTypes.func,



onLoadStart:PropTypes.func,





onLoadProgress:PropTypes.func,



onLoadAbort:PropTypes.func,





onLoadError:PropTypes.func,




onLoaded:PropTypes.func},



statics:{
resizeMode:ImageResizeMode},


mixins:[NativeMethodsMixin],





viewConfig:{
uiViewClassName:'UIView',
validAttributes:ReactNativeViewAttributes.UIView},


render:function(){
for(var prop in nativeOnlyProps) {
if(this.props[prop] !== undefined){
console.warn('Prop `' + prop + ' = ' + this.props[prop] + '` should ' + 
'not be set directly on Image.');}}


var source=resolveAssetSource(this.props.source) || {};var 

width=source.width;var height=source.height;
var style=flattenStyle([{width:width,height:height},styles.base,this.props.style]);
invariant(style,'style must be initialized');

var isNetwork=source.uri && source.uri.match(/^https?:/);
invariant(
!(isNetwork && source.isStatic),
'static image uris cannot start with "http": "' + source.uri + '"');

var isStored=!source.isStatic && !isNetwork;
var RawImage=isNetwork?RCTNetworkImage:RCTStaticImage;

if(this.props.style && this.props.style.tintColor){
warning(RawImage === RCTStaticImage,'tintColor style only supported on static images.');}

var resizeMode=this.props.resizeMode || style.resizeMode || 'cover';

var nativeProps=merge(this.props,{
style:style,
resizeMode:resizeMode,
tintColor:style.tintColor});

if(isStored){
nativeProps.imageTag = source.uri;}else 
{
nativeProps.src = source.uri;}

if(this.props.defaultSource){
nativeProps.defaultImageSrc = this.props.defaultSource.uri;}

nativeProps.progressHandlerRegistered = isNetwork && this.props.onLoadProgress;
return React.createElement(RawImage,nativeProps);}});



var styles=StyleSheet.create({
base:{
overflow:'hidden'}});



var RCTNetworkImage=requireNativeComponent('RCTNetworkImageView',null);
var RCTStaticImage=requireNativeComponent('RCTStaticImage',null);

var nativeOnlyProps={
src:true,
defaultImageSrc:true,
imageTag:true,
progressHandlerRegistered:true};

if(__DEV__){
verifyPropTypes(Image,RCTStaticImage.viewConfig,nativeOnlyProps);
verifyPropTypes(Image,RCTNetworkImage.viewConfig,nativeOnlyProps);}


module.exports = Image;
});
__d('EdgeInsetsPropType',["ReactPropTypes","createStrictShapeTypeChecker"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var EdgeInsetsPropType=createStrictShapeTypeChecker({
top:PropTypes.number,
left:PropTypes.number,
bottom:PropTypes.number,
right:PropTypes.number});


module.exports = EdgeInsetsPropType;
});
__d('resolveAssetSource',["AssetRegistry","PixelRatio","Platform","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var AssetRegistry=require('AssetRegistry');
var PixelRatio=require('PixelRatio');
var Platform=require('Platform');
var SourceCode=require('NativeModules').SourceCode;

var _serverURL;

function getDevServerURL(){
if(!__DEV__){

return null;}

if(_serverURL === undefined){
var scriptURL=SourceCode.scriptURL;
var match=scriptURL && scriptURL.match(/^https?:\/\/.*?\//);
if(match){

_serverURL = match[0];}else 
{

_serverURL = null;}}



return _serverURL;}





function getPathInArchive(asset){
if(Platform.OS === 'android'){
var assetDir=getBasePath(asset);


return (assetDir + '/' + asset.name).
toLowerCase().
replace(/\//g,'_').
replace(/([^a-z0-9_])/g,'').
replace(/^assets_/,'');}else 
{

return getScaledAssetPath(asset);}}







function getPathOnDevserver(devServerUrl,asset){
return devServerUrl + getScaledAssetPath(asset) + '?hash=' + asset.hash;}





function getBasePath(asset){


var path=asset.httpServerLocation;
if(path[0] === '/'){
path = path.substr(1);}

return path;}





function getScaledAssetPath(asset){
var scale=pickScale(asset.scales,PixelRatio.get());
var scaleSuffix=scale === 1?'':'@' + scale + 'x';
var assetDir=getBasePath(asset);
return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;}


function pickScale(scales,deviceScale){

for(var i=0;i < scales.length;i++) {
if(scales[i] >= deviceScale){
return scales[i];}}






return scales[scales.length - 1] || 1;}


function resolveAssetSource(source){
if(typeof source === 'object'){
return source;}


var asset=AssetRegistry.getAssetByID(source);
if(asset){
return assetToImageSource(asset);}


return null;}


function assetToImageSource(asset){
var devServerURL=getDevServerURL();
if(devServerURL){
return {
width:asset.width,
height:asset.height,
uri:getPathOnDevserver(devServerURL,asset),
isStatic:false};}else 

{
return {
width:asset.width,
height:asset.height,
uri:getPathInArchive(asset),
isStatic:true};}}




module.exports = resolveAssetSource;
module.exports.pickScale = pickScale;
});
__d('AssetRegistry',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






var assets=[];

function registerAsset(asset){


return assets.push(asset);}


function getAssetByID(assetId){
return assets[assetId - 1];}


module.exports = {registerAsset:registerAsset,getAssetByID:getAssetByID};
});
__d('PixelRatio',["Dimensions"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var Dimensions=require('Dimensions');var 






























PixelRatio=(function(){function PixelRatio(){_classCallCheck(this,PixelRatio);}_createClass(PixelRatio,null,[{key:'get',value:












function get(){
return Dimensions.get('window').scale;}},{key:'getFontScale',value:












function getFontScale(){
return Dimensions.get('window').fontScale || PixelRatio.get();}},{key:'getPixelSizeForLayoutSize',value:







function getPixelSizeForLayoutSize(layoutSize){
return Math.round(layoutSize * PixelRatio.get());}},{key:'startDetecting',value:



function startDetecting(){}}]);return PixelRatio;})();


module.exports = PixelRatio;
});
__d('Dimensions',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var NativeModules=require('NativeModules');

var invariant=require('invariant');

var dimensions=NativeModules.UIManager.Dimensions;




if(dimensions && dimensions.windowPhysicalPixels){

dimensions = JSON.parse(JSON.stringify(dimensions));

var windowPhysicalPixels=dimensions.windowPhysicalPixels;
dimensions.window = {
width:windowPhysicalPixels.width / windowPhysicalPixels.scale,
height:windowPhysicalPixels.height / windowPhysicalPixels.scale,
scale:windowPhysicalPixels.scale,
fontScale:windowPhysicalPixels.fontScale};



delete dimensions.windowPhysicalPixels;}var 


Dimensions=(function(){function Dimensions(){_classCallCheck(this,Dimensions);}_createClass(Dimensions,null,[{key:'set',value:





function set(dims){
Object.assign(dimensions,dims);
return true;}},{key:'get',value:















function get(dim){
invariant(dimensions[dim],'No dimension set for key ' + dim);
return dimensions[dim];}}]);return Dimensions;})();



module.exports = Dimensions;
});
__d('ListView',["ListViewDataSource","React","NativeModules","NativeModules","ScrollView","ScrollResponder","StaticRenderer","isEmpty","logError","merge","react-timer-mixin/TimerMixin.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};function _objectWithoutProperties(obj,keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i] = obj[i];}return target;}



























var ListViewDataSource=require('ListViewDataSource');
var React=require('React');
var RCTUIManager=require('NativeModules').UIManager;
var RKScrollViewManager=require('NativeModules').ScrollViewManager;
var ScrollView=require('ScrollView');
var ScrollResponder=require('ScrollResponder');
var StaticRenderer=require('StaticRenderer');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');

var isEmpty=require('isEmpty');
var logError=require('logError');
var merge=require('merge');

var PropTypes=React.PropTypes;

var DEFAULT_PAGE_SIZE=1;
var DEFAULT_INITIAL_ROWS=10;
var DEFAULT_SCROLL_RENDER_AHEAD=1000;
var DEFAULT_END_REACHED_THRESHOLD=1000;
var DEFAULT_SCROLL_CALLBACK_THROTTLE=50;
var SCROLLVIEW_REF='listviewscroll';


















































var ListView=React.createClass({displayName:'ListView',
mixins:[ScrollResponder.Mixin,TimerMixin],

statics:{
DataSource:ListViewDataSource},









propTypes:_extends({},
ScrollView.propTypes,{

dataSource:PropTypes.instanceOf(ListViewDataSource).isRequired,







renderSeparator:PropTypes.func,










renderRow:PropTypes.func.isRequired,





initialListSize:PropTypes.number,





onEndReached:PropTypes.func,



onEndReachedThreshold:PropTypes.number,



pageSize:PropTypes.number,








renderFooter:PropTypes.func,
renderHeader:PropTypes.func,









renderSectionHeader:PropTypes.func,






renderScrollComponent:React.PropTypes.func.isRequired,




scrollRenderAheadDistance:React.PropTypes.number,









onChangeVisibleRows:React.PropTypes.func,





removeClippedSubviews:React.PropTypes.bool}),





getMetrics:function(){
return {
contentHeight:this.scrollProperties.contentHeight,
totalRows:this.props.dataSource.getRowCount(),
renderedRows:this.state.curRenderedRowsCount,
visibleRows:Object.keys(this._visibleRows).length};},







getScrollResponder:function(){
return this.refs[SCROLLVIEW_REF] && 
this.refs[SCROLLVIEW_REF].getScrollResponder && 
this.refs[SCROLLVIEW_REF].getScrollResponder();},


setNativeProps:function(props){
this.refs[SCROLLVIEW_REF].setNativeProps(props);},






getDefaultProps:function(){
return {
initialListSize:DEFAULT_INITIAL_ROWS,
pageSize:DEFAULT_PAGE_SIZE,
renderScrollComponent:function(props){return React.createElement(ScrollView,props);},
scrollRenderAheadDistance:DEFAULT_SCROLL_RENDER_AHEAD,
onEndReachedThreshold:DEFAULT_END_REACHED_THRESHOLD};},



getInitialState:function(){
return {
curRenderedRowsCount:this.props.initialListSize,
prevRenderedRowsCount:0,
highlightedRow:{}};},



componentWillMount:function(){

this.scrollProperties = {
visibleHeight:null,
contentHeight:null,
offsetY:0};

this._childFrames = [];
this._visibleRows = {};},


componentDidMount:function(){var _this=this;


this.requestAnimationFrame(function(){
_this._measureAndUpdateScrollProps();});},



componentWillReceiveProps:function(nextProps){
if(this.props.dataSource !== nextProps.dataSource){
this.setState(function(state,props){
var rowsToRender=Math.min(
state.curRenderedRowsCount + props.pageSize,
props.dataSource.getRowCount());

return {
prevRenderedRowsCount:0,
curRenderedRowsCount:rowsToRender};});}},





componentDidUpdate:function(){var _this2=this;
this.requestAnimationFrame(function(){
_this2._measureAndUpdateScrollProps();});},



onRowHighlighted:function(sectionID,rowID){
this.setState({highlightedRow:{sectionID:sectionID,rowID:rowID}});},


render:function(){
var bodyComponents=[];

var dataSource=this.props.dataSource;
var allRowIDs=dataSource.rowIdentities;
var rowCount=0;
var sectionHeaderIndices=[];

var header=this.props.renderHeader && this.props.renderHeader();
var footer=this.props.renderFooter && this.props.renderFooter();
var totalIndex=header?1:0;

for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var sectionID=dataSource.sectionIdentities[sectionIdx];
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length === 0){
continue;}


if(this.props.renderSectionHeader){
var shouldUpdateHeader=rowCount >= this.state.prevRenderedRowsCount && 
dataSource.sectionHeaderShouldUpdate(sectionIdx);
bodyComponents.push(
React.createElement(StaticRenderer,{
key:'s_' + sectionID,
shouldUpdate:!!shouldUpdateHeader,
render:this.props.renderSectionHeader.bind(
null,
dataSource.getSectionHeaderData(sectionIdx),
sectionID)}));



sectionHeaderIndices.push(totalIndex++);}


for(var rowIdx=0;rowIdx < rowIDs.length;rowIdx++) {
var rowID=rowIDs[rowIdx];
var comboID=sectionID + rowID;
var shouldUpdateRow=rowCount >= this.state.prevRenderedRowsCount && 
dataSource.rowShouldUpdate(sectionIdx,rowIdx);
var row=
React.createElement(StaticRenderer,{
key:'r_' + comboID,
shouldUpdate:!!shouldUpdateRow,
render:this.props.renderRow.bind(
null,
dataSource.getRowData(sectionIdx,rowIdx),
sectionID,
rowID,
this.onRowHighlighted)});


bodyComponents.push(row);
totalIndex++;

if(this.props.renderSeparator && (
rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)){
var adjacentRowHighlighted=
this.state.highlightedRow.sectionID === sectionID && (
this.state.highlightedRow.rowID === rowID || 
this.state.highlightedRow.rowID === rowIDs[rowIdx + 1]);

var separator=this.props.renderSeparator(
sectionID,
rowID,
adjacentRowHighlighted);

bodyComponents.push(separator);
totalIndex++;}

if(++rowCount === this.state.curRenderedRowsCount){
break;}}


if(rowCount >= this.state.curRenderedRowsCount){
break;}}var _props=






this.props;var renderScrollComponent=_props.renderScrollComponent;var props=_objectWithoutProperties(_props,['renderScrollComponent']);
if(!props.scrollEventThrottle){
props.scrollEventThrottle = DEFAULT_SCROLL_CALLBACK_THROTTLE;}

Object.assign(props,{
onScroll:this._onScroll,
stickyHeaderIndices:sectionHeaderIndices,
children:[header,bodyComponents,footer]});




return React.cloneElement(renderScrollComponent(props),{
ref:SCROLLVIEW_REF});},







_measureAndUpdateScrollProps:function(){
var scrollComponent=this.getScrollResponder();
if(!scrollComponent || !scrollComponent.getInnerViewNode){
return;}

RCTUIManager.measureLayout(
scrollComponent.getInnerViewNode(),
React.findNodeHandle(scrollComponent),
logError,
this._setScrollContentHeight);

RCTUIManager.measureLayoutRelativeToParent(
React.findNodeHandle(scrollComponent),
logError,
this._setScrollVisibleHeight);



RKScrollViewManager && RKScrollViewManager.calculateChildFrames && 
RKScrollViewManager.calculateChildFrames(
React.findNodeHandle(scrollComponent),
this._updateChildFrames);},



_setScrollContentHeight:function(left,top,width,height){
this.scrollProperties.contentHeight = height;},


_setScrollVisibleHeight:function(left,top,width,height){
this.scrollProperties.visibleHeight = height;
this._updateVisibleRows();
this._renderMoreRowsIfNeeded();},


_updateChildFrames:function(childFrames){
this._updateVisibleRows(childFrames);},


_renderMoreRowsIfNeeded:function(){
if(this.scrollProperties.contentHeight === null || 
this.scrollProperties.visibleHeight === null || 
this.state.curRenderedRowsCount === this.props.dataSource.getRowCount()){
return;}


var distanceFromEnd=this._getDistanceFromEnd(this.scrollProperties);
if(distanceFromEnd < this.props.scrollRenderAheadDistance){
this._pageInNewRows();}},



_pageInNewRows:function(){var _this3=this;
this.setState(function(state,props){
var rowsToRender=Math.min(
state.curRenderedRowsCount + props.pageSize,
props.dataSource.getRowCount());

return {
prevRenderedRowsCount:state.curRenderedRowsCount,
curRenderedRowsCount:rowsToRender};},

function(){
_this3._measureAndUpdateScrollProps();
_this3.setState(function(state){return {
prevRenderedRowsCount:state.curRenderedRowsCount};});});},




_getDistanceFromEnd:function(scrollProperties){
return scrollProperties.contentHeight - 
scrollProperties.visibleHeight - 
scrollProperties.offsetY;},


_updateVisibleRows:function(updatedFrames){var _this4=this;
if(!this.props.onChangeVisibleRows){
return;}

if(updatedFrames){
updatedFrames.forEach(function(newFrame){
_this4._childFrames[newFrame.index] = merge(newFrame);});}


var dataSource=this.props.dataSource;
var visibleTop=this.scrollProperties.offsetY;
var visibleBottom=visibleTop + this.scrollProperties.visibleHeight;
var allRowIDs=dataSource.rowIdentities;

var header=this.props.renderHeader && this.props.renderHeader();
var totalIndex=header?1:0;
var visibilityChanged=false;
var changedRows={};
for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length === 0){
continue;}

var sectionID=dataSource.sectionIdentities[sectionIdx];
if(this.props.renderSectionHeader){
totalIndex++;}

var visibleSection=this._visibleRows[sectionID];
if(!visibleSection){
visibleSection = {};}

for(var rowIdx=0;rowIdx < rowIDs.length;rowIdx++) {
var rowID=rowIDs[rowIdx];
var frame=this._childFrames[totalIndex];
totalIndex++;
if(!frame){
break;}

var rowVisible=visibleSection[rowID];
var top=frame.y;
var bottom=top + frame.height;
if(top > visibleBottom || bottom < visibleTop){
if(rowVisible){
visibilityChanged = true;
delete visibleSection[rowID];
if(!changedRows[sectionID]){
changedRows[sectionID] = {};}

changedRows[sectionID][rowID] = false;}}else 

if(!rowVisible){
visibilityChanged = true;
visibleSection[rowID] = true;
if(!changedRows[sectionID]){
changedRows[sectionID] = {};}

changedRows[sectionID][rowID] = true;}}


if(!isEmpty(visibleSection)){
this._visibleRows[sectionID] = visibleSection;}else 
if(this._visibleRows[sectionID]){
delete this._visibleRows[sectionID];}}


visibilityChanged && this.props.onChangeVisibleRows(this._visibleRows,changedRows);},


_onScroll:function(e){
this.scrollProperties.visibleHeight = e.nativeEvent.layoutMeasurement.height;
this.scrollProperties.contentHeight = e.nativeEvent.contentSize.height;
this.scrollProperties.offsetY = e.nativeEvent.contentOffset.y;
this._updateVisibleRows(e.nativeEvent.updatedChildFrames);
var nearEnd=this._getDistanceFromEnd(this.scrollProperties) < this.props.onEndReachedThreshold;
if(nearEnd && 
this.props.onEndReached && 
this.scrollProperties.contentHeight !== this._sentEndForContentHeight && 
this.state.curRenderedRowsCount === this.props.dataSource.getRowCount()){
this._sentEndForContentHeight = this.scrollProperties.contentHeight;
this.props.onEndReached(e);}else 
{
this._renderMoreRowsIfNeeded();}


this.props.onScroll && this.props.onScroll(e);}});



module.exports = ListView;
});
__d('ListViewDataSource',["invariant","isEmpty","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}





























var invariant=require('invariant');
var isEmpty=require('isEmpty');
var warning=require('warning');

function defaultGetRowData(
dataBlob,
sectionID,
rowID)
{
return dataBlob[sectionID][rowID];}


function defaultGetSectionHeaderData(
dataBlob,
sectionID)
{
return dataBlob[sectionID];}var 













































ListViewDataSource=(function(){


























function ListViewDataSource(params){_classCallCheck(this,ListViewDataSource);
invariant(
params && typeof params.rowHasChanged === 'function',
'Must provide a rowHasChanged function.');

this._rowHasChanged = params.rowHasChanged;
this._getRowData = params.getRowData || defaultGetRowData;
this._sectionHeaderHasChanged = params.sectionHeaderHasChanged;
this._getSectionHeaderData = 
params.getSectionHeaderData || defaultGetSectionHeaderData;

this._dataBlob = null;
this._dirtyRows = [];
this._dirtySections = [];
this._cachedRowCount = 0;



this.rowIdentities = [];
this.sectionIdentities = [];}_createClass(ListViewDataSource,[{key:'cloneWithRows',value:


















function cloneWithRows(
dataBlob,
rowIdentities)
{
var rowIds=rowIdentities?[rowIdentities]:null;
if(!this._sectionHeaderHasChanged){
this._sectionHeaderHasChanged = function(){return false;};}

return this.cloneWithRowsAndSections({s1:dataBlob},['s1'],rowIds);}},{key:'cloneWithRowsAndSections',value:













function cloneWithRowsAndSections(
dataBlob,
sectionIdentities,
rowIdentities)
{
invariant(
typeof this._sectionHeaderHasChanged === 'function',
'Must provide a sectionHeaderHasChanged function with section data.');

var newSource=new ListViewDataSource({
getRowData:this._getRowData,
getSectionHeaderData:this._getSectionHeaderData,
rowHasChanged:this._rowHasChanged,
sectionHeaderHasChanged:this._sectionHeaderHasChanged});

newSource._dataBlob = dataBlob;
if(sectionIdentities){
newSource.sectionIdentities = sectionIdentities;}else 
{
newSource.sectionIdentities = Object.keys(dataBlob);}

if(rowIdentities){
newSource.rowIdentities = rowIdentities;}else 
{
newSource.rowIdentities = [];
newSource.sectionIdentities.forEach(function(sectionID){
newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));});}


newSource._cachedRowCount = countRows(newSource.rowIdentities);

newSource._calculateDirtyArrays(
this._dataBlob,
this.sectionIdentities,
this.rowIdentities);


return newSource;}},{key:'getRowCount',value:


function getRowCount(){
return this._cachedRowCount;}},{key:'rowShouldUpdate',value:





function rowShouldUpdate(sectionIndex,rowIndex){
var needsUpdate=this._dirtyRows[sectionIndex][rowIndex];
warning(needsUpdate !== undefined,
'missing dirtyBit for section, row: ' + sectionIndex + ', ' + rowIndex);
return needsUpdate;}},{key:'getRowData',value:





function getRowData(sectionIndex,rowIndex){
var sectionID=this.sectionIdentities[sectionIndex];
var rowID=this.rowIdentities[sectionIndex][rowIndex];
warning(
sectionID !== undefined && rowID !== undefined,
'rendering invalid section, row: ' + sectionIndex + ', ' + rowIndex);

return this._getRowData(this._dataBlob,sectionID,rowID);}},{key:'getRowIDForFlatIndex',value:






function getRowIDForFlatIndex(index){
var accessIndex=index;
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
if(accessIndex >= this.rowIdentities[ii].length){
accessIndex -= this.rowIdentities[ii].length;}else 
{
return this.rowIdentities[ii][accessIndex];}}


return null;}},{key:'getSectionIDForFlatIndex',value:






function getSectionIDForFlatIndex(index){
var accessIndex=index;
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
if(accessIndex >= this.rowIdentities[ii].length){
accessIndex -= this.rowIdentities[ii].length;}else 
{
return this.sectionIdentities[ii];}}


return null;}},{key:'getSectionLengths',value:





function getSectionLengths(){
var results=[];
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
results.push(this.rowIdentities[ii].length);}

return results;}},{key:'sectionHeaderShouldUpdate',value:





function sectionHeaderShouldUpdate(sectionIndex){
var needsUpdate=this._dirtySections[sectionIndex];
warning(needsUpdate !== undefined,
'missing dirtyBit for section: ' + sectionIndex);
return needsUpdate;}},{key:'getSectionHeaderData',value:





function getSectionHeaderData(sectionIndex){
if(!this._getSectionHeaderData){
return null;}

var sectionID=this.sectionIdentities[sectionIndex];
warning(sectionID !== undefined,
'renderSection called on invalid section: ' + sectionIndex);
return this._getSectionHeaderData(this._dataBlob,sectionID);}},{key:'_calculateDirtyArrays',value:





















function _calculateDirtyArrays(
prevDataBlob,
prevSectionIDs,
prevRowIDs)
{

var prevSectionsHash=keyedDictionaryFromArray(prevSectionIDs);
var prevRowsHash={};
for(var ii=0;ii < prevRowIDs.length;ii++) {
var sectionID=prevSectionIDs[ii];
warning(
!prevRowsHash[sectionID],
'SectionID appears more than once: ' + sectionID);

prevRowsHash[sectionID] = keyedDictionaryFromArray(prevRowIDs[ii]);}



this._dirtySections = [];
this._dirtyRows = [];

var dirty;
for(var sIndex=0;sIndex < this.sectionIdentities.length;sIndex++) {
var sectionID=this.sectionIdentities[sIndex];

dirty = !prevSectionsHash[sectionID];
var sectionHeaderHasChanged=this._sectionHeaderHasChanged;
if(!dirty && sectionHeaderHasChanged){
dirty = sectionHeaderHasChanged(
this._getSectionHeaderData(prevDataBlob,sectionID),
this._getSectionHeaderData(this._dataBlob,sectionID));}


this._dirtySections.push(!!dirty);

this._dirtyRows[sIndex] = [];
for(var rIndex=0;rIndex < this.rowIdentities[sIndex].length;rIndex++) {
var rowID=this.rowIdentities[sIndex][rIndex];

dirty = 
!prevSectionsHash[sectionID] || 
!prevRowsHash[sectionID][rowID] || 
this._rowHasChanged(
this._getRowData(prevDataBlob,sectionID,rowID),
this._getRowData(this._dataBlob,sectionID,rowID));

this._dirtyRows[sIndex].push(!!dirty);}}}}]);return ListViewDataSource;})();





function countRows(allRowIDs){
var totalRows=0;
for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var rowIDs=allRowIDs[sectionIdx];
totalRows += rowIDs.length;}

return totalRows;}


function keyedDictionaryFromArray(arr){
if(isEmpty(arr)){
return {};}

var result={};
for(var ii=0;ii < arr.length;ii++) {
var key=arr[ii];
warning(!result[key],'Value appears more than once in array: ' + key);
result[key] = true;}

return result;}



module.exports = ListViewDataSource;
});
__d('isEmpty',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 



















isEmpty(obj){
if(Array.isArray(obj)){
return obj.length === 0;}else 
if(typeof obj === 'object'){
for(var i in obj) {
return false;}

return true;}else 
{
return !obj;}}



module.exports = isEmpty;
});
__d('ScrollView',["EdgeInsetsPropType","Platform","PointPropType","NativeModules","React","ReactNativeViewAttributes","NativeModules","ScrollResponder","StyleSheet","StyleSheetPropType","View","ViewStylePropTypes","createReactNativeComponentClass","deepDiffer","flattenStyle","insetsDiffer","invariant","pointsDiffer","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var Platform=require('Platform');
var PointPropType=require('PointPropType');
var RCTScrollView=require('NativeModules').UIManager.RCTScrollView;
var RCTScrollViewConsts=RCTScrollView.Constants;
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTUIManager=require('NativeModules').UIManager;
var ScrollResponder=require('ScrollResponder');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');
var View=require('View');
var ViewStylePropTypes=require('ViewStylePropTypes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var flattenStyle=require('flattenStyle');
var insetsDiffer=require('insetsDiffer');
var invariant=require('invariant');
var pointsDiffer=require('pointsDiffer');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;

var SCROLLVIEW='ScrollView';
var INNERVIEW='InnerScrollView';

















var ScrollView=React.createClass({displayName:'ScrollView',
propTypes:{
automaticallyAdjustContentInsets:PropTypes.bool,
contentInset:EdgeInsetsPropType,
contentOffset:PointPropType,
onScroll:PropTypes.func,
onScrollAnimationEnd:PropTypes.func,
scrollEnabled:PropTypes.bool,
scrollIndicatorInsets:EdgeInsetsPropType,
showsHorizontalScrollIndicator:PropTypes.bool,
showsVerticalScrollIndicator:PropTypes.bool,
style:StyleSheetPropType(ViewStylePropTypes),
scrollEventThrottle:PropTypes.number,







bounces:PropTypes.bool,





bouncesZoom:PropTypes.bool,





alwaysBounceHorizontal:PropTypes.bool,





alwaysBounceVertical:PropTypes.bool,






centerContent:PropTypes.bool,















contentContainerStyle:StyleSheetPropType(ViewStylePropTypes),






decelerationRate:PropTypes.number,




horizontal:PropTypes.bool,




directionalLockEnabled:PropTypes.bool,




canCancelContentTouches:PropTypes.bool,








keyboardDismissMode:PropTypes.oneOf([
'none',
'interactive',
'on-drag']),







keyboardShouldPersistTaps:PropTypes.bool,



maximumZoomScale:PropTypes.number,



minimumZoomScale:PropTypes.number,





pagingEnabled:PropTypes.bool,




scrollsToTop:PropTypes.bool,







stickyHeaderIndices:PropTypes.arrayOf(PropTypes.number),






removeClippedSubviews:PropTypes.bool,



zoomScale:PropTypes.number},


mixins:[ScrollResponder.Mixin],

getInitialState:function(){
return this.scrollResponderMixinGetInitialState();},


setNativeProps:function(props){
this.refs[SCROLLVIEW].setNativeProps(props);},








getScrollResponder:function(){
return this;},


getInnerViewNode:function(){
return React.findNodeHandle(this.refs[INNERVIEW]);},


scrollTo:function(destY,destX){
if(Platform.OS === 'android'){
RCTUIManager.dispatchViewManagerCommand(
React.findNodeHandle(this),
RCTUIManager.RCTScrollView.Commands.scrollTo,
[destX || 0,destY || 0]);}else 

{
RCTUIManager.scrollTo(
React.findNodeHandle(this),
destX || 0,
destY || 0);}},




scrollWithoutAnimationTo:function(destY,destX){
RCTUIManager.scrollWithoutAnimationTo(
React.findNodeHandle(this),
destX || 0,
destY || 0);},



render:function(){
var contentContainerStyle=[
this.props.horizontal && styles.contentContainerHorizontal,
this.props.contentContainerStyle];

if(__DEV__ && this.props.style){
var style=flattenStyle(this.props.style);
var childLayoutProps=['alignItems','justifyContent'].
filter(function(prop){return style && style[prop] !== undefined;});
invariant(
childLayoutProps.length === 0,
'ScrollView child layout (' + JSON.stringify(childLayoutProps) + 
') must by applied through the contentContainerStyle prop.');}


if(__DEV__){
if(this.props.onScroll && !this.props.scrollEventThrottle){
var onScroll=this.props.onScroll;
this.props.onScroll = function(){
console.log(
'You specified `onScroll` on a <ScrollView> but not ' + 
'`scrollEventThrottle`. You will only receive one event. ' + 
'Using `16` you get all the events but be aware that it may ' + 
'cause frame drops, use a bigger number if you don\'t need as ' + 
'much precision.');

onScroll.apply(this,arguments);};}}




var contentContainer=
React.createElement(View,{
ref:INNERVIEW,
style:contentContainerStyle,
removeClippedSubviews:this.props.removeClippedSubviews},
this.props.children);


var alwaysBounceHorizontal=
this.props.alwaysBounceHorizontal !== undefined?
this.props.alwaysBounceHorizontal:
this.props.horizontal;

var alwaysBounceVertical=
this.props.alwaysBounceVertical !== undefined?
this.props.alwaysBounceVertical:
!this.props.horizontal;

var props=_extends({},
this.props,{
alwaysBounceHorizontal:alwaysBounceHorizontal,
alwaysBounceVertical:alwaysBounceVertical,
style:[styles.base,this.props.style],
onTouchStart:this.scrollResponderHandleTouchStart,
onTouchMove:this.scrollResponderHandleTouchMove,
onTouchEnd:this.scrollResponderHandleTouchEnd,
onScrollBeginDrag:this.scrollResponderHandleScrollBeginDrag,
onScrollEndDrag:this.scrollResponderHandleScrollEndDrag,
onMomentumScrollBegin:this.scrollResponderHandleMomentumScrollBegin,
onMomentumScrollEnd:this.scrollResponderHandleMomentumScrollEnd,
onStartShouldSetResponder:this.scrollResponderHandleStartShouldSetResponder,
onStartShouldSetResponderCapture:this.scrollResponderHandleStartShouldSetResponderCapture,
onScrollShouldSetResponder:this.scrollResponderHandleScrollShouldSetResponder,
onScroll:this.scrollResponderHandleScroll,
onResponderGrant:this.scrollResponderHandleResponderGrant,
onResponderTerminationRequest:this.scrollResponderHandleTerminationRequest,
onResponderTerminate:this.scrollResponderHandleTerminate,
onResponderRelease:this.scrollResponderHandleResponderRelease,
onResponderReject:this.scrollResponderHandleResponderReject});


var ScrollViewClass;
if(Platform.OS === 'ios'){
ScrollViewClass = RCTScrollView;}else 
if(Platform.OS === 'android'){
if(this.props.horizontal){
ScrollViewClass = AndroidHorizontalScrollView;}else 
{
ScrollViewClass = AndroidScrollView;}

var keyboardDismissModeConstants={
'none':RCTScrollViewConsts.KeyboardDismissMode.None,
'interactive':RCTScrollViewConsts.KeyboardDismissMode.Interactive,
'on-drag':RCTScrollViewConsts.KeyboardDismissMode.OnDrag};

props.keyboardDismissMode = props.keyboardDismissMode?
keyboardDismissModeConstants[props.keyboardDismissMode]:undefined;}

invariant(
ScrollViewClass !== undefined,
'ScrollViewClass must not be undefined');


return (
React.createElement(ScrollViewClass,_extends({},props,{ref:SCROLLVIEW}),
contentContainer));}});





var styles=StyleSheet.create({
base:{
flex:1},

contentContainerHorizontal:{
alignSelf:'flex-start',
flexDirection:'row'}});



var validAttributes=_extends({},
ReactNativeViewAttributes.UIView,{
alwaysBounceHorizontal:true,
alwaysBounceVertical:true,
automaticallyAdjustContentInsets:true,
bounces:true,
centerContent:true,
contentInset:{diff:insetsDiffer},
contentOffset:{diff:pointsDiffer},
decelerationRate:true,
horizontal:true,
keyboardDismissMode:true,
keyboardShouldPersistTaps:true,
maximumZoomScale:true,
minimumZoomScale:true,
pagingEnabled:true,
removeClippedSubviews:true,
scrollEnabled:true,
scrollIndicatorInsets:{diff:insetsDiffer},
scrollsToTop:true,
showsHorizontalScrollIndicator:true,
showsVerticalScrollIndicator:true,
stickyHeaderIndices:{diff:deepDiffer},
scrollEventThrottle:true,
zoomScale:true});


if(Platform.OS === 'android'){
var AndroidScrollView=createReactNativeComponentClass({
validAttributes:validAttributes,
uiViewClassName:'RCTScrollView'});

var AndroidHorizontalScrollView=createReactNativeComponentClass({
validAttributes:validAttributes,
uiViewClassName:'AndroidHorizontalScrollView'});}else 

if(Platform.OS === 'ios'){
var RCTScrollView=requireNativeComponent('RCTScrollView',ScrollView);}


module.exports = ScrollView;
});
__d('PointPropType',["ReactPropTypes","createStrictShapeTypeChecker"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var PointPropType=createStrictShapeTypeChecker({
x:PropTypes.number,
y:PropTypes.number});


module.exports = PointPropType;
});
__d('ScrollResponder',["NativeModules","RCTDeviceEventEmitter","React","Subscribable","TextInputState","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var Subscribable=require('Subscribable');
var TextInputState=require('TextInputState');

var RCTUIManager=NativeModules.UIManager;
var RCTUIManagerDeprecated=NativeModules.UIManager;
var RCTScrollViewConsts=RCTUIManager.RCTScrollView.Constants;

var warning=require('warning');















































































var IS_ANIMATING_TOUCH_START_THRESHOLD_MS=16;










var ScrollResponderMixin={
mixins:[Subscribable.Mixin],
statics:RCTScrollViewConsts,
scrollResponderMixinGetInitialState:function(){
return {
isTouching:false,
lastMomentumScrollBeginTime:0,
lastMomentumScrollEndTime:0,






observedScrollSinceBecomingResponder:false,
becameResponderWhileAnimating:false};},






scrollResponderHandleScrollShouldSetResponder:function(){
return this.state.isTouching;},



























scrollResponderHandleStartShouldSetResponder:function(){
return false;},













scrollResponderHandleStartShouldSetResponderCapture:function(e){

var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(!this.props.keyboardShouldPersistTaps && 
currentlyFocusedTextInput != null && 
e.target !== currentlyFocusedTextInput){
return true;}

return this.scrollResponderIsAnimating();},












scrollResponderHandleResponderReject:function(){
warning(false,"ScrollView doesn't take rejection well - scrolls anyway");},

















scrollResponderHandleTerminationRequest:function(){
return !this.state.observedScrollSinceBecomingResponder;},







scrollResponderHandleTouchEnd:function(e){
var nativeEvent=e.nativeEvent;
this.state.isTouching = nativeEvent.touches.length !== 0;
this.props.onTouchEnd && this.props.onTouchEnd(e);},





scrollResponderHandleResponderRelease:function(e){
this.props.onResponderRelease && this.props.onResponderRelease(e);



var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(!this.props.keyboardShouldPersistTaps && 
currentlyFocusedTextInput != null && 
e.target !== currentlyFocusedTextInput && 
!this.state.observedScrollSinceBecomingResponder && 
!this.state.becameResponderWhileAnimating){
this.props.onScrollResponderKeyboardDismissed && 
this.props.onScrollResponderKeyboardDismissed(e);
TextInputState.blurTextInput(currentlyFocusedTextInput);}},



scrollResponderHandleScroll:function(e){
this.state.observedScrollSinceBecomingResponder = true;
this.props.onScroll && this.props.onScroll(e);},





scrollResponderHandleResponderGrant:function(e){
this.state.observedScrollSinceBecomingResponder = false;
this.props.onResponderGrant && this.props.onResponderGrant(e);
this.state.becameResponderWhileAnimating = this.scrollResponderIsAnimating();},









scrollResponderHandleScrollBeginDrag:function(e){
this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);},





scrollResponderHandleScrollEndDrag:function(e){
this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);},





scrollResponderHandleMomentumScrollBegin:function(e){
this.state.lastMomentumScrollBeginTime = Date.now();
this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);},





scrollResponderHandleMomentumScrollEnd:function(e){
this.state.lastMomentumScrollEndTime = Date.now();
this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);},













scrollResponderHandleTouchStart:function(e){
this.state.isTouching = true;
this.props.onTouchStart && this.props.onTouchStart(e);},













scrollResponderHandleTouchMove:function(e){
this.props.onTouchMove && this.props.onTouchMove(e);},







scrollResponderIsAnimating:function(){
var now=Date.now();
var timeSinceLastMomentumScrollEnd=now - this.state.lastMomentumScrollEndTime;
var isAnimating=timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || 
this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;
return isAnimating;},







scrollResponderScrollTo:function(offsetX,offsetY){
RCTUIManagerDeprecated.scrollTo(React.findNodeHandle(this),offsetX,offsetY);},






scrollResponderZoomTo:function(rect){
RCTUIManagerDeprecated.zoomToRect(React.findNodeHandle(this),rect);},












scrollResponderScrollNativeHandleToKeyboard:function(nodeHandle,additionalOffset,preventNegativeScrollOffset){
this.additionalScrollOffset = additionalOffset || 0;
this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;
RCTUIManager.measureLayout(
nodeHandle,
React.findNodeHandle(this),
this.scrollResponderTextInputFocusError,
this.scrollResponderInputMeasureAndScrollToKeyboard);},













scrollResponderInputMeasureAndScrollToKeyboard:function(left,top,width,height){
if(this.keyboardWillOpenTo){
var scrollOffsetY=
top - this.keyboardWillOpenTo.endCoordinates.screenY + height + 
this.additionalScrollOffset;





if(this.preventNegativeScrollOffset){
scrollOffsetY = Math.max(0,scrollOffsetY);}

this.scrollResponderScrollTo(0,scrollOffsetY);}

this.additionalOffset = 0;
this.preventNegativeScrollOffset = false;},


scrollResponderTextInputFocusError:function(e){
console.error('Error measuring text field: ',e);},








componentWillMount:function(){
this.keyboardWillOpenTo = null;
this.additionalScrollOffset = 0;
this.addListenerOn(RCTDeviceEventEmitter,'keyboardWillShow',this.scrollResponderKeyboardWillShow);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardWillHide',this.scrollResponderKeyboardWillHide);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardDidShow',this.scrollResponderKeyboardDidShow);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardDidHide',this.scrollResponderKeyboardDidHide);},






























scrollResponderKeyboardWillShow:function(e){
this.keyboardWillOpenTo = e;
this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);},


scrollResponderKeyboardWillHide:function(e){
this.keyboardWillOpenTo = null;
this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);},


scrollResponderKeyboardDidShow:function(){
this.keyboardWillOpenTo = null;
this.props.onKeyboardDidShow && this.props.onKeyboardDidShow();},


scrollResponderKeyboardDidHide:function(){
this.keyboardWillOpenTo = null;
this.props.onKeyboardDidHide && this.props.onKeyboardDidHide();}};




var ScrollResponder={
Mixin:ScrollResponderMixin};


module.exports = ScrollResponder;
});
__d('Subscribable',["EventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






















var Subscribable={};

Subscribable.Mixin = {

componentWillMount:function(){
this._subscribableSubscriptions = [];},


componentWillUnmount:function(){
this._subscribableSubscriptions.forEach(
function(subscription){return subscription.remove();});

this._subscribableSubscriptions = null;},















addListenerOn:function(
eventEmitter,
eventType,
listener,
context)
{
this._subscribableSubscriptions.push(
eventEmitter.addListener(eventType,listener,context));}};




module.exports = Subscribable;
});
__d('StaticRenderer',["React"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');

var StaticRenderer=React.createClass({displayName:'StaticRenderer',
propTypes:{
shouldUpdate:React.PropTypes.bool.isRequired,
render:React.PropTypes.func.isRequired},


shouldComponentUpdate:function(nextProps){
return nextProps.shouldUpdate;},


render:function(){
return this.props.render();}});



module.exports = StaticRenderer;
});
__d('react-timer-mixin/TimerMixin.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';










var GLOBAL=typeof window === 'undefined'?global:window;

var setter=function(_setter,_clearer,array){
return function(callback,delta){
var id=_setter((function(){
_clearer.call(this,id);
callback.apply(this,arguments);}).
bind(this),delta);

if(!this[array]){
this[array] = [id];}else 
{
this[array].push(id);}

return id;};};



var clearer=function(_clearer,array){
return function(id){
if(this[array]){
var index=this[array].indexOf(id);
if(index !== -1){
this[array].splice(index,1);}}


_clearer(id);};};



var _timeouts='TimerMixin_timeouts';
var _clearTimeout=clearer(GLOBAL.clearTimeout,_timeouts);
var _setTimeout=setter(GLOBAL.setTimeout,_clearTimeout,_timeouts);

var _intervals='TimerMixin_intervals';
var _clearInterval=clearer(GLOBAL.clearInterval,_intervals);
var _setInterval=setter(GLOBAL.setInterval,function(){},_intervals);

var _immediates='TimerMixin_immediates';
var _clearImmediate=clearer(GLOBAL.clearImmediate,_immediates);
var _setImmediate=setter(GLOBAL.setImmediate,_clearImmediate,_immediates);

var _rafs='TimerMixin_rafs';
var _cancelAnimationFrame=clearer(GLOBAL.cancelAnimationFrame,_rafs);
var _requestAnimationFrame=setter(GLOBAL.requestAnimationFrame,_cancelAnimationFrame,_rafs);

var TimerMixin={
componentWillUnmount:function(){
this[_timeouts] && this[_timeouts].forEach(this.clearTimeout);
this[_intervals] && this[_intervals].forEach(this.clearInterval);
this[_immediates] && this[_immediates].forEach(this.clearImmediate);
this[_rafs] && this[_rafs].forEach(this.cancelAnimationFrame);},


setTimeout:_setTimeout,
clearTimeout:_clearTimeout,

setInterval:_setInterval,
clearInterval:_clearInterval,

setImmediate:_setImmediate,
clearImmediate:_clearImmediate,

requestAnimationFrame:_requestAnimationFrame,
cancelAnimationFrame:_cancelAnimationFrame};


module.exports = TimerMixin;
});
__d('MapView',["EdgeInsetsPropType","NativeMethodsMixin","Platform","React","ReactNativeViewAttributes","View","createReactNativeComponentClass","deepDiffer","insetsDiffer","merge","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var View=require('View');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var insetsDiffer=require('insetsDiffer');
var merge=require('merge');
var requireNativeComponent=require('requireNativeComponent');









var MapView=React.createClass({displayName:'MapView',
mixins:[NativeMethodsMixin],

checkAnnotationIds:function(annotations){

var newAnnotations=annotations.map(function(annotation){
if(!annotation.id){

annotation.id = encodeURIComponent(JSON.stringify(annotation));}


return annotation;});


this.setState({
annotations:newAnnotations});},



componentWillMount:function(){
if(this.props.annotations){
this.checkAnnotationIds(this.props.annotations);}},



componentWillReceiveProps:function(nextProps){
if(nextProps.annotations){
this.checkAnnotationIds(nextProps.annotations);}},



propTypes:{




style:View.propTypes.style,









showsUserLocation:React.PropTypes.bool,





zoomEnabled:React.PropTypes.bool,








rotateEnabled:React.PropTypes.bool,








pitchEnabled:React.PropTypes.bool,





scrollEnabled:React.PropTypes.bool,








mapType:React.PropTypes.oneOf([
'standard',
'satellite',
'hybrid']),








region:React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired,





latitudeDelta:React.PropTypes.number.isRequired,
longitudeDelta:React.PropTypes.number.isRequired}),





annotations:React.PropTypes.arrayOf(React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired,




animateDrop:React.PropTypes.bool,




title:React.PropTypes.string,
subtitle:React.PropTypes.string,




hasLeftCallout:React.PropTypes.bool,
hasRightCallout:React.PropTypes.bool,




onLeftCalloutPress:React.PropTypes.func,
onRightCalloutPress:React.PropTypes.func,




id:React.PropTypes.string})),






maxDelta:React.PropTypes.number,




minDelta:React.PropTypes.number,





legalLabelInsets:EdgeInsetsPropType,




onRegionChange:React.PropTypes.func,




onRegionChangeComplete:React.PropTypes.func,




onAnnotationPress:React.PropTypes.func},


_onChange:function(event){
if(event.nativeEvent.continuous){
this.props.onRegionChange && 
this.props.onRegionChange(event.nativeEvent.region);}else 
{
this.props.onRegionChangeComplete && 
this.props.onRegionChangeComplete(event.nativeEvent.region);}},



_onPress:function(event){
if(event.nativeEvent.action === 'annotation-click'){
this.props.onAnnotationPress && this.props.onAnnotationPress(event.nativeEvent.annotation);}


if(event.nativeEvent.action === 'callout-click'){
if(!this.props.annotations){
return;}



for(var i=0;i < this.props.annotations.length;i++) {
var annotation=this.props.annotations[i];
if(annotation.id === event.nativeEvent.annotationId){

if(event.nativeEvent.side === 'left'){
annotation.onLeftCalloutPress && annotation.onLeftCalloutPress(event.nativeEvent);}else 
if(event.nativeEvent.side === 'right'){
annotation.onRightCalloutPress && annotation.onRightCalloutPress(event.nativeEvent);}}}}},







render:function(){
return React.createElement(RCTMap,_extends({},this.props,{onPress:this._onPress,onChange:this._onChange}));}});



if(Platform.OS === 'android'){
var RCTMap=createReactNativeComponentClass({
validAttributes:merge(
ReactNativeViewAttributes.UIView,{
active:true,
showsUserLocation:true,
zoomEnabled:true,
rotateEnabled:true,
pitchEnabled:true,
scrollEnabled:true,
region:{diff:deepDiffer},
annotations:{diff:deepDiffer},
maxDelta:true,
minDelta:true,
legalLabelInsets:{diff:insetsDiffer}}),


uiViewClassName:'RCTMap'});}else 

{
var RCTMap=requireNativeComponent('RCTMap',MapView);}


module.exports = MapView;
});
__d('Navigator',["NativeModules","Dimensions","InteractionMixin","Map","NavigationContext","NavigatorBreadcrumbNavigationBar","NavigatorNavigationBar","NavigatorSceneConfigs","PanResponder","React","StaticContainer.react","StyleSheet","Subscribable","View","clamp","flattenStyle","invariant","react-timer-mixin/TimerMixin.js","rebound/rebound.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};




























var AnimationsDebugModule=require('NativeModules').AnimationsDebugModule;
var Dimensions=require('Dimensions');
var InteractionMixin=require('InteractionMixin');
var Map=require('Map');
var NavigationContext=require('NavigationContext');
var NavigatorBreadcrumbNavigationBar=require('NavigatorBreadcrumbNavigationBar');
var NavigatorNavigationBar=require('NavigatorNavigationBar');
var NavigatorSceneConfigs=require('NavigatorSceneConfigs');
var PanResponder=require('PanResponder');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var View=require('View');

var clamp=require('clamp');
var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var rebound=require('rebound/rebound.js');

var PropTypes=React.PropTypes;




var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;
var SCENE_DISABLED_NATIVE_PROPS={
style:{
left:SCREEN_WIDTH,
opacity:0}};



var __uid=0;
function getuid(){
return __uid++;}



var styles=StyleSheet.create({
container:{
flex:1,
overflow:'hidden'},

defaultSceneStyle:{
position:'absolute',
left:0,
right:0,
bottom:0,
top:0},

baseScene:{
position:'absolute',
overflow:'hidden',
left:0,
right:0,
bottom:0,
top:0},

disabledScene:{
left:SCREEN_WIDTH},

transitioner:{
flex:1,
backgroundColor:'transparent',
overflow:'hidden'}});



var GESTURE_ACTIONS=[
'pop',
'jumpBack',
'jumpForward'];





























































var Navigator=React.createClass({displayName:'Navigator',

propTypes:{









configureScene:PropTypes.func,










renderScene:PropTypes.func.isRequired,







initialRoute:PropTypes.object,






initialRouteStack:PropTypes.arrayOf(PropTypes.object),







onWillFocus:PropTypes.func,








onDidFocus:PropTypes.func,




onItemRef:PropTypes.func,





navigationBar:PropTypes.node,




navigator:PropTypes.object,




sceneStyle:View.propTypes.style},


statics:{
BreadcrumbNavigationBar:NavigatorBreadcrumbNavigationBar,
NavigationBar:NavigatorNavigationBar,
SceneConfigs:NavigatorSceneConfigs},


mixins:[TimerMixin,InteractionMixin,Subscribable.Mixin],

getDefaultProps:function(){
return {
configureScene:function(){return NavigatorSceneConfigs.PushFromRight;},
sceneStyle:styles.defaultSceneStyle};},



getInitialState:function(){var _this=this;
this._renderedSceneMap = new Map();

var routeStack=this.props.initialRouteStack || [this.props.initialRoute];
invariant(
routeStack.length >= 1,
'Navigator requires props.initialRoute or props.initialRouteStack.');

var initialRouteIndex=routeStack.length - 1;
if(this.props.initialRoute){
initialRouteIndex = routeStack.indexOf(this.props.initialRoute);
invariant(
initialRouteIndex !== -1,
'initialRoute is not in initialRouteStack.');}


return {
sceneConfigStack:routeStack.map(
function(route){return _this.props.configureScene(route);}),

idStack:routeStack.map(function(){return getuid();}),
routeStack:routeStack,
presentedIndex:initialRouteIndex,
transitionFromIndex:null,
activeGesture:null,
pendingGestureProgress:null,
transitionQueue:[]};},



componentWillMount:function(){var _this2=this;

this.__defineGetter__('navigationContext',this._getNavigationContext);

this._subRouteFocus = [];
this.parentNavigator = this.props.navigator;
this._handlers = {};
this.springSystem = new rebound.SpringSystem();
this.spring = this.springSystem.createSpring();
this.spring.setRestSpeedThreshold(0.05);
this.spring.setCurrentValue(0).setAtRest();
this.spring.addListener({
onSpringEndStateChange:function(){
if(!_this2._interactionHandle){
_this2._interactionHandle = _this2.createInteractionHandle();}},


onSpringUpdate:function(){
_this2._handleSpringUpdate();},

onSpringAtRest:function(){
_this2._completeTransition();}});


this.panGesture = PanResponder.create({
onMoveShouldSetPanResponder:this._handleMoveShouldSetPanResponder,
onPanResponderGrant:this._handlePanResponderGrant,
onPanResponderRelease:this._handlePanResponderRelease,
onPanResponderMove:this._handlePanResponderMove,
onPanResponderTerminate:this._handlePanResponderTerminate});

this._itemRefs = {};
this._interactionHandle = null;
this._emitWillFocus(this.state.routeStack[this.state.presentedIndex]);},


componentDidMount:function(){
this._handleSpringUpdate();
this._emitDidFocus(this.state.routeStack[this.state.presentedIndex]);},


componentWillUnmount:function(){
if(this._navigationContext){
this._navigationContext.dispose();
this._navigationContext = null;}},










immediatelyResetRouteStack:function(nextRouteStack){var _this3=this;
var destIndex=nextRouteStack.length - 1;
this.setState({
idStack:nextRouteStack.map(getuid),
routeStack:nextRouteStack,
sceneConfigStack:nextRouteStack.map(
this.props.configureScene),

presentedIndex:destIndex,
activeGesture:null,
transitionFromIndex:null,
transitionQueue:[]},
function(){
_this3._handleSpringUpdate();});},



_transitionTo:function(destIndex,velocity,jumpSpringTo,cb){
if(destIndex === this.state.presentedIndex){
return;}

if(this.state.transitionFromIndex !== null){
this.state.transitionQueue.push({
destIndex:destIndex,
velocity:velocity,
cb:cb});

return;}

this.state.transitionFromIndex = this.state.presentedIndex;
this.state.presentedIndex = destIndex;
this.state.transitionCb = cb;
this._onAnimationStart();
if(AnimationsDebugModule){
AnimationsDebugModule.startRecordingFps();}

var sceneConfig=this.state.sceneConfigStack[this.state.transitionFromIndex] || 
this.state.sceneConfigStack[this.state.presentedIndex];
invariant(
sceneConfig,
'Cannot configure scene at index ' + this.state.transitionFromIndex);

if(jumpSpringTo != null){
this.spring.setCurrentValue(jumpSpringTo);}

this.spring.setOvershootClampingEnabled(true);
this.spring.getSpringConfig().friction = sceneConfig.springFriction;
this.spring.getSpringConfig().tension = sceneConfig.springTension;
this.spring.setVelocity(velocity || sceneConfig.defaultTransitionVelocity);
this.spring.setEndValue(1);},






_handleSpringUpdate:function(){

if(this.state.transitionFromIndex != null){
this._transitionBetween(
this.state.transitionFromIndex,
this.state.presentedIndex,
this.spring.getCurrentValue());}else 

if(this.state.activeGesture != null){
var presentedToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._transitionBetween(
this.state.presentedIndex,
presentedToIndex,
this.spring.getCurrentValue());}},







_completeTransition:function(){
if(this.spring.getCurrentValue() !== 1 && this.spring.getCurrentValue() !== 0){


if(this.state.pendingGestureProgress){
this.state.pendingGestureProgress = null;}

return;}

this._onAnimationEnd();
var presentedIndex=this.state.presentedIndex;
var didFocusRoute=this._subRouteFocus[presentedIndex] || this.state.routeStack[presentedIndex];
this._emitDidFocus(didFocusRoute);
if(AnimationsDebugModule){
AnimationsDebugModule.stopRecordingFps(Date.now());}

this.state.transitionFromIndex = null;
this.spring.setCurrentValue(0).setAtRest();
this._hideScenes();
if(this.state.transitionCb){
this.state.transitionCb();
this.state.transitionCb = null;}

if(this._interactionHandle){
this.clearInteractionHandle(this._interactionHandle);
this._interactionHandle = null;}

if(this.state.pendingGestureProgress){


var gestureToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gestureToIndex);
this.spring.setEndValue(this.state.pendingGestureProgress);
return;}

if(this.state.transitionQueue.length){
var queuedTransition=this.state.transitionQueue.shift();
this._enableScene(queuedTransition.destIndex);
this._emitWillFocus(this.state.routeStack[queuedTransition.destIndex]);
this._transitionTo(
queuedTransition.destIndex,
queuedTransition.velocity,
null,
queuedTransition.cb);}},




_emitDidFocus:function(route){
this.navigationContext.emit('didfocus',{route:route});

if(this.props.onDidFocus){
this.props.onDidFocus(route);}},



_emitWillFocus:function(route){
this.navigationContext.emit('willfocus',{route:route});

var navBar=this._navBar;
if(navBar && navBar.handleWillFocus){
navBar.handleWillFocus(route);}

if(this.props.onWillFocus){
this.props.onWillFocus(route);}},






_hideScenes:function(){
var gesturingToIndex=null;
if(this.state.activeGesture){
gesturingToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);}

for(var i=0;i < this.state.routeStack.length;i++) {
if(i === this.state.presentedIndex || 
i === this.state.transitionFromIndex || 
i === gesturingToIndex){
continue;}

this._disableScene(i);}},






_disableScene:function(sceneIndex){
this.refs['scene_' + sceneIndex] && 
this.refs['scene_' + sceneIndex].setNativeProps(SCENE_DISABLED_NATIVE_PROPS);},





_enableScene:function(sceneIndex){

var sceneStyle=flattenStyle([styles.baseScene,this.props.sceneStyle]);

var enabledSceneNativeProps={
left:sceneStyle.left};

if(sceneIndex !== this.state.transitionFromIndex && 
sceneIndex !== this.state.presentedIndex){


enabledSceneNativeProps.opacity = 0;}

this.refs['scene_' + sceneIndex] && 
this.refs['scene_' + sceneIndex].setNativeProps(enabledSceneNativeProps);},


_onAnimationStart:function(){
var fromIndex=this.state.presentedIndex;
var toIndex=this.state.presentedIndex;
if(this.state.transitionFromIndex != null){
fromIndex = this.state.transitionFromIndex;}else 
if(this.state.activeGesture){
toIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);}

this._setRenderSceneToHarwareTextureAndroid(fromIndex,true);
this._setRenderSceneToHarwareTextureAndroid(toIndex,true);
var navBar=this._navBar;
if(navBar && navBar.onAnimationStart){
navBar.onAnimationStart(fromIndex,toIndex);}},



_onAnimationEnd:function(){
var max=this.state.routeStack.length - 1;
for(var index=0;index <= max;index++) {
this._setRenderSceneToHarwareTextureAndroid(index,false);}


var navBar=this._navBar;
if(navBar && navBar.onAnimationEnd){
navBar.onAnimationEnd();}},



_setRenderSceneToHarwareTextureAndroid:function(sceneIndex,shouldRenderToHardwareTexture){
var viewAtIndex=this.refs['scene_' + sceneIndex];
if(viewAtIndex === null || viewAtIndex === undefined){
return;}

viewAtIndex.setNativeProps({renderToHardwareTextureAndroid:shouldRenderToHardwareTexture});},


_handleTouchStart:function(){
this._eligibleGestures = GESTURE_ACTIONS;},


_handleMoveShouldSetPanResponder:function(e,gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
this._expectingGestureGrant = this._matchGestureAction(this._eligibleGestures,sceneConfig.gestures,gestureState);
return !!this._expectingGestureGrant;},


_doesGestureOverswipe:function(gestureName){
var wouldOverswipeBack=this.state.presentedIndex <= 0 && (
gestureName === 'pop' || gestureName === 'jumpBack');
var wouldOverswipeForward=this.state.presentedIndex >= this.state.routeStack.length - 1 && 
gestureName === 'jumpForward';
return wouldOverswipeForward || wouldOverswipeBack;},


_handlePanResponderGrant:function(e,gestureState){
invariant(
this._expectingGestureGrant,
'Responder granted unexpectedly.');

this._attachGesture(this._expectingGestureGrant);
this._onAnimationStart();
this._expectingGestureGrant = null;},


_deltaForGestureAction:function(gestureAction){
switch(gestureAction){
case 'pop':
case 'jumpBack':
return -1;
case 'jumpForward':
return 1;
default:
invariant(false,'Unsupported gesture action ' + gestureAction);
return;}},



_handlePanResponderRelease:function(e,gestureState){var _this4=this;
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
var releaseGestureAction=this.state.activeGesture;
if(!releaseGestureAction){

return;}

var releaseGesture=sceneConfig.gestures[releaseGestureAction];
var destIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
if(this.spring.getCurrentValue() === 0){

this.spring.setCurrentValue(0).setAtRest();
this._completeTransition();
return;}

var isTravelVertical=releaseGesture.direction === 'top-to-bottom' || releaseGesture.direction === 'bottom-to-top';
var isTravelInverted=releaseGesture.direction === 'right-to-left' || releaseGesture.direction === 'bottom-to-top';
var velocity,gestureDistance;
if(isTravelVertical){
velocity = isTravelInverted?-gestureState.vy:gestureState.vy;
gestureDistance = isTravelInverted?-gestureState.dy:gestureState.dy;}else 
{
velocity = isTravelInverted?-gestureState.vx:gestureState.vx;
gestureDistance = isTravelInverted?-gestureState.dx:gestureState.dx;}

var transitionVelocity=clamp(-10,velocity,10);
if(Math.abs(velocity) < releaseGesture.notMoving){

var hasGesturedEnoughToComplete=gestureDistance > releaseGesture.fullDistance * releaseGesture.stillCompletionRatio;
transitionVelocity = hasGesturedEnoughToComplete?releaseGesture.snapVelocity:-releaseGesture.snapVelocity;}

if(transitionVelocity < 0 || this._doesGestureOverswipe(releaseGestureAction)){


if(this.state.transitionFromIndex == null){

var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex = destIndex;
this._transitionTo(
transitionBackToPresentedIndex,
-transitionVelocity,
1 - this.spring.getCurrentValue());}}else 


{

this._emitWillFocus(this.state.routeStack[destIndex]);
this._transitionTo(
destIndex,
transitionVelocity,
null,
function(){
if(releaseGestureAction === 'pop'){
_this4._cleanScenesPastIndex(destIndex);}});}




this._detachGesture();},


_handlePanResponderTerminate:function(e,gestureState){
var destIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._detachGesture();
var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex = destIndex;
this._transitionTo(
transitionBackToPresentedIndex,
null,
1 - this.spring.getCurrentValue());},



_attachGesture:function(gestureId){
this.state.activeGesture = gestureId;
var gesturingToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gesturingToIndex);},


_detachGesture:function(){
this.state.activeGesture = null;
this.state.pendingGestureProgress = null;
this._hideScenes();},


_handlePanResponderMove:function(e,gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
if(this.state.activeGesture){
var gesture=sceneConfig.gestures[this.state.activeGesture];
return this._moveAttachedGesture(gesture,gestureState);}

var matchedGesture=this._matchGestureAction(GESTURE_ACTIONS,sceneConfig.gestures,gestureState);
if(matchedGesture){
this._attachGesture(matchedGesture);}},



_moveAttachedGesture:function(gesture,gestureState){
var isTravelVertical=gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
var isTravelInverted=gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
var distance=isTravelVertical?gestureState.dy:gestureState.dx;
distance = isTravelInverted?-distance:distance;
var gestureDetectMovement=gesture.gestureDetectMovement;
var nextProgress=(distance - gestureDetectMovement) / (
gesture.fullDistance - gestureDetectMovement);
if(nextProgress < 0 && gesture.isDetachable){
var gesturingToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._transitionBetween(this.state.presentedIndex,gesturingToIndex,0);
this._detachGesture();
if(this.state.pendingGestureProgress != null){
this.spring.setCurrentValue(0);}

return;}

if(this._doesGestureOverswipe(this.state.activeGesture)){
var frictionConstant=gesture.overswipe.frictionConstant;
var frictionByDistance=gesture.overswipe.frictionByDistance;
var frictionRatio=1 / (frictionConstant + Math.abs(nextProgress) * frictionByDistance);
nextProgress *= frictionRatio;}

nextProgress = clamp(0,nextProgress,1);
if(this.state.transitionFromIndex != null){
this.state.pendingGestureProgress = nextProgress;}else 
if(this.state.pendingGestureProgress){
this.spring.setEndValue(nextProgress);}else 
{
this.spring.setCurrentValue(nextProgress);}},



_matchGestureAction:function(eligibleGestures,gestures,gestureState){var _this5=this;
if(!gestures){
return null;}

var matchedGesture=null;
eligibleGestures.some(function(gestureName,gestureIndex){
var gesture=gestures[gestureName];
if(!gesture){
return;}

if(gesture.overswipe == null && _this5._doesGestureOverswipe(gestureName)){

return false;}

var isTravelVertical=gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
var isTravelInverted=gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
var currentLoc=isTravelVertical?gestureState.moveY:gestureState.moveX;
var travelDist=isTravelVertical?gestureState.dy:gestureState.dx;
var oppositeAxisTravelDist=
isTravelVertical?gestureState.dx:gestureState.dy;
var edgeHitWidth=gesture.edgeHitWidth;
if(isTravelInverted){
currentLoc = -currentLoc;
travelDist = -travelDist;
oppositeAxisTravelDist = -oppositeAxisTravelDist;
edgeHitWidth = isTravelVertical?
-(SCREEN_HEIGHT - edgeHitWidth):
-(SCREEN_WIDTH - edgeHitWidth);}

var moveStartedInRegion=gesture.edgeHitWidth == null || 
currentLoc < edgeHitWidth;
if(!moveStartedInRegion){
return false;}

var moveTravelledFarEnough=travelDist >= gesture.gestureDetectMovement;
if(!moveTravelledFarEnough){
return false;}

var directionIsCorrect=Math.abs(travelDist) > Math.abs(oppositeAxisTravelDist) * gesture.directionRatio;
if(directionIsCorrect){
matchedGesture = gestureName;
return true;}else 
{
_this5._eligibleGestures = _this5._eligibleGestures.slice().splice(gestureIndex,1);}});


return matchedGesture;},


_transitionSceneStyle:function(fromIndex,toIndex,progress,index){
var viewAtIndex=this.refs['scene_' + index];
if(viewAtIndex === null || viewAtIndex === undefined){
return;}


var sceneConfigIndex=fromIndex < toIndex?toIndex:fromIndex;
var sceneConfig=this.state.sceneConfigStack[sceneConfigIndex];

if(!sceneConfig){
sceneConfig = this.state.sceneConfigStack[sceneConfigIndex - 1];}

var styleToUse={};
var useFn=index < fromIndex || index < toIndex?
sceneConfig.animationInterpolators.out:
sceneConfig.animationInterpolators.into;
var directionAdjustedProgress=fromIndex < toIndex?progress:1 - progress;
var didChange=useFn(styleToUse,directionAdjustedProgress);
if(didChange){
viewAtIndex.setNativeProps({style:styleToUse});}},



_transitionBetween:function(fromIndex,toIndex,progress){
this._transitionSceneStyle(fromIndex,toIndex,progress,fromIndex);
this._transitionSceneStyle(fromIndex,toIndex,progress,toIndex);
var navBar=this._navBar;
if(navBar && navBar.updateProgress && toIndex >= 0 && fromIndex >= 0){
navBar.updateProgress(progress,fromIndex,toIndex);}},



_handleResponderTerminationRequest:function(){
return false;},


_getDestIndexWithinBounds:function(n){
var currentIndex=this.state.presentedIndex;
var destIndex=currentIndex + n;
invariant(
destIndex >= 0,
'Cannot jump before the first route.');

var maxIndex=this.state.routeStack.length - 1;
invariant(
maxIndex >= destIndex,
'Cannot jump past the last route.');

return destIndex;},


_jumpN:function(n){
var destIndex=this._getDestIndexWithinBounds(n);
this._enableScene(destIndex);
this._emitWillFocus(this.state.routeStack[destIndex]);
this._transitionTo(destIndex);},


jumpTo:function(route){
var destIndex=this.state.routeStack.indexOf(route);
invariant(
destIndex !== -1,
'Cannot jump to route that is not in the route stack');

this._jumpN(destIndex - this.state.presentedIndex);},


jumpForward:function(){
this._jumpN(1);},


jumpBack:function(){
this._jumpN(-1);},


push:function(route){var _this6=this;
invariant(!!route,'Must supply route to push');
var activeLength=this.state.presentedIndex + 1;
var activeStack=this.state.routeStack.slice(0,activeLength);
var activeIDStack=this.state.idStack.slice(0,activeLength);
var activeAnimationConfigStack=this.state.sceneConfigStack.slice(0,activeLength);
var nextStack=activeStack.concat([route]);
var destIndex=nextStack.length - 1;
var nextIDStack=activeIDStack.concat([getuid()]);
var nextAnimationConfigStack=activeAnimationConfigStack.concat([
this.props.configureScene(route)]);

this._emitWillFocus(nextStack[destIndex]);
this.setState({
idStack:nextIDStack,
routeStack:nextStack,
sceneConfigStack:nextAnimationConfigStack},
function(){
_this6._enableScene(destIndex);
_this6._transitionTo(destIndex);});},



_popN:function(n){var _this7=this;
if(n === 0){
return;}

invariant(
this.state.presentedIndex - n >= 0,
'Cannot pop below zero');

var popIndex=this.state.presentedIndex - n;
this._enableScene(popIndex);
this._emitWillFocus(this.state.routeStack[popIndex]);
this._transitionTo(
popIndex,
null,
null,
function(){
_this7._cleanScenesPastIndex(popIndex);});},




pop:function(){
this._popN(1);},








replaceAtIndex:function(route,index,cb){var _this8=this;
invariant(!!route,'Must supply route to replace');
if(index < 0){
index += this.state.routeStack.length;}


if(this.state.routeStack.length <= index){
return;}




var nextIDStack=this.state.idStack.slice();
var nextRouteStack=this.state.routeStack.slice();
var nextAnimationModeStack=this.state.sceneConfigStack.slice();
nextIDStack[index] = getuid();
nextRouteStack[index] = route;
nextAnimationModeStack[index] = this.props.configureScene(route);

if(index === this.state.presentedIndex){
this._emitWillFocus(route);}

this.setState({
idStack:nextIDStack,
routeStack:nextRouteStack,
sceneConfigStack:nextAnimationModeStack},
function(){
if(index === _this8.state.presentedIndex){
_this8._emitDidFocus(route);}

cb && cb();});},






replace:function(route){
this.replaceAtIndex(route,this.state.presentedIndex);},





replacePrevious:function(route){
this.replaceAtIndex(route,this.state.presentedIndex - 1);},


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);},


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute !== -1,
'Calling popToRoute for a route that doesn\'t exist!');

var numToPop=this.state.presentedIndex - indexOfRoute;
this._popN(numToPop);},


replacePreviousAndPop:function(route){
if(this.state.routeStack.length < 2){
return;}

this.replacePrevious(route);
this.pop();},


resetTo:function(route){var _this9=this;
invariant(!!route,'Must supply route to push');
this.replaceAtIndex(route,0,function(){


if(_this9.state.presentedIndex > 0){
_this9._popN(_this9.state.presentedIndex);}});},




getCurrentRoutes:function(){

return this.state.routeStack.slice();},


_handleItemRef:function(itemId,route,ref){
this._itemRefs[itemId] = ref;
var itemIndex=this.state.idStack.indexOf(itemId);
if(itemIndex === -1){
return;}

this.props.onItemRef && this.props.onItemRef(ref,itemIndex,route);},


_cleanScenesPastIndex:function(index){var _this10=this;
var newStackLength=index + 1;

if(newStackLength < this.state.routeStack.length){
this.state.idStack.slice(newStackLength).map(function(removingId){
_this10._itemRefs[removingId] = null;});

this.setState({
sceneConfigStack:this.state.sceneConfigStack.slice(0,newStackLength),
idStack:this.state.idStack.slice(0,newStackLength),
routeStack:this.state.routeStack.slice(0,newStackLength)});}},




_renderScene:function(route,i){var _this11=this;
var child=this.props.renderScene(
route,
this);

var disabledSceneStyle=null;
if(i !== this.state.presentedIndex){
disabledSceneStyle = styles.disabledScene;}

var originalRef=child.ref;
if(originalRef != null && typeof originalRef !== 'function'){
console.warn(
'String refs are not supported for navigator scenes. Use a callback ' + 
'ref instead. Ignoring ref: ' + originalRef);

originalRef = null;}

return (
React.createElement(View,{
key:this.state.idStack[i],
ref:'scene_' + i,
onStartShouldSetResponderCapture:function(){
return _this11.state.transitionFromIndex != null || _this11.state.transitionFromIndex != null;},

style:[styles.baseScene,this.props.sceneStyle,disabledSceneStyle]},
React.cloneElement(child,{
ref:function(component){
_this11._handleItemRef(_this11.state.idStack[i],route,component);
if(originalRef){
originalRef(component);}}})));},







_renderNavigationBar:function(){var _this12=this;
if(!this.props.navigationBar){
return null;}

return React.cloneElement(this.props.navigationBar,{
ref:function(navBar){_this12._navBar = navBar;},
navigator:this,
navState:this.state});},



render:function(){var _this13=this;
var newRenderedSceneMap=new Map();
var scenes=this.state.routeStack.map(function(route,index){
var renderedScene;
if(_this13._renderedSceneMap.has(route) && 
index !== _this13.state.presentedIndex){
renderedScene = _this13._renderedSceneMap.get(route);}else 
{
renderedScene = _this13._renderScene(route,index);}

newRenderedSceneMap.set(route,renderedScene);
return renderedScene;});

this._renderedSceneMap = newRenderedSceneMap;
return (
React.createElement(View,{style:[styles.container,this.props.style]},
React.createElement(View,_extends({
style:styles.transitioner},
this.panGesture.panHandlers,{
onTouchStart:this._handleTouchStart,
onResponderTerminationRequest:
this._handleResponderTerminationRequest}),

scenes),

this._renderNavigationBar()));},




_getNavigationContext:function(){
if(!this._navigationContext){
this._navigationContext = new NavigationContext();}

return this._navigationContext;}});



module.exports = Navigator;
});
__d('InteractionMixin',["InteractionManager"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';







var InteractionManager=require('InteractionManager');






var InteractionMixin={
componentWillUnmount:function(){
while(this._interactionMixinHandles.length) {
InteractionManager.clearInteractionHandle(
this._interactionMixinHandles.pop());}},




_interactionMixinHandles:[],

createInteractionHandle:function(){
var handle=InteractionManager.createInteractionHandle();
this._interactionMixinHandles.push(handle);
return handle;},


clearInteractionHandle:function(clearHandle){
InteractionManager.clearInteractionHandle(clearHandle);
this._interactionMixinHandles = this._interactionMixinHandles.filter(
function(handle){return handle !== clearHandle;});},








runAfterInteractions:function(callback){
InteractionManager.runAfterInteractions(callback);}};



module.exports = InteractionMixin;
});
__d('NavigationContext',["NavigationEvent","EventSubscription","NavigationEventEmitter","emptyFunction","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

























'use strict';

var NavigationEventEmitter=require('NavigationEventEmitter');

var emptyFunction=require('emptyFunction');
var invariant=require('invariant');var 







NavigationContext=(function(){



function NavigationContext(){_classCallCheck(this,NavigationContext);
this._eventEmitter = new NavigationEventEmitter(this);
this._currentRoute = null;
this.addListener('willfocus',this._onFocus,this);
this.addListener('didfocus',this._onFocus,this);}_createClass(NavigationContext,[{key:'addListener',value:








function addListener(
eventType,
listener,
context)
{
var emitter=this._eventEmitter;
if(emitter){
return emitter.addListener(eventType,listener,context);}else 
{
return {remove:emptyFunction};}}},{key:'emit',value:



function emit(eventType,data){
var emitter=this._eventEmitter;
if(emitter){
emitter.emit(eventType,data);}}},{key:'dispose',value:



function dispose(){
var emitter=this._eventEmitter;
if(emitter){

emitter.removeAllListeners();
this._eventEmitter = null;
this._currentRoute = null;}}},{key:'_onFocus',value:



function _onFocus(event){
invariant(
event.data && event.data.hasOwnProperty('route'),
'didfocus event should provide route');

this._currentRoute = event.data.route;}},{key:'currentRoute',get:function(){return this._currentRoute;}}]);return NavigationContext;})();



module.exports = NavigationContext;
});
__d('NavigationEvent',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 







NavigationEvent=




function NavigationEvent(type,target,data){_classCallCheck(this,NavigationEvent);
this.type = type;
this.target = target;
this.data = data;};



module.exports = NavigationEvent;
});
__d('NavigationEventEmitter',["EventEmitter","NavigationEvent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}




























var EventEmitter=require('EventEmitter');
var NavigationEvent=require('NavigationEvent');var 






NavigationEventEmitter=(function(_EventEmitter){_inherits(NavigationEventEmitter,_EventEmitter);




function NavigationEventEmitter(target){_classCallCheck(this,NavigationEventEmitter);
_get(Object.getPrototypeOf(NavigationEventEmitter.prototype),'constructor',this).call(this);
this._emitting = false;
this._emitQueue = [];
this._target = target;}_createClass(NavigationEventEmitter,[{key:'emit',value:


function emit(eventType,data){
if(this._emitting){


this._emitQueue.push({eventType:eventType,data:data});
return;}


this._emitting = true;
var event=new NavigationEvent(eventType,this._target,data);
_get(Object.getPrototypeOf(NavigationEventEmitter.prototype),'emit',this).call(this,eventType,event);
this._emitting = false;

while(this._emitQueue.length) {
var arg=this._emitQueue.shift();
this.emit(arg.eventType,arg.data);}}}]);return NavigationEventEmitter;})(EventEmitter);




module.exports = NavigationEventEmitter;
});
__d('NavigatorBreadcrumbNavigationBar',["NavigatorBreadcrumbNavigationBarStyles","NavigatorNavigationBarStyles","React","StaticContainer.react","StyleSheet","View","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var NavigatorBreadcrumbNavigationBarStyles=require('NavigatorBreadcrumbNavigationBarStyles');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var invariant=require('invariant');

var Interpolators=NavigatorBreadcrumbNavigationBarStyles.Interpolators;
var PropTypes=React.PropTypes;




var CRUMB_PROPS=Interpolators.map(function(){return {style:{}};});
var ICON_PROPS=Interpolators.map(function(){return {style:{}};});
var SEPARATOR_PROPS=Interpolators.map(function(){return {style:{}};});
var TITLE_PROPS=Interpolators.map(function(){return {style:{}};});
var RIGHT_BUTTON_PROPS=Interpolators.map(function(){return {style:{}};});


var navStatePresentedIndex=function(navState){
if(navState.presentedIndex !== undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};










var initStyle=function(index,presentedIndex){
return index === presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Center[index]:
index < presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Left[index]:
NavigatorBreadcrumbNavigationBarStyles.Right[index];};


var NavigatorBreadcrumbNavigationBar=React.createClass({displayName:'NavigatorBreadcrumbNavigationBar',
propTypes:{
navigator:PropTypes.shape({
push:PropTypes.func,
pop:PropTypes.func,
replace:PropTypes.func,
popToRoute:PropTypes.func,
popToTop:PropTypes.func}),

routeMapper:PropTypes.shape({
rightContentForRoute:PropTypes.func,
titleContentForRoute:PropTypes.func,
iconForRoute:PropTypes.func}),

navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object),
idStack:React.PropTypes.arrayOf(React.PropTypes.number),
presentedIndex:React.PropTypes.number}),

style:View.propTypes.style},


statics:{
Styles:NavigatorBreadcrumbNavigationBarStyles},


_updateIndexProgress:function(progress,index,fromIndex,toIndex){
var amount=toIndex > fromIndex?progress:1 - progress;
var oldDistToCenter=index - fromIndex;
var newDistToCenter=index - toIndex;
var interpolate;
invariant(
Interpolators[index],
'Cannot find breadcrumb interpolators for ' + index);

if(oldDistToCenter > 0 && newDistToCenter === 0 || 
newDistToCenter > 0 && oldDistToCenter === 0){
interpolate = Interpolators[index].RightToCenter;}else 
if(oldDistToCenter < 0 && newDistToCenter === 0 || 
newDistToCenter < 0 && oldDistToCenter === 0){
interpolate = Interpolators[index].CenterToLeft;}else 
if(oldDistToCenter === newDistToCenter){
interpolate = Interpolators[index].RightToCenter;}else 
{
interpolate = Interpolators[index].RightToLeft;}


if(interpolate.Crumb(CRUMB_PROPS[index].style,amount)){
this.refs['crumb_' + index].setNativeProps(CRUMB_PROPS[index]);}

if(interpolate.Icon(ICON_PROPS[index].style,amount)){
this.refs['icon_' + index].setNativeProps(ICON_PROPS[index]);}

if(interpolate.Separator(SEPARATOR_PROPS[index].style,amount)){
this.refs['separator_' + index].setNativeProps(SEPARATOR_PROPS[index]);}

if(interpolate.Title(TITLE_PROPS[index].style,amount)){
this.refs['title_' + index].setNativeProps(TITLE_PROPS[index]);}

var right=this.refs['right_' + index];
if(right && 
interpolate.RightItem(RIGHT_BUTTON_PROPS[index].style,amount)){
right.setNativeProps(RIGHT_BUTTON_PROPS[index]);}},



updateProgress:function(progress,fromIndex,toIndex){
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._updateIndexProgress(progress,index,fromIndex,toIndex);}},



onAnimationStart:function(fromIndex,toIndex){
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._setRenderViewsToHardwareTextureAndroid(index,true);}},



onAnimationEnd:function(){
var max=this.props.navState.routeStack.length - 1;
for(var index=0;index <= max;index++) {
this._setRenderViewsToHardwareTextureAndroid(index,false);}},



_setRenderViewsToHardwareTextureAndroid:function(index,renderToHardwareTexture){
var props={
renderToHardwareTextureAndroid:renderToHardwareTexture};


this.refs['icon_' + index].setNativeProps(props);
this.refs['separator_' + index].setNativeProps(props);
this.refs['title_' + index].setNativeProps(props);
var right=this.refs['right_' + index];
if(right){
right.setNativeProps(props);}},



render:function(){
var navState=this.props.navState;
var icons=navState && navState.routeStack.map(this._renderOrReturnBreadcrumb);
var titles=navState.routeStack.map(this._renderOrReturnTitle);
var buttons=navState.routeStack.map(this._renderOrReturnRightButton);
return (
React.createElement(View,{style:[styles.breadCrumbContainer,this.props.style]},
titles,
icons,
buttons));},




_renderOrReturnBreadcrumb:function(route,index){
var uid=this.props.navState.idStack[index];
var navBarRouteMapper=this.props.routeMapper;
var navOps=this.props.navigator;
var alreadyRendered=this.refs['crumbContainer' + uid];
if(alreadyRendered){

return (
React.createElement(StaticContainer,{
ref:'crumbContainer' + uid,
key:'crumbContainer' + uid,
shouldUpdate:false}));}



var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));
return (
React.createElement(StaticContainer,{
ref:'crumbContainer' + uid,
key:'crumbContainer' + uid,
shouldUpdate:false},
React.createElement(View,{ref:'crumb_' + index,style:firstStyles.Crumb},
React.createElement(View,{ref:'icon_' + index,style:firstStyles.Icon},
navBarRouteMapper.iconForRoute(route,navOps)),

React.createElement(View,{ref:'separator_' + index,style:firstStyles.Separator},
navBarRouteMapper.separatorForRoute(route,navOps)))));},






_renderOrReturnTitle:function(route,index){
var navState=this.props.navState;
var uid=navState.idStack[index];
var alreadyRendered=this.refs['titleContainer' + uid];
if(alreadyRendered){

return (
React.createElement(StaticContainer,{
ref:'titleContainer' + uid,
key:'titleContainer' + uid,
shouldUpdate:false}));}



var navBarRouteMapper=this.props.routeMapper;
var titleContent=navBarRouteMapper.titleContentForRoute(
navState.routeStack[index],
this.props.navigator);

var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));
return (
React.createElement(StaticContainer,{
ref:'titleContainer' + uid,
key:'titleContainer' + uid,
shouldUpdate:false},
React.createElement(View,{ref:'title_' + index,style:firstStyles.Title},
titleContent)));},





_renderOrReturnRightButton:function(route,index){
var navState=this.props.navState;
var navBarRouteMapper=this.props.routeMapper;
var uid=navState.idStack[index];
var alreadyRendered=this.refs['rightContainer' + uid];
if(alreadyRendered){

return (
React.createElement(StaticContainer,{
ref:'rightContainer' + uid,
key:'rightContainer' + uid,
shouldUpdate:false}));}



var rightContent=navBarRouteMapper.rightContentForRoute(
navState.routeStack[index],
this.props.navigator);

if(!rightContent){
return null;}

var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));
return (
React.createElement(StaticContainer,{
ref:'rightContainer' + uid,
key:'rightContainer' + uid,
shouldUpdate:false},
React.createElement(View,{ref:'right_' + index,style:firstStyles.RightItem},
rightContent)));}});






var styles=StyleSheet.create({
breadCrumbContainer:{
overflow:'hidden',
position:'absolute',
height:NavigatorNavigationBarStyles.General.TotalNavHeight,
top:0,
left:0,
right:0}});



module.exports = NavigatorBreadcrumbNavigationBar;
});
__d('NavigatorBreadcrumbNavigationBarStyles',["Dimensions","NavigatorNavigationBarStyles","buildStyleInterpolator","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var STATUS_BAR_HEIGHT=NavigatorNavigationBarStyles.General.StatusBarHeight;
var NAV_BAR_HEIGHT=NavigatorNavigationBarStyles.General.NavBarHeight;

var SPACING=4;
var ICON_WIDTH=40;
var SEPARATOR_WIDTH=9;
var CRUMB_WIDTH=ICON_WIDTH + SEPARATOR_WIDTH;

var OPACITY_RATIO=100;
var ICON_INACTIVE_OPACITY=0.6;
var MAX_BREADCRUMBS=10;

var CRUMB_BASE={
position:'absolute',
flexDirection:'row',
top:STATUS_BAR_HEIGHT,
width:CRUMB_WIDTH,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};


var ICON_BASE={
width:ICON_WIDTH,
height:NAV_BAR_HEIGHT};


var SEPARATOR_BASE={
width:SEPARATOR_WIDTH,
height:NAV_BAR_HEIGHT};


var TITLE_BASE={
position:'absolute',
top:STATUS_BAR_HEIGHT,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};



var FIRST_TITLE_BASE=merge(TITLE_BASE,{
left:0,
right:0,
alignItems:'center',
height:NAV_BAR_HEIGHT});


var RIGHT_BUTTON_BASE={
position:'absolute',
top:STATUS_BAR_HEIGHT,
right:SPACING,
overflow:'hidden',
opacity:1,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};






var LEFT=[];
var CENTER=[];
var RIGHT=[];
for(var i=0;i < MAX_BREADCRUMBS;i++) {
var crumbLeft=CRUMB_WIDTH * i + SPACING;
LEFT[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbLeft}),
Icon:merge(ICON_BASE,{opacity:ICON_INACTIVE_OPACITY}),
Separator:merge(SEPARATOR_BASE,{opacity:1}),
Title:merge(TITLE_BASE,{left:crumbLeft,opacity:0}),
RightItem:merge(RIGHT_BUTTON_BASE,{opacity:0})};

CENTER[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbLeft}),
Icon:merge(ICON_BASE,{opacity:1}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(TITLE_BASE,{
left:crumbLeft + ICON_WIDTH,
opacity:1}),

RightItem:merge(RIGHT_BUTTON_BASE,{opacity:1})};

var crumbRight=SCREEN_WIDTH - 100;
RIGHT[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbRight}),
Icon:merge(ICON_BASE,{opacity:0}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(TITLE_BASE,{
left:crumbRight + ICON_WIDTH,
opacity:0}),

RightItem:merge(RIGHT_BUTTON_BASE,{opacity:0})};}




CENTER[0] = {
Crumb:merge(CRUMB_BASE,{left:SCREEN_WIDTH / 4}),
Icon:merge(ICON_BASE,{opacity:0}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(FIRST_TITLE_BASE,{opacity:1}),
RightItem:CENTER[0].RightItem};

LEFT[0].Title = merge(FIRST_TITLE_BASE,{left:-SCREEN_WIDTH / 4,opacity:0});
RIGHT[0].Title = merge(FIRST_TITLE_BASE,{opacity:0});


var buildIndexSceneInterpolator=function(startStyles,endStyles){
return {
Crumb:buildStyleInterpolator({
left:{
type:'linear',
from:startStyles.Crumb.left,
to:endStyles.Crumb.left,
min:0,
max:1,
extrapolate:true}}),


Icon:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Icon.opacity,
to:endStyles.Icon.opacity,
min:0,
max:1}}),


Separator:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Separator.opacity,
to:endStyles.Separator.opacity,
min:0,
max:1}}),


Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


RightItem:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightItem.opacity,
to:endStyles.RightItem.opacity,
min:0,
max:1,
round:OPACITY_RATIO}})};};





var Interpolators=CENTER.map(function(_,ii){
return {

RightToCenter:buildIndexSceneInterpolator(RIGHT[ii],CENTER[ii]),

CenterToLeft:buildIndexSceneInterpolator(CENTER[ii],LEFT[ii]),

RightToLeft:buildIndexSceneInterpolator(RIGHT[ii],LEFT[ii])};});







module.exports = {
Interpolators:Interpolators,
Left:LEFT,
Center:CENTER,
Right:RIGHT,
IconWidth:ICON_WIDTH,
IconHeight:NAV_BAR_HEIGHT,
SeparatorWidth:SEPARATOR_WIDTH,
SeparatorHeight:NAV_BAR_HEIGHT};
});
__d('NavigatorNavigationBarStyles',["Dimensions","buildStyleInterpolator","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var NAV_BAR_HEIGHT=44;
var STATUS_BAR_HEIGHT=20;
var NAV_HEIGHT=NAV_BAR_HEIGHT + STATUS_BAR_HEIGHT;

var BASE_STYLES={
Title:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:0,
alignItems:'center',
width:SCREEN_WIDTH,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'},

LeftButton:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:0,
overflow:'hidden',
opacity:1,
width:SCREEN_WIDTH / 3,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'},

RightButton:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:2 * SCREEN_WIDTH / 3,
overflow:'hidden',
opacity:1,
alignItems:'flex-end',
width:SCREEN_WIDTH / 3,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'}};










var Stages={
Left:{
Title:merge(BASE_STYLES.Title,{left:-SCREEN_WIDTH / 2,opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:-SCREEN_WIDTH / 3,opacity:1}),
RightButton:merge(BASE_STYLES.RightButton,{left:SCREEN_WIDTH / 3,opacity:0})},

Center:{
Title:merge(BASE_STYLES.Title,{left:0,opacity:1}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:0,opacity:1}),
RightButton:merge(BASE_STYLES.RightButton,{left:2 * SCREEN_WIDTH / 3 - 0,opacity:1})},

Right:{
Title:merge(BASE_STYLES.Title,{left:SCREEN_WIDTH / 2,opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:0,opacity:0}),
RightButton:merge(BASE_STYLES.RightButton,{left:SCREEN_WIDTH,opacity:0})}};




var opacityRatio=100;

function buildSceneInterpolators(startStyles,endStyles){
return {
Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


LeftButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.LeftButton.opacity,
to:endStyles.LeftButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.LeftButton.left,
to:endStyles.LeftButton.left,
min:0,
max:1}}),


RightButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightButton.opacity,
to:endStyles.RightButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.RightButton.left,
to:endStyles.RightButton.left,
min:0,
max:1,
extrapolate:true}})};}





var Interpolators={

RightToCenter:buildSceneInterpolators(Stages.Right,Stages.Center),

CenterToLeft:buildSceneInterpolators(Stages.Center,Stages.Left),

RightToLeft:buildSceneInterpolators(Stages.Right,Stages.Left)};



module.exports = {
General:{
NavBarHeight:NAV_BAR_HEIGHT,
StatusBarHeight:STATUS_BAR_HEIGHT,
TotalNavHeight:NAV_HEIGHT},

Interpolators:Interpolators,
Stages:Stages};
});
__d('buildStyleInterpolator',["keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










keyOf=require('keyOf');

var X_DIM=keyOf({x:null});
var Y_DIM=keyOf({y:null});
var Z_DIM=keyOf({z:null});
var W_DIM=keyOf({w:null});

var TRANSFORM_ROTATE_NAME=keyOf({transformRotateRadians:null});

var ShouldAllocateReusableOperationVars={
transformRotateRadians:true,
transformScale:true,
transformTranslate:true};


var InitialOperationField={
transformRotateRadians:[0,0,0,1],
transformTranslate:[0,0,0],
transformScale:[1,1,1]};



























































var ARGUMENT_NAMES_RE=/([^\s,]+)/g;



















var inline=function(func,replaceWithArgs){
var fnStr=func.toString();
var parameterNames=fnStr.slice(fnStr.indexOf('(') + 1,fnStr.indexOf(')')).
match(ARGUMENT_NAMES_RE) || 
[];
var replaceRegexStr=parameterNames.map(function(paramName){
return '\\b' + paramName + '\\b';}).
join('|');
var replaceRegex=new RegExp(replaceRegexStr,'g');
var fnBody=fnStr.substring(fnStr.indexOf('{') + 1,fnStr.lastIndexOf('}'));
var newFnBody=fnBody.replace(replaceRegex,function(parameterName){
var indexInParameterNames=parameterNames.indexOf(parameterName);
var replacementName=replaceWithArgs[indexInParameterNames];
return replacementName;});

return newFnBody.split('\n');};






var MatrixOps={
unroll:function(matVar,m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15){
m0 = matVar[0];
m1 = matVar[1];
m2 = matVar[2];
m3 = matVar[3];
m4 = matVar[4];
m5 = matVar[5];
m6 = matVar[6];
m7 = matVar[7];
m8 = matVar[8];
m9 = matVar[9];
m10 = matVar[10];
m11 = matVar[11];
m12 = matVar[12];
m13 = matVar[13];
m14 = matVar[14];
m15 = matVar[15];},


matrixDiffers:function(retVar,matVar,m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15){
retVar = retVar || 
m0 !== matVar[0] || 
m1 !== matVar[1] || 
m2 !== matVar[2] || 
m3 !== matVar[3] || 
m4 !== matVar[4] || 
m5 !== matVar[5] || 
m6 !== matVar[6] || 
m7 !== matVar[7] || 
m8 !== matVar[8] || 
m9 !== matVar[9] || 
m10 !== matVar[10] || 
m11 !== matVar[11] || 
m12 !== matVar[12] || 
m13 !== matVar[13] || 
m14 !== matVar[14] || 
m15 !== matVar[15];},


transformScale:function(matVar,opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[0] = matVar[0] * x;
matVar[1] = matVar[1] * x;
matVar[2] = matVar[2] * x;
matVar[3] = matVar[3] * x;
matVar[4] = matVar[4] * y;
matVar[5] = matVar[5] * y;
matVar[6] = matVar[6] * y;
matVar[7] = matVar[7] * y;
matVar[8] = matVar[8] * z;
matVar[9] = matVar[9] * z;
matVar[10] = matVar[10] * z;
matVar[11] = matVar[11] * z;
matVar[12] = matVar[12];
matVar[13] = matVar[13];
matVar[14] = matVar[14];
matVar[15] = matVar[15];},






transformTranslate:function(matVar,opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[12] = matVar[0] * x + matVar[4] * y + matVar[8] * z + matVar[12];
matVar[13] = matVar[1] * x + matVar[5] * y + matVar[9] * z + matVar[13];
matVar[14] = matVar[2] * x + matVar[6] * y + matVar[10] * z + matVar[14];
matVar[15] = matVar[3] * x + matVar[7] * y + matVar[11] * z + matVar[15];},






transformRotateRadians:function(matVar,q){

var xQuat=q[0],yQuat=q[1],zQuat=q[2],wQuat=q[3];
var x2Quat=xQuat + xQuat;
var y2Quat=yQuat + yQuat;
var z2Quat=zQuat + zQuat;
var xxQuat=xQuat * x2Quat;
var xyQuat=xQuat * y2Quat;
var xzQuat=xQuat * z2Quat;
var yyQuat=yQuat * y2Quat;
var yzQuat=yQuat * z2Quat;
var zzQuat=zQuat * z2Quat;
var wxQuat=wQuat * x2Quat;
var wyQuat=wQuat * y2Quat;
var wzQuat=wQuat * z2Quat;

var quatMat0=1 - (yyQuat + zzQuat);
var quatMat1=xyQuat + wzQuat;
var quatMat2=xzQuat - wyQuat;
var quatMat4=xyQuat - wzQuat;
var quatMat5=1 - (xxQuat + zzQuat);
var quatMat6=yzQuat + wxQuat;
var quatMat8=xzQuat + wyQuat;
var quatMat9=yzQuat - wxQuat;
var quatMat10=1 - (xxQuat + yyQuat);



var a00=matVar[0];
var a01=matVar[1];
var a02=matVar[2];
var a03=matVar[3];
var a10=matVar[4];
var a11=matVar[5];
var a12=matVar[6];
var a13=matVar[7];
var a20=matVar[8];
var a21=matVar[9];
var a22=matVar[10];
var a23=matVar[11];

var b0=quatMat0,b1=quatMat1,b2=quatMat2;
matVar[0] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[1] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[2] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[3] = b0 * a03 + b1 * a13 + b2 * a23;
b0 = quatMat4;b1 = quatMat5;b2 = quatMat6;
matVar[4] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[5] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[6] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[7] = b0 * a03 + b1 * a13 + b2 * a23;
b0 = quatMat8;b1 = quatMat9;b2 = quatMat10;
matVar[8] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[9] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[10] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[11] = b0 * a03 + b1 * a13 + b2 * a23;}};





var MatrixOpsInitial={
transformScale:function(matVar,opVar){

matVar[0] = opVar[0];
matVar[1] = 0;
matVar[2] = 0;
matVar[3] = 0;
matVar[4] = 0;
matVar[5] = opVar[1];
matVar[6] = 0;
matVar[7] = 0;
matVar[8] = 0;
matVar[9] = 0;
matVar[10] = opVar[2];
matVar[11] = 0;
matVar[12] = 0;
matVar[13] = 0;
matVar[14] = 0;
matVar[15] = 1;},


transformTranslate:function(matVar,opVar){

matVar[0] = 1;
matVar[1] = 0;
matVar[2] = 0;
matVar[3] = 0;
matVar[4] = 0;
matVar[5] = 1;
matVar[6] = 0;
matVar[7] = 0;
matVar[8] = 0;
matVar[9] = 0;
matVar[10] = 1;
matVar[11] = 0;
matVar[12] = opVar[0];
matVar[13] = opVar[1];
matVar[14] = opVar[2];
matVar[15] = 1;},







transformRotateRadians:function(matVar,q){


var xQuat=q[0],yQuat=q[1],zQuat=q[2],wQuat=q[3];
var x2Quat=xQuat + xQuat;
var y2Quat=yQuat + yQuat;
var z2Quat=zQuat + zQuat;
var xxQuat=xQuat * x2Quat;
var xyQuat=xQuat * y2Quat;
var xzQuat=xQuat * z2Quat;
var yyQuat=yQuat * y2Quat;
var yzQuat=yQuat * z2Quat;
var zzQuat=zQuat * z2Quat;
var wxQuat=wQuat * x2Quat;
var wyQuat=wQuat * y2Quat;
var wzQuat=wQuat * z2Quat;

var quatMat0=1 - (yyQuat + zzQuat);
var quatMat1=xyQuat + wzQuat;
var quatMat2=xzQuat - wyQuat;
var quatMat4=xyQuat - wzQuat;
var quatMat5=1 - (xxQuat + zzQuat);
var quatMat6=yzQuat + wxQuat;
var quatMat8=xzQuat + wyQuat;
var quatMat9=yzQuat - wxQuat;
var quatMat10=1 - (xxQuat + yyQuat);



var b0=quatMat0,b1=quatMat1,b2=quatMat2;
matVar[0] = b0;
matVar[1] = b1;
matVar[2] = b2;
matVar[3] = 0;
b0 = quatMat4;b1 = quatMat5;b2 = quatMat6;
matVar[4] = b0;
matVar[5] = b1;
matVar[6] = b2;
matVar[7] = 0;
b0 = quatMat8;b1 = quatMat9;b2 = quatMat10;
matVar[8] = b0;
matVar[9] = b1;
matVar[10] = b2;
matVar[11] = 0;
matVar[12] = 0;
matVar[13] = 0;
matVar[14] = 0;
matVar[15] = 1;}};




var setNextValAndDetectChange=function(name,tmpVarName){
return (
'  if (!didChange) {\n' + 
'    var prevVal = result.' + name + ';\n' + 
'    result.' + name + ' = ' + tmpVarName + ';\n' + 
'    didChange = didChange  || (' + tmpVarName + ' !== prevVal);\n' + 
'  } else {\n' + 
'    result.' + name + ' = ' + tmpVarName + ';\n' + 
'  }\n');};



var computeNextValLinear=function(anim,from,to,tmpVarName){
var hasRoundRatio=('round' in anim);
var roundRatio=anim.round;
var fn='  ratio = (value - ' + anim.min + ') / ' + (anim.max - anim.min) + ';\n';
if(!anim.extrapolate){
fn += '  ratio = ratio > 1 ? 1 : (ratio < 0 ? 0 : ratio);\n';}


var roundOpen=hasRoundRatio?'Math.round(' + roundRatio + ' * ':'';
var roundClose=hasRoundRatio?') / ' + roundRatio:'';
fn += 
'  ' + tmpVarName + ' = ' + 
roundOpen + 
'(' + from + ' * (1 - ratio) + ' + to + ' * ratio)' + 
roundClose + ';\n';
return fn;};


var computeNextValLinearScalar=function(anim){
return computeNextValLinear(anim,anim.from,anim.to,'nextScalarVal');};


var computeNextValConstant=function(anim){
var constantExpression=JSON.stringify(anim.value);
return '  nextScalarVal = ' + constantExpression + ';\n';};


var computeNextValStep=function(anim){
return (
'  nextScalarVal = value >= ' + (
anim.threshold + ' ? ' + anim.to + ' : ' + anim.from) + ';\n');};



var computeNextValIdentity=function(anim){
return '  nextScalarVal = value;\n';};


var operationVar=function(name){
return name + 'ReuseOp';};


var createReusableOperationVars=function(anims){
var ret='';
for(var name in anims) {
if(ShouldAllocateReusableOperationVars[name]){
ret += 'var ' + operationVar(name) + ' = [];\n';}}


return ret;};


var newlines=function(statements){
return '\n' + statements.join('\n') + '\n';};








var computeNextMatrixOperationField=function(anim,name,dimension,index){
var fieldAccess=operationVar(name) + '[' + index + ']';
if(anim.from[dimension] !== undefined && anim.to[dimension] !== undefined){
return '  ' + anim.from[dimension] !== anim.to[dimension]?
computeNextValLinear(anim,anim.from[dimension],anim.to[dimension],fieldAccess):
fieldAccess + ' = ' + anim.from[dimension] + ';';}else 
{
return '  ' + fieldAccess + ' = ' + InitialOperationField[name][index] + ';';}};



var unrolledVars=[];
for(var varIndex=0;varIndex < 16;varIndex++) {
unrolledVars.push('m' + varIndex);}

var setNextMatrixAndDetectChange=function(orderedMatrixOperations){
var fn=[
'  var transformMatrix = result.transformMatrix !== undefined ? ' + 
'result.transformMatrix : (result.transformMatrix = []);'];

fn.push.apply(
fn,
inline(MatrixOps.unroll,['transformMatrix'].concat(unrolledVars)));

for(var i=0;i < orderedMatrixOperations.length;i++) {
var opName=orderedMatrixOperations[i];
if(i === 0){
fn.push.apply(
fn,
inline(MatrixOpsInitial[opName],['transformMatrix',operationVar(opName)]));}else 

{
fn.push.apply(
fn,
inline(MatrixOps[opName],['transformMatrix',operationVar(opName)]));}}



fn.push.apply(
fn,
inline(MatrixOps.matrixDiffers,['didChange','transformMatrix'].concat(unrolledVars)));

return fn;};


var InterpolateMatrix={
transformTranslate:true,
transformRotateRadians:true,
transformScale:true};


var createFunctionString=function(anims){


var orderedMatrixOperations=[];



var fn='return (function() {\n';
fn += createReusableOperationVars(anims);
fn += 'return function(result, value) {\n';
fn += '  var didChange = false;\n';
fn += '  var nextScalarVal;\n';
fn += '  var ratio;\n';

for(var name in anims) {
var anim=anims[name];
if(anim.type === 'linear'){
if(InterpolateMatrix[name]){
orderedMatrixOperations.push(name);
var setOperations=[
computeNextMatrixOperationField(anim,name,X_DIM,0),
computeNextMatrixOperationField(anim,name,Y_DIM,1),
computeNextMatrixOperationField(anim,name,Z_DIM,2)];

if(name === TRANSFORM_ROTATE_NAME){
setOperations.push(computeNextMatrixOperationField(anim,name,W_DIM,3));}

fn += newlines(setOperations);}else 
{
fn += computeNextValLinearScalar(anim,'nextScalarVal');
fn += setNextValAndDetectChange(name,'nextScalarVal');}}else 

if(anim.type === 'constant'){
fn += computeNextValConstant(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}else 
if(anim.type === 'step'){
fn += computeNextValStep(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}else 
if(anim.type === 'identity'){
fn += computeNextValIdentity(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}}


if(orderedMatrixOperations.length){
fn += newlines(setNextMatrixAndDetectChange(orderedMatrixOperations));}

fn += '  return didChange;\n';
fn += '};\n';
fn += '})()';
return fn;};







var buildStyleInterpolator=function(anims){
return Function(createFunctionString(anims))();};



module.exports = buildStyleInterpolator;
});
__d('StaticContainer.react',["React","onlyChild"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}




















var React=require('React');

var onlyChild=require('onlyChild');var 
















StaticContainer=(function(_React$Component){_inherits(StaticContainer,_React$Component);function StaticContainer(){_classCallCheck(this,StaticContainer);_get(Object.getPrototypeOf(StaticContainer.prototype),'constructor',this).apply(this,arguments);}_createClass(StaticContainer,[{key:'shouldComponentUpdate',value:

function shouldComponentUpdate(nextProps){
return !!nextProps.shouldUpdate;}},{key:'render',value:


function render(){
var child=this.props.children;
return child === null || child === false?null:onlyChild(child);}}]);return StaticContainer;})(React.Component);




module.exports = StaticContainer;
});
__d('NavigatorNavigationBar',["React","NavigatorNavigationBarStyles","StaticContainer.react","StyleSheet","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var React=require('React');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var COMPONENT_NAMES=['Title','LeftButton','RightButton'];

var navStatePresentedIndex=function(navState){
if(navState.presentedIndex !== undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};


var NavigatorNavigationBar=React.createClass({displayName:'NavigatorNavigationBar',

propTypes:{
navigator:React.PropTypes.object,
routeMapper:React.PropTypes.shape({
Title:React.PropTypes.func.isRequired,
LeftButton:React.PropTypes.func.isRequired,
RightButton:React.PropTypes.func.isRequired}),

navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object),
idStack:React.PropTypes.arrayOf(React.PropTypes.number),
presentedIndex:React.PropTypes.number}),

style:View.propTypes.style},


statics:{
Styles:NavigatorNavigationBarStyles},


_getReusableProps:function(
componentName,
index)
{
if(!this._reusableProps){
this._reusableProps = {};}

var propStack=this._reusableProps[componentName];
if(!propStack){
propStack = this._reusableProps[componentName] = [];}

var props=propStack[index];
if(!props){
props = propStack[index] = {style:{}};}

return props;},


_updateIndexProgress:function(
progress,
index,
fromIndex,
toIndex)
{
var amount=toIndex > fromIndex?progress:1 - progress;
var oldDistToCenter=index - fromIndex;
var newDistToCenter=index - toIndex;
var interpolate;
if(oldDistToCenter > 0 && newDistToCenter === 0 || 
newDistToCenter > 0 && oldDistToCenter === 0){
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToCenter;}else 
if(oldDistToCenter < 0 && newDistToCenter === 0 || 
newDistToCenter < 0 && oldDistToCenter === 0){
interpolate = NavigatorNavigationBarStyles.Interpolators.CenterToLeft;}else 
if(oldDistToCenter === newDistToCenter){
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToCenter;}else 
{
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToLeft;}


COMPONENT_NAMES.forEach(function(componentName){
var component=this.refs[componentName + index];
var props=this._getReusableProps(componentName,index);
if(component && interpolate[componentName](props.style,amount)){
component.setNativeProps(props);}},

this);},


updateProgress:function(
progress,
fromIndex,
toIndex)
{
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._updateIndexProgress(progress,index,fromIndex,toIndex);}},



render:function(){
var navState=this.props.navState;
var components=COMPONENT_NAMES.map(function(componentName){
return navState.routeStack.map(
this._renderOrReturnComponent.bind(this,componentName));},

this);

return (
React.createElement(View,{style:[styles.navBarContainer,this.props.style]},
components));},




_renderOrReturnComponent:function(
componentName,
route,
index)
{
var navState=this.props.navState;
var uid=navState.idStack[index];
var containerRef=componentName + 'Container' + uid;
var alreadyRendered=this.refs[containerRef];
if(alreadyRendered){

return (
React.createElement(StaticContainer,{
ref:containerRef,
key:containerRef,
shouldUpdate:false}));}




var content=this.props.routeMapper[componentName](
navState.routeStack[index],
this.props.navigator,
index,
this.props.navState);

if(!content){
return null;}


var initialStage=index === navStatePresentedIndex(this.props.navState)?
NavigatorNavigationBarStyles.Stages.Center:NavigatorNavigationBarStyles.Stages.Left;
return (
React.createElement(StaticContainer,{
ref:containerRef,
key:containerRef,
shouldUpdate:false},
React.createElement(View,{ref:componentName + index,style:initialStage[componentName]},
content)));}});








var styles=StyleSheet.create({
navBarContainer:{
position:'absolute',
height:NavigatorNavigationBarStyles.General.TotalNavHeight,
top:0,
left:0,
right:0,
backgroundColor:'transparent'}});



module.exports = NavigatorNavigationBar;
});
__d('NavigatorSceneConfigs',["Dimensions","PixelRatio","buildStyleInterpolator"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};



























var Dimensions=require('Dimensions');
var PixelRatio=require('PixelRatio');

var buildStyleInterpolator=require('buildStyleInterpolator');

var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;

var FadeToTheLeft={


transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:-Math.round(Dimensions.get('window').width * 0.3),y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},












transformScale:{
from:{x:1,y:1,z:1},
to:{x:0.95,y:0.95,z:1},
min:0,
max:1,
type:'linear',
extrapolate:true},

opacity:{
from:1,
to:0.3,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

translateX:{
from:0,
to:-Math.round(Dimensions.get('window').width * 0.3),
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

scaleX:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true},

scaleY:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true}};



var FadeToTheRight=_extends({},
FadeToTheLeft,{
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:Math.round(SCREEN_WIDTH * 0.3),y:0,z:0}},

translateX:{
from:0,
to:Math.round(SCREEN_WIDTH * 0.3)}});



var FadeIn={
opacity:{
from:0,
to:1,
min:0.5,
max:1,
type:'linear',
extrapolate:false,
round:100}};



var FadeOut={
opacity:{
from:1,
to:0,
min:0,
max:0.5,
type:'linear',
extrapolate:false,
round:100}};



var ToTheLeft={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:-Dimensions.get('window').width,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},


translateX:{
from:0,
to:-Dimensions.get('window').width,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var FromTheRight={
opacity:{
value:1.0,
type:'constant'},


transformTranslate:{
from:{x:Dimensions.get('window').width,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},


translateX:{
from:Dimensions.get('window').width,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},


scaleX:{
value:1,
type:'constant'},

scaleY:{
value:1,
type:'constant'}};



var FromTheLeft=_extends({},
FromTheRight,{
transformTranslate:{
from:{x:-SCREEN_WIDTH,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateX:{
from:-SCREEN_WIDTH,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var ToTheBack={


transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

transformScale:{
from:{x:1,y:1,z:1},
to:{x:0.95,y:0.95,z:1},
min:0,
max:1,
type:'linear',
extrapolate:true},

opacity:{
from:1,
to:0.3,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

scaleX:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true},

scaleY:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true}};



var FromTheFront={
opacity:{
value:1.0,
type:'constant'},


transformTranslate:{
from:{x:0,y:Dimensions.get('window').height,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:Dimensions.get('window').height,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

scaleX:{
value:1,
type:'constant'},

scaleY:{
value:1,
type:'constant'}};



var ToTheBackAndroid={
opacity:{
value:1,
type:'constant'}};



var FromTheFrontAndroid={
opacity:{
from:0,
to:1,
min:0.5,
max:1,
type:'linear',
extrapolate:false,
round:100},

transformTranslate:{
from:{x:0,y:100,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:100,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var BaseOverswipeConfig={
frictionConstant:1,
frictionByDistance:1.5};


var BaseLeftToRightGesture={


isDetachable:false,


gestureDetectMovement:2,


notMoving:0.3,


directionRatio:0.66,


snapVelocity:2,


edgeHitWidth:30,


stillCompletionRatio:3 / 5,

fullDistance:SCREEN_WIDTH,

direction:'left-to-right'};



var BaseRightToLeftGesture=_extends({},
BaseLeftToRightGesture,{
direction:'right-to-left'});


var BaseConfig={

gestures:{
pop:BaseLeftToRightGesture},



springFriction:26,
springTension:200,


defaultTransitionVelocity:1.5,


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight),
out:buildStyleInterpolator(FadeToTheLeft)}};



var NavigatorSceneConfigs={
PushFromRight:_extends({},
BaseConfig),


FloatFromRight:_extends({},
BaseConfig),


FloatFromLeft:_extends({},
BaseConfig,{
animationInterpolators:{
into:buildStyleInterpolator(FromTheLeft),
out:buildStyleInterpolator(FadeToTheRight)}}),


FloatFromBottom:_extends({},
BaseConfig,{
gestures:{
pop:_extends({},
BaseLeftToRightGesture,{
edgeHitWidth:150,
direction:'top-to-bottom',
fullDistance:SCREEN_HEIGHT})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheFront),
out:buildStyleInterpolator(ToTheBack)}}),


FloatFromBottomAndroid:_extends({},
BaseConfig,{
gestures:null,
defaultTransitionVelocity:3,
springFriction:20,
animationInterpolators:{
into:buildStyleInterpolator(FromTheFrontAndroid),
out:buildStyleInterpolator(ToTheBackAndroid)}}),


FadeAndroid:_extends({},
BaseConfig,{
gestures:null,
animationInterpolators:{
into:buildStyleInterpolator(FadeIn),
out:buildStyleInterpolator(FadeOut)}}),


HorizontalSwipeJump:_extends({},
BaseConfig,{
gestures:{
jumpBack:_extends({},
BaseLeftToRightGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:_extends({},
BaseRightToLeftGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight),
out:buildStyleInterpolator(ToTheLeft)}})};




module.exports = NavigatorSceneConfigs;
});
__d('PanResponder',["TouchHistoryMath"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var TouchHistoryMath=require('TouchHistoryMath');

var currentCentroidXOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;
var currentCentroidYOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;
var previousCentroidXOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;
var previousCentroidYOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;
var currentCentroidX=TouchHistoryMath.currentCentroidX;
var currentCentroidY=TouchHistoryMath.currentCentroidY;















































































var PanResponder={
































































_initializeGestureState:function(gestureState){
gestureState.moveX = 0;
gestureState.moveY = 0;
gestureState.x0 = 0;
gestureState.y0 = 0;
gestureState.dx = 0;
gestureState.dy = 0;
gestureState.vx = 0;
gestureState.vy = 0;
gestureState.numberActiveTouches = 0;

gestureState._accountsForMovesUpTo = 0;},


























_updateGestureStateOnMove:function(gestureState,touchHistory){
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
gestureState.moveX = currentCentroidXOfTouchesChangedAfter(
touchHistory,
gestureState._accountsForMovesUpTo);

gestureState.moveY = currentCentroidYOfTouchesChangedAfter(
touchHistory,
gestureState._accountsForMovesUpTo);

var movedAfter=gestureState._accountsForMovesUpTo;
var prevX=previousCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
var x=currentCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
var prevY=previousCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
var y=currentCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
var nextDX=gestureState.dx + (x - prevX);
var nextDY=gestureState.dy + (y - prevY);


var dt=
touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;
gestureState.vx = (nextDX - gestureState.dx) / dt;
gestureState.vy = (nextDY - gestureState.dy) / dt;

gestureState.dx = nextDX;
gestureState.dy = nextDY;
gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;},


































create:function(config){
var gestureState={

stateID:Math.random()};

PanResponder._initializeGestureState(gestureState);
var panHandlers={
onStartShouldSetResponder:function(e){
return config.onStartShouldSetPanResponder === undefined?false:
config.onStartShouldSetPanResponder(e,gestureState);},

onMoveShouldSetResponder:function(e){
return config.onMoveShouldSetPanResponder === undefined?false:
config.onMoveShouldSetPanResponder(e,gestureState);},

onStartShouldSetResponderCapture:function(e){


if(e.nativeEvent.touches.length === 1){
PanResponder._initializeGestureState(gestureState);}

gestureState.numberActiveTouches = e.touchHistory.numberActiveTouches;
return config.onStartShouldSetPanResponderCapture !== undefined?
config.onStartShouldSetPanResponderCapture(e,gestureState):false;},


onMoveShouldSetResponderCapture:function(e){
var touchHistory=e.touchHistory;



if(gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp){
return false;}

PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
return config.onMoveShouldSetResponderCapture?
config.onMoveShouldSetPanResponderCapture(e,gestureState):false;},


onResponderGrant:function(e){
gestureState.x0 = currentCentroidX(e.touchHistory);
gestureState.y0 = currentCentroidY(e.touchHistory);
gestureState.dx = 0;
gestureState.dy = 0;
config.onPanResponderGrant && config.onPanResponderGrant(e,gestureState);

return config.onShouldBlockNativeResponder === undefined?true:
config.onShouldBlockNativeResponder();},


onResponderReject:function(e){
config.onPanResponderReject && config.onPanResponderReject(e,gestureState);},


onResponderRelease:function(e){
config.onPanResponderRelease && config.onPanResponderRelease(e,gestureState);
PanResponder._initializeGestureState(gestureState);},


onResponderStart:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
config.onPanResponderStart && config.onPanResponderStart(e,gestureState);},


onResponderMove:function(e){
var touchHistory=e.touchHistory;


if(gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp){
return;}



PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
config.onPanResponderMove && config.onPanResponderMove(e,gestureState);},


onResponderEnd:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
config.onPanResponderEnd && config.onPanResponderEnd(e,gestureState);},


onResponderTerminate:function(e){
config.onPanResponderTerminate && 
config.onPanResponderTerminate(e,gestureState);
PanResponder._initializeGestureState(gestureState);},


onResponderTerminationRequest:function(e){
return config.onPanResponderTerminationRequest === undefined?true:
config.onPanResponderTerminationRequest(e,gestureState);}};


return {panHandlers:panHandlers};}};



module.exports = PanResponder;
});
__d('TouchHistoryMath',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var TouchHistoryMath={
















centroidDimension:function(touchHistory,touchesChangedAfter,isXAxis,ofCurrent){
var touchBank=touchHistory.touchBank;
var total=0;
var count=0;

var oneTouchData=touchHistory.numberActiveTouches === 1?
touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]:null;

if(oneTouchData !== null){
if(oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter){
total += ofCurrent && isXAxis?oneTouchData.currentPageX:
ofCurrent && !isXAxis?oneTouchData.currentPageY:
!ofCurrent && isXAxis?oneTouchData.previousPageX:
oneTouchData.previousPageY;
count = 1;}}else 

{
for(var i=0;i < touchBank.length;i++) {
var touchTrack=touchBank[i];
if(touchTrack !== null && 
touchTrack !== undefined && 
touchTrack.touchActive && 
touchTrack.currentTimeStamp >= touchesChangedAfter){
var toAdd;
if(ofCurrent && isXAxis){
toAdd = touchTrack.currentPageX;}else 
if(ofCurrent && !isXAxis){
toAdd = touchTrack.currentPageY;}else 
if(!ofCurrent && isXAxis){
toAdd = touchTrack.previousPageX;}else 
{
toAdd = touchTrack.previousPageY;}

total += toAdd;
count++;}}}



return count > 0?total / count:TouchHistoryMath.noCentroid;},


currentCentroidXOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
true,
true);},



currentCentroidYOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
false,
true);},



previousCentroidXOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
true,
false);},



previousCentroidYOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
false,
false);},



currentCentroidX:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory,
0,
true,
true);},



currentCentroidY:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory,
0,
false,
true);},



noCentroid:-1};


module.exports = TouchHistoryMath;
});
__d('clamp',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 























clamp(min,value,max){
if(value < min){
return min;}

if(value > max){
return max;}

return value;}


module.exports = clamp;
});
__d('rebound/rebound.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (


























































































































function(){
var rebound={};
var util=rebound.util = {};
var concat=Array.prototype.concat;
var slice=Array.prototype.slice;


util.bind = function bind(func,context){
var args=slice.call(arguments,2);
return function(){
func.apply(context,concat.call(args,slice.call(arguments)));};};




util.extend = function extend(target,source){
for(var key in source) {
if(source.hasOwnProperty(key)){
target[key] = source[key];}}};









var SpringSystem=rebound.SpringSystem = function SpringSystem(looper){
this._springRegistry = {};
this._activeSprings = [];
this.listeners = [];
this._idleSpringIndices = [];
this.looper = looper || new AnimationLooper();
this.looper.springSystem = this;};


util.extend(SpringSystem.prototype,{

_springRegistry:null,

_isIdle:true,

_lastTimeMillis:-1,

_activeSprings:null,

listeners:null,

_idleSpringIndices:null,






setLooper:function(looper){
this.looper = looper;
looper.springSystem = this;},






createSpring:function(tension,friction){
var springConfig;
if(tension === undefined || friction === undefined){
springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig = 
SpringConfig.fromOrigamiTensionAndFriction(tension,friction);}

return this.createSpringWithConfig(springConfig);},





createSpringWithBouncinessAndSpeed:function(bounciness,speed){
var springConfig;
if(bounciness === undefined || speed === undefined){
springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig = 
SpringConfig.fromBouncinessAndSpeed(bounciness,speed);}

return this.createSpringWithConfig(springConfig);},



createSpringWithConfig:function(springConfig){
var spring=new Spring(this);
this.registerSpring(spring);
spring.setSpringConfig(springConfig);
return spring;},






getIsIdle:function(){
return this._isIdle;},





getSpringById:function(id){
return this._springRegistry[id];},




getAllSprings:function(){
var vals=[];
for(var id in this._springRegistry) {
if(this._springRegistry.hasOwnProperty(id)){
vals.push(this._springRegistry[id]);}}


return vals;},






registerSpring:function(spring){
this._springRegistry[spring.getId()] = spring;},






deregisterSpring:function(spring){
removeFirst(this._activeSprings,spring);
delete this._springRegistry[spring.getId()];},


advance:function(time,deltaTime){
while(this._idleSpringIndices.length > 0) this._idleSpringIndices.pop();
for(var i=0,len=this._activeSprings.length;i < len;i++) {
var spring=this._activeSprings[i];
if(spring.systemShouldAdvance()){
spring.advance(time / 1000.0,deltaTime / 1000.0);}else 
{
this._idleSpringIndices.push(this._activeSprings.indexOf(spring));}}


while(this._idleSpringIndices.length > 0) {
var idx=this._idleSpringIndices.pop();
idx >= 0 && this._activeSprings.splice(idx,1);}},
















loop:function(currentTimeMillis){
var listener;
if(this._lastTimeMillis === -1){
this._lastTimeMillis = currentTimeMillis - 1;}

var ellapsedMillis=currentTimeMillis - this._lastTimeMillis;
this._lastTimeMillis = currentTimeMillis;

var i=0,len=this.listeners.length;
for(i = 0;i < len;i++) {
listener = this.listeners[i];
listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);}


this.advance(currentTimeMillis,ellapsedMillis);
if(this._activeSprings.length === 0){
this._isIdle = true;
this._lastTimeMillis = -1;}


for(i = 0;i < len;i++) {
listener = this.listeners[i];
listener.onAfterIntegrate && listener.onAfterIntegrate(this);}


if(!this._isIdle){
this.looper.run();}},






activateSpring:function(springId){
var spring=this._springRegistry[springId];
if(this._activeSprings.indexOf(spring) == -1){
this._activeSprings.push(spring);}

if(this.getIsIdle()){
this._isIdle = false;
this.looper.run();}},






addListener:function(listener){
this.listeners.push(listener);},



removeListener:function(listener){
removeFirst(this.listeners,listener);},



removeAllListeners:function(){
this.listeners = [];}});


















var Spring=rebound.Spring = function Spring(springSystem){
this._id = 's' + Spring._ID++;
this._springSystem = springSystem;
this.listeners = [];
this._currentState = new PhysicsState();
this._previousState = new PhysicsState();
this._tempState = new PhysicsState();};


util.extend(Spring,{
_ID:0,

MAX_DELTA_TIME_SEC:0.064,

SOLVER_TIMESTEP_SEC:0.001});



util.extend(Spring.prototype,{

_id:0,

_springConfig:null,

_overshootClampingEnabled:false,

_currentState:null,

_previousState:null,

_tempState:null,

_startValue:0,

_endValue:0,

_wasAtRest:true,

_restSpeedThreshold:0.001,

_displacementFromRestThreshold:0.001,

listeners:null,

_timeAccumulator:0,

_springSystem:null,


destroy:function(){
this.listeners = [];
this.frames = [];
this._springSystem.deregisterSpring(this);},




getId:function(){
return this._id;},





setSpringConfig:function(springConfig){
this._springConfig = springConfig;
return this;},



getSpringConfig:function(){
return this._springConfig;},





























setCurrentValue:function(currentValue,skipSetAtRest){
this._startValue = currentValue;
this._currentState.position = currentValue;
if(!skipSetAtRest){
this.setAtRest();}

this.notifyPositionUpdated(false,false);
return this;},





getStartValue:function(){
return this._startValue;},



getCurrentValue:function(){
return this._currentState.position;},




getCurrentDisplacementDistance:function(){
return this.getDisplacementDistanceForState(this._currentState);},


getDisplacementDistanceForState:function(state){
return Math.abs(this._endValue - state.position);},








setEndValue:function(endValue){
if(this._endValue == endValue && this.isAtRest()){
return this;}

this._startValue = this.getCurrentValue();
this._endValue = endValue;
this._springSystem.activateSpring(this.getId());
for(var i=0,len=this.listeners.length;i < len;i++) {
var listener=this.listeners[i];
var onChange=listener.onSpringEndStateChange;
onChange && onChange(this);}

return this;},



getEndValue:function(){
return this._endValue;},









setVelocity:function(velocity){
if(velocity === this._currentState.velocity){
return this;}

this._currentState.velocity = velocity;
this._springSystem.activateSpring(this.getId());
return this;},



getVelocity:function(){
return this._currentState.velocity;},




setRestSpeedThreshold:function(restSpeedThreshold){
this._restSpeedThreshold = restSpeedThreshold;
return this;},



getRestSpeedThreshold:function(){
return this._restSpeedThreshold;},





setRestDisplacementThreshold:function(displacementFromRestThreshold){
this._displacementFromRestThreshold = displacementFromRestThreshold;},



getRestDisplacementThreshold:function(){
return this._displacementFromRestThreshold;},







setOvershootClampingEnabled:function(enabled){
this._overshootClampingEnabled = enabled;
return this;},



isOvershootClampingEnabled:function(){
return this._overshootClampingEnabled;},





isOvershooting:function(){
var start=this._startValue;
var end=this._endValue;
return this._springConfig.tension > 0 && (
start < end && this.getCurrentValue() > end || 
start > end && this.getCurrentValue() < end);},







advance:function(time,realDeltaTime){
var isAtRest=this.isAtRest();

if(isAtRest && this._wasAtRest){
return;}


var adjustedDeltaTime=realDeltaTime;
if(realDeltaTime > Spring.MAX_DELTA_TIME_SEC){
adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;}


this._timeAccumulator += adjustedDeltaTime;

var tension=this._springConfig.tension,
friction=this._springConfig.friction,

position=this._currentState.position,
velocity=this._currentState.velocity,
tempPosition=this._tempState.position,
tempVelocity=this._tempState.velocity,

aVelocity,aAcceleration,
bVelocity,bAcceleration,
cVelocity,cAcceleration,
dVelocity,dAcceleration,

dxdt,dvdt;

while(this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {

this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;

if(this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC){
this._previousState.position = position;
this._previousState.velocity = velocity;}


aVelocity = velocity;
aAcceleration = 
tension * (this._endValue - tempPosition) - friction * velocity;

tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
bVelocity = tempVelocity;
bAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
cVelocity = tempVelocity;
cAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
dVelocity = tempVelocity;
dAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

dxdt = 
1.0 / 6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);
dvdt = 1.0 / 6.0 * (
aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);


position += dxdt * Spring.SOLVER_TIMESTEP_SEC;
velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;}


this._tempState.position = tempPosition;
this._tempState.velocity = tempVelocity;

this._currentState.position = position;
this._currentState.velocity = velocity;

if(this._timeAccumulator > 0){
this.interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);}


if(this.isAtRest() || 
this._overshootClampingEnabled && this.isOvershooting()){

if(this._springConfig.tension > 0){
this._startValue = this._endValue;
this._currentState.position = this._endValue;}else 
{
this._endValue = this._currentState.position;
this._startValue = this._endValue;}

this.setVelocity(0);
isAtRest = true;}


var notifyActivate=false;
if(this._wasAtRest){
this._wasAtRest = false;
notifyActivate = true;}


var notifyAtRest=false;
if(isAtRest){
this._wasAtRest = true;
notifyAtRest = true;}


this.notifyPositionUpdated(notifyActivate,notifyAtRest);},


notifyPositionUpdated:function(notifyActivate,notifyAtRest){
for(var i=0,len=this.listeners.length;i < len;i++) {
var listener=this.listeners[i];
if(notifyActivate && listener.onSpringActivate){
listener.onSpringActivate(this);}


if(listener.onSpringUpdate){
listener.onSpringUpdate(this);}


if(notifyAtRest && listener.onSpringAtRest){
listener.onSpringAtRest(this);}}},









systemShouldAdvance:function(){
return !this.isAtRest() || !this.wasAtRest();},


wasAtRest:function(){
return this._wasAtRest;},








isAtRest:function(){
return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (
this.getDisplacementDistanceForState(this._currentState) <= 
this._displacementFromRestThreshold || 
this._springConfig.tension === 0);},






setAtRest:function(){
this._endValue = this._currentState.position;
this._tempState.position = this._currentState.position;
this._currentState.velocity = 0;
return this;},


interpolate:function(alpha){
this._currentState.position = this._currentState.position * 
alpha + this._previousState.position * (1 - alpha);
this._currentState.velocity = this._currentState.velocity * 
alpha + this._previousState.velocity * (1 - alpha);},


getListeners:function(){
return this.listeners;},


addListener:function(newListener){
this.listeners.push(newListener);
return this;},


removeListener:function(listenerToRemove){
removeFirst(this.listeners,listenerToRemove);
return this;},


removeAllListeners:function(){
this.listeners = [];
return this;},


currentValueIsApproximately:function(value){
return Math.abs(this.getCurrentValue() - value) <= 
this.getRestDisplacementThreshold();}});









var PhysicsState=function PhysicsState(){};

util.extend(PhysicsState.prototype,{
position:0,
velocity:0});








var SpringConfig=rebound.SpringConfig = 
function SpringConfig(tension,friction){
this.tension = tension;
this.friction = friction;};







var AnimationLooper=rebound.AnimationLooper = function AnimationLooper(){
this.springSystem = null;
var _this=this;
var _run=function(){
_this.springSystem.loop(Date.now());};


this.run = function(){
util.onFrame(_run);};};









rebound.SimulationLooper = function SimulationLooper(timestep){
this.springSystem = null;
var time=0;
var running=false;
timestep = timestep || 16.667;

this.run = function(){
if(running){
return;}

running = true;
while(!this.springSystem.getIsIdle()) {
this.springSystem.loop(time += timestep);}

running = false;};};








rebound.SteppingSimulationLooper = function(timestep){
this.springSystem = null;
var time=0;



this.run = function(){};


this.step = function(timestep){
this.springSystem.loop(time += timestep);};};








var OrigamiValueConverter=rebound.OrigamiValueConverter = {
tensionFromOrigamiValue:function(oValue){
return (oValue - 30.0) * 3.62 + 194.0;},


origamiValueFromTension:function(tension){
return (tension - 194.0) / 3.62 + 30.0;},


frictionFromOrigamiValue:function(oValue){
return (oValue - 8.0) * 3.0 + 25.0;},


origamiFromFriction:function(friction){
return (friction - 25.0) / 3.0 + 8.0;}};










var BouncyConversion=rebound.BouncyConversion = function(bounciness,speed){
this.bounciness = bounciness;
this.speed = speed;
var b=this.normalize(bounciness / 1.7,0,20.0);
b = this.projectNormal(b,0.0,0.8);
var s=this.normalize(speed / 1.7,0,20.0);
this.bouncyTension = this.projectNormal(s,0.5,200);
this.bouncyFriction = this.quadraticOutInterpolation(
b,
this.b3Nobounce(this.bouncyTension),
0.01);};


util.extend(BouncyConversion.prototype,{

normalize:function(value,startValue,endValue){
return (value - startValue) / (endValue - startValue);},


projectNormal:function(n,start,end){
return start + n * (end - start);},


linearInterpolation:function(t,start,end){
return t * end + (1.0 - t) * start;},


quadraticOutInterpolation:function(t,start,end){
return this.linearInterpolation(2 * t - t * t,start,end);},


b3Friction1:function(x){
return 0.0007 * Math.pow(x,3) - 
0.031 * Math.pow(x,2) + 0.64 * x + 1.28;},


b3Friction2:function(x){
return 0.000044 * Math.pow(x,3) - 
0.006 * Math.pow(x,2) + 0.36 * x + 2.;},


b3Friction3:function(x){
return 0.00000045 * Math.pow(x,3) - 
0.000332 * Math.pow(x,2) + 0.1078 * x + 5.84;},


b3Nobounce:function(tension){
var friction=0;
if(tension <= 18){
friction = this.b3Friction1(tension);}else 
if(tension > 18 && tension <= 44){
friction = this.b3Friction2(tension);}else 
{
friction = this.b3Friction3(tension);}

return friction;}});



util.extend(SpringConfig,{




fromOrigamiTensionAndFriction:function(tension,friction){
return new SpringConfig(
OrigamiValueConverter.tensionFromOrigamiValue(tension),
OrigamiValueConverter.frictionFromOrigamiValue(friction));},





fromBouncinessAndSpeed:function(bounciness,speed){
var bouncyConversion=new rebound.BouncyConversion(bounciness,speed);
return this.fromOrigamiTensionAndFriction(
bouncyConversion.bouncyTension,
bouncyConversion.bouncyFriction);},




coastingConfigWithOrigamiFriction:function(friction){
return new SpringConfig(
0,
OrigamiValueConverter.frictionFromOrigamiValue(friction));}});




SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = 
SpringConfig.fromOrigamiTensionAndFriction(40,7);

util.extend(SpringConfig.prototype,{friction:0,tension:0});




var colorCache={};
util.hexToRGB = function(color){
if(colorCache[color]){
return colorCache[color];}

color = color.replace('#','');
if(color.length === 3){
color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];}

var parts=color.match(/.{2}/g);

var ret={
r:parseInt(parts[0],16),
g:parseInt(parts[1],16),
b:parseInt(parts[2],16)};


colorCache[color] = ret;
return ret;};


util.rgbToHex = function(r,g,b){
r = r.toString(16);
g = g.toString(16);
b = b.toString(16);
r = r.length < 2?'0' + r:r;
g = g.length < 2?'0' + g:g;
b = b.length < 2?'0' + b:b;
return '#' + r + g + b;};


var MathUtil=rebound.MathUtil = {








mapValueInRange:function(value,fromLow,fromHigh,toLow,toHigh){
var fromRangeSize=fromHigh - fromLow;
var toRangeSize=toHigh - toLow;
var valueScale=(value - fromLow) / fromRangeSize;
return toLow + valueScale * toRangeSize;},





interpolateColor:
function(val,startColor,endColor,fromLow,fromHigh,asRGB){
fromLow = fromLow === undefined?0:fromLow;
fromHigh = fromHigh === undefined?1:fromHigh;
startColor = util.hexToRGB(startColor);
endColor = util.hexToRGB(endColor);
var r=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.r,endColor.r));

var g=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.g,endColor.g));

var b=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.b,endColor.b));

if(asRGB){
return 'rgb(' + r + ',' + g + ',' + b + ')';}else 
{
return util.rgbToHex(r,g,b);}},



degreesToRadians:function(deg){
return deg * Math.PI / 180;},


radiansToDegrees:function(rad){
return rad * 180 / Math.PI;}};




util.extend(util,MathUtil);







function removeFirst(array,item){
var idx=array.indexOf(item);
idx != -1 && array.splice(idx,1);}


var _onFrame;
if(typeof window !== 'undefined'){
_onFrame = window.requestAnimationFrame || 
window.webkitRequestAnimationFrame || 
window.mozRequestAnimationFrame || 
window.msRequestAnimationFrame || 
window.oRequestAnimationFrame;}

if(!_onFrame && typeof process !== 'undefined' && process.title === 'node'){
_onFrame = setImmediate;}



util.onFrame = function onFrame(func){
return _onFrame(func);};




if(typeof exports != 'undefined'){
util.extend(exports,rebound);}else 
if(typeof window != 'undefined'){
window.rebound = rebound;}})();
});
__d('NavigatorIOS',["EventEmitter","Image","NavigationContext","React","ReactNativeViewAttributes","NativeModules","StyleSheet","StaticContainer.react","View","createReactNativeComponentClass","invariant","logError","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EventEmitter=require('EventEmitter');
var Image=require('Image');
var NavigationContext=require('NavigationContext');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTNavigatorManager=require('NativeModules').NavigatorManager;
var StyleSheet=require('StyleSheet');
var StaticContainer=require('StaticContainer.react');
var View=require('View');

var createReactNativeComponentClass=
require('createReactNativeComponentClass');
var invariant=require('invariant');
var logError=require('logError');
var merge=require('merge');

var TRANSITIONER_REF='transitionerRef';

var PropTypes=React.PropTypes;

var __uid=0;
function getuid(){
return __uid++;}


var RCTNavigator=createReactNativeComponentClass({
validAttributes:merge(ReactNativeViewAttributes.UIView,{
requestedTopOfStack:true}),

uiViewClassName:'RCTNavigator'});


var RCTNavigatorItem=createReactNativeComponentClass({
validAttributes:{


title:true,
barTintColor:true,
leftButtonIcon:true,
leftButtonTitle:true,
onNavLeftButtonTap:true,
rightButtonIcon:true,
rightButtonTitle:true,
onNavRightButtonTap:true,
backButtonIcon:true,
backButtonTitle:true,
tintColor:true,
translucent:true,
navigationBarHidden:true,
titleTextColor:true,
style:true},

uiViewClassName:'RCTNavItem'});


var NavigatorTransitionerIOS=React.createClass({displayName:'NavigatorTransitionerIOS',
requestSchedulingNavigation:function(cb){
RCTNavigatorManager.requestSchedulingJavaScriptNavigation(
React.findNodeHandle(this),
logError,
cb);},



render:function(){
return (
React.createElement(RCTNavigator,this.props));}});

























































































































var NavigatorIOS=React.createClass({displayName:'NavigatorIOS',

propTypes:{






initialRoute:PropTypes.shape({



component:PropTypes.func.isRequired,




title:PropTypes.string.isRequired,





passProps:PropTypes.object,






backButtonIcon:Image.propTypes.source,






backButtonTitle:PropTypes.string,




leftButtonIcon:Image.propTypes.source,




leftButtonTitle:PropTypes.string,




onLeftButtonPress:PropTypes.func,




rightButtonIcon:Image.propTypes.source,




rightButtonTitle:PropTypes.string,




onRightButtonPress:PropTypes.func,




wrapperStyle:View.propTypes.style}).

isRequired,




navigationBarHidden:PropTypes.bool,





itemWrapperStyle:View.propTypes.style,




tintColor:PropTypes.string,




barTintColor:PropTypes.string,




titleTextColor:PropTypes.string,




translucent:PropTypes.bool},



navigator:undefined,
navigationContext:new NavigationContext(),

componentWillMount:function(){


this.navigator = {
push:this.push,
pop:this.pop,
popN:this.popN,
replace:this.replace,
replacePrevious:this.replacePrevious,
replacePreviousAndPop:this.replacePreviousAndPop,
resetTo:this.resetTo,
popToRoute:this.popToRoute,
popToTop:this.popToTop,
navigationContext:this.navigationContext};

this._emitWillFocus(this.state.routeStack[this.state.observedTopOfStack]);},


componentDidMount:function(){
this._emitDidFocus(this.state.routeStack[this.state.observedTopOfStack]);},


componentWillUnmount:function(){
this.navigationContext.dispose();
this.navigationContext = new NavigationContext();},


getInitialState:function(){
return {
idStack:[getuid()],
routeStack:[this.props.initialRoute],

requestedTopOfStack:0,






observedTopOfStack:0,
progress:1,
fromIndex:0,
toIndex:0,


makingNavigatorRequest:false,



updatingAllIndicesAtOrBeyond:0};},



_toFocusOnNavigationComplete:undefined,

_handleFocusRequest:function(item){
if(this.state.makingNavigatorRequest){
this._toFocusOnNavigationComplete = item;}else 
{
this._getFocusEmitter().emit('focus',item);}},



_focusEmitter:undefined,

_getFocusEmitter:function(){

var focusEmitter=this._focusEmitter;
if(!focusEmitter){
focusEmitter = new EventEmitter();
this._focusEmitter = focusEmitter;}

return focusEmitter;},


getChildContext:function()


{
return {
onFocusRequested:this._handleFocusRequest,
focusEmitter:this._getFocusEmitter()};},



childContextTypes:{
onFocusRequested:React.PropTypes.func,
focusEmitter:React.PropTypes.instanceOf(EventEmitter)},


_tryLockNavigator:function(cb){
this.refs[TRANSITIONER_REF].requestSchedulingNavigation(
function(acquiredLock){return acquiredLock && cb();});},



_handleNavigatorStackChanged:function(e){
var newObservedTopOfStack=e.nativeEvent.stackLength - 1;
this._emitDidFocus(this.state.routeStack[newObservedTopOfStack]);

invariant(
newObservedTopOfStack <= this.state.requestedTopOfStack,
'No navigator item should be pushed without JS knowing about it %s %s',newObservedTopOfStack,this.state.requestedTopOfStack);

var wasWaitingForConfirmation=
this.state.requestedTopOfStack !== this.state.observedTopOfStack;
if(wasWaitingForConfirmation){
invariant(
newObservedTopOfStack === this.state.requestedTopOfStack,
'If waiting for observedTopOfStack to reach requestedTopOfStack, ' + 
'the only valid observedTopOfStack should be requestedTopOfStack.');}











var nextState={
observedTopOfStack:newObservedTopOfStack,
makingNavigatorRequest:false,
updatingAllIndicesAtOrBeyond:null,
progress:1,
toIndex:newObservedTopOfStack,
fromIndex:newObservedTopOfStack};

this.setState(nextState,this._eliminateUnneededChildren);},


_eliminateUnneededChildren:function(){



var updatingAllIndicesAtOrBeyond=
this.state.routeStack.length > this.state.observedTopOfStack + 1?
this.state.observedTopOfStack + 1:
null;
this.setState({
idStack:this.state.idStack.slice(0,this.state.observedTopOfStack + 1),
routeStack:this.state.routeStack.slice(0,this.state.observedTopOfStack + 1),

requestedTopOfStack:this.state.observedTopOfStack,
makingNavigatorRequest:true,
updatingAllIndicesAtOrBeyond:updatingAllIndicesAtOrBeyond});},



_emitDidFocus:function(route){
this.navigationContext.emit('didfocus',{route:route});},


_emitWillFocus:function(route){
this.navigationContext.emit('willfocus',{route:route});},


push:function(route){var _this=this;
invariant(!!route,'Must supply route to push');

if(this.state.requestedTopOfStack === this.state.observedTopOfStack){
this._tryLockNavigator(function(){
_this._emitWillFocus(route);

var nextStack=_this.state.routeStack.concat([route]);
var nextIDStack=_this.state.idStack.concat([getuid()]);
_this.setState({


idStack:nextIDStack,
routeStack:nextStack,
requestedTopOfStack:nextStack.length - 1,
makingNavigatorRequest:true,
updatingAllIndicesAtOrBeyond:nextStack.length - 1});});}},





popN:function(n){var _this2=this;
if(n === 0){
return;}


if(this.state.requestedTopOfStack === this.state.observedTopOfStack){
if(this.state.requestedTopOfStack > 0){
this._tryLockNavigator(function(){
var newRequestedTopOfStack=_this2.state.requestedTopOfStack - n;
invariant(newRequestedTopOfStack >= 0,'Cannot pop below 0');
_this2._emitWillFocus(_this2.state.routeStack[newRequestedTopOfStack]);
_this2.setState({
requestedTopOfStack:newRequestedTopOfStack,
makingNavigatorRequest:true,


updatingAllIndicesAtOrBeyond:null});});}}},






pop:function(){
this.popN(1);},








replaceAtIndex:function(route,index){
invariant(!!route,'Must supply route to replace');
if(index < 0){
index += this.state.routeStack.length;}


if(this.state.routeStack.length <= index){
return;}




var nextIDStack=this.state.idStack.slice();
var nextRouteStack=this.state.routeStack.slice();
nextIDStack[index] = getuid();
nextRouteStack[index] = route;

this.setState({
idStack:nextIDStack,
routeStack:nextRouteStack,
makingNavigatorRequest:false,
updatingAllIndicesAtOrBeyond:index});


this._emitWillFocus(route);
this._emitDidFocus(route);},





replace:function(route){
this.replaceAtIndex(route,-1);},





replacePrevious:function(route){
this.replaceAtIndex(route,-2);},


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);},


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute !== -1,
'Calling pop to route for a route that doesn\'t exist!');

var numToPop=this.state.routeStack.length - indexOfRoute - 1;
this.popN(numToPop);},


replacePreviousAndPop:function(route){var _this3=this;

if(this.state.requestedTopOfStack !== this.state.observedTopOfStack){
return;}

if(this.state.routeStack.length < 2){
return;}

this._tryLockNavigator(function(){
_this3.replacePrevious(route);
_this3.setState({
requestedTopOfStack:_this3.state.requestedTopOfStack - 1,
makingNavigatorRequest:true});});},




resetTo:function(route){
invariant(!!route,'Must supply route to push');

if(this.state.requestedTopOfStack !== this.state.observedTopOfStack){
return;}

this.replaceAtIndex(route,0);
this.popToRoute(route);},


handleNavigationComplete:function(e){
if(this._toFocusOnNavigationComplete){
this._getFocusEmitter().emit('focus',this._toFocusOnNavigationComplete);
this._toFocusOnNavigationComplete = null;}

this._handleNavigatorStackChanged(e);},


_routeToStackItem:function(route,i){
var Component=route.component;
var shouldUpdateChild=this.state.updatingAllIndicesAtOrBeyond !== null && 
this.state.updatingAllIndicesAtOrBeyond >= i;

return (
React.createElement(StaticContainer,{key:'nav' + i,shouldUpdate:shouldUpdateChild},
React.createElement(RCTNavigatorItem,{
title:route.title,
style:[
styles.stackItem,
this.props.itemWrapperStyle,
route.wrapperStyle],

backButtonIcon:this._imageNameFromSource(route.backButtonIcon),
backButtonTitle:route.backButtonTitle,
leftButtonIcon:this._imageNameFromSource(route.leftButtonIcon),
leftButtonTitle:route.leftButtonTitle,
onNavLeftButtonTap:route.onLeftButtonPress,
rightButtonIcon:this._imageNameFromSource(route.rightButtonIcon),
rightButtonTitle:route.rightButtonTitle,
onNavRightButtonTap:route.onRightButtonPress,
navigationBarHidden:this.props.navigationBarHidden,
tintColor:this.props.tintColor,
barTintColor:this.props.barTintColor,
translucent:this.props.translucent !== false,
titleTextColor:this.props.titleTextColor},
React.createElement(Component,_extends({
navigator:this.navigator,
route:route},
route.passProps)))));},






_imageNameFromSource:function(source){
return source?source.uri:undefined;},


renderNavigationStackItems:function(){
var shouldRecurseToNavigator=
this.state.makingNavigatorRequest || 
this.state.updatingAllIndicesAtOrBeyond !== null;


var items=shouldRecurseToNavigator?
this.state.routeStack.map(this._routeToStackItem):null;
return (
React.createElement(StaticContainer,{shouldUpdate:shouldRecurseToNavigator},
React.createElement(NavigatorTransitionerIOS,{
ref:TRANSITIONER_REF,
style:styles.transitioner,
vertical:this.props.vertical,
requestedTopOfStack:this.state.requestedTopOfStack,
onNavigationComplete:this.handleNavigationComplete},
items)));},





render:function(){
return (
React.createElement(View,{style:this.props.style},
this.renderNavigationStackItems()));}});





var styles=StyleSheet.create({
stackItem:{
backgroundColor:'white',
overflow:'hidden',
position:'absolute',
top:0,
left:0,
right:0,
bottom:0},

transitioner:{
flex:1}});



module.exports = NavigatorIOS;
});
__d('PickerIOS',["NativeMethodsMixin","React","ReactChildren","ReactNativeViewAttributes","NativeModules","StyleSheet","View","requireNativeComponent","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactChildren=require('ReactChildren');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTPickerIOSConsts=require('NativeModules').UIManager.RCTPicker.Constants;
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var merge=require('merge');

var PICKER='picker';

var PickerIOS=React.createClass({displayName:'PickerIOS',
mixins:[NativeMethodsMixin],

propTypes:{
onValueChange:React.PropTypes.func,
selectedValue:React.PropTypes.any},


getInitialState:function(){
return this._stateFromProps(this.props);},


componentWillReceiveProps:function(nextProps){
this.setState(this._stateFromProps(nextProps));},



_stateFromProps:function(props){
var selectedIndex=0;
var items=[];
ReactChildren.forEach(props.children,function(child,index){
if(child.props.value === props.selectedValue){
selectedIndex = index;}

items.push({value:child.props.value,label:child.props.label});});

return {selectedIndex:selectedIndex,items:items};},


render:function(){
return (
React.createElement(View,{style:this.props.style},
React.createElement(RCTPickerIOS,{
ref:PICKER,
style:styles.pickerIOS,
items:this.state.items,
selectedIndex:this.state.selectedIndex,
onChange:this._onChange})));},





_onChange:function(event){
if(this.props.onChange){
this.props.onChange(event);}

if(this.props.onValueChange){
this.props.onValueChange(event.nativeEvent.newValue);}








if(this.state.selectedIndex !== event.nativeEvent.newIndex){
this.refs[PICKER].setNativeProps({
selectedIndex:this.state.selectedIndex});}}});





PickerIOS.Item = React.createClass({displayName:'Item',
propTypes:{
value:React.PropTypes.any,
label:React.PropTypes.string},


render:function(){

return null;}});



var styles=StyleSheet.create({
pickerIOS:{



height:RCTPickerIOSConsts.ComponentHeight}});



var RCTPickerIOS=requireNativeComponent('RCTPicker',null);

module.exports = PickerIOS;
});
__d('ProgressViewIOS',["Image","NativeMethodsMixin","NativeModules","ReactPropTypes","React","StyleSheet","requireNativeComponent","verifyPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var Image=require('Image');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');
var verifyPropTypes=require('verifyPropTypes');




var ProgressViewIOS=React.createClass({displayName:'ProgressViewIOS',
mixins:[NativeMethodsMixin],

propTypes:{



progressViewStyle:PropTypes.oneOf(['default','bar']),




progress:PropTypes.number,




progressTintColor:PropTypes.string,




trackTintColor:PropTypes.string,




progressImage:Image.propTypes.source,




trackImage:Image.propTypes.source},


render:function(){
return (
React.createElement(RCTProgressView,_extends({},
this.props,{
style:[styles.progressView,this.props.style]})));}});





var styles=StyleSheet.create({
progressView:{
height:NativeModules.ProgressViewManager.ComponentHeight}});



var RCTProgressView=requireNativeComponent(
'RCTProgressView',
ProgressViewIOS);


module.exports = ProgressViewIOS;
});
__d('SegmentedControlIOS',["NativeMethodsMixin","NativeModules","ReactPropTypes","React","StyleSheet","requireNativeComponent","verifyPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');
var verifyPropTypes=require('verifyPropTypes');






var SEGMENTED_CONTROL_REFERENCE='segmentedcontrol';






var SegmentedControlIOS=React.createClass({displayName:'SegmentedControlIOS',
mixins:[NativeMethodsMixin],

propTypes:{



values:PropTypes.arrayOf(PropTypes.string),




selectedIndex:PropTypes.number,





onValueChange:PropTypes.func,





onChange:PropTypes.func,





enabled:PropTypes.bool,




tintColor:PropTypes.string,





momentary:PropTypes.bool},


getDefaultProps:function(){
return {
values:[],
enabled:true};},



_onChange:function(event){
this.props.onChange && this.props.onChange(event);
this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);},


render:function(){
return (
React.createElement(RCTSegmentedControl,_extends({},
this.props,{
ref:SEGMENTED_CONTROL_REFERENCE,
style:[styles.segmentedControl,this.props.style],
onChange:this._onChange})));}});





var styles=StyleSheet.create({
segmentedControl:{
height:NativeModules.SegmentedControlManager.ComponentHeight}});



var RCTSegmentedControl=requireNativeComponent(
'RCTSegmentedControl',
SegmentedControlIOS);


module.exports = SegmentedControlIOS;
});
__d('SliderIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');



var SliderIOS=React.createClass({displayName:'SliderIOS',
mixins:[NativeMethodsMixin],

propTypes:{




style:View.propTypes.style,









value:PropTypes.number,




minimumValue:PropTypes.number,




maximumValue:PropTypes.number,





minimumTrackTintColor:PropTypes.string,





maximumTrackTintColor:PropTypes.string,




onValueChange:PropTypes.func,





onSlidingComplete:PropTypes.func},


_onValueChange:function(event){
this.props.onChange && this.props.onChange(event);
if(event.nativeEvent.continuous){
this.props.onValueChange && 
this.props.onValueChange(event.nativeEvent.value);}else 
{
this.props.onSlidingComplete && event.nativeEvent.value !== undefined && 
this.props.onSlidingComplete(event.nativeEvent.value);}},



render:function(){
return (
React.createElement(RCTSlider,{
style:[styles.slider,this.props.style],
value:this.props.value,
maximumValue:this.props.maximumValue,
minimumValue:this.props.minimumValue,
minimumTrackTintColor:this.props.minimumTrackTintColor,
maximumTrackTintColor:this.props.maximumTrackTintColor,
onChange:this._onValueChange}));}});





var styles=StyleSheet.create({
slider:{
height:40}});



var RCTSlider=requireNativeComponent('RCTSlider',SliderIOS);

module.exports = SliderIOS;
});
__d('SwitchIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');

var SWITCH='switch';















var SwitchIOS=React.createClass({displayName:'SwitchIOS',
mixins:[NativeMethodsMixin],

propTypes:{




value:PropTypes.bool,





disabled:PropTypes.bool,




onValueChange:PropTypes.func,




onTintColor:PropTypes.string,




thumbTintColor:PropTypes.string,




tintColor:PropTypes.string},


getDefaultProps:function(){
return {
value:false,
disabled:false};},



_onChange:function(event){
this.props.onChange && this.props.onChange(event);
this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);



this.refs[SWITCH].setNativeProps({value:this.props.value});},


render:function(){
return (
React.createElement(RCTSwitch,_extends({},
this.props,{
ref:SWITCH,
onChange:this._onChange,
style:[styles.rkSwitch,this.props.style]})));}});





var styles=StyleSheet.create({
rkSwitch:{
height:31,
width:51}});



var RCTSwitch=requireNativeComponent('RCTSwitch',SwitchIOS);

module.exports = SwitchIOS;
});
__d('TabBarIOS',["React","StyleSheet","TabBarItemIOS","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var TabBarItemIOS=require('TabBarItemIOS');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var TabBarIOS=React.createClass({displayName:'TabBarIOS',
statics:{
Item:TabBarItemIOS},


propTypes:{
style:View.propTypes.style,



tintColor:React.PropTypes.string,



barTintColor:React.PropTypes.string},


render:function(){
return (
React.createElement(RCTTabBar,{
style:[styles.tabGroup,this.props.style],
tintColor:this.props.tintColor,
barTintColor:this.props.barTintColor},
this.props.children));}});





var styles=StyleSheet.create({
tabGroup:{
flex:1}});



var RCTTabBar=requireNativeComponent('RCTTabBar',TabBarIOS);

module.exports = TabBarIOS;
});
__d('TabBarItemIOS',["Image","React","StaticContainer.react","StyleSheet","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var Image=require('Image');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var TabBarItemIOS=React.createClass({displayName:'TabBarItemIOS',
propTypes:{



badge:React.PropTypes.oneOfType([
React.PropTypes.string,
React.PropTypes.number]),






systemIcon:React.PropTypes.oneOf([
'bookmarks',
'contacts',
'downloads',
'favorites',
'featured',
'history',
'more',
'most-recent',
'most-viewed',
'recents',
'search',
'top-rated']),




icon:Image.propTypes.source,




selectedIcon:Image.propTypes.source,




onPress:React.PropTypes.func,




selected:React.PropTypes.bool,



style:View.propTypes.style,




title:React.PropTypes.string},


getInitialState:function(){
return {
hasBeenSelected:false};},



componentWillMount:function(){
if(this.props.selected){
this.setState({hasBeenSelected:true});}},



componentWillReceiveProps:function(nextProps){
if(this.state.hasBeenSelected || nextProps.selected){
this.setState({hasBeenSelected:true});}},



render:function(){
var tabContents=null;


if(this.state.hasBeenSelected){
tabContents = 
React.createElement(StaticContainer,{shouldUpdate:this.props.selected},
this.props.children);}else 

{
tabContents = React.createElement(View,null);}


var icon=this.props.systemIcon || 
this.props.icon && this.props.icon.uri;


var badge=typeof this.props.badge === 'number'?
'' + this.props.badge:
this.props.badge;

return (
React.createElement(RCTTabBarItem,{
icon:icon,
selectedIcon:this.props.selectedIcon && this.props.selectedIcon.uri,
onPress:this.props.onPress,
selected:this.props.selected,
badge:badge,
title:this.props.title,
style:[styles.tab,this.props.style]},
tabContents));}});





var styles=StyleSheet.create({
tab:{
position:'absolute',
top:0,
right:0,
bottom:0,
left:0}});



var RCTTabBarItem=requireNativeComponent('RCTTabBarItem',TabBarItemIOS);

module.exports = TabBarItemIOS;
});
__d('Text',["NativeMethodsMixin","Platform","React","ReactInstanceMap","ReactNativeViewAttributes","StyleSheetPropType","TextStylePropTypes","Touchable","createReactNativeComponentClass","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var TextStylePropTypes=require('TextStylePropTypes');
var Touchable=require('Touchable');

var createReactNativeComponentClass=
require('createReactNativeComponentClass');
var merge=require('merge');

var stylePropType=StyleSheetPropType(TextStylePropTypes);

var viewConfig={
validAttributes:merge(ReactNativeViewAttributes.UIView,{
isHighlighted:true,
numberOfLines:true}),

uiViewClassName:'RCTText'};



































var Text=React.createClass({displayName:'Text',

mixins:[Touchable.Mixin,NativeMethodsMixin],

propTypes:{





numberOfLines:React.PropTypes.number,





onPress:React.PropTypes.func,




suppressHighlighting:React.PropTypes.bool,
style:stylePropType,



testID:React.PropTypes.string,





onLayout:React.PropTypes.func},


viewConfig:viewConfig,

getInitialState:function(){
return merge(this.touchableGetInitialState(),{
isHighlighted:false});},



onStartShouldSetResponder:function(){
var shouldSetFromProps=this.props.onStartShouldSetResponder && 
this.props.onStartShouldSetResponder();
return shouldSetFromProps || !!this.props.onPress;},





handleResponderTerminationRequest:function(){


var allowTermination=this.touchableHandleResponderTerminationRequest();
if(allowTermination && this.props.onResponderTerminationRequest){
allowTermination = this.props.onResponderTerminationRequest();}

return allowTermination;},


handleResponderGrant:function(e,dispatchID){
this.touchableHandleResponderGrant(e,dispatchID);
this.props.onResponderGrant && 
this.props.onResponderGrant.apply(this,arguments);},


handleResponderMove:function(e){
this.touchableHandleResponderMove(e);
this.props.onResponderMove && 
this.props.onResponderMove.apply(this,arguments);},


handleResponderRelease:function(e){
this.touchableHandleResponderRelease(e);
this.props.onResponderRelease && 
this.props.onResponderRelease.apply(this,arguments);},


handleResponderTerminate:function(e){
this.touchableHandleResponderTerminate(e);
this.props.onResponderTerminate && 
this.props.onResponderTerminate.apply(this,arguments);},


touchableHandleActivePressIn:function(){
if(this.props.suppressHighlighting || !this.props.onPress){
return;}

this.setState({
isHighlighted:true});},



touchableHandleActivePressOut:function(){
if(this.props.suppressHighlighting || !this.props.onPress){
return;}

this.setState({
isHighlighted:false});},



touchableHandlePress:function(){
this.props.onPress && this.props.onPress();},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


getChildContext:function(){
return {isInAParentText:true};},


childContextTypes:{
isInAParentText:React.PropTypes.bool},


render:function(){
var props={};
for(var key in this.props) {
props[key] = this.props[key];}


if(props.accessible !== false){
props.accessible = true;}

props.isHighlighted = this.state.isHighlighted;
props.onStartShouldSetResponder = this.onStartShouldSetResponder;
props.onResponderTerminationRequest = 
this.handleResponderTerminationRequest;
props.onResponderGrant = this.handleResponderGrant;
props.onResponderMove = this.handleResponderMove;
props.onResponderRelease = this.handleResponderRelease;
props.onResponderTerminate = this.handleResponderTerminate;


var context=ReactInstanceMap.get(this)._context;
if(context.isInAParentText){
return React.createElement(RCTVirtualText,props);}else 
{
return React.createElement(RCTText,props);}}});











var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};

var RCTText=createReactNativeComponentClass(viewConfig);
var RCTVirtualText=RCTText;

if(Platform.OS === 'android'){
RCTVirtualText = createReactNativeComponentClass({
validAttributes:merge(ReactNativeViewAttributes.UIView,{
isHighlighted:true}),

uiViewClassName:'RCTVirtualText'});}



module.exports = Text;
});
__d('Touchable',["BoundingDimensions","Position","TouchEventUtils","keyMirror","queryLayoutByID"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





var BoundingDimensions=require('BoundingDimensions');
var Position=require('Position');
var TouchEventUtils=require('TouchEventUtils');

var keyMirror=require('keyMirror');
var queryLayoutByID=require('queryLayoutByID');

























































































var States=keyMirror({
NOT_RESPONDER:null,
RESPONDER_INACTIVE_PRESS_IN:null,
RESPONDER_INACTIVE_PRESS_OUT:null,
RESPONDER_ACTIVE_PRESS_IN:null,
RESPONDER_ACTIVE_PRESS_OUT:null,
RESPONDER_ACTIVE_LONG_PRESS_IN:null,
RESPONDER_ACTIVE_LONG_PRESS_OUT:null,
ERROR:null});





var IsActive={
RESPONDER_ACTIVE_PRESS_OUT:true,
RESPONDER_ACTIVE_PRESS_IN:true};






var IsPressingIn={
RESPONDER_INACTIVE_PRESS_IN:true,
RESPONDER_ACTIVE_PRESS_IN:true,
RESPONDER_ACTIVE_LONG_PRESS_IN:true};


var IsLongPressingIn={
RESPONDER_ACTIVE_LONG_PRESS_IN:true};





var Signals=keyMirror({
DELAY:null,
RESPONDER_GRANT:null,
RESPONDER_RELEASE:null,
RESPONDER_TERMINATED:null,
ENTER_PRESS_RECT:null,
LEAVE_PRESS_RECT:null,
LONG_PRESS_DETECTED:null});





var Transitions={
NOT_RESPONDER:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
RESPONDER_RELEASE:States.ERROR,
RESPONDER_TERMINATED:States.ERROR,
ENTER_PRESS_RECT:States.ERROR,
LEAVE_PRESS_RECT:States.ERROR,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_INACTIVE_PRESS_IN:{
DELAY:States.RESPONDER_ACTIVE_PRESS_IN,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_INACTIVE_PRESS_OUT:{
DELAY:States.RESPONDER_ACTIVE_PRESS_OUT,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_ACTIVE_PRESS_IN:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

RESPONDER_ACTIVE_PRESS_OUT:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_ACTIVE_LONG_PRESS_IN:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

RESPONDER_ACTIVE_LONG_PRESS_OUT:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

error:{
DELAY:States.NOT_RESPONDER,
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.NOT_RESPONDER,
LEAVE_PRESS_RECT:States.NOT_RESPONDER,
LONG_PRESS_DETECTED:States.NOT_RESPONDER}};






var HIGHLIGHT_DELAY_MS=130;

var PRESS_EXPAND_PX=20;

var LONG_PRESS_THRESHOLD=500;

var LONG_PRESS_DELAY_MS=LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;

var LONG_PRESS_ALLOWED_MOVEMENT=10;



































































var TouchableMixin={







touchableGetInitialState:function(){
return {
touchable:{touchState:undefined,responderID:null}};},







touchableHandleResponderTerminationRequest:function(){
return !this.props.rejectResponderTermination;},





touchableHandleStartShouldSetResponder:function(){
return true;},





touchableLongPressCancelsPress:function(){
return true;},








touchableHandleResponderGrant:function(e,dispatchID){



e.persist();

this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
this.pressOutDelayTimeout = null;

this.state.touchable.touchState = States.NOT_RESPONDER;
this.state.touchable.responderID = dispatchID;
this._receiveSignal(Signals.RESPONDER_GRANT,e);
var delayMS=
this.touchableGetHighlightDelayMS !== undefined?
Math.max(this.touchableGetHighlightDelayMS(),0):HIGHLIGHT_DELAY_MS;
delayMS = isNaN(delayMS)?HIGHLIGHT_DELAY_MS:delayMS;
if(delayMS !== 0){
this.touchableDelayTimeout = setTimeout(
this._handleDelay.bind(this,e),
delayMS);}else 

{
this._handleDelay(e);}


var longDelayMS=
this.touchableGetLongPressDelayMS !== undefined?
Math.max(this.touchableGetLongPressDelayMS(),10):LONG_PRESS_DELAY_MS;
longDelayMS = isNaN(longDelayMS)?LONG_PRESS_DELAY_MS:longDelayMS;
this.longPressDelayTimeout = setTimeout(
this._handleLongDelay.bind(this,e),
longDelayMS + delayMS);},






touchableHandleResponderRelease:function(e){
this._receiveSignal(Signals.RESPONDER_RELEASE,e);},





touchableHandleResponderTerminate:function(e){
this._receiveSignal(Signals.RESPONDER_TERMINATED,e);},





touchableHandleResponderMove:function(e){


if(this.state.touchable.touchState === States.RESPONDER_INACTIVE_PRESS_IN){
return;}



if(!this.state.touchable.positionOnActivate){
return;}


var positionOnActivate=this.state.touchable.positionOnActivate;
var dimensionsOnActivate=this.state.touchable.dimensionsOnActivate;
var pressRectOffset=this.touchableGetPressRectOffset?
this.touchableGetPressRectOffset():null;
var pressExpandLeft=
pressRectOffset.left != null?pressRectOffset.left:PRESS_EXPAND_PX;
var pressExpandTop=
pressRectOffset.top != null?pressRectOffset.top:PRESS_EXPAND_PX;
var pressExpandRight=
pressRectOffset.right != null?pressRectOffset.right:PRESS_EXPAND_PX;
var pressExpandBottom=
pressRectOffset.bottom != null?pressRectOffset.bottom:PRESS_EXPAND_PX;

var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch && touch.pageX;
var pageY=touch && touch.pageY;

if(this.pressInLocation){
var movedDistance=this._getDistanceBetweenPoints(pageX,pageY,this.pressInLocation.pageX,this.pressInLocation.pageY);
if(movedDistance > LONG_PRESS_ALLOWED_MOVEMENT){
this._cancelLongPressDelayTimeout();}}



var isTouchWithinActive=
pageX > positionOnActivate.left - pressExpandLeft && 
pageY > positionOnActivate.top - pressExpandTop && 
pageX < 
positionOnActivate.left + 
dimensionsOnActivate.width + 
pressExpandRight && 
pageY < 
positionOnActivate.top + 
dimensionsOnActivate.height + 
pressExpandBottom;
if(isTouchWithinActive){
this._receiveSignal(Signals.ENTER_PRESS_RECT,e);}else 
{
this._cancelLongPressDelayTimeout();
this._receiveSignal(Signals.LEAVE_PRESS_RECT,e);}},

















































































_remeasureMetricsOnActivation:function(){
queryLayoutByID(
this.state.touchable.responderID,
null,
this._handleQueryLayout);},



_handleQueryLayout:function(l,t,w,h,globalX,globalY){
this.state.touchable.positionOnActivate && 
Position.release(this.state.touchable.positionOnActivate);
this.state.touchable.dimensionsOnActivate && 
BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);
this.state.touchable.positionOnActivate = Position.getPooled(globalX,globalY);
this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(w,h);},


_handleDelay:function(e){
this.touchableDelayTimeout = null;
this._receiveSignal(Signals.DELAY,e);},


_handleLongDelay:function(e){
this.longPressDelayTimeout = null;
this._receiveSignal(Signals.LONG_PRESS_DETECTED,e);},










_receiveSignal:function(signal,e){
var curState=this.state.touchable.touchState;
if(!(Transitions[curState] && Transitions[curState][signal])){
throw new Error(
'Unrecognized signal `' + signal + '` or state `' + curState + 
'` for Touchable responder `' + this.state.touchable.responderID + '`');}


var nextState=Transitions[curState][signal];
if(nextState === States.ERROR){
throw new Error(
'Touchable cannot transition from `' + curState + '` to `' + signal + 
'` for responder `' + this.state.touchable.responderID + '`');}


if(curState !== nextState){
this._performSideEffectsForTransition(curState,nextState,signal,e);
this.state.touchable.touchState = nextState;}},



_cancelLongPressDelayTimeout:function(){
this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
this.longPressDelayTimeout = null;},


_isHighlight:function(state){
return state === States.RESPONDER_ACTIVE_PRESS_IN || 
state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;},


_savePressInLocation:function(e){
var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch && touch.pageX;
var pageY=touch && touch.pageY;
this.pressInLocation = {pageX:pageX,pageY:pageY};},


_getDistanceBetweenPoints:function(aX,aY,bX,bY){
var deltaX=aX - bX;
var deltaY=aY - bY;
return Math.sqrt(deltaX * deltaX + deltaY * deltaY);},













_performSideEffectsForTransition:function(curState,nextState,signal,e){
var curIsHighlight=this._isHighlight(curState);
var newIsHighlight=this._isHighlight(nextState);

var isFinalSignal=
signal === Signals.RESPONDER_TERMINATED || 
signal === Signals.RESPONDER_RELEASE;

if(isFinalSignal){
this._cancelLongPressDelayTimeout();}


if(!IsActive[curState] && IsActive[nextState]){
this._remeasureMetricsOnActivation();}


if(IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED){
this.touchableHandleLongPress && this.touchableHandleLongPress();}


if(newIsHighlight && !curIsHighlight){
this._savePressInLocation(e);
this.touchableHandleActivePressIn && this.touchableHandleActivePressIn();}else 
if(!newIsHighlight && curIsHighlight && this.touchableHandleActivePressOut){
if(this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()){
this.pressOutDelayTimeout = this.setTimeout(function(){
this.touchableHandleActivePressOut();},
this.touchableGetPressOutDelayMS());}else 
{
this.touchableHandleActivePressOut();}}



if(IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE){
var hasLongPressHandler=!!this.props.onLongPress;
var pressIsLongButStillCallOnPress=
IsLongPressingIn[curState] && (
!hasLongPressHandler || 
!this.touchableLongPressCancelsPress());


var shouldInvokePress=!IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;
if(shouldInvokePress && this.touchableHandlePress){
this.touchableHandlePress(e);}}



this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
this.touchableDelayTimeout = null;}};




var Touchable={
Mixin:TouchableMixin};


module.exports = Touchable;
});
__d('BoundingDimensions',["PooledClass"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var PooledClass=require('PooledClass');

var twoArgumentPooler=PooledClass.twoArgumentPooler;








function BoundingDimensions(width,height){
this.width = width;
this.height = height;}






BoundingDimensions.getPooledFromElement = function(element){
return BoundingDimensions.getPooled(
element.offsetWidth,
element.offsetHeight);};



PooledClass.addPoolingTo(BoundingDimensions,twoArgumentPooler);

module.exports = BoundingDimensions;
});
__d('Position',["PooledClass"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var PooledClass=require('PooledClass');

var twoArgumentPooler=PooledClass.twoArgumentPooler;









function Position(left,top){
this.left = left;
this.top = top;}


PooledClass.addPoolingTo(Position,twoArgumentPooler);

module.exports = Position;
});
__d('TouchEventUtils',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










TouchEventUtils={










extractSingleTouch:function(nativeEvent){
var touches=nativeEvent.touches;
var changedTouches=nativeEvent.changedTouches;
var hasTouches=touches && touches.length > 0;
var hasChangedTouches=changedTouches && changedTouches.length > 0;

return !hasTouches && hasChangedTouches?changedTouches[0]:
hasTouches?touches[0]:
nativeEvent;}};



module.exports = TouchEventUtils;
});
__d('queryLayoutByID',["ReactNativeTagHandles","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var RCTUIManager=require('NativeModules').UIManager;
































var queryLayoutByID=function(
rootNodeID,
onError,
onSuccess)
{

RCTUIManager.measure(
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID],
onSuccess);};



module.exports = queryLayoutByID;
});
__d('TextInput',["DocumentSelectionState","EventEmitter","NativeMethodsMixin","NativeModules","Platform","ReactPropTypes","React","ReactChildren","StyleSheet","Text","TextInputState","TouchableWithoutFeedback","createReactNativeComponentClass","emptyFunction","invariant","requireNativeComponent","react-timer-mixin/TimerMixin.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var DocumentSelectionState=require('DocumentSelectionState');
var EventEmitter=require('EventEmitter');
var NativeMethodsMixin=require('NativeMethodsMixin');
var RCTUIManager=require('NativeModules').UIManager;
var Platform=require('Platform');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactChildren=require('ReactChildren');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TextInputState=require('TextInputState');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');
var requireNativeComponent=require('requireNativeComponent');

var onlyMultiline={
onSelectionChange:true,
onTextInput:true,
children:true};


var notMultiline={
onSubmitEditing:true};


var AndroidTextInputAttributes={
autoCapitalize:true,
autoCorrect:true,
autoFocus:true,
textAlign:true,
textAlignVertical:true,
keyboardType:true,
multiline:true,
password:true,
placeholder:true,
placeholderTextColor:true,
text:true,
testID:true,
underlineColorAndroid:true};


var viewConfigAndroid={
uiViewClassName:'AndroidTextInput',
validAttributes:AndroidTextInputAttributes};


var RCTTextView=requireNativeComponent('RCTTextView',null);
var RCTTextField=requireNativeComponent('RCTTextField',null);








































var TextInput=React.createClass({displayName:'TextInput',
propTypes:{








autoCapitalize:PropTypes.oneOf([
'none',
'sentences',
'words',
'characters']),




autoCorrect:PropTypes.bool,



autoFocus:PropTypes.bool,



textAlign:PropTypes.oneOf([
'start',
'center',
'end']),

textAlignVertical:PropTypes.oneOf([
'top',
'center',
'bottom']),




editable:PropTypes.bool,



keyboardType:PropTypes.oneOf([

'default',
'numeric',
'email-address',

'ascii-capable',
'numbers-and-punctuation',
'url',
'number-pad',
'phone-pad',
'name-phone-pad',
'decimal-pad',
'twitter',
'web-search']),




returnKeyType:PropTypes.oneOf([
'default',
'go',
'google',
'join',
'next',
'route',
'search',
'send',
'yahoo',
'done',
'emergency-call']),





enablesReturnKeyAutomatically:PropTypes.bool,



multiline:PropTypes.bool,



onBlur:PropTypes.func,



onFocus:PropTypes.func,



onChange:PropTypes.func,




onChangeText:PropTypes.func,



onEndEditing:PropTypes.func,



onSubmitEditing:PropTypes.func,



onLayout:PropTypes.func,




password:PropTypes.bool,



placeholder:PropTypes.string,



placeholderTextColor:PropTypes.string,




selectionState:PropTypes.instanceOf(DocumentSelectionState),



value:PropTypes.string,






bufferDelay:PropTypes.number,





controlled:PropTypes.bool,



clearButtonMode:PropTypes.oneOf([
'never',
'while-editing',
'unless-editing',
'always']),




clearTextOnFocus:PropTypes.bool,



selectTextOnFocus:PropTypes.bool,



style:Text.propTypes.style,



testID:PropTypes.string,



underlineColorAndroid:PropTypes.string},






mixins:[NativeMethodsMixin,TimerMixin],

viewConfig:Platform.OS === 'ios'?RCTTextField.viewConfig:
Platform.OS === 'android'?viewConfigAndroid:{},

isFocused:function(){
return TextInputState.currentlyFocusedField() === 
React.findNodeHandle(this.refs.input);},


getDefaultProps:function(){
return {
bufferDelay:100};},



getInitialState:function(){
return {
mostRecentEventCounter:0,
bufferedValue:this.props.value};},



contextTypes:{
onFocusRequested:React.PropTypes.func,
focusEmitter:React.PropTypes.instanceOf(EventEmitter)},


_focusSubscription:undefined,

componentDidMount:function(){var _this=this;
if(!this.context.focusEmitter){
if(this.props.autoFocus){
this.requestAnimationFrame(this.focus);}

return;}

this._focusSubscription = this.context.focusEmitter.addListener(
'focus',
function(el){
if(_this === el){
_this.requestAnimationFrame(_this.focus);}else 
if(_this.isFocused()){
_this.blur();}});



if(this.props.autoFocus){
this.context.onFocusRequested(this);}},



componentWillUnmount:function(){
this._focusSubscription && this._focusSubscription.remove();
if(this.isFocused()){
this.blur();}},



_bufferTimeout:undefined,

componentWillReceiveProps:function(newProps){var _this2=this;
if(newProps.value !== this.props.value){
if(!this.isFocused()){


this.setState({bufferedValue:newProps.value});}else 
{




























this.clearTimeout(this._bufferTimeout);
this._bufferTimeout = this.setTimeout(
function(){return _this2.setState({bufferedValue:newProps.value});},
this.props.bufferDelay);}}},





getChildContext:function(){
return {isInAParentText:true};},


childContextTypes:{
isInAParentText:React.PropTypes.bool},


render:function(){
if(Platform.OS === 'ios'){
return this._renderIOS();}else 
if(Platform.OS === 'android'){
return this._renderAndroid();}},



_renderIOS:function(){
var textContainer;

var props=Object.assign({},this.props);
props.style = [styles.input,this.props.style];

if(!props.multiline){
for(var propKey in onlyMultiline) {
if(props[propKey]){
throw new Error(
'TextInput prop `' + propKey + '` is only supported with multiline.');}}



textContainer = 
React.createElement(RCTTextField,_extends({
ref:'input'},
props,{
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onSelectionChangeShouldSetResponder:function(){return true;},
text:this.state.bufferedValue}));}else 

{
for(var propKey in notMultiline) {
if(props[propKey]){
throw new Error(
'TextInput prop `' + propKey + '` cannot be used with multiline.');}}




var children=props.children;
var childCount=0;
ReactChildren.forEach(children,function(){return ++childCount;});
invariant(
!(props.value && childCount),
'Cannot specify both value and children.');

if(childCount > 1){
children = React.createElement(Text,null,children);}

if(props.inputView){
children = [children,props.inputView];}

textContainer = 
React.createElement(RCTTextView,_extends({
ref:'input'},
props,{
children:children,
mostRecentEventCounter:this.state.mostRecentEventCounter,
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onSelectionChange:this._onSelectionChange,
onTextInput:this._onTextInput,
onSelectionChangeShouldSetResponder:emptyFunction.thatReturnsTrue,
text:this.state.bufferedValue}));}



return (
React.createElement(TouchableWithoutFeedback,{
onPress:this._onPress,
rejectResponderTermination:true,
testID:props.testID},
textContainer));},




_renderAndroid:function(){
var autoCapitalize=RCTUIManager.UIText.AutocapitalizationType[this.props.autoCapitalize];
var textAlign=
RCTUIManager.AndroidTextInput.Constants.TextAlign[this.props.textAlign];
var textAlignVertical=
RCTUIManager.AndroidTextInput.Constants.TextAlignVertical[this.props.textAlignVertical];
var children=this.props.children;
var childCount=0;
ReactChildren.forEach(children,function(){return ++childCount;});
invariant(
!(this.props.value && childCount),
'Cannot specify both value and children.');

if(childCount > 1){
children = React.createElement(Text,null,children);}

var textContainer=
React.createElement(AndroidTextInput,{
ref:'input',
style:[this.props.style],
autoCapitalize:autoCapitalize,
autoCorrect:this.props.autoCorrect,
textAlign:textAlign,
textAlignVertical:textAlignVertical,
keyboardType:this.props.keyboardType,
multiline:this.props.multiline,
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onTextInput:this._onTextInput,
onEndEditing:this.props.onEndEditing,
onSubmitEditing:this.props.onSubmitEditing,
onLayout:this.props.onLayout,
password:this.props.password || this.props.secureTextEntry,
placeholder:this.props.placeholder,
placeholderTextColor:this.props.placeholderTextColor,
text:this.state.bufferedValue,
underlineColorAndroid:this.props.underlineColorAndroid,
children:children});


return (
React.createElement(TouchableWithoutFeedback,{
onPress:this._onPress,
testID:this.props.testID},
textContainer));},




_onFocus:function(event){
if(this.props.onFocus){
this.props.onFocus(event);}},



_onPress:function(event){
this.focus();},


_onChange:function(event){
if(this.props.controlled && event.nativeEvent.text !== this.props.value){
this.refs.input.setNativeProps({text:this.props.value});}

this.props.onChange && this.props.onChange(event);
this.props.onChangeText && this.props.onChangeText(event.nativeEvent.text);},


_onBlur:function(event){
this.blur();
if(this.props.onBlur){
this.props.onBlur(event);}},



_onSelectionChange:function(event){
if(this.props.selectionState){
var selection=event.nativeEvent.selection;
this.props.selectionState.update(selection.start,selection.end);}

this.props.onSelectionChange && this.props.onSelectionChange(event);},


_onTextInput:function(event){
this.props.onTextInput && this.props.onTextInput(event);
var counter=event.nativeEvent.eventCounter;
if(counter > this.state.mostRecentEventCounter){
this.setState({mostRecentEventCounter:counter});}}});




var styles=StyleSheet.create({
input:{
alignSelf:'stretch'}});



var AndroidTextInput=createReactNativeComponentClass({
validAttributes:AndroidTextInputAttributes,
uiViewClassName:'AndroidTextInput'});


module.exports = TextInput;
});
__d('DocumentSelectionState',["mixInEventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

















var mixInEventEmitter=require('mixInEventEmitter');var 










DocumentSelectionState=(function(){




function DocumentSelectionState(anchor,focus){_classCallCheck(this,DocumentSelectionState);
this._anchorOffset = anchor;
this._focusOffset = focus;
this._hasFocus = false;}_createClass(DocumentSelectionState,[{key:'update',value:









function update(anchor,focus){
if(this._anchorOffset !== anchor || this._focusOffset !== focus){
this._anchorOffset = anchor;
this._focusOffset = focus;
this.emit('update');}}},{key:'constrainLength',value:









function constrainLength(maxLength){
this.update(
Math.min(this._anchorOffset,maxLength),
Math.min(this._focusOffset,maxLength));}},{key:'focus',value:



function focus(){
if(!this._hasFocus){
this._hasFocus = true;
this.emit('focus');}}},{key:'blur',value:



function blur(){
if(this._hasFocus){
this._hasFocus = false;
this.emit('blur');}}},{key:'hasFocus',value:






function hasFocus(){
return this._hasFocus;}},{key:'isCollapsed',value:





function isCollapsed(){
return this._anchorOffset === this._focusOffset;}},{key:'isBackward',value:





function isBackward(){
return this._anchorOffset > this._focusOffset;}},{key:'getAnchorOffset',value:





function getAnchorOffset(){
return this._hasFocus?this._anchorOffset:null;}},{key:'getFocusOffset',value:





function getFocusOffset(){
return this._hasFocus?this._focusOffset:null;}},{key:'getStartOffset',value:





function getStartOffset(){
return (
this._hasFocus?Math.min(this._anchorOffset,this._focusOffset):null);}},{key:'getEndOffset',value:






function getEndOffset(){
return (
this._hasFocus?Math.max(this._anchorOffset,this._focusOffset):null);}},{key:'overlaps',value:








function overlaps(start,end){
return (
this.hasFocus() && 
this.getStartOffset() <= end && start <= this.getEndOffset());}}]);return DocumentSelectionState;})();




mixInEventEmitter(DocumentSelectionState,{
'blur':true,
'focus':true,
'update':true});


module.exports = DocumentSelectionState;
});
__d('mixInEventEmitter',["EventEmitter","EventEmitterWithHolding","EventHolder","EventValidator","copyProperties","invariant","keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
















EventEmitter=require('EventEmitter');
var EventEmitterWithHolding=require('EventEmitterWithHolding');
var EventHolder=require('EventHolder');
var EventValidator=require('EventValidator');

var copyProperties=require('copyProperties');
var invariant=require('invariant');
var keyOf=require('keyOf');

var TYPES_KEY=keyOf({__types:true});






















function mixInEventEmitter(klass,types){
invariant(types,'Must supply set of valid event types');
invariant(!this.__eventEmitter,'An active emitter is already mixed in');



var target=klass.prototype || klass;

var ctor=klass.constructor;
if(ctor){
invariant(
ctor === Object || ctor === Function,
'Mix EventEmitter into a class, not an instance');}





if(target.hasOwnProperty(TYPES_KEY)){
copyProperties(target.__types,types);}else 
if(target.__types){
target.__types = copyProperties({},target.__types,types);}else 
{
target.__types = types;}

copyProperties(target,EventEmitterMixin);}


var EventEmitterMixin={
emit:function(eventType,a,b,c,d,e,_){
return this.__getEventEmitter().emit(eventType,a,b,c,d,e,_);},


emitAndHold:function(eventType,a,b,c,d,e,_){
return this.__getEventEmitter().emitAndHold(eventType,a,b,c,d,e,_);},


addListener:function(eventType,listener,context){
return this.__getEventEmitter().addListener(eventType,listener,context);},


once:function(eventType,listener,context){
return this.__getEventEmitter().once(eventType,listener,context);},


addRetroactiveListener:function(eventType,listener,context){
return this.__getEventEmitter().addRetroactiveListener(
eventType,
listener,
context);},



addListenerMap:function(listenerMap,context){
return this.__getEventEmitter().addListenerMap(listenerMap,context);},


addRetroactiveListenerMap:function(listenerMap,context){
return this.__getEventEmitter().addListenerMap(listenerMap,context);},


removeAllListeners:function(){
this.__getEventEmitter().removeAllListeners();},


removeCurrentListener:function(){
this.__getEventEmitter().removeCurrentListener();},


releaseHeldEventType:function(eventType){
this.__getEventEmitter().releaseHeldEventType(eventType);},


__getEventEmitter:function(){
if(!this.__eventEmitter){
var emitter=new EventEmitter();
emitter = EventValidator.addValidation(emitter,this.__types);

var holder=new EventHolder();
this.__eventEmitter = new EventEmitterWithHolding(emitter,holder);}

return this.__eventEmitter;}};



module.exports = mixInEventEmitter;
});
__d('EventEmitterWithHolding',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 






























EventEmitterWithHolding=(function(){







function EventEmitterWithHolding(emitter,holder){_classCallCheck(this,EventEmitterWithHolding);
this._emitter = emitter;
this._eventHolder = holder;
this._currentEventToken = null;
this._emittingHeldEvents = false;}_createClass(EventEmitterWithHolding,[{key:'addListener',value:





function addListener(eventType,listener,context){
return this._emitter.addListener(eventType,listener,context);}},{key:'once',value:





function once(eventType,listener,context){
return this._emitter.once(eventType,listener,context);}},{key:'addRetroactiveListener',value:






















function addRetroactiveListener(
eventType,listener,context){
var subscription=this._emitter.addListener(eventType,listener,context);

this._emittingHeldEvents = true;
this._eventHolder.emitToListener(eventType,listener,context);
this._emittingHeldEvents = false;

return subscription;}},{key:'removeAllListeners',value:





function removeAllListeners(eventType){
this._emitter.removeAllListeners(eventType);}},{key:'removeCurrentListener',value:





function removeCurrentListener(){
this._emitter.removeCurrentListener();}},{key:'listeners',value:





function listeners(eventType){
return this._emitter.listeners(eventType);}},{key:'emit',value:





function emit(eventType,a,b,c,d,e,_){
this._emitter.emit(eventType,a,b,c,d,e,_);}},{key:'emitAndHold',value:

















function emitAndHold(eventType,a,b,c,d,e,_){
this._currentEventToken = this._eventHolder.holdEvent(
eventType,
a,b,c,d,e,_);

this._emitter.emit(eventType,a,b,c,d,e,_);
this._currentEventToken = null;}},{key:'releaseCurrentEvent',value:





function releaseCurrentEvent(){
if(this._currentEventToken !== null){
this._eventHolder.releaseEvent(this._currentEventToken);}else 
if(this._emittingHeldEvents){
this._eventHolder.releaseCurrentEvent();}}},{key:'releaseHeldEventType',value:







function releaseHeldEventType(eventType){
this._eventHolder.releaseEventType(eventType);}}]);return EventEmitterWithHolding;})();



module.exports = EventEmitterWithHolding;
});
__d('EventHolder',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}


















var invariant=require('invariant');var 

EventHolder=(function(){
function EventHolder(){_classCallCheck(this,EventHolder);
this._heldEvents = {};
this._currentEventKey = null;}_createClass(EventHolder,[{key:'holdEvent',value:























function holdEvent(eventType,a,b,c,d,e,_){
this._heldEvents[eventType] = this._heldEvents[eventType] || [];
var eventsOfType=this._heldEvents[eventType];
var key={
eventType:eventType,
index:eventsOfType.length};

eventsOfType.push([a,b,c,d,e,_]);
return key;}},{key:'emitToListener',value:










function emitToListener(eventType,listener,context){var _this=this;
var eventsOfType=this._heldEvents[eventType];
if(!eventsOfType){
return;}

var origEventKey=this._currentEventKey;
eventsOfType.forEach(function(eventHeld,index){
if(!eventHeld){
return;}

_this._currentEventKey = {
eventType:eventType,
index:index};

listener.apply(context,eventHeld);});

this._currentEventKey = origEventKey;}},{key:'releaseCurrentEvent',value:










function releaseCurrentEvent(){
invariant(
this._currentEventKey !== null,
'Not in an emitting cycle; there is no current event');

this.releaseEvent(this._currentEventKey);}},{key:'releaseEvent',value:








function releaseEvent(token){
delete this._heldEvents[token.eventType][token.index];}},{key:'releaseEventType',value:







function releaseEventType(type){
this._heldEvents[type] = [];}}]);return EventHolder;})();



module.exports = EventHolder;
});
__d('EventValidator',["copyProperties"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var copyProperties=require('copyProperties');










var EventValidator={










addValidation:function(emitter,types){
var eventTypes=Object.keys(types);
var emitterWithValidation=Object.create(emitter);

copyProperties(emitterWithValidation,{
emit:function emit(type,a,b,c,d,e,_){
assertAllowsEventType(type,eventTypes);
return emitter.emit.call(this,type,a,b,c,d,e,_);}});



return emitterWithValidation;}};



function assertAllowsEventType(type,allowedTypes){
if(allowedTypes.indexOf(type) === -1){
throw new TypeError(errorMessageFor(type,allowedTypes));}}



function errorMessageFor(type,allowedTypes){
var message='Unknown event type "' + type + '". ';
if(__DEV__){
message += recommendationFor(type,allowedTypes);}

message += 'Known event types: ' + allowedTypes.join(', ') + '.';
return message;}



if(__DEV__){
var recommendationFor=function(type,allowedTypes){
var closestTypeRecommendation=closestTypeFor(type,allowedTypes);
if(isCloseEnough(closestTypeRecommendation,type)){
return 'Did you mean "' + closestTypeRecommendation.type + '"? ';}else 
{
return '';}};



var closestTypeFor=function(type,allowedTypes){
var typeRecommendations=allowedTypes.map(
typeRecommendationFor.bind(this,type));

return typeRecommendations.sort(recommendationSort)[0];};


var typeRecommendationFor=function(type,recomendedType){
return {
type:recomendedType,
distance:damerauLevenshteinDistance(type,recomendedType)};};



var recommendationSort=function(recommendationA,recommendationB){
if(recommendationA.distance < recommendationB.distance){
return -1;}else 
if(recommendationA.distance > recommendationB.distance){
return 1;}else 
{
return 0;}};



var isCloseEnough=function(closestType,actualType){
return closestType.distance / actualType.length < 0.334;};


var damerauLevenshteinDistance=function(a,b){
var i,j;
var d=[];

for(i = 0;i <= a.length;i++) {
d[i] = [i];}


for(j = 1;j <= b.length;j++) {
d[0][j] = j;}


for(i = 1;i <= a.length;i++) {
for(j = 1;j <= b.length;j++) {
var cost=a.charAt(i - 1) === b.charAt(j - 1)?0:1;

d[i][j] = Math.min(
d[i - 1][j] + 1,
d[i][j - 1] + 1,
d[i - 1][j - 1] + cost);


if(i > 1 && j > 1 && 
a.charAt(i - 1) == b.charAt(j - 2) && 
a.charAt(i - 2) == b.charAt(j - 1)){
d[i][j] = Math.min(d[i][j],d[i - 2][j - 2] + cost);}}}




return d[a.length][b.length];};}



module.exports = EventValidator;
});
__d('copyProperties',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 























copyProperties(obj,a,b,c,d,e,f){
obj = obj || {};

if(__DEV__){
if(f){
throw new Error('Too many arguments passed to copyProperties');}}



var args=[a,b,c,d,e];
var ii=0,v;
while(args[ii]) {
v = args[ii++];
for(var k in v) {
obj[k] = v[k];}




if(v.hasOwnProperty && v.hasOwnProperty('toString') && 
typeof v.toString != 'undefined' && obj.toString !== v.toString){
obj.toString = v.toString;}}



return obj;}


module.exports = copyProperties;
});
__d('TouchableWithoutFeedback',["React","Touchable","ensurePositiveDelayProps","onlyChild","react-timer-mixin/TimerMixin.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var onlyChild=require('onlyChild');







var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};








var TouchableWithoutFeedback=React.createClass({displayName:'TouchableWithoutFeedback',
mixins:[TimerMixin,Touchable.Mixin],

propTypes:{




accessible:React.PropTypes.bool,
onPress:React.PropTypes.func,
onPressIn:React.PropTypes.func,
onPressOut:React.PropTypes.func,
onLongPress:React.PropTypes.func,



delayPressIn:React.PropTypes.number,



delayPressOut:React.PropTypes.number,



delayLongPress:React.PropTypes.number},


getInitialState:function(){
return this.touchableGetInitialState();},


componentDidMount:function(){
ensurePositiveDelayProps(this.props);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);},






touchableHandlePress:function(e){
this.props.onPress && this.props.onPress(e);},


touchableHandleActivePressIn:function(){
this.props.onPressIn && this.props.onPressIn();},


touchableHandleActivePressOut:function(){
this.props.onPressOut && this.props.onPressOut();},


touchableHandleLongPress:function(){
this.props.onLongPress && this.props.onLongPress();},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn || 0;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress === 0?0:
this.props.delayLongPress || 500;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut || 0;},


render:function(){

return React.cloneElement(onlyChild(this.props.children),{
accessible:this.props.accessible !== false,
testID:this.props.testID,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate});}});




module.exports = TouchableWithoutFeedback;
});
__d('ensurePositiveDelayProps',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');

var ensurePositiveDelayProps=function(props){
invariant(
!(props.delayPressIn < 0 || props.delayPressOut < 0 || 
props.delayLongPress < 0),
'Touchable components cannot have negative delay properties');};



module.exports = ensurePositiveDelayProps;
});
__d('TouchableHighlight',["NativeMethodsMixin","React","ReactNativeViewAttributes","StyleSheet","Touchable","TouchableWithoutFeedback","View","cloneWithProps","ensureComponentIsNative","ensurePositiveDelayProps","keyOf","merge","onlyChild","react-timer-mixin/TimerMixin.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var View=require('View');

var cloneWithProps=require('cloneWithProps');
var ensureComponentIsNative=require('ensureComponentIsNative');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var keyOf=require('keyOf');
var merge=require('merge');
var onlyChild=require('onlyChild');

var DEFAULT_PROPS={
activeOpacity:0.8,
underlayColor:'black'};


























var TouchableHighlight=React.createClass({displayName:'TouchableHighlight',
propTypes:_extends({},
TouchableWithoutFeedback.propTypes,{




activeOpacity:React.PropTypes.number,




underlayColor:React.PropTypes.string,
style:View.propTypes.style,



onShowUnderlay:React.PropTypes.func,



onHideUnderlay:React.PropTypes.func}),


mixins:[NativeMethodsMixin,TimerMixin,Touchable.Mixin],

getDefaultProps:function(){return DEFAULT_PROPS;},


computeSyntheticState:function(props){
return {
activeProps:{
style:{
opacity:props.activeOpacity}},


activeUnderlayProps:{
style:{
backgroundColor:props.underlayColor}},


underlayStyle:[
INACTIVE_UNDERLAY_PROPS.style,
props.style]};},




getInitialState:function(){
return merge(
this.touchableGetInitialState(),this.computeSyntheticState(this.props));},



componentDidMount:function(){
ensurePositiveDelayProps(this.props);
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentDidUpdate:function(){
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);
if(nextProps.activeOpacity !== this.props.activeOpacity || 
nextProps.underlayColor !== this.props.underlayColor || 
nextProps.style !== this.props.style){
this.setState(this.computeSyntheticState(nextProps));}},



viewConfig:{
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RCTView},






touchableHandleActivePressIn:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
this._showUnderlay();
this.props.onPressIn && this.props.onPressIn();},


touchableHandleActivePressOut:function(){
if(!this._hideTimeout){
this._hideUnderlay();}

this.props.onPressOut && this.props.onPressOut();},


touchableHandlePress:function(){
this.clearTimeout(this._hideTimeout);
this._showUnderlay();
this._hideTimeout = this.setTimeout(this._hideUnderlay,
this.props.delayPressOut || 100);
this.props.onPress && this.props.onPress();},


touchableHandleLongPress:function(){
this.props.onLongPress && this.props.onLongPress();},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;},


_showUnderlay:function(){
this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);
this.refs[CHILD_REF].setNativeProps(this.state.activeProps);
this.props.onShowUnderlay && this.props.onShowUnderlay();},


_hideUnderlay:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
if(this.refs[UNDERLAY_REF]){
this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);
this.refs[UNDERLAY_REF].setNativeProps(_extends({},
INACTIVE_UNDERLAY_PROPS,{
style:this.state.underlayStyle}));

this.props.onHideUnderlay && this.props.onHideUnderlay();}},



render:function(){
return (
React.createElement(View,{
ref:UNDERLAY_REF,
style:this.state.underlayStyle,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate},
cloneWithProps(
onlyChild(this.props.children),
{
ref:CHILD_REF,
accessible:true,
testID:this.props.testID})));}});







var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};
var CHILD_REF=keyOf({childRef:null});
var UNDERLAY_REF=keyOf({underlayRef:null});
var INACTIVE_CHILD_PROPS={
style:StyleSheet.create({x:{opacity:1.0}}).x};

var INACTIVE_UNDERLAY_PROPS={
style:StyleSheet.create({x:{backgroundColor:'transparent'}}).x};


module.exports = TouchableHighlight;
});
__d('cloneWithProps',["ReactElement","ReactPropTransferer","keyOf","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactElement=require('ReactElement');
var ReactPropTransferer=require('ReactPropTransferer');

var keyOf=require('keyOf');
var warning=require('warning');

var CHILDREN_PROP=keyOf({children:null});










function cloneWithProps(child,props){
if(__DEV__){
warning(
!child.ref,
'You are calling cloneWithProps() on a child with a ref. This is ' + 
'dangerous because you\'re creating a new child which will not be ' + 
'added as a ref to its parent.');}



var newProps=ReactPropTransferer.mergeProps(props,child.props);


if(!newProps.hasOwnProperty(CHILDREN_PROP) && 
child.props.hasOwnProperty(CHILDREN_PROP)){
newProps.children = child.props.children;}




return ReactElement.createElement(child.type,newProps);}


module.exports = cloneWithProps;
});
__d('ReactPropTransferer',["Object.assign","emptyFunction","joinClasses"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var joinClasses=require('joinClasses');








function createTransferStrategy(mergeStrategy){
return function(props,key,value){
if(!props.hasOwnProperty(key)){
props[key] = value;}else 
{
props[key] = mergeStrategy(props[key],value);}};}




var transferStrategyMerge=createTransferStrategy(function(a,b){



return assign({},b,a);});







var TransferStrategies={



children:emptyFunction,



className:createTransferStrategy(joinClasses),



style:transferStrategyMerge};










function transferInto(props,newProps){
for(var thisKey in newProps) {
if(!newProps.hasOwnProperty(thisKey)){
continue;}


var transferStrategy=TransferStrategies[thisKey];

if(transferStrategy && TransferStrategies.hasOwnProperty(thisKey)){
transferStrategy(props,thisKey,newProps[thisKey]);}else 
if(!props.hasOwnProperty(thisKey)){
props[thisKey] = newProps[thisKey];}}


return props;}








var ReactPropTransferer={








mergeProps:function(oldProps,newProps){
return transferInto(assign({},oldProps),newProps);}};




module.exports = ReactPropTransferer;
});
__d('joinClasses',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















function joinClasses(className){
if(!className){
className = '';}

var nextClass;
var argLength=arguments.length;
if(argLength > 1){
for(var ii=1;ii < argLength;ii++) {
nextClass = arguments[ii];
if(nextClass){
className = (className?className + ' ':'') + nextClass;}}}



return className;}


module.exports = joinClasses;
});
__d('ensureComponentIsNative',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');

var ensureComponentIsNative=function(component){
invariant(
component && typeof component.setNativeProps === 'function',
'Touchable child must either be native or forward setNativeProps to a ' + 
'native component');};



module.exports = ensureComponentIsNative;
});
__d('TouchableOpacity',["NativeMethodsMixin","POPAnimationMixin","React","Touchable","TouchableWithoutFeedback","cloneWithProps","ensureComponentIsNative","ensurePositiveDelayProps","flattenStyle","keyOf","onlyChild","react-timer-mixin/TimerMixin.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var NativeMethodsMixin=require('NativeMethodsMixin');
var POPAnimationMixin=require('POPAnimationMixin');
var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var cloneWithProps=require('cloneWithProps');
var ensureComponentIsNative=require('ensureComponentIsNative');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var flattenStyle=require('flattenStyle');
var keyOf=require('keyOf');
var onlyChild=require('onlyChild');


























var TouchableOpacity=React.createClass({displayName:'TouchableOpacity',
mixins:[TimerMixin,Touchable.Mixin,NativeMethodsMixin,POPAnimationMixin],

propTypes:_extends({},
TouchableWithoutFeedback.propTypes,{




activeOpacity:React.PropTypes.number}),


getDefaultProps:function(){
return {
activeOpacity:0.2};},



getInitialState:function(){
return this.touchableGetInitialState();},


componentDidMount:function(){
ensurePositiveDelayProps(this.props);
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentDidUpdate:function(){
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);},


setOpacityTo:function(value){
if(POPAnimationMixin){

this.stopAllAnimations();
var anim={
type:this.AnimationTypes.linear,
property:this.AnimationProperties.opacity,
duration:0.15,
toValue:value};

this.startAnimation(CHILD_REF,anim);}else 
{

this.refs[CHILD_REF].setNativeProps({
opacity:value});}},








touchableHandleActivePressIn:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
this._opacityActive();
this.props.onPressIn && this.props.onPressIn();},


touchableHandleActivePressOut:function(){
if(!this._hideTimeout){
this._opacityInactive();}

this.props.onPressOut && this.props.onPressOut();},


touchableHandlePress:function(){
this.clearTimeout(this._hideTimeout);
this._opacityActive();
this._hideTimeout = this.setTimeout(
this._opacityInactive,
this.props.delayPressOut || 100);

this.props.onPress && this.props.onPress();},


touchableHandleLongPress:function(){
this.props.onLongPress && this.props.onLongPress();},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn || 0;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress === 0?0:
this.props.delayLongPress || 500;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;},


_opacityActive:function(){
this.setOpacityTo(this.props.activeOpacity);},


_opacityInactive:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
var child=onlyChild(this.props.children);
var childStyle=flattenStyle(child.props.style) || {};
this.setOpacityTo(
childStyle.opacity === undefined?1:childStyle.opacity);},



render:function(){
return cloneWithProps(onlyChild(this.props.children),{
ref:CHILD_REF,
accessible:true,
testID:this.props.testID,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate});}});










var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};

var CHILD_REF=keyOf({childRef:null});

module.exports = TouchableOpacity;
});
__d('POPAnimationMixin',["POPAnimation","React","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var POPAnimationOrNull=require('POPAnimation');
var React=require('React');

if(!POPAnimationOrNull){


module.exports = null;}else 
{



var POPAnimation=POPAnimationOrNull;

var invariant=require('invariant');
var warning=require('warning');

var POPAnimationMixin={




AnimationTypes:POPAnimation.Types,
AnimationProperties:POPAnimation.Properties,

getInitialState:function(){
this._popAnimationEnqueuedAnimationTimeouts = [];
return {
_currentAnimationsByNodeHandle:{}};},



_ensureBookkeepingSetup:function(nodeHandle){
if(!this.state._currentAnimationsByNodeHandle[nodeHandle]){
this.state._currentAnimationsByNodeHandle[nodeHandle] = [];}},

















startAnimation:function(
refKey,
anim,
doneCallback)
{
var animID=0;
if(typeof anim === 'number'){
animID = anim;}else 
{
invariant(
anim instanceof Object && 
anim.type !== undefined && 
anim.property !== undefined,
'Animation definitions must specify a type of animation and a ' + 
'property to animate.');

animID = POPAnimation.createAnimation(anim.type,anim);}

invariant(
this.refs[refKey],
'Invalid refKey ' + refKey + ' for anim:\n' + JSON.stringify(anim) + 
'\nvalid refs: ' + JSON.stringify(Object.keys(this.refs)));

var refNodeHandle=React.findNodeHandle(this.refs[refKey]);
this.startAnimationWithNodeHandle(refNodeHandle,animID,doneCallback);},








startAnimationWithNodeHandle:function(
nodeHandle,
animID,
doneCallback)
{var _this=this;
this._ensureBookkeepingSetup(nodeHandle);
var animations=this.state._currentAnimationsByNodeHandle[nodeHandle];
var animIndex=animations.length;
animations.push(animID);
var cleanupWrapper=function(finished){
if(!_this.isMounted()){
return;}

animations[animIndex] = 0;
var allDone=true;
for(var ii=0;ii < animations.length;ii++) {
if(animations[ii]){
allDone = false;
break;}}


if(allDone){
_this.state._currentAnimationsByNodeHandle[nodeHandle] = undefined;}

doneCallback && doneCallback(finished);};


var animationTimeoutHandler=setTimeout(function(){
POPAnimation.addAnimation(nodeHandle,animID,cleanupWrapper);},
1);
this._popAnimationEnqueuedAnimationTimeouts.push(animationTimeoutHandler);},













startAnimations:function(
animations,
onSuccess,
onFailure)
{var _this2=this;
var numReturned=0;
var numFinished=0;
var numAnimations=animations.length;
var metaCallback=function(finished){
if(finished){
++numFinished;}

if(++numReturned === numAnimations){
onSuccess && onSuccess(numFinished === numAnimations);}};


animations.forEach(function(anim){
warning(
anim.ref != null || anim.nodeHandle != null && 
!anim.ref !== !anim.nodeHandle,
'Animations must be specified with either ref xor nodeHandle');

if(anim.ref){
_this2.startAnimation(anim.ref,anim.anim,metaCallback);}else 
if(anim.nodeHandle){
_this2.startAnimationWithNodeHandle(anim.nodeHandle,anim.anim,metaCallback);}});},











stopNodeHandleAnimations:function(nodeHandle){
if(!this.state._currentAnimationsByNodeHandle[nodeHandle]){
return;}

var anims=this.state._currentAnimationsByNodeHandle[nodeHandle];
for(var i=0;i < anims.length;i++) {
var anim=anims[i];
if(anim){

POPAnimation.removeAnimation(+nodeHandle,anim);}}


this.state._currentAnimationsByNodeHandle[nodeHandle] = undefined;},







stopAnimations:function(refKey){
invariant(this.refs[refKey],'invalid ref');
this.stopNodeHandleAnimations(React.findNodeHandle(this.refs[refKey]));},






stopAllAnimations:function(){
for(var nodeHandle in this.state._currentAnimationsByNodeHandle) {
this.stopNodeHandleAnimations(nodeHandle);}},



















animateToFrame:function(
refKey,
frame,
type,
velocity,
doneCallback)
{
var animFrame={
x:frame.left + frame.width / 2,
y:frame.top + frame.height / 2,
w:frame.width,
h:frame.height};

var posAnim=POPAnimation.createAnimation(type,{
property:POPAnimation.Properties.position,
toValue:[animFrame.x,animFrame.y],
velocity:velocity || [0,0]});

var sizeAnim=POPAnimation.createAnimation(type,{
property:POPAnimation.Properties.size,
toValue:[animFrame.w,animFrame.h]});

this.startAnimation(refKey,posAnim,doneCallback);
this.startAnimation(refKey,sizeAnim);},



componentWillUnmount:function(){
this.stopAllAnimations();
this._popAnimationEnqueuedAnimationTimeouts.forEach(function(animationTimeoutHandler){
clearTimeout(animationTimeoutHandler);});

this._popAnimationEnqueuedAnimationTimeouts = [];}};



module.exports = POPAnimationMixin;}
});
__d('POPAnimation',["NativeModules","ReactPropTypes","createStrictShapeTypeChecker","getObjectValues","invariant","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var RCTPOPAnimationManager=require('NativeModules').POPAnimationManager;
if(!RCTPOPAnimationManager){




module.exports = null;}else 
{

var ReactPropTypes=require('ReactPropTypes');
var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var getObjectValues=require('getObjectValues');
var invariant=require('invariant');
var merge=require('merge');

var RCTTypes=RCTPOPAnimationManager.Types;
var RCTProperties=RCTPOPAnimationManager.Properties;

var Properties={
bounds:RCTProperties.bounds,
opacity:RCTProperties.opacity,
position:RCTProperties.position,
positionX:RCTProperties.positionX,
positionY:RCTProperties.positionY,
zPosition:RCTProperties.zPosition,
rotation:RCTProperties.rotation,
rotationX:RCTProperties.rotationX,
rotationY:RCTProperties.rotationY,
scaleX:RCTProperties.scaleX,
scaleXY:RCTProperties.scaleXY,
scaleY:RCTProperties.scaleY,
shadowColor:RCTProperties.shadowColor,
shadowOffset:RCTProperties.shadowOffset,
shadowOpacity:RCTProperties.shadowOpacity,
shadowRadius:RCTProperties.shadowRadius,
size:RCTProperties.size,
subscaleXY:RCTProperties.subscaleXY,
subtranslationX:RCTProperties.subtranslationX,
subtranslationXY:RCTProperties.subtranslationXY,
subtranslationY:RCTProperties.subtranslationY,
subtranslationZ:RCTProperties.subtranslationZ,
translationX:RCTProperties.translationX,
translationXY:RCTProperties.translationXY,
translationY:RCTProperties.translationY,
translationZ:RCTProperties.translationZ};


var Types={
decay:RCTTypes.decay,
easeIn:RCTTypes.easeIn,
easeInEaseOut:RCTTypes.easeInEaseOut,
easeOut:RCTTypes.easeOut,
linear:RCTTypes.linear,
spring:RCTTypes.spring};
















var POPAnimation={
Types:Types,
Properties:Properties,

attributeChecker:createStrictShapeTypeChecker({
type:ReactPropTypes.oneOf(getObjectValues(Types)),
property:ReactPropTypes.oneOf(getObjectValues(Properties)),
fromValue:ReactPropTypes.any,
toValue:ReactPropTypes.any,
duration:ReactPropTypes.any,
velocity:ReactPropTypes.any,
deceleration:ReactPropTypes.any,
springBounciness:ReactPropTypes.any,
dynamicsFriction:ReactPropTypes.any,
dynamicsMass:ReactPropTypes.any,
dynamicsTension:ReactPropTypes.any}),


lastUsedTag:0,
allocateTagForAnimation:function(){
return ++this.lastUsedTag;},


createAnimation:function(typeName,attrs){
var tag=this.allocateTagForAnimation();

if(__DEV__){
POPAnimation.attributeChecker(
{attrs:attrs},
'attrs',
'POPAnimation.createAnimation');

POPAnimation.attributeChecker(
{attrs:{type:typeName}},
'attrs',
'POPAnimation.createAnimation');}



RCTPOPAnimationManager.createAnimationInternal(tag,typeName,attrs);
return tag;},


createSpringAnimation:function(attrs){
return this.createAnimation(this.Types.spring,attrs);},


createDecayAnimation:function(attrs){
return this.createAnimation(this.Types.decay,attrs);},


createLinearAnimation:function(attrs){
return this.createAnimation(this.Types.linear,attrs);},


createEaseInAnimation:function(attrs){
return this.createAnimation(this.Types.easeIn,attrs);},


createEaseOutAnimation:function(attrs){
return this.createAnimation(this.Types.easeOut,attrs);},


createEaseInEaseOutAnimation:function(attrs){
return this.createAnimation(this.Types.easeInEaseOut,attrs);},


addAnimation:function(nodeHandle,anim,callback){
RCTPOPAnimationManager.addAnimation(nodeHandle,anim,callback);},


removeAnimation:function(nodeHandle,anim){
RCTPOPAnimationManager.removeAnimation(nodeHandle,anim);}};





if(__DEV__){
var allProperties=merge(
RCTPOPAnimationManager.Properties,
RCTPOPAnimationManager.Properties);

for(var key in allProperties) {
invariant(
POPAnimation.Properties[key] === RCTPOPAnimationManager.Properties[key],
'POPAnimation doesn\'t copy property ' + key + ' correctly');}



var allTypes=merge(
RCTPOPAnimationManager.Types,
RCTPOPAnimationManager.Types);

for(var key in allTypes) {
invariant(
POPAnimation.Types[key] === RCTPOPAnimationManager.Types[key],
'POPAnimation doesn\'t copy type ' + key + ' correctly');}}




module.exports = POPAnimation;}
});
__d('getObjectValues',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 


























getObjectValues(obj){
var values=[];
for(var key in obj) {
values.push(obj[key]);}

return values;}


module.exports = getObjectValues;
});
__d('WebView',["ActivityIndicatorIOS","EdgeInsetsPropType","React","StyleSheet","Text","View","invariant","keyMirror","requireNativeComponent","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ActivityIndicatorIOS=require('ActivityIndicatorIOS');
var EdgeInsetsPropType=require('EdgeInsetsPropType');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;
var RCTWebViewManager=require('NativeModules').WebViewManager;

var BGWASH='rgba(255,255,255,0.8)';
var RCT_WEBVIEW_REF='webview';

var WebViewState=keyMirror({
IDLE:null,
LOADING:null,
ERROR:null});


var NavigationType={
click:RCTWebViewManager.NavigationType.LinkClicked,
formsubmit:RCTWebViewManager.NavigationType.FormSubmitted,
backforward:RCTWebViewManager.NavigationType.BackForward,
reload:RCTWebViewManager.NavigationType.Reload,
formresubmit:RCTWebViewManager.NavigationType.FormResubmitted,
other:RCTWebViewManager.NavigationType.Other};


var JSNavigationScheme=RCTWebViewManager.JSNavigationScheme;









var defaultRenderLoading=function(){return (
React.createElement(View,{style:styles.loadingView},
React.createElement(ActivityIndicatorIOS,null)));};


var defaultRenderError=function(errorDomain,errorCode,errorDesc){return (
React.createElement(View,{style:styles.errorContainer},
React.createElement(Text,{style:styles.errorTextTitle},'Error loading page'),


React.createElement(Text,{style:styles.errorText},
'Domain: ' + errorDomain),

React.createElement(Text,{style:styles.errorText},
'Error Code: ' + errorCode),

React.createElement(Text,{style:styles.errorText},
'Description: ' + errorDesc)));};




var WebView=React.createClass({displayName:'WebView',
statics:{
JSNavigationScheme:JSNavigationScheme,
NavigationType:NavigationType},


propTypes:{
url:PropTypes.string,
html:PropTypes.string,
renderError:PropTypes.func,
renderLoading:PropTypes.func,
bounces:PropTypes.bool,
scrollEnabled:PropTypes.bool,
automaticallyAdjustContentInsets:PropTypes.bool,
contentInset:EdgeInsetsPropType,
onNavigationStateChange:PropTypes.func,
startInLoadingState:PropTypes.bool,
style:View.propTypes.style,



javaScriptEnabledAndroid:PropTypes.bool,



injectedJavaScript:PropTypes.string,





scalesPageToFit:PropTypes.bool},


getInitialState:function(){
return {
viewState:WebViewState.IDLE,
lastErrorEvent:null,
startInLoadingState:true};},



componentWillMount:function(){
if(this.props.startInLoadingState){
this.setState({viewState:WebViewState.LOADING});}},



render:function(){
var otherView=null;

if(this.state.viewState === WebViewState.LOADING){
otherView = (this.props.renderLoading || defaultRenderLoading)();}else 
if(this.state.viewState === WebViewState.ERROR){
var errorEvent=this.state.lastErrorEvent;
invariant(
errorEvent != null,
'lastErrorEvent expected to be non-null');

otherView = (this.props.renderError || defaultRenderError)(
errorEvent.domain,
errorEvent.code,
errorEvent.description);}else 

if(this.state.viewState !== WebViewState.IDLE){
console.error(
'RCTWebView invalid state encountered: ' + this.state.loading);}



var webViewStyles=[styles.container,styles.webView,this.props.style];
if(this.state.viewState === WebViewState.LOADING || 
this.state.viewState === WebViewState.ERROR){

webViewStyles.push(styles.hidden);}


var webView=
React.createElement(RCTWebView,{
ref:RCT_WEBVIEW_REF,
key:'webViewKey',
style:webViewStyles,
url:this.props.url,
html:this.props.html,
injectedJavaScript:this.props.injectedJavaScript,
bounces:this.props.bounces,
scrollEnabled:this.props.scrollEnabled,
contentInset:this.props.contentInset,
automaticallyAdjustContentInsets:this.props.automaticallyAdjustContentInsets,
onLoadingStart:this.onLoadingStart,
onLoadingFinish:this.onLoadingFinish,
onLoadingError:this.onLoadingError,
scalesPageToFit:this.props.scalesPageToFit});


return (
React.createElement(View,{style:styles.container},
webView,
otherView));},




goForward:function(){
RCTWebViewManager.goForward(this.getWebViewHandle());},


goBack:function(){
RCTWebViewManager.goBack(this.getWebViewHandle());},


reload:function(){
RCTWebViewManager.reload(this.getWebViewHandle());},






updateNavigationState:function(event){
if(this.props.onNavigationStateChange){
this.props.onNavigationStateChange(event.nativeEvent);}},



getWebViewHandle:function(){
return React.findNodeHandle(this.refs[RCT_WEBVIEW_REF]);},


onLoadingStart:function(event){
this.updateNavigationState(event);},


onLoadingError:function(event){
event.persist();
console.error('Encountered an error loading page',event.nativeEvent);

this.setState({
lastErrorEvent:event.nativeEvent,
viewState:WebViewState.ERROR});},



onLoadingFinish:function(event){
this.setState({
viewState:WebViewState.IDLE});

this.updateNavigationState(event);}});



var RCTWebView=requireNativeComponent('RCTWebView',WebView);

var styles=StyleSheet.create({
container:{
flex:1},

errorContainer:{
flex:1,
justifyContent:'center',
alignItems:'center',
backgroundColor:BGWASH},

errorText:{
fontSize:14,
textAlign:'center',
marginBottom:2},

errorTextTitle:{
fontSize:15,
fontWeight:'500',
marginBottom:10},

hidden:{
height:0,
flex:0},

loadingView:{
backgroundColor:BGWASH,
flex:1,
justifyContent:'center',
alignItems:'center'},

webView:{
backgroundColor:'#ffffff'}});



module.exports = WebView;
});
__d('ActionSheetIOS',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTActionSheetManager=require('NativeModules').ActionSheetManager;

var invariant=require('invariant');

var ActionSheetIOS={
showActionSheetWithOptions:function(options,callback){
invariant(
typeof options === 'object' && options !== null,
'Options must a valid object');

invariant(
typeof callback === 'function',
'Must provide a valid callback');

RCTActionSheetManager.showActionSheetWithOptions(
options,
function(){},
callback);},



showShareActionSheetWithOptions:function(
options,
failureCallback,
successCallback)
{
invariant(
typeof options === 'object' && options !== null,
'Options must a valid object');

invariant(
typeof failureCallback === 'function',
'Must provide a valid failureCallback');

invariant(
typeof successCallback === 'function',
'Must provide a valid successCallback');

RCTActionSheetManager.showShareActionSheetWithOptions(
options,
failureCallback,
successCallback);}};




module.exports = ActionSheetIOS;
});
__d('AdSupportIOS',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var AdSupport=require('NativeModules').AdSupport;

module.exports = {
getAdvertisingId:function(onSuccess,onFailure){
AdSupport.getAdvertisingId(onSuccess,onFailure);},


getAdvertisingTrackingEnabled:function(onSuccess,onFailure){
AdSupport.getAdvertisingTrackingEnabled(onSuccess,onFailure);}};
});
__d('AlertIOS',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTAlertManager=require('NativeModules').AlertManager;
var invariant=require('invariant');

var DEFAULT_BUTTON_TEXT='OK';
var DEFAULT_BUTTON={
text:DEFAULT_BUTTON_TEXT,
onPress:null};var 
























AlertIOS=(function(){function AlertIOS(){_classCallCheck(this,AlertIOS);}_createClass(AlertIOS,null,[{key:'alert',value:
function alert(
title,
message,
buttons,



type)
{
var callbacks=[];
var buttonsSpec=[];
title = title || '';
message = message || '';
buttons = buttons || [DEFAULT_BUTTON];
type = type || '';

buttons.forEach(function(btn,index){
callbacks[index] = btn.onPress;
var btnDef={};
btnDef[index] = btn.text || DEFAULT_BUTTON_TEXT;
buttonsSpec.push(btnDef);});

RCTAlertManager.alertWithArgs({
title:title,
message:message,
buttons:buttonsSpec,
type:type},
function(id,value){
var cb=callbacks[id];
cb && cb(value);});}},{key:'prompt',value:



function prompt(
title,
value,
buttons,



callback)
{
if(arguments.length === 2){
if(typeof value === 'object'){
buttons = value;
value = undefined;}else 
if(typeof value === 'function'){
callback = value;
value = undefined;}}else 

if(arguments.length === 3 && typeof buttons === 'function'){
callback = buttons;
buttons = undefined;}


invariant(
!(callback && buttons) && (callback || buttons),
'Must provide either a button list or a callback, but not both');


if(!buttons){
buttons = [{
text:'Cancel'},
{
text:'OK',
onPress:callback}];}


this.alert(title,value,buttons,'plain-text');}}]);return AlertIOS;})();



module.exports = AlertIOS;
});
__d('Animated',["Interpolation","Easing","Image","InteractionManager","Interpolation","React","Set","Text","View","invariant","flattenStyle","requestAnimationFrame","rebound/rebound.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}










'use strict';

var Easing=require('Easing');
var Image=require('Image');
var InteractionManager=require('InteractionManager');
var Interpolation=require('Interpolation');
var React=require('React');
var Set=require('Set');
var Text=require('Text');
var View=require('View');
var invariant=require('invariant');

var flattenStyle=require('flattenStyle');
var rebound=require('rebound/rebound.js');
var requestAnimationFrame=require('requestAnimationFrame');var 








Animated=(function(){function Animated(){_classCallCheck(this,Animated);}_createClass(Animated,[{key:'attach',value:
function attach(){}},{key:'detach',value:
function detach(){}},{key:'__getValue',value:
function __getValue(){}},{key:'getAnimatedValue',value:
function getAnimatedValue(){return this.__getValue();}},{key:'addChild',value:
function addChild(child){}},{key:'removeChild',value:
function removeChild(child){}},{key:'getChildren',value:
function getChildren(){return [];}}]);return Animated;})();var 





Animation=(function(){function Animation(){_classCallCheck(this,Animation);}_createClass(Animation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd,
previousAnimation)
{}},{key:'stop',value:
function stop(){}},{key:'__debouncedOnEnd',value:

function __debouncedOnEnd(result){
var onEnd=this.__onEnd;
this.__onEnd = null;
onEnd && onEnd(result);}}]);return Animation;})();var 



AnimatedWithChildren=(function(_Animated){_inherits(AnimatedWithChildren,_Animated);


function AnimatedWithChildren(){_classCallCheck(this,AnimatedWithChildren);
_get(Object.getPrototypeOf(AnimatedWithChildren.prototype),'constructor',this).call(this);
this._children = [];}_createClass(AnimatedWithChildren,[{key:'addChild',value:


function addChild(child){
if(this._children.length === 0){
this.attach();}

this._children.push(child);}},{key:'removeChild',value:


function removeChild(child){
var index=this._children.indexOf(child);
if(index === -1){
console.warn('Trying to remove a child that doesn\'t exist');
return;}

this._children.splice(index,1);
if(this._children.length === 0){
this.detach();}}},{key:'getChildren',value:



function getChildren(){
return this._children;}}]);return AnimatedWithChildren;})(Animated);

























function _flush(rootNode){
var animatedStyles=new Set();
function findAnimatedStyles(node){
if(typeof node.update === 'function'){
animatedStyles.add(node);}else 
{
node.getChildren().forEach(findAnimatedStyles);}}


findAnimatedStyles(rootNode);
animatedStyles.forEach(function(animatedStyle){return animatedStyle.update();});}









var easeInOut=Easing.inOut(Easing.ease);var 

TimingAnimation=(function(_Animation){_inherits(TimingAnimation,_Animation);










function TimingAnimation(
config)
{_classCallCheck(this,TimingAnimation);
_get(Object.getPrototypeOf(TimingAnimation.prototype),'constructor',this).call(this);
this._toValue = config.toValue;
this._easing = config.easing || easeInOut;
this._duration = config.duration !== undefined?config.duration:500;
this._delay = config.delay || 0;}_createClass(TimingAnimation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd)
{var _this=this;
this.__active = true;
this._fromValue = fromValue;
this._onUpdate = onUpdate;
this.__onEnd = onEnd;

var start=function(){
if(_this._duration === 0){
_this._onUpdate(_this._toValue);
_this.__debouncedOnEnd({finished:true});}else 
{
_this._startTime = Date.now();
_this._animationFrame = requestAnimationFrame(_this.onUpdate.bind(_this));}};


if(this._delay){
this._timeout = setTimeout(start,this._delay);}else 
{
start();}}},{key:'onUpdate',value:



function onUpdate(){
var now=Date.now();
if(now >= this._startTime + this._duration){
if(this._duration === 0){
this._onUpdate(this._toValue);}else 
{
this._onUpdate(
this._fromValue + this._easing(1) * (this._toValue - this._fromValue));}


this.__debouncedOnEnd({finished:true});
return;}


this._onUpdate(
this._fromValue + 
this._easing((now - this._startTime) / this._duration) * (
this._toValue - this._fromValue));

if(this.__active){
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}}},{key:'stop',value:



function stop(){
this.__active = false;
clearTimeout(this._timeout);
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return TimingAnimation;})(Animation);var 













DecayAnimation=(function(_Animation2){_inherits(DecayAnimation,_Animation2);








function DecayAnimation(
config)
{_classCallCheck(this,DecayAnimation);
_get(Object.getPrototypeOf(DecayAnimation.prototype),'constructor',this).call(this);
this._deceleration = config.deceleration || 0.998;
this._velocity = config.velocity;}_createClass(DecayAnimation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd)
{
this.__active = true;
this._lastValue = fromValue;
this._fromValue = fromValue;
this._onUpdate = onUpdate;
this.__onEnd = onEnd;
this._startTime = Date.now();
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}},{key:'onUpdate',value:


function onUpdate(){
var now=Date.now();

var value=this._fromValue + 
this._velocity / (1 - this._deceleration) * (
1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));

this._onUpdate(value);

if(Math.abs(this._lastValue - value) < 0.1){
this.__debouncedOnEnd({finished:true});
return;}


this._lastValue = value;
if(this.__active){
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}}},{key:'stop',value:



function stop(){
this.__active = false;
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return DecayAnimation;})(Animation);



























function withDefault(value,defaultValue){
if(value === undefined || value === null){
return defaultValue;}

return value;}var 


SpringAnimation=(function(_Animation3){_inherits(SpringAnimation,_Animation3);















function SpringAnimation(
config)
{_classCallCheck(this,SpringAnimation);
_get(Object.getPrototypeOf(SpringAnimation.prototype),'constructor',this).call(this);

this._overshootClamping = withDefault(config.overshootClamping,false);
this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold,0.001);
this._restSpeedThreshold = withDefault(config.restSpeedThreshold,0.001);
this._initialVelocity = config.velocity;
this._lastVelocity = withDefault(config.velocity,0);
this._toValue = config.toValue;

var springConfig;
if(config.bounciness !== undefined || config.speed !== undefined){
invariant(
config.tension === undefined && config.friction === undefined,
'You can only define bounciness/speed or tension/friction but not both');

springConfig = rebound.SpringConfig.fromBouncinessAndSpeed(
withDefault(config.bounciness,8),
withDefault(config.speed,12));}else 

{
springConfig = rebound.SpringConfig.fromOrigamiTensionAndFriction(
withDefault(config.tension,40),
withDefault(config.friction,7));}


this._tension = springConfig.tension;
this._friction = springConfig.friction;}_createClass(SpringAnimation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd,
previousAnimation)
{
this.__active = true;
this._startPosition = fromValue;
this._lastPosition = this._startPosition;

this._onUpdate = onUpdate;
this.__onEnd = onEnd;
this._lastTime = Date.now();

if(previousAnimation instanceof SpringAnimation){
var internalState=previousAnimation.getInternalState();
this._lastPosition = internalState.lastPosition;
this._lastVelocity = internalState.lastVelocity;
this._lastTime = internalState.lastTime;}

if(this._initialVelocity !== undefined && 
this._initialVelocity !== null){
this._lastVelocity = this._initialVelocity;}

this.onUpdate();}},{key:'getInternalState',value:


function getInternalState(){
return {
lastPosition:this._lastPosition,
lastVelocity:this._lastVelocity,
lastTime:this._lastTime};}},{key:'onUpdate',value:



function onUpdate(){
var position=this._lastPosition;
var velocity=this._lastVelocity;

var tempPosition=this._lastPosition;
var tempVelocity=this._lastVelocity;





var MAX_STEPS=64;
var now=Date.now();
if(now > this._lastTime + MAX_STEPS){
now = this._lastTime + MAX_STEPS;}





var TIMESTEP_MSEC=1;
var numSteps=Math.floor((now - this._lastTime) / TIMESTEP_MSEC);

for(var i=0;i < numSteps;++i) {

var step=TIMESTEP_MSEC / 1000;



var aVelocity=velocity;
var aAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
var tempPosition=position + aVelocity * step / 2;
var tempVelocity=velocity + aAcceleration * step / 2;

var bVelocity=tempVelocity;
var bAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + bVelocity * step / 2;
tempVelocity = velocity + bAcceleration * step / 2;

var cVelocity=tempVelocity;
var cAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + cVelocity * step / 2;
tempVelocity = velocity + cAcceleration * step / 2;

var dVelocity=tempVelocity;
var dAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + cVelocity * step / 2;
tempVelocity = velocity + cAcceleration * step / 2;

var dxdt=(aVelocity + 2 * (bVelocity + cVelocity) + dVelocity) / 6;
var dvdt=(aAcceleration + 2 * (bAcceleration + cAcceleration) + dAcceleration) / 6;

position += dxdt * step;
velocity += dvdt * step;}


this._lastTime = now;
this._lastPosition = position;
this._lastVelocity = velocity;

this._onUpdate(position);
if(!this.__active){
return;}



var isOvershooting=false;
if(this._overshootClamping && this._tension !== 0){
if(this._startPosition < this._toValue){
isOvershooting = position > this._toValue;}else 
{
isOvershooting = position < this._toValue;}}


var isVelocity=Math.abs(velocity) <= this._restSpeedThreshold;
var isDisplacement=true;
if(this._tension !== 0){
isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;}

if(isOvershooting || isVelocity && isDisplacement){
this.__debouncedOnEnd({finished:true});
return;}

this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}},{key:'stop',value:


function stop(){
this.__active = false;
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return SpringAnimation;})(Animation);





var _uniqueId=1;var 

AnimatedValue=(function(_AnimatedWithChildren){_inherits(AnimatedValue,_AnimatedWithChildren);






function AnimatedValue(value){_classCallCheck(this,AnimatedValue);
_get(Object.getPrototypeOf(AnimatedValue.prototype),'constructor',this).call(this);
this._value = value;
this._offset = 0;
this._animation = null;
this._listeners = {};}_createClass(AnimatedValue,[{key:'detach',value:


function detach(){
this.stopAnimation();}},{key:'__getValue',value:


function __getValue(){
return this._value + this._offset;}},{key:'setValue',value:


function setValue(value){
if(this._animation){
this._animation.stop();
this._animation = null;}

this._updateValue(value);}},{key:'setOffset',value:


function setOffset(offset){
this._offset = offset;}},{key:'flattenOffset',value:


function flattenOffset(){
this._value += this._offset;
this._offset = 0;}},{key:'addListener',value:


function addListener(callback){
var id=String(_uniqueId++);
this._listeners[id] = callback;
return id;}},{key:'removeListener',value:


function removeListener(id){
delete this._listeners[id];}},{key:'removeAllListeners',value:


function removeAllListeners(){
this._listeners = {};}},{key:'animate',value:


function animate(animation,callback){var _this2=this;
var handle=InteractionManager.createInteractionHandle();
var previousAnimation=this._animation;
this._animation && this._animation.stop();
this._animation = animation;
animation.start(
this._value,
function(value){
_this2._updateValue(value);},

function(result){
_this2._animation = null;
InteractionManager.clearInteractionHandle(handle);
callback && callback(result);},

previousAnimation);}},{key:'stopAnimation',value:



function stopAnimation(callback){
this.stopTracking();
this._animation && this._animation.stop();
this._animation = null;
callback && callback(this.__getValue());}},{key:'stopTracking',value:


function stopTracking(){
this._tracking && this._tracking.detach();
this._tracking = null;}},{key:'track',value:


function track(tracking){
this.stopTracking();
this._tracking = tracking;}},{key:'interpolate',value:


function interpolate(config){
return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'_updateValue',value:


function _updateValue(value){
this._value = value;
_flush(this);
for(var key in this._listeners) {
this._listeners[key]({value:this.__getValue()});}}}]);return AnimatedValue;})(AnimatedWithChildren);var 





AnimatedValueXY=(function(_AnimatedWithChildren2){_inherits(AnimatedValueXY,_AnimatedWithChildren2);




function AnimatedValueXY(valueIn){_classCallCheck(this,AnimatedValueXY);
_get(Object.getPrototypeOf(AnimatedValueXY.prototype),'constructor',this).call(this);
var value=valueIn || {x:0,y:0};
if(typeof value.x === 'number' && typeof value.y === 'number'){
this.x = new AnimatedValue(value.x);
this.y = new AnimatedValue(value.y);}else 
{
invariant(
value.x instanceof AnimatedValue && 
value.y instanceof AnimatedValue,
'AnimatedValueXY must be initalized with an object of numbers or ' + 
'AnimatedValues.');

this.x = value.x;
this.y = value.y;}

this._listeners = {};}_createClass(AnimatedValueXY,[{key:'setValue',value:


function setValue(value){
this.x.setValue(value.x);
this.y.setValue(value.y);}},{key:'setOffset',value:


function setOffset(offset){
this.x.setOffset(offset.x);
this.y.setOffset(offset.y);}},{key:'flattenOffset',value:


function flattenOffset(){
this.x.flattenOffset();
this.y.flattenOffset();}},{key:'__getValue',value:


function __getValue(){
return {
x:this.x.__getValue(),
y:this.y.__getValue()};}},{key:'stopAnimation',value:



function stopAnimation(callback){
this.x.stopAnimation();
this.y.stopAnimation();
callback && callback(this.__getValue());}},{key:'addListener',value:


function addListener(callback){var _this3=this;
var id=String(_uniqueId++);
var jointCallback=function(_ref){var number=_ref.value;
callback(_this3.__getValue());};

this._listeners[id] = {
x:this.x.addListener(jointCallback),
y:this.y.addListener(jointCallback)};

return id;}},{key:'removeListener',value:


function removeListener(id){
this.x.removeListener(this._listeners[id].x);
this.y.removeListener(this._listeners[id].y);
delete this._listeners[id];}},{key:'getLayout',value:


function getLayout(){
return {
left:this.x,
top:this.y};}},{key:'getTranslateTransform',value:



function getTranslateTransform(){
return [
{translateX:this.x},
{translateY:this.y}];}}]);return AnimatedValueXY;})(AnimatedWithChildren);var 




AnimatedInterpolation=(function(_AnimatedWithChildren3){_inherits(AnimatedInterpolation,_AnimatedWithChildren3);



function AnimatedInterpolation(parent,interpolation){_classCallCheck(this,AnimatedInterpolation);
_get(Object.getPrototypeOf(AnimatedInterpolation.prototype),'constructor',this).call(this);
this._parent = parent;
this._interpolation = interpolation;}_createClass(AnimatedInterpolation,[{key:'__getValue',value:


function __getValue(){
var parentValue=this._parent.__getValue();
invariant(
typeof parentValue === 'number',
'Cannot interpolate an input which is not a number.');

return this._interpolation(parentValue);}},{key:'interpolate',value:


function interpolate(config){
return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'attach',value:


function attach(){
this._parent.addChild(this);}},{key:'detach',value:


function detach(){
this._parent.removeChild(this);}}]);return AnimatedInterpolation;})(AnimatedWithChildren);var 



AnimatedTransform=(function(_AnimatedWithChildren4){_inherits(AnimatedTransform,_AnimatedWithChildren4);


function AnimatedTransform(transforms){_classCallCheck(this,AnimatedTransform);
_get(Object.getPrototypeOf(AnimatedTransform.prototype),'constructor',this).call(this);
this._transforms = transforms;}_createClass(AnimatedTransform,[{key:'__getValue',value:


function __getValue(){
return this._transforms.map(function(transform){
var result={};
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
result[key] = value.__getValue();}else 
{
result[key] = value;}}


return result;});}},{key:'getAnimatedValue',value:



function getAnimatedValue(){
return this._transforms.map(function(transform){
var result={};
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
result[key] = value.getAnimatedValue();}else 
{

result[key] = value;}}


return result;});}},{key:'attach',value:



function attach(){var _this4=this;
this._transforms.forEach(function(transform){
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
value.addChild(_this4);}}});}},{key:'detach',value:





function detach(){var _this5=this;
this._transforms.forEach(function(transform){
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
value.removeChild(_this5);}}});}}]);return AnimatedTransform;})(AnimatedWithChildren);var 






AnimatedStyle=(function(_AnimatedWithChildren5){_inherits(AnimatedStyle,_AnimatedWithChildren5);


function AnimatedStyle(style){_classCallCheck(this,AnimatedStyle);
_get(Object.getPrototypeOf(AnimatedStyle.prototype),'constructor',this).call(this);
style = flattenStyle(style) || {};
if(style.transform){
style = _extends({},
style,{
transform:new AnimatedTransform(style.transform)});}


this._style = style;}_createClass(AnimatedStyle,[{key:'__getValue',value:


function __getValue(){
var style={};
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
style[key] = value.__getValue();}else 
{
style[key] = value;}}


return style;}},{key:'getAnimatedValue',value:


function getAnimatedValue(){
var style={};
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
style[key] = value.getAnimatedValue();}}


return style;}},{key:'attach',value:


function attach(){
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
value.addChild(this);}}}},{key:'detach',value:




function detach(){
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
value.removeChild(this);}}}}]);return AnimatedStyle;})(AnimatedWithChildren);var 





AnimatedProps=(function(_Animated2){_inherits(AnimatedProps,_Animated2);



function AnimatedProps(
props,
callback)
{_classCallCheck(this,AnimatedProps);
_get(Object.getPrototypeOf(AnimatedProps.prototype),'constructor',this).call(this);
if(props.style){
props = _extends({},
props,{
style:new AnimatedStyle(props.style)});}


this._props = props;
this._callback = callback;
this.attach();}_createClass(AnimatedProps,[{key:'__getValue',value:


function __getValue(){
var props={};
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
props[key] = value.__getValue();}else 
{
props[key] = value;}}


return props;}},{key:'getAnimatedValue',value:


function getAnimatedValue(){
var props={};
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
props[key] = value.getAnimatedValue();}}


return props;}},{key:'attach',value:


function attach(){
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
value.addChild(this);}}}},{key:'detach',value:




function detach(){
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
value.removeChild(this);}}}},{key:'update',value:




function update(){
this._callback();}}]);return AnimatedProps;})(Animated);



function createAnimatedComponent(Component){
var refName='node';var 

AnimatedComponent=(function(_React$Component){_inherits(AnimatedComponent,_React$Component);function AnimatedComponent(){_classCallCheck(this,AnimatedComponent);_get(Object.getPrototypeOf(AnimatedComponent.prototype),'constructor',this).apply(this,arguments);}_createClass(AnimatedComponent,[{key:'componentWillUnmount',value:


function componentWillUnmount(){
this._propsAnimated && this._propsAnimated.detach();}},{key:'setNativeProps',value:


function setNativeProps(props){
this.refs[refName].setNativeProps(props);}},{key:'componentWillMount',value:


function componentWillMount(){
this.attachProps(this.props);}},{key:'attachProps',value:


function attachProps(nextProps){var _this6=this;
var oldPropsAnimated=this._propsAnimated;







var callback=function(){
if(_this6.refs[refName].setNativeProps){
var value=_this6._propsAnimated.getAnimatedValue();
_this6.refs[refName].setNativeProps(value);}else 
{
_this6.forceUpdate();}};



this._propsAnimated = new AnimatedProps(
nextProps,
callback);










oldPropsAnimated && oldPropsAnimated.detach();}},{key:'componentWillReceiveProps',value:


function componentWillReceiveProps(nextProps){
this.attachProps(nextProps);}},{key:'render',value:


function render(){
return (
React.createElement(Component,_extends({},
this._propsAnimated.__getValue(),{
ref:refName})));}}]);return AnimatedComponent;})(React.Component);





return AnimatedComponent;}var 


AnimatedTracking=(function(_Animated3){_inherits(AnimatedTracking,_Animated3);






function AnimatedTracking(
value,
parent,
animationClass,
animationConfig,
callback)
{_classCallCheck(this,AnimatedTracking);
_get(Object.getPrototypeOf(AnimatedTracking.prototype),'constructor',this).call(this);
this._value = value;
this._parent = parent;
this._animationClass = animationClass;
this._animationConfig = animationConfig;
this._callback = callback;
this.attach();}_createClass(AnimatedTracking,[{key:'__getValue',value:


function __getValue(){
return this._parent.__getValue();}},{key:'attach',value:


function attach(){
this._parent.addChild(this);}},{key:'detach',value:


function detach(){
this._parent.removeChild(this);}},{key:'update',value:


function update(){
this._value.animate(new this._animationClass(_extends({},
this._animationConfig,{
toValue:this._animationConfig.toValue.__getValue()})),
this._callback);}}]);return AnimatedTracking;})(Animated);








var maybeVectorAnim=function(
value,
config,
anim)
{
if(value instanceof AnimatedValueXY){
var configX=_extends({},config);
var configY=_extends({},config);
for(var key in config) {var _config$key=
config[key];var x=_config$key.x;var y=_config$key.y;
if(x !== undefined && y !== undefined){
configX[key] = x;
configY[key] = y;}}


var aX=anim(value.x,configX);
var aY=anim(value.y,configY);


return parallel([aX,aY],{stopTogether:false});}

return null;};


var spring=function(
value,
config)
{
return maybeVectorAnim(value,config,spring) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
if(config.toValue instanceof Animated){
singleValue.track(new AnimatedTracking(
singleValue,
config.toValue,
SpringAnimation,
singleConfig,
callback));}else 

{
singleValue.animate(new SpringAnimation(singleConfig),callback);}},



stop:function(){
value.stopAnimation();}};};




var timing=function(
value,
config)
{
return maybeVectorAnim(value,config,timing) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
if(config.toValue instanceof Animated){
singleValue.track(new AnimatedTracking(
singleValue,
config.toValue,
TimingAnimation,
singleConfig,
callback));}else 

{
singleValue.animate(new TimingAnimation(singleConfig),callback);}},



stop:function(){
value.stopAnimation();}};};




var decay=function(
value,
config)
{
return maybeVectorAnim(value,config,decay) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
singleValue.animate(new DecayAnimation(singleConfig),callback);},


stop:function(){
value.stopAnimation();}};};




var sequence=function(
animations)
{
var current=0;
return {
start:function(callback){
var onComplete=function(result){
if(!result.finished){
callback && callback(result);
return;}


current++;

if(current === animations.length){
callback && callback(result);
return;}


animations[current].start(onComplete);};


if(animations.length === 0){
callback && callback({finished:true});}else 
{
animations[current].start(onComplete);}},



stop:function(){
if(current < animations.length){
animations[current].stop();}}};};








var parallel=function(
animations,
config)
{
var doneCount=0;

var hasEnded={};
var stopTogether=!(config && config.stopTogether === false);

var result={
start:function(callback){
if(doneCount === animations.length){
callback && callback({finished:true});
return;}


animations.forEach(function(animation,idx){
animation.start(function(endResult){
hasEnded[idx] = true;
doneCount++;
if(doneCount === animations.length){
doneCount = 0;
callback && callback(endResult);
return;}


if(!endResult.finished && stopTogether){
result.stop();}});});},





stop:function(){
animations.forEach(function(animation,idx){
!hasEnded[idx] && animation.stop();
hasEnded[idx] = true;});}};




return result;};


var delay=function(time){

return timing(new AnimatedValue(0),{toValue:0,delay:time,duration:0});};


var stagger=function(
time,
animations)
{
return parallel(animations.map(function(animation,i){
return sequence([
delay(time * i),
animation]);}));};






















var event=function(
argMapping,
config)
{
return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key < _len;_key++) {args[_key] = arguments[_key];}
var traverse=function(recMapping,recEvt,key){
if(typeof recEvt === 'number'){
invariant(
recMapping instanceof AnimatedValue,
'Bad mapping of type ' + typeof recMapping + ' for key ' + key + 
', event value must map to AnimatedValue');

recMapping.setValue(recEvt);
return;}

invariant(
typeof recMapping === 'object',
'Bad mapping of type ' + typeof recMapping + ' for key ' + key);

invariant(
typeof recEvt === 'object',
'Bad event of type ' + typeof recEvt + ' for key ' + key);

for(var key in recMapping) {
traverse(recMapping[key],recEvt[key],key);}};


argMapping.forEach(function(mapping,idx){
traverse(mapping,args[idx],'arg' + idx);});

if(config && config.listener){
config.listener.apply(null,args);}};};




module.exports = {
delay:delay,
sequence:sequence,
parallel:parallel,
stagger:stagger,

decay:decay,
timing:timing,
spring:spring,

event:event,

Value:AnimatedValue,
ValueXY:AnimatedValueXY,
__PropsOnlyForTests:AnimatedProps,
View:createAnimatedComponent(View),
Text:createAnimatedComponent(Text),
Image:createAnimatedComponent(Image),
createAnimatedComponent:createAnimatedComponent};
});
__d('Interpolation',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}













var invariant=function(condition,message){
if(!condition){
var error=new Error(message);
error.framesToPop = 1;
throw error;}};















var linear=function(t){return t;};var 





Interpolation=(function(){function Interpolation(){_classCallCheck(this,Interpolation);}_createClass(Interpolation,null,[{key:'create',value:
function create(config){

if(config.outputRange && typeof config.outputRange[0] === 'string'){
return createInterpolationFromStringOutputRange(config);}


var outputRange=config.outputRange;
checkInfiniteRange('outputRange',outputRange);

var inputRange=config.inputRange;
checkInfiniteRange('inputRange',inputRange);
checkValidInputRange(inputRange);

invariant(
inputRange.length === outputRange.length,
'inputRange (' + inputRange.length + ') and outputRange (' + 
outputRange.length + ') must have the same length');


var easing=config.easing || linear;

var extrapolateLeft='extend';
if(config.extrapolateLeft !== undefined){
extrapolateLeft = config.extrapolateLeft;}else 
if(config.extrapolate !== undefined){
extrapolateLeft = config.extrapolate;}


var extrapolateRight='extend';
if(config.extrapolateRight !== undefined){
extrapolateRight = config.extrapolateRight;}else 
if(config.extrapolate !== undefined){
extrapolateRight = config.extrapolate;}


return function(input){
invariant(
typeof input === 'number',
'Cannot interpolation an input which is not a number');


var range=findRange(input,inputRange);
return interpolate(
input,
inputRange[range],
inputRange[range + 1],
outputRange[range],
outputRange[range + 1],
easing,
extrapolateLeft,
extrapolateRight);};}}]);return Interpolation;})();





function interpolate(
input,
inputMin,
inputMax,
outputMin,
outputMax,
easing,
extrapolateLeft,
extrapolateRight)
{
var result=input;


if(result < inputMin){
if(extrapolateLeft === 'identity'){
return result;}else 
if(extrapolateLeft === 'clamp'){
result = inputMin;}else 
if(extrapolateLeft === 'extend'){}}




if(result > inputMax){
if(extrapolateRight === 'identity'){
return result;}else 
if(extrapolateRight === 'clamp'){
result = inputMax;}else 
if(extrapolateRight === 'extend'){}}




if(outputMin === outputMax){
return outputMin;}


if(inputMin === inputMax){
if(input <= inputMin){
return outputMin;}

return outputMax;}



if(inputMin === -Infinity){
result = -result;}else 
if(inputMax === Infinity){
result = result - inputMin;}else 
{
result = (result - inputMin) / (inputMax - inputMin);}



result = easing(result);


if(outputMin === -Infinity){
result = -result;}else 
if(outputMax === Infinity){
result = result + outputMin;}else 
{
result = result * (outputMax - outputMin) + outputMin;}


return result;}


var stringShapeRegex=/[0-9\.-]+/g;









function createInterpolationFromStringOutputRange(
config)
{
var outputRange=config.outputRange;
invariant(outputRange.length >= 2,'Bad output range');
checkPattern(outputRange);









var outputRanges=outputRange[0].match(stringShapeRegex).map(function(){return [];});
outputRange.forEach(function(value){
value.match(stringShapeRegex).forEach(function(number,i){
outputRanges[i].push(+number);});});



var interpolations=outputRange[0].match(stringShapeRegex).map(function(value,i){
return Interpolation.create(_extends({},
config,{
outputRange:outputRanges[i]}));});



return function(input){
var i=0;



return outputRange[0].replace(stringShapeRegex,function(){
return String(interpolations[i++](input));});};}




function checkPattern(arr){
var pattern=arr[0].replace(stringShapeRegex,'');
for(var i=1;i < arr.length;++i) {
invariant(
pattern === arr[i].replace(stringShapeRegex,''),
'invalid pattern ' + arr[0] + ' and ' + arr[i]);}}




function findRange(input,inputRange){
for(var i=1;i < inputRange.length - 1;++i) {
if(inputRange[i] >= input){
break;}}


return i - 1;}


function checkValidInputRange(arr){
invariant(arr.length >= 2,'inputRange must have at least 2 elements');
for(var i=1;i < arr.length;++i) {
invariant(
arr[i] >= arr[i - 1],






'inputRange must be monotonically increasing ' + arr);}}




function checkInfiniteRange(name,arr){
invariant(arr.length >= 2,name + ' must have at least 2 elements');
invariant(
arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity,






name + 'cannot be ]-infinity;+infinity[ ' + arr);}



module.exports = Interpolation;
});
__d('Easing',["bezier"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var _bezier=require('bezier');var 






Easing=(function(){function Easing(){_classCallCheck(this,Easing);}_createClass(Easing,null,[{key:'step0',value:
function step0(n){
return n > 0?1:0;}},{key:'step1',value:


function step1(n){
return n >= 1?1:0;}},{key:'linear',value:


function linear(t){
return t;}},{key:'ease',value:(function(_ease){function ease(_x){return _ease.apply(this,arguments);}ease.toString = function(){return _ease.toString();};return ease;})(


function(t){
return ease(t);})},{key:'quad',value:


function quad(t){
return t * t;}},{key:'cubic',value:


function cubic(t){
return t * t * t;}},{key:'poly',value:


function poly(n){
return function(t){return Math.pow(t,n);};}},{key:'sin',value:


function sin(t){
return 1 - Math.cos(t * Math.PI / 2);}},{key:'circle',value:


function circle(t){
return 1 - Math.sqrt(1 - t * t);}},{key:'exp',value:


function exp(t){
return Math.pow(2,10 * (t - 1));}},{key:'elastic',value:


function elastic(a,p){
var tau=Math.PI * 2;


var s;
if(arguments.length < 2){
p = 0.45;}

if(arguments.length){
s = p / tau * Math.asin(1 / a);}else 
{
a = 1;
s = p / 4;}

return function(t){return 1 + a * Math.pow(2,-10 * t) * Math.sin((t - s) * tau / p);};}},{key:'back',value:


function back(s){
if(s === undefined){
s = 1.70158;}

return function(t){return t * t * ((s + 1) * t - s);};}},{key:'bounce',value:


function bounce(t){
if(t < 1 / 2.75){
return 7.5625 * t * t;}


if(t < 2 / 2.75){
t -= 1.5 / 2.75;
return 7.5625 * t * t + 0.75;}


if(t < 2.5 / 2.75){
t -= 2.25 / 2.75;
return 7.5625 * t * t + 0.9375;}


t -= 2.625 / 2.75;
return 7.5625 * t * t + 0.984375;}},{key:'bezier',value:


function bezier(
x1,
y1,
x2,
y2,
epsilon)
{
if(epsilon === undefined){


var duration=500;
epsilon = 1000 / 60 / duration / 4;}


return _bezier(x1,y1,x2,y2,epsilon);}},{key:'in',value:


function _in(
easing)
{
return easing;}},{key:'out',value:


function out(
easing)
{
return function(t){return 1 - easing(1 - t);};}},{key:'inOut',value:


function inOut(
easing)
{
return function(t){
if(t < 0.5){
return easing(t * 2) / 2;}

return 1 - easing((1 - t) * 2) / 2;};}}]);return Easing;})();




var ease=Easing.bezier(0.42,0,1,1);

module.exports = Easing;
});
__d('bezier',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.





























exports = function(x1,y1,x2,y2,epsilon){

var curveX=function(t){
var v=1 - t;
return 3 * v * v * t * x1 + 3 * v * t * t * x2 + t * t * t;};


var curveY=function(t){
var v=1 - t;
return 3 * v * v * t * y1 + 3 * v * t * t * y2 + t * t * t;};


var derivativeCurveX=function(t){
var v=1 - t;
return 3 * (2 * (t - 1) * t + v * v) * x1 + 3 * (-t * t * t + 2 * v * t) * x2;};


return function(t){

var x=t,t0,t1,t2,x2,d2,i;


for(t2 = x,i = 0;i < 8;i++) {
x2 = curveX(t2) - x;
if(Math.abs(x2) < epsilon)return curveY(t2);
d2 = derivativeCurveX(t2);
if(Math.abs(d2) < 1e-6)break;
t2 = t2 - x2 / d2;}


t0 = 0,t1 = 1,t2 = x;

if(t2 < t0)return curveY(t0);
if(t2 > t1)return curveY(t1);


while(t0 < t1) {
x2 = curveX(t2);
if(Math.abs(x2 - x) < epsilon)return curveY(t2);
if(x > x2)t0 = t2;else 
t1 = t2;
t2 = (t1 - t0) * .5 + t0;}



return curveY(t2);};};
});
__d('requestAnimationFrame',["emptyFunction","nativeRequestAnimationFrame"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










emptyFunction=require('emptyFunction');
var nativeRequestAnimationFrame=require('nativeRequestAnimationFrame');

var lastTime=0;

var requestAnimationFrame=
nativeRequestAnimationFrame || 
function(callback){
var currTime=Date.now();
var timeDelay=Math.max(0,16 - (currTime - lastTime));
lastTime = currTime + timeDelay;
return global.setTimeout(function(){
callback(Date.now());},
timeDelay);};



requestAnimationFrame(emptyFunction);

module.exports = requestAnimationFrame;
});
__d('nativeRequestAnimationFrame',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










nativeRequestAnimationFrame=
global.requestAnimationFrame || 
global.webkitRequestAnimationFrame || 
global.mozRequestAnimationFrame || 
global.oRequestAnimationFrame || 
global.msRequestAnimationFrame;

module.exports = nativeRequestAnimationFrame;
});
__d('AppRegistry',["invariant","renderApplication","RCTRenderingPerf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');
var renderApplication=require('renderApplication');

if(__DEV__){


require('RCTRenderingPerf');}


var runnables={};


















var AppRegistry={
registerConfig:function(config){
for(var i=0;i < config.length;++i) {
var appConfig=config[i];
if(appConfig.run){
AppRegistry.registerRunnable(appConfig.appKey,appConfig.run);}else 
{
AppRegistry.registerComponent(appConfig.appKey,appConfig.component);}}},




registerComponent:function(appKey,getComponentFunc){
runnables[appKey] = {
run:function(appParameters){return (
renderApplication(getComponentFunc(),appParameters.initialProps,appParameters.rootTag));}};

return appKey;},


registerRunnable:function(appKey,func){
runnables[appKey] = {run:func};
return appKey;},


runApplication:function(appKey,appParameters){
console.log(
'Running application "' + appKey + '" with appParams: ' + 
JSON.stringify(appParameters) + '. ' + 
'__DEV__ === ' + String(__DEV__) + 
', development-level warning are ' + (__DEV__?'ON':'OFF') + 
', performance optimizations are ' + (__DEV__?'OFF':'ON'));

invariant(
runnables[appKey] && runnables[appKey].run,
'Application ' + appKey + ' has not been registered. This ' + 
'is either due to a require() error during initialization ' + 
'or failure to call AppRegistry.registerComponent.');

runnables[appKey].run(appParameters);}};



module.exports = AppRegistry;
});
__d('renderApplication',["Inspector","RCTDeviceEventEmitter","React","StyleSheet","Subscribable","View","WarningBox","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};











var Inspector=require('Inspector');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var View=require('View');
var WarningBox=require('WarningBox');

var invariant=require('invariant');

var AppContainer=React.createClass({displayName:'AppContainer',
mixins:[Subscribable.Mixin],

getInitialState:function(){
return {inspector:null};},


toggleElementInspector:function(){
var inspector=this.state.inspector?
null:
React.createElement(Inspector,{
rootTag:this.props.rootTag,
inspectedViewTag:React.findNodeHandle(this.refs.main)});

this.setState({inspector:inspector});},


componentDidMount:function(){
this.addListenerOn(
RCTDeviceEventEmitter,
'toggleElementInspector',
this.toggleElementInspector);},



render:function(){
var shouldRenderWarningBox=__DEV__ && console.yellowBoxEnabled;
var warningBox=shouldRenderWarningBox?React.createElement(WarningBox,null):null;
return (
React.createElement(View,{style:styles.appContainer},
React.createElement(View,{collapsible:false,style:styles.appContainer,ref:'main'},
this.props.children),

warningBox,
this.state.inspector));}});





function renderApplication(
RootComponent,
initialProps,
rootTag)
{
invariant(
rootTag,
'Expect to have a valid rootTag, instead got ',rootTag);

React.render(
React.createElement(AppContainer,{rootTag:rootTag},
React.createElement(RootComponent,_extends({},
initialProps,{
rootTag:rootTag}))),


rootTag);}



var styles=StyleSheet.create({
appContainer:{
position:'absolute',
left:0,
top:0,
right:0,
bottom:0}});



module.exports = renderApplication;
});
__d('Inspector',["Dimensions","InspectorOverlay","InspectorPanel","InspectorUtils","React","StyleSheet","NativeModules","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var Dimensions=require('Dimensions');
var InspectorOverlay=require('InspectorOverlay');
var InspectorPanel=require('InspectorPanel');
var InspectorUtils=require('InspectorUtils');
var React=require('React');
var StyleSheet=require('StyleSheet');
var UIManager=require('NativeModules').UIManager;
var View=require('View');var 

Inspector=(function(_React$Component){_inherits(Inspector,_React$Component);
function Inspector(props){_classCallCheck(this,Inspector);
_get(Object.getPrototypeOf(Inspector.prototype),'constructor',this).call(this,props);
this.state = {
panelPos:'bottom',
inspecting:true,
perfing:false,
inspected:null};}_createClass(Inspector,[{key:'setSelection',value:



function setSelection(i){var _this=this;
var instance=this.state.hierarchy[i];
var publicInstance=instance.getPublicInstance();
UIManager.measure(React.findNodeHandle(instance),function(x,y,width,height,left,top){
_this.setState({
inspected:{
frame:{left:left,top:top,width:width,height:height},
style:publicInstance.props?publicInstance.props.style:{}},

selection:i});});}},{key:'onTouchInstance',value:




function onTouchInstance(instance,frame,pointerY){
var hierarchy=InspectorUtils.getOwnerHierarchy(instance);
var publicInstance=instance.getPublicInstance();
var props=publicInstance.props || {};
this.setState({
panelPos:pointerY > Dimensions.get('window').height / 2?'top':'bottom',
selection:hierarchy.length - 1,
hierarchy:hierarchy,
inspected:{
style:props.style || {},
frame:frame}});}},{key:'setPerfing',value:




function setPerfing(val){
this.setState({
perfing:val,
inspecting:false,
inspected:null});}},{key:'setInspecting',value:



function setInspecting(val){
this.setState({
inspecting:val,
inspected:null});}},{key:'render',value:



function render(){
var panelContainerStyle=this.state.panelPos === 'bottom'?{bottom:0}:{top:0};
return (
React.createElement(View,{style:styles.container,pointerEvents:'box-none'},
this.state.inspecting && 
React.createElement(InspectorOverlay,{
rootTag:this.props.rootTag,
inspected:this.state.inspected,
inspectedViewTag:this.props.inspectedViewTag,
onTouchInstance:this.onTouchInstance.bind(this)}),

React.createElement(View,{style:[styles.panelContainer,panelContainerStyle]},
React.createElement(InspectorPanel,{
inspecting:this.state.inspecting,
perfing:this.state.perfing,
setPerfing:this.setPerfing.bind(this),
setInspecting:this.setInspecting.bind(this),
inspected:this.state.inspected,
hierarchy:this.state.hierarchy,
selection:this.state.selection,
setSelection:this.setSelection.bind(this)}))));}}]);return Inspector;})(React.Component);







var styles=StyleSheet.create({
container:{
position:'absolute',
backgroundColor:'transparent',
top:0,
left:0,
right:0,
bottom:0},

panelContainer:{
position:'absolute',
left:0,
right:0}});



module.exports = Inspector;
});
__d('InspectorOverlay',["Dimensions","InspectorUtils","React","StyleSheet","NativeModules","View","ElementBox"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var Dimensions=require('Dimensions');
var InspectorUtils=require('InspectorUtils');
var React=require('React');
var StyleSheet=require('StyleSheet');
var UIManager=require('NativeModules').UIManager;
var View=require('View');
var ElementBox=require('ElementBox');

var PropTypes=React.PropTypes;





var InspectorOverlay=React.createClass({displayName:'InspectorOverlay',
propTypes:{
inspectedViewTag:PropTypes.object,
onTouchInstance:PropTypes.func.isRequired},


findViewForTouchEvent:function(e){var _this=this;var _e$nativeEvent$touches$0=
e.nativeEvent.touches[0];var locationX=_e$nativeEvent$touches$0.locationX;var locationY=_e$nativeEvent$touches$0.locationY;
UIManager.findSubviewIn(
this.props.inspectedViewTag,
[locationX,locationY],
function(nativeViewTag,left,top,width,height){
var instance=InspectorUtils.findInstanceByNativeTag(_this.props.rootTag,nativeViewTag);
if(!instance){
return;}

_this.props.onTouchInstance(instance,{left:left,top:top,width:width,height:height},locationY);});},




shouldSetResponser:function(e){
this.findViewForTouchEvent(e);
return true;},


render:function(){
var content=null;
if(this.props.inspected){
content = React.createElement(ElementBox,{frame:this.props.inspected.frame,style:this.props.inspected.style});}


return (
React.createElement(View,{
onStartShouldSetResponder:this.shouldSetResponser,
onResponderMove:this.findViewForTouchEvent,
style:[styles.inspector,{height:Dimensions.get('window').height}]},
content));}});





var styles=StyleSheet.create({
inspector:{
backgroundColor:'transparent',
position:'absolute',
left:0,
top:0,
right:0}});



module.exports = InspectorOverlay;
});
__d('ElementBox',["React","View","StyleSheet","BorderBox","resolveBoxStyle","flattenStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var View=require('View');
var StyleSheet=require('StyleSheet');
var BorderBox=require('BorderBox');
var resolveBoxStyle=require('resolveBoxStyle');

var flattenStyle=require('flattenStyle');var 

ElementBox=(function(_React$Component){_inherits(ElementBox,_React$Component);function ElementBox(){_classCallCheck(this,ElementBox);_get(Object.getPrototypeOf(ElementBox.prototype),'constructor',this).apply(this,arguments);}_createClass(ElementBox,[{key:'render',value:
function render(){
var style=flattenStyle(this.props.style) || {};
var margin=resolveBoxStyle('margin',style);
var padding=resolveBoxStyle('padding',style);
var frameStyle=this.props.frame;
if(margin){
frameStyle = {
top:frameStyle.top - margin.top,
left:frameStyle.left - margin.left,
height:frameStyle.height + margin.top + margin.bottom,
width:frameStyle.width + margin.left + margin.right};}


var contentStyle={
width:this.props.frame.width,
height:this.props.frame.height};

if(padding){
contentStyle = {
width:contentStyle.width - padding.left - padding.right,
height:contentStyle.height - padding.top - padding.bottom};}


return (
React.createElement(View,{style:[styles.frame,frameStyle],pointerEvents:'none'},
React.createElement(BorderBox,{box:margin,style:styles.margin},
React.createElement(BorderBox,{box:padding,style:styles.padding},
React.createElement(View,{style:[styles.content,contentStyle]})))));}}]);return ElementBox;})(React.Component);







var styles=StyleSheet.create({
frame:{
position:'absolute'},

content:{
backgroundColor:'rgba(200, 230, 255, 0.8)'},

padding:{
borderColor:'rgba(77, 255, 0, 0.3)'},

margin:{
borderColor:'rgba(255, 132, 0, 0.3)'}});



module.exports = ElementBox;
});
__d('BorderBox',["React","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var View=require('View');var 

BorderBox=(function(_React$Component){_inherits(BorderBox,_React$Component);function BorderBox(){_classCallCheck(this,BorderBox);_get(Object.getPrototypeOf(BorderBox.prototype),'constructor',this).apply(this,arguments);}_createClass(BorderBox,[{key:'render',value:
function render(){
var box=this.props.box;
if(!box){
return this.props.children;}

var style={
borderTopWidth:box.top,
borderBottomWidth:box.bottom,
borderLeftWidth:box.left,
borderRightWidth:box.right};

return (
React.createElement(View,{style:[style,this.props.style]},
this.props.children));}}]);return BorderBox;})(React.Component);





module.exports = BorderBox;
});
__d('resolveBoxStyle',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





















function resolveBoxStyle(prefix,style){
var res={};
var subs=['top','left','bottom','right'];
var set=false;
subs.forEach(function(sub){
res[sub] = style[prefix] || 0;});

if(style[prefix]){
set = true;}

if(style[prefix + 'Vertical']){
res.top = res.bottom = style[prefix + 'Vertical'];
set = true;}

if(style[prefix + 'Horizontal']){
res.left = res.right = style[prefix + 'Horizontal'];
set = true;}

subs.forEach(function(sub){
var val=style[prefix + capFirst(sub)];
if(val){
res[sub] = val;
set = true;}});


if(!set){
return;}

return res;}


function capFirst(text){
return text[0].toUpperCase() + text.slice(1);}


module.exports = resolveBoxStyle;
});
__d('InspectorPanel',["React","StyleSheet","Text","View","ElementProperties","PerformanceOverlay","TouchableHighlight"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var ElementProperties=require('ElementProperties');
var PerformanceOverlay=require('PerformanceOverlay');
var TouchableHighlight=require('TouchableHighlight');

var PropTypes=React.PropTypes;var 

InspectorPanel=(function(_React$Component){_inherits(InspectorPanel,_React$Component);function InspectorPanel(){_classCallCheck(this,InspectorPanel);_get(Object.getPrototypeOf(InspectorPanel.prototype),'constructor',this).apply(this,arguments);}_createClass(InspectorPanel,[{key:'renderWaiting',value:
function renderWaiting(){
if(this.props.inspecting){
return (
React.createElement(Text,{style:styles.waitingText},'Tap something to inspect it'));}




return React.createElement(Text,{style:styles.waitingText},'Nothing is inspected');}},{key:'render',value:


function render(){
var contents;
if(this.props.inspected){
contents = 
React.createElement(ElementProperties,{
style:this.props.inspected.style,
frame:this.props.inspected.frame,
hierarchy:this.props.hierarchy,
selection:this.props.selection,
setSelection:this.props.setSelection});}else 


if(this.props.perfing){
contents = 
React.createElement(PerformanceOverlay,null);}else 

{
contents = 
React.createElement(View,{style:styles.waiting},
this.renderWaiting());}



return (
React.createElement(View,{style:styles.container},
contents,
React.createElement(View,{style:styles.buttonRow},
React.createElement(Button,{
title:'Inspect',
pressed:this.props.inspecting,
onClick:this.props.setInspecting}),

React.createElement(Button,{title:'Perf',
pressed:this.props.perfing,
onClick:this.props.setPerfing}))));}}]);return InspectorPanel;})(React.Component);







InspectorPanel.propTypes = {
inspecting:PropTypes.bool,
setInspecting:PropTypes.func,
inspected:PropTypes.object,
perfing:PropTypes.bool,
setPerfing:PropTypes.func};var 


Button=(function(_React$Component2){_inherits(Button,_React$Component2);function Button(){_classCallCheck(this,Button);_get(Object.getPrototypeOf(Button.prototype),'constructor',this).apply(this,arguments);}_createClass(Button,[{key:'render',value:
function render(){var _this=this;
return (
React.createElement(TouchableHighlight,{onPress:function(){return _this.props.onClick(!_this.props.pressed);},style:[
styles.button,
this.props.pressed && styles.buttonPressed]},

React.createElement(Text,{style:styles.buttonText},this.props.title)));}}]);return Button;})(React.Component);





var styles=StyleSheet.create({
buttonRow:{
flexDirection:'row'},

button:{
backgroundColor:'rgba(0, 0, 0, 0.3)',
margin:2,
height:30,
justifyContent:'center',
alignItems:'center'},

buttonPressed:{
backgroundColor:'rgba(255, 255, 255, 0.3)'},

buttonText:{
textAlign:'center',
color:'white',
margin:5},

container:{
backgroundColor:'rgba(0, 0, 0, 0.7)'},

waiting:{
height:100},

waitingText:{
fontSize:20,
textAlign:'center',
marginVertical:20}});



module.exports = InspectorPanel;
});
__d('ElementProperties',["BoxInspector","ReactPropTypes","React","StyleInspector","StyleSheet","Text","TouchableHighlight","TouchableWithoutFeedback","View","flattenStyle","mapWithSeparator"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var BoxInspector=require('BoxInspector');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleInspector=require('StyleInspector');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TouchableHighlight=require('TouchableHighlight');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var View=require('View');

var flattenStyle=require('flattenStyle');
var mapWithSeparator=require('mapWithSeparator');

var ElementProperties=React.createClass({displayName:'ElementProperties',
propTypes:{
hierarchy:PropTypes.array.isRequired,
style:PropTypes.array.isRequired},


render:function(){var _this=this;
var style=flattenStyle(this.props.style);
var selection=this.props.selection;


return (
React.createElement(TouchableWithoutFeedback,null,
React.createElement(View,{style:styles.info},
React.createElement(View,{style:styles.breadcrumb},
mapWithSeparator(
this.props.hierarchy,
function(item,i){return (
React.createElement(TouchableHighlight,{
style:[styles.breadItem,i === selection && styles.selected],
onPress:function(){return _this.props.setSelection(i);}},
React.createElement(Text,{style:styles.breadItemText},
item.getName?item.getName():'Unknown')));},



function(){return React.createElement(Text,{style:styles.breadSep},'▸');})),


React.createElement(View,{style:styles.row},
React.createElement(StyleInspector,{style:style}),
React.createElement(BoxInspector,{style:style,frame:this.props.frame})))));}});







var styles=StyleSheet.create({
breadSep:{
fontSize:8,
color:'white'},

breadcrumb:{
flexDirection:'row',
flexWrap:'wrap',
marginBottom:5},

selected:{
borderColor:'white',
borderRadius:5},

breadItem:{
borderWidth:1,
borderColor:'transparent',
marginHorizontal:2},

breadItemText:{
fontSize:10,
color:'white',
marginHorizontal:5},

row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-between'},

info:{
padding:10},

path:{
color:'white',
fontSize:9}});



module.exports = ElementProperties;
});
__d('BoxInspector',["React","StyleSheet","Text","View","resolveBoxStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var resolveBoxStyle=require('resolveBoxStyle');

var blank={
top:0,
left:0,
right:0,
bottom:0};var 


BoxInspector=(function(_React$Component){_inherits(BoxInspector,_React$Component);function BoxInspector(){_classCallCheck(this,BoxInspector);_get(Object.getPrototypeOf(BoxInspector.prototype),'constructor',this).apply(this,arguments);}_createClass(BoxInspector,[{key:'render',value:
function render(){
var frame=this.props.frame;
var style=this.props.style;
var margin=style && resolveBoxStyle('margin',style) || blank;
var padding=style && resolveBoxStyle('padding',style) || blank;
return (
React.createElement(BoxContainer,{title:'margin',titleStyle:styles.marginLabel,box:margin},
React.createElement(BoxContainer,{title:'padding',box:padding},
React.createElement(View,null,
React.createElement(Text,{style:styles.innerText},'(',
frame.left,', ',frame.top,')'),

React.createElement(Text,{style:styles.innerText},
frame.width,' × ',frame.height)))));}}]);return BoxInspector;})(React.Component);var 








BoxContainer=(function(_React$Component2){_inherits(BoxContainer,_React$Component2);function BoxContainer(){_classCallCheck(this,BoxContainer);_get(Object.getPrototypeOf(BoxContainer.prototype),'constructor',this).apply(this,arguments);}_createClass(BoxContainer,[{key:'render',value:
function render(){
var box=this.props.box;
return (
React.createElement(View,{style:styles.box},
React.createElement(View,{style:styles.row},
React.createElement(Text,{style:[this.props.titleStyle,styles.label]},this.props.title),
React.createElement(Text,{style:styles.boxText},box.top)),

React.createElement(View,{style:styles.row},
React.createElement(Text,{style:styles.boxText},box.left),
this.props.children,
React.createElement(Text,{style:styles.boxText},box.right)),

React.createElement(Text,{style:styles.boxText},box.bottom)));}}]);return BoxContainer;})(React.Component);





var styles=StyleSheet.create({
row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-around'},

marginLabel:{
width:60},

label:{
fontSize:10,
color:'rgb(255,100,0)',
marginLeft:5,
flex:1,
textAlign:'left',
top:-3},

buffer:{
fontSize:10,
color:'yellow',
flex:1,
textAlign:'center'},

innerText:{
color:'yellow',
fontSize:12,
textAlign:'center',
width:70},

box:{
borderWidth:1,
borderColor:'grey'},

boxText:{
color:'white',
fontSize:12,
marginHorizontal:3,
marginVertical:2,
textAlign:'center'}});



module.exports = BoxInspector;
});
__d('StyleInspector',["React","StyleSheet","Text","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');var 

StyleInspector=(function(_React$Component){_inherits(StyleInspector,_React$Component);function StyleInspector(){_classCallCheck(this,StyleInspector);_get(Object.getPrototypeOf(StyleInspector.prototype),'constructor',this).apply(this,arguments);}_createClass(StyleInspector,[{key:'render',value:
function render(){var _this=this;
if(!this.props.style){
return React.createElement(Text,{style:styles.noStyle},'No style');}

var names=Object.keys(this.props.style);
return (
React.createElement(View,{style:styles.container},
React.createElement(View,null,
names.map(function(name){return React.createElement(Text,{style:styles.attr},name,':');})),

React.createElement(View,null,
names.map(function(name){return React.createElement(Text,{style:styles.value},_this.props.style[name]);}))));}}]);return StyleInspector;})(React.Component);






var styles=StyleSheet.create({
container:{
flexDirection:'row'},

row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-around'},

attr:{
fontSize:10,
color:'#ccc'},

value:{
fontSize:10,
color:'white',
marginLeft:10},

noStyle:{
color:'white',
fontSize:10}});



module.exports = StyleInspector;
});
__d('mapWithSeparator',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






function mapWithSeparator(array,valueFunction,separatorFunction){
var results=[];
for(var i=0;i < array.length;i++) {
results.push(valueFunction(array[i],i,array));
if(i !== array.length - 1){
results.push(separatorFunction(i));}}


return results;}


module.exports = mapWithSeparator;
});
__d('PerformanceOverlay',["PerformanceLogger","React","StyleSheet","Text","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PerformanceLogger=require('PerformanceLogger');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var PerformanceOverlay=React.createClass({displayName:'PerformanceOverlay',
render:function(){
var perfLogs=PerformanceLogger.getTimespans();
var items=[];

for(var key in perfLogs) {
if(perfLogs[key].totalTime){
items.push(
React.createElement(View,{style:styles.row},
React.createElement(Text,{style:[styles.text,styles.label]},key),
React.createElement(Text,{style:[styles.text,styles.totalTime]},
perfLogs[key].totalTime + 'ms')));}}






return (
React.createElement(View,{style:styles.container},
items));}});





var styles=StyleSheet.create({
container:{
height:100,
paddingTop:10},

label:{
flex:1},

row:{
flexDirection:'row',
paddingHorizontal:10},

text:{
color:'white',
fontSize:12},

totalTime:{
paddingRight:100}});



module.exports = PerformanceOverlay;
});
__d('WarningBox',["AsyncStorage","EventEmitter","Map","PanResponder","React","StyleSheet","Text","TouchableOpacity","View","invariant","stringifySafe","Dimensions","rebound/rebound.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};











var AsyncStorage=require('AsyncStorage');
var EventEmitter=require('EventEmitter');
var Map=require('Map');
var PanResponder=require('PanResponder');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TouchableOpacity=require('TouchableOpacity');
var View=require('View');

var invariant=require('invariant');
var rebound=require('rebound/rebound.js');
var stringifySafe=require('stringifySafe');

var SCREEN_WIDTH=require('Dimensions').get('window').width;
var IGNORED_WARNINGS_KEY='__DEV_WARNINGS_IGNORED';

var consoleWarn=console.warn.bind(console);

var warningCounts=new Map();
var ignoredWarnings=[];
var totalWarningCount=0;
var warningCountEvents=new EventEmitter();























if(__DEV__){
console.warn = function(){
consoleWarn.apply(null,arguments);
if(!console.yellowBoxEnabled){
return;}

var warning=Array.prototype.map.call(arguments,stringifySafe).join(' ');
if(!console.yellowBoxResetIgnored && 
ignoredWarnings.indexOf(warning) !== -1){
return;}

var count=warningCounts.has(warning)?warningCounts.get(warning) + 1:1;
warningCounts.set(warning,count);
totalWarningCount += 1;
warningCountEvents.emit('count',totalWarningCount);};}



function saveIgnoredWarnings(){
AsyncStorage.setItem(
IGNORED_WARNINGS_KEY,
JSON.stringify(ignoredWarnings),
function(err){
if(err){
console.warn('Could not save ignored warnings.',err);}});}





AsyncStorage.getItem(IGNORED_WARNINGS_KEY,function(err,data){
if(!err && data && !console.yellowBoxResetIgnored){
ignoredWarnings = JSON.parse(data);}});



var WarningRow=React.createClass({displayName:'WarningRow',
componentWillMount:function(){var _this=this;
this.springSystem = new rebound.SpringSystem();
this.dismissalSpring = this.springSystem.createSpring();
this.dismissalSpring.setRestSpeedThreshold(0.05);
this.dismissalSpring.setCurrentValue(0);
this.dismissalSpring.addListener({
onSpringUpdate:function(){
var val=_this.dismissalSpring.getCurrentValue();
_this.text && _this.text.setNativeProps({
left:SCREEN_WIDTH * val});

_this.container && _this.container.setNativeProps({
opacity:1 - val});

_this.closeButton && _this.closeButton.setNativeProps({
opacity:1 - val * 5});},


onSpringAtRest:function(){
if(_this.dismissalSpring.getCurrentValue()){
_this.collapseSpring.setEndValue(1);}}});



this.collapseSpring = this.springSystem.createSpring();
this.collapseSpring.setRestSpeedThreshold(0.05);
this.collapseSpring.setCurrentValue(0);
this.collapseSpring.getSpringConfig().friction = 20;
this.collapseSpring.getSpringConfig().tension = 200;
this.collapseSpring.addListener({
onSpringUpdate:function(){
var val=_this.collapseSpring.getCurrentValue();
_this.container && _this.container.setNativeProps({
height:Math.abs(46 - val * 46)});},


onSpringAtRest:function(){
_this.props.onDismissed();}});


this.panGesture = PanResponder.create({
onStartShouldSetPanResponder:function(){
return !!_this.dismissalSpring.getCurrentValue();},

onMoveShouldSetPanResponder:function(){return true;},
onPanResponderGrant:function(){
_this.isResponderOnlyToBlockTouches = 
!!_this.dismissalSpring.getCurrentValue();},

onPanResponderMove:function(e,gestureState){
if(_this.isResponderOnlyToBlockTouches){
return;}

_this.dismissalSpring.setCurrentValue(gestureState.dx / SCREEN_WIDTH);},

onPanResponderRelease:function(e,gestureState){
if(_this.isResponderOnlyToBlockTouches){
return;}

var gestureCompletion=gestureState.dx / SCREEN_WIDTH;
var doesGestureRelease=gestureState.vx + gestureCompletion > 0.5;
_this.dismissalSpring.setEndValue(doesGestureRelease?1:0);}});},



render:function(){var _this2=this;
var countText;
if(warningCounts.get(this.props.warning) > 1){
countText = 
React.createElement(Text,{style:styles.bold},'(',
warningCounts.get(this.props.warning),')'," ");}



return (
React.createElement(View,_extends({
style:styles.warningBox,
ref:function(container){_this2.container = container;}},
this.panGesture.panHandlers),
React.createElement(TouchableOpacity,{
onPress:this.props.onOpened},
React.createElement(View,null,
React.createElement(Text,{
style:styles.warningText,
numberOfLines:2,
ref:function(text){_this2.text = text;}},
countText,
this.props.warning))),



React.createElement(View,{
ref:function(closeButton){_this2.closeButton = closeButton;},
style:styles.closeButton},
React.createElement(TouchableOpacity,{
onPress:function(){
_this2.dismissalSpring.setEndValue(1);}},

React.createElement(Text,{style:styles.closeButtonText},'✕')))));}});







var WarningBoxOpened=React.createClass({displayName:'WarningBoxOpened',
render:function(){
var countText;
if(warningCounts.get(this.props.warning) > 1){
countText = 
React.createElement(Text,{style:styles.bold},'(',
warningCounts.get(this.props.warning),')'," ");}



return (
React.createElement(TouchableOpacity,{
activeOpacity:0.9,
onPress:this.props.onClose},
React.createElement(View,{style:styles.yellowBox},
React.createElement(Text,{style:styles.yellowBoxText},
countText,
this.props.warning),

React.createElement(View,{style:styles.yellowBoxButtons},
React.createElement(View,{style:styles.yellowBoxButton},
React.createElement(TouchableOpacity,{
onPress:this.props.onDismissed},
React.createElement(Text,{style:styles.yellowBoxButtonText},'Dismiss'))),




React.createElement(View,{style:styles.yellowBoxButton},
React.createElement(TouchableOpacity,{
onPress:this.props.onIgnored},
React.createElement(Text,{style:styles.yellowBoxButtonText},'Ignore')))))));}});











var canMountWarningBox=true;

var WarningBox=React.createClass({displayName:'WarningBox',
getInitialState:function(){
return {
totalWarningCount:totalWarningCount,
openWarning:null};},


componentWillMount:function(){
if(console.yellowBoxResetIgnored){
AsyncStorage.setItem(IGNORED_WARNINGS_KEY,'[]',function(err){
if(err){
console.warn('Could not reset ignored warnings.',err);}});


ignoredWarnings = [];}},


componentDidMount:function(){
invariant(
canMountWarningBox,
'There can only be one WarningBox');

canMountWarningBox = false;
warningCountEvents.addListener(
'count',
this._onWarningCount);},


componentWillUnmount:function(){
warningCountEvents.removeAllListeners();
canMountWarningBox = true;},

_onWarningCount:function(totalWarningCount){var _this3=this;


setImmediate(function(){
_this3.setState({totalWarningCount:totalWarningCount});});},


_onDismiss:function(warning){
warningCounts.delete(warning);
this.setState({
openWarning:null});},


render:function(){var _this4=this;
if(warningCounts.size === 0){
return React.createElement(View,null);}

if(this.state.openWarning){
return (
React.createElement(WarningBoxOpened,{
warning:this.state.openWarning,
onClose:function(){
_this4.setState({openWarning:null});},

onDismissed:this._onDismiss.bind(this,this.state.openWarning),
onIgnored:function(){
ignoredWarnings.push(_this4.state.openWarning);
saveIgnoredWarnings();
_this4._onDismiss(_this4.state.openWarning);}}));}




var warningRows=[];
warningCounts.forEach(function(count,warning){
warningRows.push(
React.createElement(WarningRow,{
key:warning,
onOpened:function(){
_this4.setState({openWarning:warning});},

onDismissed:_this4._onDismiss.bind(_this4,warning),
warning:warning}));});



return (
React.createElement(View,{style:styles.warningContainer},
warningRows));}});





var styles=StyleSheet.create({
bold:{
fontWeight:'bold'},

closeButton:{
position:'absolute',
right:0,
height:46,
width:46},

closeButtonText:{
color:'white',
fontSize:32,
position:'relative',
left:8},

warningContainer:{
position:'absolute',
left:0,
right:0,
bottom:0},

warningBox:{
position:'relative',
backgroundColor:'rgba(171, 124, 36, 0.9)',
flex:1,
height:46},

warningText:{
color:'white',
position:'absolute',
left:0,
marginLeft:15,
marginRight:46,
top:7},

yellowBox:{
backgroundColor:'rgba(171, 124, 36, 0.9)',
position:'absolute',
left:0,
right:0,
top:0,
bottom:0,
padding:15,
paddingTop:35},

yellowBoxText:{
color:'white',
fontSize:20},

yellowBoxButtons:{
flexDirection:'row',
position:'absolute',
bottom:0},

yellowBoxButton:{
flex:1,
padding:25},

yellowBoxButtonText:{
color:'white',
fontSize:16}});



module.exports = WarningBox;
});
__d('AsyncStorage',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTAsyncLocalStorage=NativeModules.AsyncLocalStorage;
var RCTAsyncRocksDBStorage=NativeModules.AsyncRocksDBStorage;


var RCTAsyncStorage=RCTAsyncRocksDBStorage || RCTAsyncLocalStorage;













var AsyncStorage={




getItem:function(
key,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiGet([key],function(errors,result){

var value=result && result[0] && result[0][1]?result[0][1]:null;
callback && callback(errors && convertError(errors[0]) || null,value);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(value);}});});},









setItem:function(
key,
value,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiSet([[key,value]],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},







removeItem:function(
key,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiRemove([key],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},










mergeItem:function(
key,
value,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiMerge([[key,value]],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},










clear:function(callback){
return new Promise(function(resolve,reject){
RCTAsyncStorage.clear(function(error){
callback && callback(convertError(error));
if(error && convertError(error)){
reject(convertError(error));}else 
{
resolve(null);}});});},








getAllKeys:function(callback){
return new Promise(function(resolve,reject){
RCTAsyncStorage.getAllKeys(function(error,keys){
callback && callback(convertError(error),keys);
if(error){
reject(convertError(error));}else 
{
resolve(keys);}});});},





















multiGet:function(
keys,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiGet(keys,function(errors,result){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error,result);
if(errors){
reject(error);}else 
{
resolve(result);}});});},











multiSet:function(
keyValuePairs,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiSet(keyValuePairs,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});},








multiRemove:function(
keys,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiRemove(keys,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});},











multiMerge:function(
keyValuePairs,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiMerge(keyValuePairs,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});}};







if(!RCTAsyncStorage.multiMerge){
delete AsyncStorage.mergeItem;
delete AsyncStorage.multiMerge;}


function convertError(error){
if(!error){
return null;}

var out=new Error(error.message);
out.key = error.key;
return out;}


module.exports = AsyncStorage;
});
__d('RCTRenderingPerf',["ReactDefaultPerf","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactDefaultPerf=require('ReactDefaultPerf');

var invariant=require('invariant');






var perfModules=[];
var enabled=false;

var RCTRenderingPerf={

toggle:function(){
console.log('Render perfomance measurements enabled');
enabled = true;},


start:function(){
if(!enabled){
return;}


ReactDefaultPerf.start();
perfModules.forEach(function(module){return module.start();});},


stop:function(){
if(!enabled){
return;}


ReactDefaultPerf.stop();
ReactDefaultPerf.printInclusive();
ReactDefaultPerf.printWasted();

var totalRender=0;
var totalTime=0;
var measurements=ReactDefaultPerf.getLastMeasurements();
for(var ii=0;ii < measurements.length;ii++) {
var render=measurements[ii].render;
for(var nodeName in render) {
totalRender += render[nodeName];}

totalTime += measurements[ii].totalTime;}

console.log('Total time spent in render(): ' + totalRender + 'ms');

perfModules.forEach(function(module){return module.stop();});},


register:function(module){
invariant(
typeof module.start === 'function',
'Perf module should have start() function');

invariant(
typeof module.stop === 'function',
'Perf module should have stop() function');

perfModules.push(module);}};



module.exports = RCTRenderingPerf;
});
__d('ReactDefaultPerf',["DOMProperty","ReactDefaultPerfAnalysis","ReactMount","ReactPerf","performanceNow"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var DOMProperty=require('DOMProperty');
var ReactDefaultPerfAnalysis=require('ReactDefaultPerfAnalysis');
var ReactMount=require('ReactMount');
var ReactPerf=require('ReactPerf');

var performanceNow=require('performanceNow');

function roundFloat(val){
return Math.floor(val * 100) / 100;}


function addValue(obj,key,val){
obj[key] = (obj[key] || 0) + val;}


var ReactDefaultPerf={
_allMeasurements:[],
_mountStack:[0],
_injected:false,

start:function(){
if(!ReactDefaultPerf._injected){
ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);}


ReactDefaultPerf._allMeasurements.length = 0;
ReactPerf.enableMeasure = true;},


stop:function(){
ReactPerf.enableMeasure = false;},


getLastMeasurements:function(){
return ReactDefaultPerf._allMeasurements;},


printExclusive:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Component class name':item.componentName,
'Total inclusive time (ms)':roundFloat(item.inclusive),
'Exclusive mount time (ms)':roundFloat(item.exclusive),
'Exclusive render time (ms)':roundFloat(item.render),
'Mount time per instance (ms)':roundFloat(item.exclusive / item.count),
'Render time per instance (ms)':roundFloat(item.render / item.count),
'Instances':item.count};}));},






printInclusive:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Owner > component':item.componentName,
'Inclusive time (ms)':roundFloat(item.time),
'Instances':item.count};}));


console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



getMeasurementsSummaryMap:function(measurements){
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(
measurements,
true);

return summary.map(function(item){
return {
'Owner > component':item.componentName,
'Wasted time (ms)':item.time,
'Instances':item.count};});},




printWasted:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



printDOM:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getDOMSummary(measurements);
console.table(summary.map(function(item){
var result={};
result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
result['type'] = item.type;
result['args'] = JSON.stringify(item.args);
return result;}));

console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



_recordWrite:function(id,fnName,totalTime,args){

var writes=
ReactDefaultPerf.
_allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].
writes;
writes[id] = writes[id] || [];
writes[id].push({
type:fnName,
time:totalTime,
args:args});},



measure:function(moduleName,fnName,func){
return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key < _len;_key++) {args[_key] = arguments[_key];}
var totalTime;
var rv;
var start;

if(fnName === '_renderNewRootComponent' || 
fnName === 'flushBatchedUpdates'){




ReactDefaultPerf._allMeasurements.push({
exclusive:{},
inclusive:{},
render:{},
counts:{},
writes:{},
displayNames:{},
totalTime:0});

start = performanceNow();
rv = func.apply(this,args);
ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length - 1].
totalTime = performanceNow() - start;
return rv;}else 
if(fnName === '_mountImageIntoNode' || 
moduleName === 'ReactDOMIDOperations'){
start = performanceNow();
rv = func.apply(this,args);
totalTime = performanceNow() - start;

if(fnName === '_mountImageIntoNode'){
var mountID=ReactMount.getID(args[1]);
ReactDefaultPerf._recordWrite(mountID,fnName,totalTime,args[0]);}else 
if(fnName === 'dangerouslyProcessChildrenUpdates'){

args[0].forEach(function(update){
var writeArgs={};
if(update.fromIndex !== null){
writeArgs.fromIndex = update.fromIndex;}

if(update.toIndex !== null){
writeArgs.toIndex = update.toIndex;}

if(update.textContent !== null){
writeArgs.textContent = update.textContent;}

if(update.markupIndex !== null){
writeArgs.markup = args[1][update.markupIndex];}

ReactDefaultPerf._recordWrite(
update.parentID,
update.type,
totalTime,
writeArgs);});}else 


{

ReactDefaultPerf._recordWrite(
args[0],
fnName,
totalTime,
Array.prototype.slice.call(args,1));}


return rv;}else 
if(moduleName === 'ReactCompositeComponent' && (
fnName === 'mountComponent' || 
fnName === 'updateComponent' || 
fnName === '_renderValidatedComponent')){

if(typeof this._currentElement.type === 'string'){
return func.apply(this,args);}


var rootNodeID=fnName === 'mountComponent'?
args[0]:
this._rootNodeID;
var isRender=fnName === '_renderValidatedComponent';
var isMount=fnName === 'mountComponent';

var mountStack=ReactDefaultPerf._mountStack;
var entry=ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length - 1];


if(isRender){
addValue(entry.counts,rootNodeID,1);}else 
if(isMount){
mountStack.push(0);}


start = performanceNow();
rv = func.apply(this,args);
totalTime = performanceNow() - start;

if(isRender){
addValue(entry.render,rootNodeID,totalTime);}else 
if(isMount){
var subMountTime=mountStack.pop();
mountStack[mountStack.length - 1] += totalTime;
addValue(entry.exclusive,rootNodeID,totalTime - subMountTime);
addValue(entry.inclusive,rootNodeID,totalTime);}else 
{
addValue(entry.inclusive,rootNodeID,totalTime);}


entry.displayNames[rootNodeID] = {
current:this.getName(),
owner:this._currentElement._owner?
this._currentElement._owner.getName():
'<root>'};


return rv;}else 
{
return func.apply(this,args);}};}};





module.exports = ReactDefaultPerf;
});
__d('DOMProperty',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















var invariant=require('invariant');

function checkMask(value,bitmask){
return (value & bitmask) === bitmask;}


var DOMPropertyInjection={




MUST_USE_ATTRIBUTE:0x1,
MUST_USE_PROPERTY:0x2,
HAS_SIDE_EFFECTS:0x4,
HAS_BOOLEAN_VALUE:0x8,
HAS_NUMERIC_VALUE:0x10,
HAS_POSITIVE_NUMERIC_VALUE:0x20 | 0x10,
HAS_OVERLOADED_BOOLEAN_VALUE:0x40,


























injectDOMPropertyConfig:function(domPropertyConfig){
var Properties=domPropertyConfig.Properties || {};
var DOMAttributeNames=domPropertyConfig.DOMAttributeNames || {};
var DOMPropertyNames=domPropertyConfig.DOMPropertyNames || {};
var DOMMutationMethods=domPropertyConfig.DOMMutationMethods || {};

if(domPropertyConfig.isCustomAttribute){
DOMProperty._isCustomAttributeFunctions.push(
domPropertyConfig.isCustomAttribute);}



for(var propName in Properties) {
invariant(
!DOMProperty.isStandardName.hasOwnProperty(propName),
'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + 
'\'%s\' which has already been injected. You may be accidentally ' + 
'injecting the same DOM property config twice, or you may be ' + 
'injecting two configs that have conflicting property names.',
propName);


DOMProperty.isStandardName[propName] = true;

var lowerCased=propName.toLowerCase();
DOMProperty.getPossibleStandardName[lowerCased] = propName;

if(DOMAttributeNames.hasOwnProperty(propName)){
var attributeName=DOMAttributeNames[propName];
DOMProperty.getPossibleStandardName[attributeName] = propName;
DOMProperty.getAttributeName[propName] = attributeName;}else 
{
DOMProperty.getAttributeName[propName] = lowerCased;}


DOMProperty.getPropertyName[propName] = 
DOMPropertyNames.hasOwnProperty(propName)?
DOMPropertyNames[propName]:
propName;

if(DOMMutationMethods.hasOwnProperty(propName)){
DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];}else 
{
DOMProperty.getMutationMethod[propName] = null;}


var propConfig=Properties[propName];
DOMProperty.mustUseAttribute[propName] = 
checkMask(propConfig,DOMPropertyInjection.MUST_USE_ATTRIBUTE);
DOMProperty.mustUseProperty[propName] = 
checkMask(propConfig,DOMPropertyInjection.MUST_USE_PROPERTY);
DOMProperty.hasSideEffects[propName] = 
checkMask(propConfig,DOMPropertyInjection.HAS_SIDE_EFFECTS);
DOMProperty.hasBooleanValue[propName] = 
checkMask(propConfig,DOMPropertyInjection.HAS_BOOLEAN_VALUE);
DOMProperty.hasNumericValue[propName] = 
checkMask(propConfig,DOMPropertyInjection.HAS_NUMERIC_VALUE);
DOMProperty.hasPositiveNumericValue[propName] = 
checkMask(propConfig,DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);
DOMProperty.hasOverloadedBooleanValue[propName] = 
checkMask(propConfig,DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);

invariant(
!DOMProperty.mustUseAttribute[propName] || 
!DOMProperty.mustUseProperty[propName],
'DOMProperty: Cannot require using both attribute and property: %s',
propName);

invariant(
DOMProperty.mustUseProperty[propName] || 
!DOMProperty.hasSideEffects[propName],
'DOMProperty: Properties that have side effects must use property: %s',
propName);

invariant(
!!DOMProperty.hasBooleanValue[propName] + 
!!DOMProperty.hasNumericValue[propName] + 
!!DOMProperty.hasOverloadedBooleanValue[propName] <= 1,
'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 
'numeric value, but not a combination: %s',
propName);}}};




var defaultValueCache={};














var DOMProperty={

ID_ATTRIBUTE_NAME:'data-reactid',





isStandardName:{},






getPossibleStandardName:{},






getAttributeName:{},






getPropertyName:{},






getMutationMethod:{},





mustUseAttribute:{},






mustUseProperty:{},







hasSideEffects:{},





hasBooleanValue:{},






hasNumericValue:{},






hasPositiveNumericValue:{},







hasOverloadedBooleanValue:{},




_isCustomAttributeFunctions:[],





isCustomAttribute:function(attributeName){
for(var i=0;i < DOMProperty._isCustomAttributeFunctions.length;i++) {
var isCustomAttributeFn=DOMProperty._isCustomAttributeFunctions[i];
if(isCustomAttributeFn(attributeName)){
return true;}}


return false;},










getDefaultValueForProperty:function(nodeName,prop){
var nodeDefaults=defaultValueCache[nodeName];
var testElement;
if(!nodeDefaults){
defaultValueCache[nodeName] = nodeDefaults = {};}

if(!(prop in nodeDefaults)){
testElement = document.createElement(nodeName);
nodeDefaults[prop] = testElement[prop];}

return nodeDefaults[prop];},


injection:DOMPropertyInjection};


module.exports = DOMProperty;
});
__d('ReactDefaultPerfAnalysis',["Object.assign"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










assign=require('Object.assign');


var DONT_CARE_THRESHOLD=1.2;
var DOM_OPERATION_TYPES={
'_mountImageIntoNode':'set innerHTML',
INSERT_MARKUP:'set innerHTML',
MOVE_EXISTING:'move',
REMOVE_NODE:'remove',
TEXT_CONTENT:'set textContent',
'updatePropertyByID':'update attribute',
'deletePropertyByID':'delete attribute',
'updateStylesByID':'update styles',
'updateInnerHTMLByID':'set innerHTML',
'dangerouslyReplaceNodeWithMarkupByID':'replace'};


function getTotalTime(measurements){




var totalTime=0;
for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
totalTime += measurement.totalTime;}

return totalTime;}


function getDOMSummary(measurements){
var items=[];
for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var id;

for(id in measurement.writes) {
measurement.writes[id].forEach(function(write){
items.push({
id:id,
type:DOM_OPERATION_TYPES[write.type] || write.type,
args:write.args});});}}




return items;}


function getExclusiveSummary(measurements){
var candidates={};
var displayName;

for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var allIDs=assign(
{},
measurement.exclusive,
measurement.inclusive);


for(var id in allIDs) {
displayName = measurement.displayNames[id].current;

candidates[displayName] = candidates[displayName] || {
componentName:displayName,
inclusive:0,
exclusive:0,
render:0,
count:0};

if(measurement.render[id]){
candidates[displayName].render += measurement.render[id];}

if(measurement.exclusive[id]){
candidates[displayName].exclusive += measurement.exclusive[id];}

if(measurement.inclusive[id]){
candidates[displayName].inclusive += measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[displayName].count += measurement.counts[id];}}}





var arr=[];
for(displayName in candidates) {
if(candidates[displayName].exclusive >= DONT_CARE_THRESHOLD){
arr.push(candidates[displayName]);}}



arr.sort(function(a,b){
return b.exclusive - a.exclusive;});


return arr;}


function getInclusiveSummary(measurements,onlyClean){
var candidates={};
var inclusiveKey;

for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var allIDs=assign(
{},
measurement.exclusive,
measurement.inclusive);

var cleanComponents;

if(onlyClean){
cleanComponents = getUnchangedComponents(measurement);}


for(var id in allIDs) {
if(onlyClean && !cleanComponents[id]){
continue;}


var displayName=measurement.displayNames[id];




inclusiveKey = displayName.owner + ' > ' + displayName.current;

candidates[inclusiveKey] = candidates[inclusiveKey] || {
componentName:inclusiveKey,
time:0,
count:0};


if(measurement.inclusive[id]){
candidates[inclusiveKey].time += measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[inclusiveKey].count += measurement.counts[id];}}}





var arr=[];
for(inclusiveKey in candidates) {
if(candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD){
arr.push(candidates[inclusiveKey]);}}



arr.sort(function(a,b){
return b.time - a.time;});


return arr;}


function getUnchangedComponents(measurement){



var cleanComponents={};
var dirtyLeafIDs=Object.keys(measurement.writes);
var allIDs=assign({},measurement.exclusive,measurement.inclusive);

for(var id in allIDs) {
var isDirty=false;


for(var i=0;i < dirtyLeafIDs.length;i++) {
if(dirtyLeafIDs[i].indexOf(id) === 0){
isDirty = true;
break;}}


if(!isDirty && measurement.counts[id] > 0){
cleanComponents[id] = true;}}


return cleanComponents;}


var ReactDefaultPerfAnalysis={
getExclusiveSummary:getExclusiveSummary,
getInclusiveSummary:getInclusiveSummary,
getDOMSummary:getDOMSummary,
getTotalTime:getTotalTime};


module.exports = ReactDefaultPerfAnalysis;
});
__d('ReactMount',["DOMProperty","ReactBrowserEventEmitter","ReactCurrentOwner","ReactElement","ReactElementValidator","ReactEmptyComponent","ReactInstanceHandles","ReactInstanceMap","ReactMarkupChecksum","ReactPerf","ReactReconciler","ReactUpdateQueue","ReactUpdates","emptyObject","containsNode","getReactRootElementInContainer","instantiateReactComponent","invariant","setInnerHTML","shouldUpdateReactComponent","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var DOMProperty=require('DOMProperty');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMarkupChecksum=require('ReactMarkupChecksum');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');

var emptyObject=require('emptyObject');
var containsNode=require('containsNode');
var getReactRootElementInContainer=require('getReactRootElementInContainer');
var instantiateReactComponent=require('instantiateReactComponent');
var invariant=require('invariant');
var setInnerHTML=require('setInnerHTML');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;

var ATTR_NAME=DOMProperty.ID_ATTRIBUTE_NAME;
var nodeCache={};

var ELEMENT_NODE_TYPE=1;
var DOC_NODE_TYPE=9;


var instancesByReactRootID={};


var containersByReactRootID={};

if(__DEV__){

var rootElementsByReactRootID={};}



var findComponentRootReusableArray=[];







function firstDifferenceIndex(string1,string2){
var minLen=Math.min(string1.length,string2.length);
for(var i=0;i < minLen;i++) {
if(string1.charAt(i) !== string2.charAt(i)){
return i;}}


return string1.length === string2.length?-1:minLen;}






function getReactRootID(container){
var rootElement=getReactRootElementInContainer(container);
return rootElement && ReactMount.getID(rootElement);}












function getID(node){
var id=internalGetID(node);
if(id){
if(nodeCache.hasOwnProperty(id)){
var cached=nodeCache[id];
if(cached !== node){
invariant(
!isValid(cached,id),
'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
ATTR_NAME,id);


nodeCache[id] = node;}}else 

{
nodeCache[id] = node;}}



return id;}


function internalGetID(node){



return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';}








function setID(node,id){
var oldID=internalGetID(node);
if(oldID !== id){
delete nodeCache[oldID];}

node.setAttribute(ATTR_NAME,id);
nodeCache[id] = node;}









function getNode(id){
if(!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id],id)){
nodeCache[id] = ReactMount.findReactNodeByID(id);}

return nodeCache[id];}









function getNodeFromInstance(instance){
var id=ReactInstanceMap.get(instance)._rootNodeID;
if(ReactEmptyComponent.isNullComponentID(id)){
return null;}

if(!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id],id)){
nodeCache[id] = ReactMount.findReactNodeByID(id);}

return nodeCache[id];}












function isValid(node,id){
if(node){
invariant(
internalGetID(node) === id,
'ReactMount: Unexpected modification of `%s`',
ATTR_NAME);


var container=ReactMount.findReactContainerForID(id);
if(container && containsNode(container,node)){
return true;}}



return false;}







function purgeID(id){
delete nodeCache[id];}


var deepestNodeSoFar=null;
function findDeepestCachedAncestorImpl(ancestorID){
var ancestor=nodeCache[ancestorID];
if(ancestor && isValid(ancestor,ancestorID)){
deepestNodeSoFar = ancestor;}else 
{


return false;}}






function findDeepestCachedAncestor(targetID){
deepestNodeSoFar = null;
ReactInstanceHandles.traverseAncestors(
targetID,
findDeepestCachedAncestorImpl);


var foundNode=deepestNodeSoFar;
deepestNodeSoFar = null;
return foundNode;}











function mountComponentIntoNode(
componentInstance,
rootID,
container,
transaction,
shouldReuseMarkup){
var markup=ReactReconciler.mountComponent(
componentInstance,rootID,transaction,emptyObject);

componentInstance._isTopLevel = true;
ReactMount._mountImageIntoNode(markup,container,shouldReuseMarkup);}










function batchedMountComponentIntoNode(
componentInstance,
rootID,
container,
shouldReuseMarkup){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
transaction.perform(
mountComponentIntoNode,
null,
componentInstance,
rootID,
container,
transaction,
shouldReuseMarkup);

ReactUpdates.ReactReconcileTransaction.release(transaction);}




















var ReactMount={

_instancesByReactRootID:instancesByReactRootID,









scrollMonitor:function(container,renderCallback){
renderCallback();},









_updateRootComponent:function(
prevComponent,
nextElement,
container,
callback){
if(__DEV__){
ReactElementValidator.checkAndWarnForMutatedProps(nextElement);}


ReactMount.scrollMonitor(container,function(){
ReactUpdateQueue.enqueueElementInternal(prevComponent,nextElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent,callback);}});



if(__DEV__){

rootElementsByReactRootID[getReactRootID(container)] = 
getReactRootElementInContainer(container);}


return prevComponent;},









_registerComponent:function(nextComponent,container){
invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE),

'_registerComponent(...): Target container is not a DOM element.');


ReactBrowserEventEmitter.ensureScrollValueMonitoring();

var reactRootID=ReactMount.registerContainer(container);
instancesByReactRootID[reactRootID] = nextComponent;
return reactRootID;},









_renderNewRootComponent:function(
nextElement,
container,
shouldReuseMarkup)
{



warning(
ReactCurrentOwner.current == null,
'_renderNewRootComponent(): Render methods should be a pure function ' + 
'of props and state; triggering nested component updates from ' + 
'render is not allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate.');


var componentInstance=instantiateReactComponent(nextElement,null);
var reactRootID=ReactMount._registerComponent(
componentInstance,
container);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode,
componentInstance,
reactRootID,
container,
shouldReuseMarkup);


if(__DEV__){

rootElementsByReactRootID[reactRootID] = 
getReactRootElementInContainer(container);}


return componentInstance;},














render:function(nextElement,container,callback){
invariant(
ReactElement.isValidElement(nextElement),
'React.render(): Invalid component element.%s',

typeof nextElement === 'string'?
' Instead of passing an element string, make sure to instantiate ' + 
'it by passing it to React.createElement.':
typeof nextElement === 'function'?
' Instead of passing a component class, make sure to instantiate ' + 
'it by passing it to React.createElement.':

nextElement != null && nextElement.props !== undefined?
' This may be caused by unintentionally loading two independent ' + 
'copies of React.':
'');



var prevComponent=instancesByReactRootID[getReactRootID(container)];

if(prevComponent){
var prevElement=prevComponent._currentElement;
if(shouldUpdateReactComponent(prevElement,nextElement)){
return ReactMount._updateRootComponent(
prevComponent,
nextElement,
container,
callback).
getPublicInstance();}else 
{
ReactMount.unmountComponentAtNode(container);}}



var reactRootElement=getReactRootElementInContainer(container);
var containerHasReactMarkup=
reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

if(__DEV__){
if(!containerHasReactMarkup || reactRootElement.nextSibling){
var rootElementSibling=reactRootElement;
while(rootElementSibling) {
if(ReactMount.isRenderedByReact(rootElementSibling)){
warning(
false,
'render(): Target node has markup rendered by React, but there ' + 
'are unrelated nodes as well. This is most commonly caused by ' + 
'white-space inserted around server-rendered markup.');

break;}


rootElementSibling = rootElementSibling.nextSibling;}}}




var shouldReuseMarkup=containerHasReactMarkup && !prevComponent;

var component=ReactMount._renderNewRootComponent(
nextElement,
container,
shouldReuseMarkup).
getPublicInstance();
if(callback){
callback.call(component);}

return component;},











constructAndRenderComponent:function(constructor,props,container){
var element=ReactElement.createElement(constructor,props);
return ReactMount.render(element,container);},











constructAndRenderComponentByID:function(constructor,props,id){
var domNode=document.getElementById(id);
invariant(
domNode,
'Tried to get element with id of "%s" but it is not present on the page.',
id);

return ReactMount.constructAndRenderComponent(constructor,props,domNode);},










registerContainer:function(container){
var reactRootID=getReactRootID(container);
if(reactRootID){

reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);}

if(!reactRootID){

reactRootID = ReactInstanceHandles.createReactRootID();}

containersByReactRootID[reactRootID] = container;
return reactRootID;},









unmountComponentAtNode:function(container){




warning(
ReactCurrentOwner.current == null,
'unmountComponentAtNode(): Render methods should be a pure function of ' + 
'props and state; triggering nested component updates from render is ' + 
'not allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate.');


invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE),

'unmountComponentAtNode(...): Target container is not a DOM element.');


var reactRootID=getReactRootID(container);
var component=instancesByReactRootID[reactRootID];
if(!component){
return false;}

ReactMount.unmountComponentFromNode(component,container);
delete instancesByReactRootID[reactRootID];
delete containersByReactRootID[reactRootID];
if(__DEV__){
delete rootElementsByReactRootID[reactRootID];}

return true;},











unmountComponentFromNode:function(instance,container){
ReactReconciler.unmountComponent(instance);

if(container.nodeType === DOC_NODE_TYPE){
container = container.documentElement;}



while(container.lastChild) {
container.removeChild(container.lastChild);}},










findReactContainerForID:function(id){
var reactRootID=ReactInstanceHandles.getReactRootIDFromNodeID(id);
var container=containersByReactRootID[reactRootID];

if(__DEV__){
var rootElement=rootElementsByReactRootID[reactRootID];
if(rootElement && rootElement.parentNode !== container){
invariant(


internalGetID(rootElement) === reactRootID,
'ReactMount: Root element ID differed from reactRootID.');


var containerChild=container.firstChild;
if(containerChild && 
reactRootID === internalGetID(containerChild)){




rootElementsByReactRootID[reactRootID] = containerChild;}else 
{
warning(
false,
'ReactMount: Root element has been removed from its original ' + 
'container. New container:',rootElement.parentNode);}}}





return container;},








findReactNodeByID:function(id){
var reactRoot=ReactMount.findReactContainerForID(id);
return ReactMount.findComponentRoot(reactRoot,id);},









isRenderedByReact:function(node){
if(node.nodeType !== 1){

return false;}

var id=ReactMount.getID(node);
return id?id.charAt(0) === SEPARATOR:false;},










getFirstReactDOM:function(node){
var current=node;
while(current && current.parentNode !== current) {
if(ReactMount.isRenderedByReact(current)){
return current;}

current = current.parentNode;}

return null;},












findComponentRoot:function(ancestorNode,targetID){
var firstChildren=findComponentRootReusableArray;
var childIndex=0;

var deepestAncestor=findDeepestCachedAncestor(targetID) || ancestorNode;

firstChildren[0] = deepestAncestor.firstChild;
firstChildren.length = 1;

while(childIndex < firstChildren.length) {
var child=firstChildren[childIndex++];
var targetChild;

while(child) {
var childID=ReactMount.getID(child);
if(childID){





if(targetID === childID){
targetChild = child;}else 
if(ReactInstanceHandles.isAncestorIDOf(childID,targetID)){




firstChildren.length = childIndex = 0;
firstChildren.push(child.firstChild);}}else 


{





firstChildren.push(child.firstChild);}


child = child.nextSibling;}


if(targetChild){



firstChildren.length = 0;

return targetChild;}}



firstChildren.length = 0;

invariant(
false,
'findComponentRoot(..., %s): Unable to find element. This probably ' + 
'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 
'usually due to forgetting a <tbody> when using tables, nesting tags ' + 
'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 
'parent. ' + 
'Try inspecting the child nodes of the element with React ID `%s`.',
targetID,
ReactMount.getID(ancestorNode));},



_mountImageIntoNode:function(markup,container,shouldReuseMarkup){
invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE),

'mountComponentIntoNode(...): Target container is not valid.');


if(shouldReuseMarkup){
var rootElement=getReactRootElementInContainer(container);
if(ReactMarkupChecksum.canReuseMarkup(markup,rootElement)){
return;}else 
{
var checksum=rootElement.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

var rootMarkup=rootElement.outerHTML;
rootElement.setAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
checksum);


var diffIndex=firstDifferenceIndex(markup,rootMarkup);
var difference=' (client) ' + 
markup.substring(diffIndex - 20,diffIndex + 20) + 
'\n (server) ' + rootMarkup.substring(diffIndex - 20,diffIndex + 20);

invariant(
container.nodeType !== DOC_NODE_TYPE,
'You\'re trying to render a component to the document using ' + 
'server rendering but the checksum was invalid. This usually ' + 
'means you rendered a different component type or props on ' + 
'the client from the one on the server, or your render() ' + 
'methods are impure. React cannot handle this case due to ' + 
'cross-browser quirks by rendering at the document root. You ' + 
'should look for environment dependent code in your components ' + 
'and ensure the props are the same client and server side:\n%s',
difference);


if(__DEV__){
warning(
false,
'React attempted to reuse markup in a container but the ' + 
'checksum was invalid. This generally means that you are ' + 
'using server rendering and the markup generated on the ' + 
'server was not what the client was expecting. React injected ' + 
'new markup to compensate which works but you have lost many ' + 
'of the benefits of server rendering. Instead, figure out ' + 
'why the markup being generated is different on the client ' + 
'or server:\n%s',
difference);}}}





invariant(
container.nodeType !== DOC_NODE_TYPE,
'You\'re trying to render a component to the document but ' + 
'you didn\'t use server rendering. We can\'t do this ' + 
'without using server rendering due to cross-browser quirks. ' + 
'See React.renderToString() for server rendering.');


setInnerHTML(container,markup);},






getReactRootID:getReactRootID,

getID:getID,

setID:setID,

getNode:getNode,

getNodeFromInstance:getNodeFromInstance,

purgeID:purgeID};


ReactPerf.measureMethods(ReactMount,'ReactMount',{
_renderNewRootComponent:'_renderNewRootComponent',
_mountImageIntoNode:'_mountImageIntoNode'});


module.exports = ReactMount;
});
__d('ReactBrowserEventEmitter',["EventConstants","EventPluginHub","EventPluginRegistry","ReactEventEmitterMixin","ViewportMetrics","Object.assign","isEventSupported"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPluginRegistry=require('EventPluginRegistry');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ViewportMetrics=require('ViewportMetrics');

var assign=require('Object.assign');
var isEventSupported=require('isEventSupported');
























































var alreadyListeningTo={};
var isMonitoringScrollValue=false;
var reactTopListenersCounter=0;




var topEventMapping={
topBlur:'blur',
topChange:'change',
topClick:'click',
topCompositionEnd:'compositionend',
topCompositionStart:'compositionstart',
topCompositionUpdate:'compositionupdate',
topContextMenu:'contextmenu',
topCopy:'copy',
topCut:'cut',
topDoubleClick:'dblclick',
topDrag:'drag',
topDragEnd:'dragend',
topDragEnter:'dragenter',
topDragExit:'dragexit',
topDragLeave:'dragleave',
topDragOver:'dragover',
topDragStart:'dragstart',
topDrop:'drop',
topFocus:'focus',
topInput:'input',
topKeyDown:'keydown',
topKeyPress:'keypress',
topKeyUp:'keyup',
topMouseDown:'mousedown',
topMouseMove:'mousemove',
topMouseOut:'mouseout',
topMouseOver:'mouseover',
topMouseUp:'mouseup',
topPaste:'paste',
topScroll:'scroll',
topSelectionChange:'selectionchange',
topTextInput:'textInput',
topTouchCancel:'touchcancel',
topTouchEnd:'touchend',
topTouchMove:'touchmove',
topTouchStart:'touchstart',
topWheel:'wheel'};





var topListenersIDKey='_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt){


if(!Object.prototype.hasOwnProperty.call(mountAt,topListenersIDKey)){
mountAt[topListenersIDKey] = reactTopListenersCounter++;
alreadyListeningTo[mountAt[topListenersIDKey]] = {};}

return alreadyListeningTo[mountAt[topListenersIDKey]];}












var ReactBrowserEventEmitter=assign({},ReactEventEmitterMixin,{




ReactEventListener:null,

injection:{



injectReactEventListener:function(ReactEventListener){
ReactEventListener.setHandleTopLevel(
ReactBrowserEventEmitter.handleTopLevel);

ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;}},








setEnabled:function(enabled){
if(ReactBrowserEventEmitter.ReactEventListener){
ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);}},






isEnabled:function(){
return !!(
ReactBrowserEventEmitter.ReactEventListener && 
ReactBrowserEventEmitter.ReactEventListener.isEnabled());},
























listenTo:function(registrationName,contentDocumentHandle){
var mountAt=contentDocumentHandle;
var isListening=getListeningForDocument(mountAt);
var dependencies=EventPluginRegistry.
registrationNameDependencies[registrationName];

var topLevelTypes=EventConstants.topLevelTypes;
for(var i=0,l=dependencies.length;i < l;i++) {
var dependency=dependencies[i];
if(!(
isListening.hasOwnProperty(dependency) && 
isListening[dependency]))
{
if(dependency === topLevelTypes.topWheel){
if(isEventSupported('wheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'wheel',
mountAt);}else 

if(isEventSupported('mousewheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'mousewheel',
mountAt);}else 

{


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'DOMMouseScroll',
mountAt);}}else 


if(dependency === topLevelTypes.topScroll){

if(isEventSupported('scroll',true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topScroll,
'scroll',
mountAt);}else 

{
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topScroll,
'scroll',
ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);}}else 


if(dependency === topLevelTypes.topFocus || 
dependency === topLevelTypes.topBlur){

if(isEventSupported('focus',true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topFocus,
'focus',
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topBlur,
'blur',
mountAt);}else 

if(isEventSupported('focusin')){


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topFocus,
'focusin',
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topBlur,
'focusout',
mountAt);}




isListening[topLevelTypes.topBlur] = true;
isListening[topLevelTypes.topFocus] = true;}else 
if(topEventMapping.hasOwnProperty(dependency)){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
dependency,
topEventMapping[dependency],
mountAt);}



isListening[dependency] = true;}}},




trapBubbledEvent:function(topLevelType,handlerBaseName,handle){
return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelType,
handlerBaseName,
handle);},



trapCapturedEvent:function(topLevelType,handlerBaseName,handle){
return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelType,
handlerBaseName,
handle);},











ensureScrollValueMonitoring:function(){
if(!isMonitoringScrollValue){
var refresh=ViewportMetrics.refreshScrollValues;
ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
isMonitoringScrollValue = true;}},



eventNameDispatchConfigs:EventPluginHub.eventNameDispatchConfigs,

registrationNameModules:EventPluginHub.registrationNameModules,

putListener:EventPluginHub.putListener,

getListener:EventPluginHub.getListener,

deleteListener:EventPluginHub.deleteListener,

deleteAllListeners:EventPluginHub.deleteAllListeners});



module.exports = ReactBrowserEventEmitter;
});
__d('ViewportMetrics',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ViewportMetrics={

currentScrollLeft:0,

currentScrollTop:0,

refreshScrollValues:function(scrollPosition){
ViewportMetrics.currentScrollLeft = scrollPosition.x;
ViewportMetrics.currentScrollTop = scrollPosition.y;}};




module.exports = ViewportMetrics;
});
__d('isEventSupported',["ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ExecutionEnvironment=require('ExecutionEnvironment');

var useHasFeature;
if(ExecutionEnvironment.canUseDOM){
useHasFeature = 
document.implementation && 
document.implementation.hasFeature && 


document.implementation.hasFeature('','') !== true;}


/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix,capture){
if(!ExecutionEnvironment.canUseDOM || 
capture && !('addEventListener' in document)){
return false;}


var eventName='on' + eventNameSuffix;
var isSupported=(eventName in document);

if(!isSupported){
var element=document.createElement('div');
element.setAttribute(eventName,'return;');
isSupported = typeof element[eventName] === 'function';}


if(!isSupported && useHasFeature && eventNameSuffix === 'wheel'){

isSupported = document.implementation.hasFeature('Events.wheel','3.0');}


return isSupported;}


module.exports = isEventSupported;
});
__d('ReactMarkupChecksum',["adler32"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var adler32=require('adler32');

var ReactMarkupChecksum={
CHECKSUM_ATTR_NAME:'data-react-checksum',





addChecksumToMarkup:function(markup){
var checksum=adler32(markup);
return markup.replace(
'>',
' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">');},








canReuseMarkup:function(markup,element){
var existingChecksum=element.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

existingChecksum = existingChecksum && parseInt(existingChecksum,10);
var markupChecksum=adler32(markup);
return markupChecksum === existingChecksum;}};



module.exports = ReactMarkupChecksum;
});
__d('adler32',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var MOD=65521;





function adler32(data){
var a=1;
var b=0;
for(var i=0;i < data.length;i++) {
a = (a + data.charCodeAt(i)) % MOD;
b = (b + a) % MOD;}

return a | b << 16;}


module.exports = adler32;
});
__d('containsNode',["isTextNode"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











isTextNode=require('isTextNode');










function containsNode(outerNode,innerNode){
if(!outerNode || !innerNode){
return false;}else 
if(outerNode === innerNode){
return true;}else 
if(isTextNode(outerNode)){
return false;}else 
if(isTextNode(innerNode)){
return containsNode(outerNode,innerNode.parentNode);}else 
if(outerNode.contains){
return outerNode.contains(innerNode);}else 
if(outerNode.compareDocumentPosition){
return !!(outerNode.compareDocumentPosition(innerNode) & 16);}else 
{
return false;}}



module.exports = containsNode;
});
__d('isTextNode',["isNode"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











isNode=require('isNode');





function isTextNode(object){
return isNode(object) && object.nodeType == 3;}


module.exports = isTextNode;
});
__d('getReactRootElementInContainer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var DOC_NODE_TYPE=9;






function getReactRootElementInContainer(container){
if(!container){
return null;}


if(container.nodeType === DOC_NODE_TYPE){
return container.documentElement;}else 
{
return container.firstChild;}}



module.exports = getReactRootElementInContainer;
});
__d('setInnerHTML',["ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var ExecutionEnvironment=require('ExecutionEnvironment');

var WHITESPACE_TEST=/^[ \r\n\t\f]/;
var NONVISIBLE_TEST=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;









var setInnerHTML=function(node,html){
node.innerHTML = html;};



if(typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction){
setInnerHTML = function(node,html){
MSApp.execUnsafeLocalFunction(function(){
node.innerHTML = html;});};}




if(ExecutionEnvironment.canUseDOM){






var testElement=document.createElement('div');
testElement.innerHTML = ' ';
if(testElement.innerHTML === ''){
setInnerHTML = function(node,html){





if(node.parentNode){
node.parentNode.replaceChild(node,node);}






if(WHITESPACE_TEST.test(html) || 
html[0] === '<' && NONVISIBLE_TEST.test(html)){


node.innerHTML = '\uFEFF' + html;



var textNode=node.firstChild;
if(textNode.data.length === 1){
node.removeChild(textNode);}else 
{
textNode.deleteData(0,1);}}else 

{
node.innerHTML = html;}};}}





module.exports = setInnerHTML;
});
__d('AppStateIOS',["Map","NativeModules","RCTDeviceEventEmitter","logError","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var Map=require('Map');
var NativeModules=require('NativeModules');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTAppState=NativeModules.AppState;

var logError=require('logError');
var invariant=require('invariant');

var _eventHandlers={
change:new Map(),
memoryWarning:new Map()};





















































var AppStateIOS={





addEventListener:function(
type,
handler)
{
invariant(
['change','memoryWarning'].indexOf(type) !== -1,
'Trying to subscribe to unknown event: "%s"',type);

if(type === 'change'){
_eventHandlers[type].set(handler,RCTDeviceEventEmitter.addListener(
'appStateDidChange',
function(appStateData){
handler(appStateData.app_state);}));}else 


if(type === 'memoryWarning'){
_eventHandlers[type].set(handler,RCTDeviceEventEmitter.addListener(
'memoryWarning',
handler));}},







removeEventListener:function(
type,
handler)
{
invariant(
['change','memoryWarning'].indexOf(type) !== -1,
'Trying to remove listener for unknown event: "%s"',type);

if(!_eventHandlers[type].has(handler)){
return;}

_eventHandlers[type].get(handler).remove();
_eventHandlers[type].delete(handler);},






currentState:'active'};



RCTDeviceEventEmitter.addListener(
'appStateDidChange',
function(appStateData){
AppStateIOS.currentState = appStateData.app_state;});



RCTAppState.getCurrentAppState(
function(appStateData){
AppStateIOS.currentState = appStateData.app_state;},

logError);


module.exports = AppStateIOS;
});
__d('CameraRoll',["ReactPropTypes","NativeModules","createStrictShapeTypeChecker","deepFreezeAndThrowOnMutationInDev","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var ReactPropTypes=require('ReactPropTypes');
var RCTCameraRollManager=require('NativeModules').CameraRollManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var deepFreezeAndThrowOnMutationInDev=
require('deepFreezeAndThrowOnMutationInDev');
var invariant=require('invariant');

var GROUP_TYPES_OPTIONS=[
'Album',
'All',
'Event',
'Faces',
'Library',
'PhotoStream',
'SavedPhotos'];


var ASSET_TYPE_OPTIONS=[
'All',
'Videos',
'Photos'];




deepFreezeAndThrowOnMutationInDev(GROUP_TYPES_OPTIONS);
deepFreezeAndThrowOnMutationInDev(ASSET_TYPE_OPTIONS);




var getPhotosParamChecker=createStrictShapeTypeChecker({




first:ReactPropTypes.number.isRequired,





after:ReactPropTypes.string,




groupTypes:ReactPropTypes.oneOf(GROUP_TYPES_OPTIONS),





groupName:ReactPropTypes.string,




assetType:ReactPropTypes.oneOf(ASSET_TYPE_OPTIONS),




mimeTypes:ReactPropTypes.arrayOf(ReactPropTypes.string)});





var getPhotosReturnChecker=createStrictShapeTypeChecker({
edges:ReactPropTypes.arrayOf(createStrictShapeTypeChecker({
node:createStrictShapeTypeChecker({
type:ReactPropTypes.string.isRequired,
group_name:ReactPropTypes.string.isRequired,
image:createStrictShapeTypeChecker({
uri:ReactPropTypes.string.isRequired,
height:ReactPropTypes.number.isRequired,
width:ReactPropTypes.number.isRequired,
isStored:ReactPropTypes.bool}).
isRequired,
timestamp:ReactPropTypes.number.isRequired,
location:createStrictShapeTypeChecker({
latitude:ReactPropTypes.number,
longitude:ReactPropTypes.number,
altitude:ReactPropTypes.number,
heading:ReactPropTypes.number,
speed:ReactPropTypes.number})}).

isRequired})).
isRequired,
page_info:createStrictShapeTypeChecker({
has_next_page:ReactPropTypes.bool.isRequired,
start_cursor:ReactPropTypes.string,
end_cursor:ReactPropTypes.string}).
isRequired});var 


CameraRoll=(function(){function CameraRoll(){_classCallCheck(this,CameraRoll);}_createClass(CameraRoll,null,[{key:'saveImageWithTag',value:











function saveImageWithTag(tag,successCallback,errorCallback){
invariant(
typeof tag === 'string',
'CameraRoll.saveImageWithTag tag must be a valid string.');

RCTCameraRollManager.saveImageWithTag(
tag,
function(imageTag){
successCallback && successCallback(imageTag);},

function(errorMessage){
errorCallback && errorCallback(errorMessage);});}},{key:'getPhotos',value:












function getPhotos(params,callback,errorCallback){
var metaCallback=callback;
if(__DEV__){
getPhotosParamChecker({params:params},'params','CameraRoll.getPhotos');
invariant(
typeof callback === 'function',
'CameraRoll.getPhotos callback must be a valid function.');

invariant(
typeof errorCallback === 'function',
'CameraRoll.getPhotos errorCallback must be a valid function.');}


if(__DEV__){
metaCallback = function(response){
getPhotosReturnChecker(
{response:response},
'response',
'CameraRoll.getPhotos callback');

callback(response);};}


RCTCameraRollManager.getPhotos(params,metaCallback,errorCallback);}}]);return CameraRoll;})();



CameraRoll.GroupTypesOptions = GROUP_TYPES_OPTIONS;
CameraRoll.AssetTypeOptions = ASSET_TYPE_OPTIONS;

module.exports = CameraRoll;
});
__d('ImagePickerIOS',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var RCTImagePicker=require('NativeModules').ImagePickerIOS;

var ImagePickerIOS={
canRecordVideos:function(callback){
return RCTImagePicker.canRecordVideos(callback);},

canUseCamera:function(callback){
return RCTImagePicker.canUseCamera(callback);},

openCameraDialog:function(config,successCallback,cancelCallback){
config = _extends({
videoMode:false},
config);

return RCTImagePicker.openCameraDialog(config,successCallback,cancelCallback);},

openSelectDialog:function(config,successCallback,cancelCallback){
config = _extends({
showImages:true,
showVideos:false},
config);

return RCTImagePicker.openSelectDialog(config,successCallback,cancelCallback);}};



module.exports = ImagePickerIOS;
});
__d('LayoutAnimation',["ReactPropTypes","NativeModules","createStrictShapeTypeChecker","keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');
var RCTUIManager=require('NativeModules').UIManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var keyMirror=require('keyMirror');

var TypesEnum={
spring:true,
linear:true,
easeInEaseOut:true,
easeIn:true,
easeOut:true,
keyboard:true};

var Types=keyMirror(TypesEnum);

var PropertiesEnum={
opacity:true,
scaleXY:true};

var Properties=keyMirror(PropertiesEnum);

var animChecker=createStrictShapeTypeChecker({
duration:PropTypes.number,
delay:PropTypes.number,
springDamping:PropTypes.number,
initialVelocity:PropTypes.number,
type:PropTypes.oneOf(
Object.keys(Types)),

property:PropTypes.oneOf(
Object.keys(Properties))});












var configChecker=createStrictShapeTypeChecker({
duration:PropTypes.number.isRequired,
create:animChecker,
update:animChecker,
delete:animChecker});









function configureNext(config,onAnimationDidEnd,onError){
configChecker({config:config},'config','LayoutAnimation.configureNext');
RCTUIManager.configureNextLayoutAnimation(config,onAnimationDidEnd,onError);}


function create(duration,type,creationProp){
return {
duration:duration,
create:{
type:type,
property:creationProp},

update:{
type:type}};}




var Presets={
easeInEaseOut:create(
300,Types.easeInEaseOut,Properties.opacity),

linear:create(
500,Types.linear,Properties.opacity),

spring:{
duration:700,
create:{
type:Types.linear,
property:Properties.opacity},

update:{
type:Types.spring,
springDamping:0.4}}};




var LayoutAnimation={
configureNext:configureNext,
create:create,
Types:Types,
Properties:Properties,
configChecker:configChecker,
Presets:Presets,
easeInEaseOut:configureNext.bind(
null,Presets.easeInEaseOut),

linear:configureNext.bind(
null,Presets.linear),

spring:configureNext.bind(
null,Presets.spring)};



module.exports = LayoutAnimation;
});
__d('LinkingIOS',["RCTDeviceEventEmitter","NativeModules","Map","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLinkingManager=require('NativeModules').LinkingManager;
var Map=require('Map');
var invariant=require('invariant');

var _notifHandlers=new Map();
var _initialURL=RCTLinkingManager && 
RCTLinkingManager.initialURL;

var DEVICE_NOTIF_EVENT='openURL';var 





























































LinkingIOS=(function(){function LinkingIOS(){_classCallCheck(this,LinkingIOS);}_createClass(LinkingIOS,null,[{key:'addEventListener',value:




function addEventListener(type,handler){
invariant(
type === 'url',
'LinkingIOS only supports `url` events');

var listener=RCTDeviceEventEmitter.addListener(
DEVICE_NOTIF_EVENT,
handler);

_notifHandlers.set(handler,listener);}},{key:'removeEventListener',value:





function removeEventListener(type,handler){
invariant(
type === 'url',
'LinkingIOS only supports `url` events');

var listener=_notifHandlers.get(handler);
if(!listener){
return;}

listener.remove();
_notifHandlers.delete(handler);}},{key:'openURL',value:





function openURL(url){
invariant(
typeof url === 'string',
'Invalid url: should be a string');

RCTLinkingManager.openURL(url);}},{key:'canOpenURL',value:






function canOpenURL(url,callback){
invariant(
typeof url === 'string',
'Invalid url: should be a string');

invariant(
typeof callback === 'function',
'A valid callback function is required');

RCTLinkingManager.canOpenURL(url,callback);}},{key:'popInitialURL',value:






function popInitialURL(){
var initialURL=_initialURL;
_initialURL = null;
return initialURL;}}]);return LinkingIOS;})();



module.exports = LinkingIOS;
});
__d('NetInfo',["Map","NativeModules","Platform","RCTDeviceEventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var Map=require('Map');
var NativeModules=require('NativeModules');
var Platform=require('Platform');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');

if(Platform.OS === 'ios'){
var RCTNetInfo=NativeModules.Reachability;}else 
if(Platform.OS === 'android'){
var RCTNetInfo=NativeModules.NetInfo;}


var DEVICE_REACHABILITY_EVENT='reachabilityDidChange';






















































































































var _subscriptions=new Map();

var NetInfo={
addEventListener:function(
eventName,
handler)
{
var listener=RCTDeviceEventEmitter.addListener(
DEVICE_REACHABILITY_EVENT,
function(appStateData){
handler(appStateData.network_reachability);});


_subscriptions.set(handler,listener);},


removeEventListener:function(
eventName,
handler)
{
var listener=_subscriptions.get(handler);
if(!listener){
return;}

listener.remove();
_subscriptions.delete(handler);},


fetch:function(){
return new Promise(function(resolve,reject){
RCTNetInfo.getCurrentReachability(
function(resp){
resolve(resp.network_reachability);},

reject);});},




isConnected:{},

isConnectionMetered:{}};


if(Platform.OS === 'ios'){
var _isConnected=function(
reachability)
{
return reachability !== 'none' && 
reachability !== 'unknown';};}else 

if(Platform.OS === 'android'){
var _isConnected=function(
connectionType)
{
return connectionType !== 'NONE' && connectionType !== 'UNKNOWN';};}



var _isConnectedSubscriptions=new Map();

NetInfo.isConnected = {
addEventListener:function(
eventName,
handler)
{
var listener=function(connection){
handler(_isConnected(connection));};

_isConnectedSubscriptions.set(handler,listener);
NetInfo.addEventListener(
eventName,
listener);},



removeEventListener:function(
eventName,
handler)
{
var listener=_isConnectedSubscriptions.get(handler);
NetInfo.removeEventListener(
eventName,
listener);

_isConnectedSubscriptions.delete(handler);},


fetch:function(){
return NetInfo.fetch().then(
function(connection){return _isConnected(connection);});}};




if(Platform.OS === 'android'){
NetInfo.isConnectionMetered = function(callback){
RCTNetInfo.isConnectionMetered(function(_isMetered){
callback(_isMetered);});};}




module.exports = NetInfo;
});
__d('PushNotificationIOS',["Map","RCTDeviceEventEmitter","NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var Map=require('Map');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTPushNotificationManager=require('NativeModules').PushNotificationManager;
var invariant=require('invariant');

var _notifHandlers=new Map();
var _initialNotification=RCTPushNotificationManager && 
RCTPushNotificationManager.initialNotification;

var DEVICE_NOTIF_EVENT='remoteNotificationReceived';
var NOTIF_REGISTER_EVENT='remoteNotificationsRegistered';var 








PushNotificationIOS=(function(){_createClass(PushNotificationIOS,null,[{key:'setApplicationIconBadgeNumber',value:








function setApplicationIconBadgeNumber(number){
RCTPushNotificationManager.setApplicationIconBadgeNumber(number);}},{key:'getApplicationIconBadgeNumber',value:





function getApplicationIconBadgeNumber(callback){
RCTPushNotificationManager.getApplicationIconBadgeNumber(callback);}},{key:'addEventListener',value:













function addEventListener(type,handler){
invariant(
type === 'notification' || type === 'register',
'PushNotificationIOS only supports `notification` and `register` events');

var listener;
if(type === 'notification'){
listener = RCTDeviceEventEmitter.addListener(
DEVICE_NOTIF_EVENT,
function(notifData){
handler(new PushNotificationIOS(notifData));});}else 


if(type === 'register'){
listener = RCTDeviceEventEmitter.addListener(
NOTIF_REGISTER_EVENT,
function(registrationInfo){
handler(registrationInfo.deviceToken);});}



_notifHandlers.set(handler,listener);}},{key:'requestPermissions',value:
















function requestPermissions(permissions)



{
var requestedPermissions={};
if(permissions){
requestedPermissions = {
alert:!!permissions.alert,
badge:!!permissions.badge,
sound:!!permissions.sound};}else 

{
requestedPermissions = {
alert:true,
badge:true,
sound:true};}


RCTPushNotificationManager.requestPermissions(requestedPermissions);}},{key:'abandonPermissions',value:










function abandonPermissions(){
RCTPushNotificationManager.abandonPermissions();}},{key:'checkPermissions',value:










function checkPermissions(callback){
invariant(
typeof callback === 'function',
'Must provide a valid callback');

RCTPushNotificationManager.checkPermissions(callback);}},{key:'removeEventListener',value:






function removeEventListener(type,handler){
invariant(
type === 'notification' || type === 'register',
'PushNotificationIOS only supports `notification` and `register` events');

var listener=_notifHandlers.get(handler);
if(!listener){
return;}

listener.remove();
_notifHandlers.delete(handler);}},{key:'popInitialNotification',value:










function popInitialNotification(){
var initialNotification=_initialNotification && 
new PushNotificationIOS(_initialNotification);
_initialNotification = null;
return initialNotification;}}]);







function PushNotificationIOS(nativeNotif){var _this=this;_classCallCheck(this,PushNotificationIOS);
this._data = {};





Object.keys(nativeNotif).forEach(function(notifKey){
var notifVal=nativeNotif[notifKey];
if(notifKey === 'aps'){
_this._alert = notifVal.alert;
_this._sound = notifVal.sound;
_this._badgeCount = notifVal.badge;}else 
{
_this._data[notifKey] = notifVal;}});}_createClass(PushNotificationIOS,[{key:'getMessage',value:







function getMessage(){

return this._alert;}},{key:'getSound',value:





function getSound(){
return this._sound;}},{key:'getAlert',value:





function getAlert(){
return this._alert;}},{key:'getBadgeCount',value:





function getBadgeCount(){
return this._badgeCount;}},{key:'getData',value:





function getData(){
return this._data;}}]);return PushNotificationIOS;})();



module.exports = PushNotificationIOS;
});
__d('Settings',["RCTDeviceEventEmitter","NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTSettingsManager=require('NativeModules').SettingsManager;

var invariant=require('invariant');

var subscriptions=[];

var Settings={
_settings:RCTSettingsManager && RCTSettingsManager.settings,

get:function(key){
return this._settings[key];},


set:function(settings){
this._settings = Object.assign(this._settings,settings);
RCTSettingsManager.setValues(settings);},


watchKeys:function(keys,callback){
if(typeof keys === 'string'){
keys = [keys];}


invariant(
Array.isArray(keys),
'keys should be a string or array of strings');


var sid=subscriptions.length;
subscriptions.push({keys:keys,callback:callback});
return sid;},


clearWatch:function(watchId){
if(watchId < subscriptions.length){
subscriptions[watchId] = {keys:[],callback:null};}},



_sendObservations:function(body){var _this=this;
Object.keys(body).forEach(function(key){
var newValue=body[key];
var didChange=_this._settings[key] !== newValue;
_this._settings[key] = newValue;

if(didChange){
subscriptions.forEach(function(sub){
if(sub.keys.indexOf(key) !== -1 && sub.callback){
sub.callback();}});}});}};







RCTDeviceEventEmitter.addListener(
'settingsUpdated',
Settings._sendObservations.bind(Settings));


module.exports = Settings;
});
__d('StatusBarIOS',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTStatusBarManager=require('NativeModules').StatusBarManager;












var StatusBarIOS={

setStyle:function(style,animated){
animated = animated || false;
RCTStatusBarManager.setStyle(style,animated);},


setHidden:function(hidden,animation){
animation = animation || 'none';
RCTStatusBarManager.setHidden(hidden,animation);}};



module.exports = StatusBarIOS;
});
__d('VibrationIOS',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTVibration=require('NativeModules').Vibration;

var invariant=require('invariant');












var VibrationIOS={
vibrate:function(){
invariant(
arguments[0] === undefined,
'Vibration patterns not supported.');

RCTVibration.vibrate();}};



module.exports = VibrationIOS;
});
__d('RCTNativeAppEventEmitter',["EventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');

var RCTNativeAppEventEmitter=new EventEmitter();

module.exports = RCTNativeAppEventEmitter;
});
__d('LinkedStateMixin',["ReactLink","ReactStateSetters"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactLink=require('ReactLink');
var ReactStateSetters=require('ReactStateSetters');




var LinkedStateMixin={









linkState:function(key){
return new ReactLink(
this.state[key],
ReactStateSetters.createStateKeySetter(this,key));}};




module.exports = LinkedStateMixin;
});
__d('ReactLink',["React"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




































var React=require('React');





function ReactLink(value,requestChange){
this.value = value;
this.requestChange = requestChange;}










function createLinkTypeChecker(linkType){
var shapes={
value:typeof linkType === 'undefined'?
React.PropTypes.any.isRequired:
linkType.isRequired,
requestChange:React.PropTypes.func.isRequired};

return React.PropTypes.shape(shapes);}


ReactLink.PropTypes = {
link:createLinkTypeChecker};


module.exports = ReactLink;
});
__d('ReactStateSetters',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactStateSetters={










createStateSetter:function(component,funcReturningState){
return function(a,b,c,d,e,f){
var partialState=funcReturningState.call(component,a,b,c,d,e,f);
if(partialState){
component.setState(partialState);}};},















createStateKeySetter:function(component,key){

var cache=component.__keySetters || (component.__keySetters = {});
return cache[key] || (cache[key] = createStateKeySetter(component,key));}};



function createStateKeySetter(component,key){



var partialState={};
return function stateKeySetter(value){
partialState[key] = value;
component.setState(partialState);};}



ReactStateSetters.Mixin = {
















createStateSetter:function(funcReturningState){
return ReactStateSetters.createStateSetter(this,funcReturningState);},

















createStateKeySetter:function(key){
return ReactStateSetters.createStateKeySetter(this,key);}};



module.exports = ReactStateSetters;
});
__d('ReactComponentWithPureRenderMixin',["shallowEqual"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var shallowEqual=require('shallowEqual');

























var ReactComponentWithPureRenderMixin={
shouldComponentUpdate:function(nextProps,nextState){
return !shallowEqual(this.props,nextProps) || 
!shallowEqual(this.state,nextState);}};



module.exports = ReactComponentWithPureRenderMixin;
});
__d('shallowEqual',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















function shallowEqual(objA,objB){
if(objA === objB){
return true;}

var key;

for(key in objA) {
if(objA.hasOwnProperty(key) && (
!objB.hasOwnProperty(key) || objA[key] !== objB[key])){
return false;}}



for(key in objB) {
if(objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)){
return false;}}


return true;}


module.exports = shallowEqual;
});
__d('update',["Object.assign","keyOf","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var assign=require('Object.assign');
var keyOf=require('keyOf');
var invariant=require('invariant');
var hasOwnProperty=({}).hasOwnProperty;

function shallowCopy(x){
if(Array.isArray(x)){
return x.concat();}else 
if(x && typeof x === 'object'){
return assign(new x.constructor(),x);}else 
{
return x;}}



var COMMAND_PUSH=keyOf({$push:null});
var COMMAND_UNSHIFT=keyOf({$unshift:null});
var COMMAND_SPLICE=keyOf({$splice:null});
var COMMAND_SET=keyOf({$set:null});
var COMMAND_MERGE=keyOf({$merge:null});
var COMMAND_APPLY=keyOf({$apply:null});

var ALL_COMMANDS_LIST=[
COMMAND_PUSH,
COMMAND_UNSHIFT,
COMMAND_SPLICE,
COMMAND_SET,
COMMAND_MERGE,
COMMAND_APPLY];


var ALL_COMMANDS_SET={};

ALL_COMMANDS_LIST.forEach(function(command){
ALL_COMMANDS_SET[command] = true;});


function invariantArrayCase(value,spec,command){
invariant(
Array.isArray(value),
'update(): expected target of %s to be an array; got %s.',
command,
value);

var specValue=spec[command];
invariant(
Array.isArray(specValue),
'update(): expected spec of %s to be an array; got %s. ' + 
'Did you forget to wrap your parameter in an array?',
command,
specValue);}



function update(value,spec){
invariant(
typeof spec === 'object',
'update(): You provided a key path to update() that did not contain one ' + 
'of %s. Did you forget to include {%s: ...}?',
ALL_COMMANDS_LIST.join(', '),
COMMAND_SET);


if(hasOwnProperty.call(spec,COMMAND_SET)){
invariant(
Object.keys(spec).length === 1,
'Cannot have more than one key in an object with %s',
COMMAND_SET);


return spec[COMMAND_SET];}


var nextValue=shallowCopy(value);

if(hasOwnProperty.call(spec,COMMAND_MERGE)){
var mergeObj=spec[COMMAND_MERGE];
invariant(
mergeObj && typeof mergeObj === 'object',
'update(): %s expects a spec of type \'object\'; got %s',
COMMAND_MERGE,
mergeObj);

invariant(
nextValue && typeof nextValue === 'object',
'update(): %s expects a target of type \'object\'; got %s',
COMMAND_MERGE,
nextValue);

assign(nextValue,spec[COMMAND_MERGE]);}


if(hasOwnProperty.call(spec,COMMAND_PUSH)){
invariantArrayCase(value,spec,COMMAND_PUSH);
spec[COMMAND_PUSH].forEach(function(item){
nextValue.push(item);});}



if(hasOwnProperty.call(spec,COMMAND_UNSHIFT)){
invariantArrayCase(value,spec,COMMAND_UNSHIFT);
spec[COMMAND_UNSHIFT].forEach(function(item){
nextValue.unshift(item);});}



if(hasOwnProperty.call(spec,COMMAND_SPLICE)){
invariant(
Array.isArray(value),
'Expected %s target to be an array; got %s',
COMMAND_SPLICE,
value);

invariant(
Array.isArray(spec[COMMAND_SPLICE]),
'update(): expected spec of %s to be an array of arrays; got %s. ' + 
'Did you forget to wrap your parameters in an array?',
COMMAND_SPLICE,
spec[COMMAND_SPLICE]);

spec[COMMAND_SPLICE].forEach(function(args){
invariant(
Array.isArray(args),
'update(): expected spec of %s to be an array of arrays; got %s. ' + 
'Did you forget to wrap your parameters in an array?',
COMMAND_SPLICE,
spec[COMMAND_SPLICE]);

nextValue.splice.apply(nextValue,args);});}



if(hasOwnProperty.call(spec,COMMAND_APPLY)){
invariant(
typeof spec[COMMAND_APPLY] === 'function',
'update(): expected spec of %s to be a function; got %s.',
COMMAND_APPLY,
spec[COMMAND_APPLY]);

nextValue = spec[COMMAND_APPLY](nextValue);}


for(var k in spec) {
if(!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])){
nextValue[k] = update(value[k],spec[k]);}}



return nextValue;}


module.exports = update;
});
__d('ReactTestUtils',["EventConstants","EventPluginHub","EventPropagators","React","ReactElement","ReactEmptyComponent","ReactBrowserEventEmitter","ReactCompositeComponent","ReactInstanceHandles","ReactInstanceMap","ReactMount","ReactUpdates","SyntheticEvent","Object.assign"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPropagators=require('EventPropagators');
var React=require('React');
var ReactElement=require('ReactElement');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMount=require('ReactMount');
var ReactUpdates=require('ReactUpdates');
var SyntheticEvent=require('SyntheticEvent');

var assign=require('Object.assign');

var topLevelTypes=EventConstants.topLevelTypes;

function Event(suffix){}










var ReactTestUtils={
renderIntoDocument:function(instance){
var div=document.createElement('div');





return React.render(instance,div);},


isElement:function(element){
return ReactElement.isValidElement(element);},


isElementOfType:function(inst,convenienceConstructor){
return (
ReactElement.isValidElement(inst) && 
inst.type === convenienceConstructor);},



isDOMComponent:function(inst){


return !!(inst && inst.tagName && inst.getDOMNode);},


isDOMComponentElement:function(inst){
return !!(inst && 
ReactElement.isValidElement(inst) && 
!!inst.tagName);},


isCompositeComponent:function(inst){
return typeof inst.render === 'function' && 
typeof inst.setState === 'function';},


isCompositeComponentWithType:function(inst,type){
return !!(ReactTestUtils.isCompositeComponent(inst) && 
inst.constructor === type);},


isCompositeComponentElement:function(inst){
if(!ReactElement.isValidElement(inst)){
return false;}



var prototype=inst.type.prototype;
return (
typeof prototype.render === 'function' && 
typeof prototype.setState === 'function');},



isCompositeComponentElementWithType:function(inst,type){
return !!(ReactTestUtils.isCompositeComponentElement(inst) && 
inst.constructor === type);},


getRenderedChildOfCompositeComponent:function(inst){
if(!ReactTestUtils.isCompositeComponent(inst)){
return null;}

var internalInstance=ReactInstanceMap.get(inst);
return internalInstance._renderedComponent.getPublicInstance();},


findAllInRenderedTree:function(inst,test){
if(!inst){
return [];}

var ret=test(inst)?[inst]:[];
if(ReactTestUtils.isDOMComponent(inst)){
var internalInstance=ReactInstanceMap.get(inst);
var renderedChildren=internalInstance.
_renderedComponent.
_renderedChildren;
var key;
for(key in renderedChildren) {
if(!renderedChildren.hasOwnProperty(key)){
continue;}

if(!renderedChildren[key].getPublicInstance){
continue;}

ret = ret.concat(
ReactTestUtils.findAllInRenderedTree(
renderedChildren[key].getPublicInstance(),
test));}}else 



if(ReactTestUtils.isCompositeComponent(inst)){
ret = ret.concat(
ReactTestUtils.findAllInRenderedTree(
ReactTestUtils.getRenderedChildOfCompositeComponent(inst),
test));}



return ret;},







scryRenderedDOMComponentsWithClass:function(root,className){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
var instClassName=inst.props.className;
return ReactTestUtils.isDOMComponent(inst) && (
instClassName && 
(' ' + instClassName + ' ').indexOf(' ' + className + ' ') !== -1);});},










findRenderedDOMComponentWithClass:function(root,className){
var all=
ReactTestUtils.scryRenderedDOMComponentsWithClass(root,className);
if(all.length !== 1){
throw new Error('Did not find exactly one match ' + 
'(found: ' + all.length + ') for class:' + className);}


return all[0];},








scryRenderedDOMComponentsWithTag:function(root,tagName){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
return ReactTestUtils.isDOMComponent(inst) && 
inst.tagName === tagName.toUpperCase();});},









findRenderedDOMComponentWithTag:function(root,tagName){
var all=ReactTestUtils.scryRenderedDOMComponentsWithTag(root,tagName);
if(all.length !== 1){
throw new Error('Did not find exactly one match for tag:' + tagName);}

return all[0];},







scryRenderedComponentsWithType:function(root,componentType){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
return ReactTestUtils.isCompositeComponentWithType(
inst,
componentType);});},










findRenderedComponentWithType:function(root,componentType){
var all=ReactTestUtils.scryRenderedComponentsWithType(
root,
componentType);

if(all.length !== 1){
throw new Error(
'Did not find exactly one match for componentType:' + componentType);}


return all[0];},















mockComponent:function(module,mockTagName){
mockTagName = mockTagName || module.mockTagName || "div";

module.prototype.render.mockImplementation(function(){
return React.createElement(
mockTagName,
null,
this.props.children);});



return this;},









simulateNativeEventOnNode:function(topLevelType,node,fakeNativeEvent){
fakeNativeEvent.target = node;
ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(
topLevelType,
fakeNativeEvent);},










simulateNativeEventOnDOMComponent:function(
topLevelType,
comp,
fakeNativeEvent){
ReactTestUtils.simulateNativeEventOnNode(
topLevelType,
comp.getDOMNode(),
fakeNativeEvent);},



nativeTouchData:function(x,y){
return {
touches:[
{pageX:x,pageY:y}]};},




createRenderer:function(){
return new ReactShallowRenderer();},


Simulate:null,
SimulateNative:{}};





var ReactShallowRenderer=function(){
this._instance = null;};


ReactShallowRenderer.prototype.getRenderOutput = function(){
return (
this._instance && this._instance._renderedComponent && 
this._instance._renderedComponent._renderedOutput || 
null);};



var NoopInternalComponent=function(element){
this._renderedOutput = element;
this._currentElement = element === null || element === false?
ReactEmptyComponent.emptyElement:
element;};


NoopInternalComponent.prototype = {

mountComponent:function(){},


receiveComponent:function(element){
this._renderedOutput = element;
this._currentElement = element === null || element === false?
ReactEmptyComponent.emptyElement:
element;},


unmountComponent:function(){}};




var ShallowComponentWrapper=function(){};
assign(
ShallowComponentWrapper.prototype,
ReactCompositeComponent.Mixin,{
_instantiateReactComponent:function(element){
return new NoopInternalComponent(element);},

_replaceNodeWithMarkupByID:function(){},
_renderValidatedComponent:
ReactCompositeComponent.Mixin.
_renderValidatedComponentWithoutOwnerOrContext});



ReactShallowRenderer.prototype.render = function(element,context){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
this._render(element,transaction,context);
ReactUpdates.ReactReconcileTransaction.release(transaction);};


ReactShallowRenderer.prototype.unmount = function(){
if(this._instance){
this._instance.unmountComponent();}};



ReactShallowRenderer.prototype._render = function(element,transaction,context){
if(!this._instance){
var rootID=ReactInstanceHandles.createReactRootID();
var instance=new ShallowComponentWrapper(element.type);
instance.construct(element);

instance.mountComponent(rootID,transaction,context);

this._instance = instance;}else 
{
this._instance.receiveComponent(element,transaction,context);}};











function makeSimulator(eventType){
return function(domComponentOrNode,eventData){
var node;
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
node = domComponentOrNode.getDOMNode();}else 
if(domComponentOrNode.tagName){
node = domComponentOrNode;}


var fakeNativeEvent=new Event();
fakeNativeEvent.target = node;


var event=new SyntheticEvent(
ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType],
ReactMount.getID(node),
fakeNativeEvent);

assign(event,eventData);
EventPropagators.accumulateTwoPhaseDispatches(event);

ReactUpdates.batchedUpdates(function(){
EventPluginHub.enqueueEvents(event);
EventPluginHub.processEventQueue();});};}




function buildSimulators(){
ReactTestUtils.Simulate = {};

var eventType;
for(eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs) {




ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);}}




var oldInjectEventPluginOrder=EventPluginHub.injection.injectEventPluginOrder;
EventPluginHub.injection.injectEventPluginOrder = function(){
oldInjectEventPluginOrder.apply(this,arguments);
buildSimulators();};

var oldInjectEventPlugins=EventPluginHub.injection.injectEventPluginsByName;
EventPluginHub.injection.injectEventPluginsByName = function(){
oldInjectEventPlugins.apply(this,arguments);
buildSimulators();};


buildSimulators();

















function makeNativeSimulator(eventType){
return function(domComponentOrNode,nativeEventData){
var fakeNativeEvent=new Event(eventType);
assign(fakeNativeEvent,nativeEventData);
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
ReactTestUtils.simulateNativeEventOnDOMComponent(
eventType,
domComponentOrNode,
fakeNativeEvent);}else 

if(!!domComponentOrNode.tagName){

ReactTestUtils.simulateNativeEventOnNode(
eventType,
domComponentOrNode,
fakeNativeEvent);}};}





var eventType;
for(eventType in topLevelTypes) {

var convenienceName=eventType.indexOf('top') === 0?
eventType.charAt(3).toLowerCase() + eventType.substr(4):eventType;




ReactTestUtils.SimulateNative[convenienceName] = 
makeNativeSimulator(eventType);}


module.exports = ReactTestUtils;
});
__d('asyncstorage-down/taskqueue.js',["argsarray/index.js","tiny-queue/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var argsarray=require('argsarray/index.js');
var Queue=require('tiny-queue/index.js');


var nextTick=global.setImmediate || process.nextTick;

function TaskQueue(){
this.queue = new Queue();
this.running = false;}


TaskQueue.prototype.add = function(fun,callback){
this.queue.push({fun:fun,callback:callback});
this.processNext();};


TaskQueue.prototype.processNext = function(){
var self=this;
if(self.running || !self.queue.length){
return;}

self.running = true;

var task=self.queue.shift();
nextTick(function(){
task.fun(argsarray(function(args){
task.callback.apply(null,args);
self.running = false;
self.processNext();}));});};




module.exports = TaskQueue;
});
__d('argsarray/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

module.exports = argsArray;

function argsArray(fun){
return function(){
var len=arguments.length;
if(len){
var args=[];
var i=-1;
while(++i < len) {
args[i] = arguments[i];}

return fun.call(this,args);}else 
{
return fun.call(this,[]);}};}
});
__d('tiny-queue/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




function Queue(){
this.length = 0;}


Queue.prototype.push = function(item){
var node={item:item};
if(this.last){
this.last = this.last.next = node;}else 
{
this.last = this.first = node;}

this.length++;};


Queue.prototype.shift = function(){
var node=this.first;
if(node){
this.first = node.next;
if(! --this.length){
this.last = undefined;}

return node.item;}};



Queue.prototype.slice = function(start,end){
start = typeof start === 'undefined'?0:start;
end = typeof end === 'undefined'?Infinity:end;

var output=[];

var i=0;
for(var node=this.first;node;node = node.next) {
if(--end < 0){
break;}else 
if(++i > start){
output.push(node.item);}}


return output;};


module.exports = Queue;
});
__d('d64/index.js',["buffer/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var Buffer=require('buffer/index.js').Buffer;

var CHARS='.PYFGCRLAOEUIDHTNSQJKXBMWVZ_pyfgcrlaoeuidhtnsqjkxbmwvz1234567890'.
split('').sort().join('');

module.exports = function(chars,exports){
chars = chars || CHARS;
exports = exports || {};
if(chars.length !== 64)throw new Error('a base 64 encoding requires 64 chars');

var codeToIndex=new Buffer(128);
codeToIndex.fill();

for(var i=0;i < 64;i++) {
var code=chars.charCodeAt(i);
codeToIndex[code] = i;}


exports.encode = function(data){
var s='',l=data.length,hang=0;
for(var i=0;i < l;i++) {
var v=data[i];

switch(i % 3){
case 0:
s += chars[v >> 2];
hang = (v & 3) << 4;
break;
case 1:
s += chars[hang | v >> 4];
hang = (v & 0xf) << 2;
break;
case 2:
s += chars[hang | v >> 6];
s += chars[v & 0x3f];
hang = 0;
break;}}



if(l % 3)s += chars[hang];
return s;};

exports.decode = function(str){
var l=str.length,j=0;
var b=new Buffer(~ ~(l / 4 * 3)),hang=0;

for(var i=0;i < l;i++) {
var v=codeToIndex[str.charCodeAt(i)];

switch(i % 4){
case 0:
hang = v << 2;
break;
case 1:
b[j++] = hang | v >> 4;
hang = v << 4 & 0xff;
break;
case 2:
b[j++] = hang | v >> 2;
hang = v << 6 & 0xff;
break;
case 3:
b[j++] = hang | v;
break;}}



return b;};

return exports;};


module.exports(CHARS,module.exports);
});
__d('Identity/Components/ResourceList.js',["react-native/Libraries/react-native/react-native.js","react-native-search-bar/SearchBar.js","Identity/Components/NoResources.js","Identity/Components/ResourceRow.js","Identity/Components/ResourceView.js","Identity/Components/VerificationRow.js","Identity/Components/NewResource.js","Identity/Components/MessageList.js","Identity/utils/utils.js","react-mixin/index.js","Identity/Store/Store.js","Identity/Actions/Actions.js","reflux/src/index.js","tradle-constants/index.js","react-native-icons/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var SearchBar=require('react-native-search-bar/SearchBar.js');
var NoResources=require('Identity/Components/NoResources.js');
var ResourceRow=require('Identity/Components/ResourceRow.js');
var ResourceView=require('Identity/Components/ResourceView.js');
var VerificationRow=require('Identity/Components/VerificationRow.js');
var NewResource=require('Identity/Components/NewResource.js');
var MessageList=require('Identity/Components/MessageList.js');
var utils=require('Identity/utils/utils.js');
var reactMixin=require('react-mixin/index.js');
var Store=require('Identity/Store/Store.js');
var Actions=require('Identity/Actions/Actions.js');
var Reflux=require('reflux/src/index.js');
var constants=require('tradle-constants/index.js');var _require=
require('react-native-icons/index.js');var Icon=_require.Icon;var 




ListView=





React.ListView;var Component=React.Component;var StyleSheet=React.StyleSheet;var Navigator=React.Navigator;var TouchableHighlight=React.TouchableHighlight;var View=React.View;var 

ResourceList=(function(_Component){_inherits(ResourceList,_Component);
function ResourceList(props){_classCallCheck(this,ResourceList);
_get(Object.getPrototypeOf(ResourceList.prototype),'constructor',this).call(this,props);

this.state = {
isLoading:utils.getModels()?false:true,
dataSource:new ListView.DataSource({
rowHasChanged:function(row1,row2){return row1 !== row2;}}),

filter:this.props.filter,
userInput:''};

var isRegistration=this.props.resource && this.props.resource[constants.TYPE] === constants.TYPES.IDENTITY && !this.props.resource[constants.ROOT_HASH];
if(isRegistration)
this.state.isRegistration = isRegistration;}_createClass(ResourceList,[{key:'componentWillMount',value:

function componentWillMount(){
var params={
modelName:this.props.modelName,
to:this.props.resource};

if(this.props.isAggregation)
params.isAggregation = true;
if(this.props.sortProperty)
params.sortProperty = this.props.sortProperty;
if(this.props.prop)
params.prop = this.props.prop;
this.state.isLoading = true;
Actions.list(params);}},{key:'componentDidMount',value:

function componentDidMount(){
this.listenTo(Store,'onListUpdate');}},{key:'onListUpdate',value:


function onListUpdate(params){
if(params.error)
return;
var action=params.action;
if(action === 'addItem' || action === 'addMessage'){
var model=action === 'addMessage'?
utils.getModel(this.props.modelName).value:
utils.getModel(params.resource[constants.TYPE]).value;

this.state.isLoading = true;
Actions.list({
query:this.state.filter,
modelName:model.id,
to:this.props.resource,
sortProperty:model.sort});

console.log('Actions.list');
return;}


if(action !== 'list' || !params.list || params.isAggregation !== this.props.isAggregation)
return;
var list=params.list;
if(!list.length && (!this.state.filter || !this.state.filter.length)){
this.setState({
isLoading:false});


return;}

var type=list[0][constants.TYPE];


if(type !== this.props.modelName){
var m=utils.getModel(type).value;
if(!m.subClassOf || m.subClassOf != this.props.modelName)
return;}












this.setState({
dataSource:this.state.dataSource.cloneWithRows(list),
isLoading:false});}},{key:'selectResource',value:






function selectResource(resource){
var me=utils.getMe();

var model=utils.getModel(this.props.modelName);
if(this.props.modelName != constants.TYPES.IDENTITY && !this.props.callback){
var m=utils.getModel(resource[constants.TYPE]).value;
this.props.navigator.push({
title:utils.makeTitle(utils.getDisplayName(resource,m.properties)),
id:3,
component:ResourceView,
titleTextColor:'#7AAAC3',
backButtonTitle:'Back',
rightButtonTitle:'Edit',
onRightButtonPress:{
title:title,
id:4,
component:NewResource,
titleTextColor:'#7AAAC3',
backButtonTitle:'Back',
rightButtonTitle:'Done',
passProps:{
model:m,
resource:resource}},



passProps:{resource:resource}});

return;}

if(this.props.prop){
if(me && this.props.modelName != constants.TYPES.IDENTITY){
this._selectResource(resource);
return;}

if(!me){
if(this.state.isRegistration){
this._selectResource(resource);
return;}}else 


if(me[constants.ROOT_HASH] === resource[constants.ROOT_HASH] || 
this.props.resource && me[constants.ROOT_HASH] === this.props.resource[constants.ROOT_HASH] && this.props.prop){
this._selectResource(resource);
return;}}


var title=resource.firstName;
var modelName='tradle.Message';
var self=this;
var route={
title:title,
component:MessageList,
id:11,
passProps:{
resource:resource,
filter:'',
modelName:modelName},

rightButtonTitle:'Profile',
onRightButtonPress:{
title:title,
id:3,
component:ResourceView,
titleTextColor:'#7AAAC3',
backButtonTitle:'Back',
rightButtonTitle:'Edit',
onRightButtonPress:{
title:title,
id:4,
component:NewResource,
titleTextColor:'#7AAAC3',
backButtonTitle:'Back',
rightButtonTitle:'Done',
passProps:{
model:utils.getModel(resource[constants.TYPE]).value,
resource:resource}},



passProps:{resource:resource}}};


this.props.navigator.push(route);}},{key:'_selectResource',value:


function _selectResource(resource){
var model=utils.getModel(this.props.modelName);
var title=utils.getDisplayName(resource,model.value.properties);
var newTitle=title;
if(title.length > 20){
var t=title.split(' ');
newTitle = '';
t.forEach(function(word){
if(newTitle.length + word.length > 20)
return;
newTitle += newTitle.length?' ' + word:word;});}



var route={
title:utils.makeTitle(newTitle),
id:3,
component:ResourceView,
parentMeta:model,
backButtonTitle:'Back',
passProps:{resource:resource}};


var me=utils.getMe();
if((me || this.state.isRegistration) && this.props.prop){
this.props.callback(this.props.prop,resource);
this.props.navigator.popToRoute(this.props.returnRoute);
return;}

if(me && !model.value.isInterface && (resource[constants.ROOT_HASH] === me[constants.ROOT_HASH] || resource[constants.TYPE] !== constants.TYPES.IDENTITY)){
var self=this;
route.rightButtonTitle = 'Edit';
route.onRightButtonPress = {
title:'Edit',
id:4,
component:NewResource,
rightButtonTitle:'Done',
titleTextColor:'#7AAAC3',
passProps:{
model:utils.getModel(resource[constants.TYPE]).value,
resource:me}};}



this.props.navigator.push(route);}},{key:'showRefResources',value:

function showRefResources(resource,prop){
var props=utils.getModel(resource[constants.TYPE]).value.properties;
var propJson=props[prop];
var resourceTitle=utils.getDisplayName(resource,props);
resourceTitle = utils.makeTitle(resourceTitle);

var backlinksTitle=propJson.title + ' - ' + resourceTitle;
backlinksTitle = utils.makeTitle(backlinksTitle);
var modelName=propJson.items.ref;

this.props.navigator.push({
title:backlinksTitle,
id:10,
component:ResourceList,
backButtonTitle:'Back',
titleTextColor:'#7AAAC3',
passProps:{
resource:resource,
prop:prop,
modelName:modelName},

rightButtonTitle:'Details',
onRightButtonPress:{
title:resourceTitle,
id:3,
component:ResourceView,
titleTextColor:'#7AAAC3',
backButtonTitle:'Back',
rightButtonTitle:'Edit',
onRightButtonPress:{
title:resourceTitle,
id:4,
component:NewResource,
titleTextColor:'#7AAAC3',
backButtonTitle:'Back',
rightButtonTitle:'Done',
passProps:{
model:utils.getModel(resource[constants.TYPE]).value,
resource:resource}},



passProps:{resource:resource}}});}},{key:'onSearchChange',value:




function onSearchChange(filter){
Actions.list({
query:filter,
modelName:this.props.modelName,
to:this.props.resource});}},{key:'onSearchChange1',value:



function onSearchChange1(event){
var filter=event.nativeEvent.text.toLowerCase();
Actions.list({
query:filter,
modelName:this.props.modelName,
to:this.props.resource});}},{key:'renderRow',value:



function renderRow(resource){var _this=this;
var model=utils.getModel(this.props.modelName).value;

return model.id === 'tradle.Verification' || model.subClassOf && model.subClassOf === 'tradle.Verification'?
React.createElement(VerificationRow,{
onSelect:function(){return _this.selectResource(resource.document);},
key:resource[constants.ROOT_HASH],
prop:this.props.prop,
resource:resource}):

React.createElement(ResourceRow,{
onSelect:function(){return _this.selectResource(resource);},
key:resource[constants.ROOT_HASH],
showRefResources:this.showRefResources.bind(this),
resource:resource});}},{key:'renderFooter',value:


function renderFooter(){
var me=utils.getMe();
if(!me)
return React.createElement(View,null);
return (
React.createElement(View,{style:styles.footer},
React.createElement(View,null,
React.createElement(TouchableHighlight,{underlayColor:'transparent',onPress:this.addNew.bind(this)},
React.createElement(View,null,
React.createElement(Icon,{name:'ion|plus',size:30,color:'#999999',style:styles.icon}))))));}},{key:'addNew',value:




























function addNew(){var _this2=this;
var model=utils.getModel(this.props.modelName).value;
var r;


if(this.props.resource){
var props=model.properties;
for(var p in props) {
if(props[p].ref && props[p].ref === this.props.resource[constants.TYPE]){
r = {};
r[constants.TYPE] = this.props.modelName;
r[p] = {id:this.props.resource[constants.TYPE] + '_' + this.props.resource[constants.ROOT_HASH]};

if(this.props.resource.relatedTo && props.relatedTo)
r.relatedTo = this.props.resource.relatedTo;}}}



this.props.navigator.push({
title:model.title,
id:4,
component:NewResource,
titleTextColor:'#7AAAC3',
backButtonTitle:'Back',
rightButtonTitle:'Done',
passProps:{
model:model,
resource:r,
callback:function(){return Actions.list({
modelName:_this2.props.modelName,
to:_this2.props.resource});}}});}},{key:'render',value:




function render(){
if(this.state.isLoading)
return React.createElement(View,null);
var content;
var model=utils.getModel(this.props.modelName).value;
if(this.state.dataSource.getRowCount() === 0)
content = React.createElement(NoResources,{
filter:this.state.filter,
model:model,
isLoading:this.state.isLoading});else 
{
var model=utils.getModel(this.props.modelName).value;
content = React.createElement(ListView,{ref:'listview',
dataSource:this.state.dataSource,
renderRow:this.renderRow.bind(this),
automaticallyAdjustContentInsets:false,
keyboardDismissMode:'on-drag',
keyboardShouldPersistTaps:true,
showsVerticalScrollIndicator:false});}

var model=utils.getModel(this.props.modelName).value;
var Footer=this.renderFooter();
return (
React.createElement(View,{style:styles.container},
React.createElement(SearchBar,{
onChangeText:this.onSearchChange.bind(this),
placeholder:'Search',
showsCancelButton:false,
hideBackground:true}),

React.createElement(View,{style:styles.separator}),
content,
Footer));}}]);return ResourceList;})(Component);
















reactMixin(ResourceList.prototype,Reflux.ListenerMixin);

var styles=StyleSheet.create({
container:{
flex:1,
backgroundColor:'#f7f7f7',

marginTop:60},

centerText:{
alignItems:'center'},

separator:{
height:1,
backgroundColor:'#cccccc'},

icon:{
width:30,
height:30,
marginRight:5},


footer:{
flexDirection:'row',
flexWrap:'nowrap',
justifyContent:'space-between',
height:45,
paddingTop:5,
paddingHorizontal:10,
backgroundColor:'#eeeeee',
borderBottomColor:'#eeeeee',
borderRightColor:'#eeeeee',
borderLeftColor:'#eeeeee',
borderWidth:1,
borderTopColor:'#cccccc'}});



module.exports = ResourceList;
});
__d('react-native-search-bar/SearchBar.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var NativeModules,PropTypes,RNSearchBar,React,SearchBar;

React = require('react-native/Libraries/react-native/react-native.js');

RNSearchBar = React.requireNativeComponent('RNSearchBar',null);

PropTypes = require('ReactPropTypes');

NativeModules = require('NativeModules');

SearchBar = React.createClass({displayName:'SearchBar',
propTypes:{
placeholder:PropTypes.string,
showsCancelButton:PropTypes.bool,
onChange:PropTypes.func,
onChangeText:PropTypes.func,
onFocus:PropTypes.func,
onSearchButtonPress:PropTypes.func,
onCancelButtonPress:PropTypes.func,
hideBackground:PropTypes.bool},

_onChange:function(e){
var base,base1;
if(typeof (base = this.props).onChange === "function"){
base.onChange(e);}

return typeof (base1 = this.props).onChangeText === "function"?base1.onChangeText(e.nativeEvent.text):void 0;},

_onPress:function(e){
var base,base1,button;
button = e.nativeEvent.button;
if(button === 'search'){
return typeof (base = this.props).onSearchButtonPress === "function"?base.onSearchButtonPress(e.nativeEvent.searchText):void 0;}else 
if(button === 'cancel'){
return typeof (base1 = this.props).onCancelButtonPress === "function"?base1.onCancelButtonPress():void 0;}},


render:function(){
return React.createElement(RNSearchBar,_extends({
style:{height:NativeModules.RNSearchBarManager.ComponentHeight},
onChange:this._onChange,
onPress:this._onPress},
this.props));}});




module.exports = SearchBar;
});
__d('Identity/Components/NoResources.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');var 

Text=



React.Text;var Component=React.Component;var StyleSheet=React.StyleSheet;var View=React.View;var 


NoResources=(function(_Component){_inherits(NoResources,_Component);function NoResources(){_classCallCheck(this,NoResources);_get(Object.getPrototypeOf(NoResources.prototype),'constructor',this).apply(this,arguments);}_createClass(NoResources,[{key:'render',value:
function render(){
var noRes=[];
if(this.props.filter){
noRes.push(React.createElement(Text,{style:styles.NoResourcesText},'No results for “' + this.props.filter + '”'));}else 
if(!this.props.isLoading){


noRes.push(React.createElement(Text,{style:styles.NoResourcesText},'No ' + (this.props.model.plural || this.props.model.title + 's') + ' were found.'));
if(!this.props.model.interfaces && !this.props.model.isInterface)
noRes.push(React.createElement(Text,{style:styles.NoResourcesText},'Tap on + to add'));}

return (
React.createElement(View,{style:[styles.container,styles.centerText]},
React.createElement(Text,{style:styles.NoResourcesText},noRes)));}}]);return NoResources;})(Component);





var styles=StyleSheet.create({
container:{
flex:1,
backgroundColor:'white'},

centerText:{
alignItems:'center'},

NoResourcesText:{
marginTop:80,
color:'#888888'}});



module.exports = NoResources;
});
__d('Identity/Components/ResourceRow.js',["LinearGradient","Ionicons","react-native/Libraries/react-native/react-native.js","Identity/utils/utils.js","Identity/Components/ArticleView.js","tradle-constants/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var utils=require('Identity/utils/utils.js');
var LinearGradient=require('LinearGradient');
var ArticleView=require('Identity/Components/ArticleView.js');
var constants=require('tradle-constants/index.js');
var Icon=require('Ionicons');
var MONEY_TYPE='tradle.Money';var 


Image=






React.Image;var PixelRatio=React.PixelRatio;var StyleSheet=React.StyleSheet;var Text=React.Text;var TouchableHighlight=React.TouchableHighlight;var Component=React.Component;var View=React.View;var 

ResourceRow=(function(_Component){_inherits(ResourceRow,_Component);
function ResourceRow(props){_classCallCheck(this,ResourceRow);
_get(Object.getPrototypeOf(ResourceRow.prototype),'constructor',this).call(this,props);}_createClass(ResourceRow,[{key:'render',value:

function render(){
var resource=this.props.resource;
var photo;
var isIdentity=resource[constants.TYPE] === constants.TYPES.IDENTITY;
if(resource.photos && resource.photos.length){
var uri=utils.getImageUri(resource.photos[0].url);
var params={
uri:utils.getImageUri(uri)};

if(uri.indexOf('/var/mobile/') === 0)
params.isStatic = true;
photo = React.createElement(Image,{source:params,style:styles.cellImage});}else 

{
if(isIdentity){
photo = React.createElement(LinearGradient,{colors:['#A4CCE0','#7AAAc3','#5E92AD'],style:styles.cellRoundImage},
React.createElement(Text,{style:styles.cellText},resource.firstName.charAt(0) + (resource.lastName?resource.lastName.charAt(0):'')));}else 


{
var model=utils.getModel(resource[constants.TYPE]).value;
var icon=model.icon;
if(icon)
photo = React.createElement(View,{style:styles.cellImage},React.createElement(Icon,{name:icon,size:35,style:styles.icon}));else 

photo = React.createElement(View,{style:styles.cellImage});}}


var orgPhoto;
if(isIdentity && resource.organization){
if(resource.organization.photo)
orgPhoto = React.createElement(Image,{source:{uri:resource.organization.photo},style:styles.orgIcon});}

if(!orgPhoto)
orgPhoto = React.createElement(View,null);

var onlineStatus=resource.online?
React.createElement(View,{style:styles.online}):
React.createElement(View,{style:[styles.online,{backgroundColor:'transparent'}]});

var cancelResource=this.props.onCancel?
React.createElement(View,null,
React.createElement(TouchableHighlight,{onPress:this.props.onCancel,underlayColor:'transparent'},
React.createElement(View,null,
React.createElement(Icon,{name:'close-circled',size:30,color:'#B1010E',style:styles.cancelIcon})))):



React.createElement(View,null);
var verification;
return (
React.createElement(View,{key:this.props.key},
React.createElement(TouchableHighlight,{onPress:this.props.onSelect},
React.createElement(View,{style:styles.row,key:this.props.key + '1'},
photo,
orgPhoto,
onlineStatus,
React.createElement(View,{style:styles.textContainer,key:this.props.key + '2'},
this.formatRow(resource)),

cancelResource)),


React.createElement(View,{style:styles.cellBorder})));}},{key:'formatRow',value:



function formatRow(resource){
var self=this;
var model=utils.getModel(resource[constants.TYPE] || resource.id).value;
var viewCols=model.gridCols || model.viewCols;
var renderedViewCols;
if(!viewCols){
var vCols=utils.getDisplayName(resource,model.properties);
return React.createElement(Text,{style:styles.resourceTitle,numberOfLines:2},vCols);}

var vCols=[];
var properties=model.properties;
var first=true;
var dateProp;
var datePropIdx;
var datePropsCounter=0;
var backlink;
for(var i=0;i < viewCols.length;i++) {
var v=viewCols[i];
if(properties[v].type === 'array'){
if(properties[v].items.backlink)
backlink = v;
continue;}

if(properties[v].type !== 'date' || !resource[v])
continue;
if(resource[v]){
if(v === 'dateSubmitted' || v === 'lastMessageTime'){
dateProp = v;
if(!datePropsCounter)
datePropIdx = i;
datePropsCounter++;}}}



if(datePropsCounter > 1)
dateProp = null;

viewCols.forEach(function(v){
if(v === dateProp)
return;
if(properties[v].type === 'array')
return;

if(!resource[v] && !properties[v].displayAs)
return;
var style=first?styles.resourceTitle:styles.description;
if(properties[v].style)
style = [style,properties[v].style];
var ref=properties[v].ref;
if(ref){
if(resource[v]){
var row;
if(ref == MONEY_TYPE){
row = this.getMoneyValue(ref,properties[v]);
if(!row)
return;}else 

{
row = React.createElement(Text,{style:style,numberOfLines:first?2:1},resource[v].title);
if(resource[v].photos){
row = React.createElement(View,{style:styles.row},
React.createElement(Image,{source:{uri:resource[v].photos[0].url},style:styles.orgImage}),
row);}}




vCols.push(row);}

first = false;}else 

if(properties[v].type === 'date'){
if(!dateProp)
vCols.push(self.addDateProp(v));else 

return;}else 

{
var row;
if(resource[v] && typeof resource[v] != 'string')
row = React.createElement(Text,{style:style,numberOfLines:1},resource[v]);else 
if(!backlink && resource[v] && (resource[v].indexOf('http://') == 0 || resource[v].indexOf('https://') == 0))
row = React.createElement(Text,{style:style,onPress:self.onPress.bind(self),numberOfLines:1},resource[v]);else 
{
var val=properties[v].displayAs?utils.templateIt(properties[v],resource):resource[v];
var msgParts=utils.splitMessage(val);
if(msgParts.length <= 2)
val = msgParts[0];else 
{
val = '';
for(var _i=0;_i < msgParts.length - 1;_i++) {
val += msgParts[_i];}}

row = React.createElement(Text,{style:style},val);}

if(first && dateProp){
var val=utils.formatDate(new Date(resource[dateProp]));

row = React.createElement(View,{style:{flexDirection:'row',justifyContent:'space-between'}},
React.createElement(View,null,row),
React.createElement(View,null,React.createElement(Text,{style:styles.verySmallLetters},val)));}


vCols.push(row);
first = false;}});


if(vCols)
renderedViewCols = vCols;
if(!backlink)
return renderedViewCols;
return [
React.createElement(TouchableHighlight,{onPress:this.props.showRefResources.bind(this,resource,backlink)},
React.createElement(View,null,
renderedViewCols))];}},{key:'onPress',value:




function onPress(event){
var model=utils.getModel(resource[constants.TYPE] || resource.id).value;
var title=utils.makeTitle(utils.getDisplayName(this.props.resource,model.properties));
this.props.navigator.push({
id:7,
title:title,
component:ArticleView,
passProps:{url:this.props.resource.url}});}}]);return ResourceRow;})(Component);




var styles=StyleSheet.create({
textContainer:{
flex:1},

resourceTitle:{
flex:1,
fontSize:16,
fontWeight:'400',
marginBottom:2},

description:{
flex:1,
flexWrap:'wrap',
color:'#999999',
fontSize:14},

row:{
backgroundColor:'white',

flexDirection:'row',
padding:5},

cell:{
marginTop:20,
marginBottom:20,
marginLeft:10,
fontSize:18},

myCell:{
padding:5,
marginLeft:30,
justifyContent:'flex-end',
borderRadius:10,
backgroundColor:'#D7E6ED'},

cellRoundImage:{

paddingVertical:1,

borderRadius:30,

height:60,
marginRight:10,
width:60,
alignSelf:'center'},

cellText:{
marginTop:16,
alignSelf:'center',
color:'#ffffff',
fontSize:20,
backgroundColor:'transparent'},

cellImage:{
backgroundColor:'#dddddd',
height:60,
marginRight:10,
width:60,
borderColor:'#7AAAc3',
borderRadius:30,
borderWidth:1},

cellBorder:{
backgroundColor:'#eeeeee',
height:1,
marginLeft:4},

cancelIcon:{
width:40,
height:40},







icon:{
width:40,
height:40,
alignSelf:'center',

marginLeft:10,
marginTop:7,
color:'#7AAAc3'},

orgIcon:{
width:30,
height:30,
borderWidth:1,
borderColor:'#7AAAc3',
borderRadius:15,
marginLeft:-30,
marginTop:40},





orgImage:{
width:30,
height:30,
borderWidth:1,
borderColor:'#7AAAc3',
borderRadius:15,
marginRight:10,

alignSelf:'center'},




online:{
backgroundColor:'green',
borderRadius:6,
width:12,
height:12,
position:'absolute',
top:83,
left:8,
borderWidth:1,
borderColor:'#ffffff'},

verySmallLetters:{
fontSize:12,
alignSelf:'flex-end',
color:'#b4c3cb'}});



module.exports = ResourceRow;
});
__d('Identity/utils/utils.js',["tcomb-form-native/index.js","moment/moment.js","tradle-constants/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var t=require('tcomb-form-native/index.js');
var moment=require('moment/moment.js');
var constants=require('tradle-constants/index.js');

var MONEY_TYPE='tradle.Money';
var propTypesMap={
'string':t.Str,
'boolean':t.Bool,
'date':t.Dat,
'number':t.Num,
'integer':t.Num};

var models,me;

var utils={
isEmpty:function(obj){
for(var prop in obj) {
if(obj.hasOwnProperty(prop))
return false;}

return true;},

setMe:function(meR){
me = meR;},

getMe:function(){
return me;},

setModels:function(modelsRL){
models = modelsRL;},

getModels:function(){
return models;},

getModel:function(modelName){
return models?models['model_' + modelName]:null;},

makeLabel:function(label){
return label.

replace(/([A-Z])/g,' $1').

replace(/^./,function(str){return str.toUpperCase();});},

arrayToObject:function(arr){
if(!arr)
return;

var obj=arr.reduce(function(o,v,i){
o[v.trim()] = i;
return o;},
{});
return obj;},

objectToArray:function(obj){
if(!obj)
return;

return Object.keys(obj).map(function(key){return obj[key];});},

getImplementors:function(iModel){
var implementors=[];
for(var p in models) {
var m=models[p].value;
if(m.interfaces && m.interfaces.indexOf(iModel) != -1)
implementors.push(m);}

return implementors;},

getFormFields:function(params){
var meta=params.meta;
var model=params.model;
var models=this.getModels();
var data=params.data;
var chooser=params.chooser;
var onSubmitEditing=params.onSubmitEditing;
var onEndEditing=params.onEndEditing;
var onChange=params.onChange;
var options={};
options.fields = {};

var props,bl;
if(!meta.items)
props = meta.properties;else 
{
bl = meta.items.backlink;
if(!meta.items.ref)
props = meta.items.properties;else 

props = this.getModel(meta.items.ref).value.properties;}












var dModel=data && models['model_' + data[constants.TYPE]];
if(!this.isEmpty(data)){
if(!meta.items && data[constants.TYPE] !== meta.id){
var interfaces=meta.interfaces;
if(!interfaces || interfaces.indexOf(data[constants.TYPE]) == -1)
return;

data[constants.TYPE] = meta.id;
for(var p in data) {
if(p == constants.TYPE)
continue;
if(props[p])
continue;}}}








var editCols=this.arrayToObject(meta.editCols);

var eCols=editCols?editCols:props;
var required=this.arrayToObject(meta.required);

for(var p in eCols) {
if(p === constants.TYPE || p === bl || props[p].items && props[p].items.backlink)
continue;

var maybe=required && !required.hasOwnProperty(p);

var type=props[p].type;
var formType=propTypesMap[type];

if(props[p].readOnly)
continue;

var label=props[p].title;
if(!label)
label = utils.makeLabel(p);
options.fields[p] = {
error:'Insert a valid ' + label,
bufferDelay:20};

if(props[p].description)
options.fields[p].help = props[p].description;
if(props[p].readOnly || props[p].immutable && data && data[p])
options.fields[p] = {'editable':false};
if(formType){
if(onChange)
options.fields[p].onChange = onChange;
model[p] = maybe?t.maybe(formType):formType;
if(data && type == 'date'){
data[p] = new Date(data[p]);
options.fields[p] = {mode:'date'};
options.fields[p].auto = 'labels';}else 

if(type === 'string'){
if(props[p].maxLength > 100)
options.fields[p].multiline = true;
options.fields[p].autoCorrect = false;}

if(!options.fields[p].multiline && (type === 'string' || type === 'integer')){
if(onSubmitEditing)
options.fields[p].onSubmitEditing = onSubmitEditing;
if(onEndEditing)
options.fields[p].onEndEditing = onEndEditing.bind({},p);}}else 


if(props[p].oneOf){
model[p] = t.enums(props[p].oneOf);
options.fields[p].auto = 'labels';}else 

if(type == 'enum'){
var facet=props[p].facet;
var values=models.filter(function(mod){
return mod.type === facet?mod.values:null;});

if(values && values.length){
var enumValues={};
values[0].values.forEach(function(val){
enumValues[val.label] = val.displayName;});


model[p] = t.enums(enumValues);}

options.fields[p].auto = 'labels';}else 

{
var ref=props[p].ref;
if(!ref)
continue;
if(ref === MONEY_TYPE){
model[p] = maybe?t.maybe(t.Num):t.Num;
if(data[p] && typeof data[p] != 'number')
data[p] = data[p].value;









if(onSubmitEditing)
options.fields[p].onSubmitEditing = onSubmitEditing;
if(onEndEditing)
options.fields[p].onEndEditing = onEndEditing.bind({},p);
continue;}

model[p] = maybe?t.maybe(t.Str):t.Str;

var subModel=models['model_' + ref];
if(data && data[p]){
options.fields[p].value = data[p][constants.TYPE]?
data[p][constants.TYPE] + '_' + data[p][constants.ROOT_HASH]:
data[p].id;
data[p] = utils.getDisplayName(data[p],subModel.value.properties) || data[p].title;}


options.fields[p].onFocus = chooser.bind({},props[p],p);
options.fields[p].nullOption = {value:'',label:'Choose your ' + utils.makeLabel(p)};}}



return options;},

getId:function(r){
if(typeof r === 'string'){
var idArr=r.split('_');
return idArr.length === 2?r:idArr[0] + '_' + idArr[1];}

if(r.id){
var idArr=r.id.split('_');
return idArr.length === 2?r.id:idArr[0] + '_' + idArr[1];}else 


return r[constants.TYPE] + '_' + r[constants.ROOT_HASH];},

getFormattedDate:function(dateTime){
var date=new Date(dateTime);
var dayDiff=moment(new Date()).dayOfYear() - moment(date).dayOfYear();
var val;
switch(dayDiff){
case 0:
val = moment(date).format('[today], h:mA');
break;
case 1:
val = moment(date).format('[yesterday], h:m');
break;
default:
val = moment(date).format('ddd, h:m');}

return val;},

getItemsMeta:function(metadata){
var props=metadata.properties;
var required=utils.arrayToObject(metadata.required);


var itemsMeta=[];
for(var p in props) {
if(props[p].type == 'array')
itemsMeta.push(props[p]);}

return itemsMeta;},

makeTitle:function(resourceTitle,prop){
return resourceTitle.length > 28?resourceTitle.substring(0,28) + '...':resourceTitle;},

getDisplayName:function(resource,meta){
if(!meta)
return resource.title;
var displayName='';
for(var p in meta) {
if(meta[p].displayName){
if(resource[p]){
if(meta[p].type == 'object')
displayName += displayName.length?' ' + resource[p].title:resource[p].title;else 

displayName += displayName.length?' ' + resource[p]:resource[p];}else 

if(meta[p].displayAs){
var dn=this.templateIt(meta[p],resource);
if(dn)
displayName += displayName.length?' ' + dn:dn;}}}




return displayName;},


templateIt:function(prop,resource){
var template=prop.displayAs;
var val='';
if(template instanceof Array){
template.forEach(function(t){
if(t.match(/[a-z]/i)){
if(resource[t]){
if(val && val.charAt(val.length - 1).match(/[a-z,]/i))
val += ' ';
val += resource[t];}}else 


if(val.length && val.indexOf(t) != val.length - 1)
val += t;});}


return val;},

formatDate:function(date){
var dayDiff=moment(new Date()).dayOfYear() - moment(date).dayOfYear();
var val;
switch(dayDiff){
case 0:
val = moment(date).fromNow();
break;
case 1:
val = moment(date).format('[yesterday], h:mA');
break;
default:
val = moment(date).format('LL');}

return val;},

splitMessage:function(message){
var lBr=message.indexOf('[');
var msg;
if(lBr == -1)
return [message];
var rBr=message.indexOf(']',lBr);
if(rBr == -1)
return [message];
if(message.charAt(rBr + 1) != '(')
return [message];
var rRoundBr=message.indexOf(')',rBr);
if(rRoundBr == -1)
return [message];else 
{
if(lBr)
return [message.substring(0,lBr),message.substring(lBr + 1,rBr),message.substring(rBr + 2,rRoundBr)];else 

return [message.substring(lBr + 1,rBr),message.substring(rBr + 2,rRoundBr)];}},


getImageUri:function(url){
if(!url)
return null;
if(url.indexOf('data') === 0 || url.indexOf('assets-') === 0 || url.indexOf('http') === 0)
return url;else 
if(url.indexOf('/var/mobile/') == 0)
return url;else 

return 'http://' + url;}};




module.exports = utils;
});
__d('tcomb-form-native/index.js',["tcomb-form-native/lib/index.js","tcomb-form-native/lib/templates/bootstrap.js","tcomb-form-native/lib/stylesheets/bootstrap.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var t=require('tcomb-form-native/lib/index.js');
var templates=require('tcomb-form-native/lib/templates/bootstrap.js');
var stylesheet=require('tcomb-form-native/lib/stylesheets/bootstrap.js');

t.form.Form.templates = templates;
t.form.Form.stylesheet = stylesheet;
t.form.Form.i18n = {
optional:' (optional)'};


module.exports = t;
});
__d('tcomb-form-native/lib/index.js',["tcomb-validation/index.js","tcomb-form-native/lib/components.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var t=require('tcomb-validation/index.js');
var form=require('tcomb-form-native/lib/components.js');

t.form = form;

module.exports = t;
});
__d('tcomb-validation/index.js',["tcomb/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  (function(root,factory){
'use strict';
if(typeof define === 'function' && define.amd && typeof __fbBatchedBridgeConfig === 'undefined'){
define(['tcomb'],factory);}else 
if(typeof exports === 'object'){
module.exports = factory(require('tcomb/index.js'));}else 
{
root.t = factory(root.t);}})(

this,function(t){

'use strict';

var Any=t.Any;
var Obj=t.Obj;
var Str=t.Str;
var Arr=t.Arr;
var struct=t.struct;
var list=t.list;
var format=t.format;





var ValidationError=struct({
message:Str,
actual:Any,
expected:t.Type,
path:list(t.union([Str,t.Num]))},
'ValidationError');

function getDefaultMessage(actual,expected,path){
return format('%s is `%j` should be a `%s`','/' + path.join('/'),actual,expected.meta.name);}


ValidationError.of = function of(actual,expected,path){
return new ValidationError({
message:getDefaultMessage(actual,expected,path),
actual:actual,
expected:expected,
path:path});};



var ValidationResult=struct({
errors:list(ValidationError),
value:Any},
'ValidationResult');

ValidationResult.prototype.isValid = function isValid(){
return !this.errors.length;};


ValidationResult.prototype.firstError = function firstError(){
return this.isValid()?null:this.errors[0];};


ValidationResult.prototype.toString = function toString(){
return this.isValid()?
format('[ValidationResult, true, %j]',this.value):
format('[ValidationResult, false, (%s)]',this.errors.map(function errorToString(err){
return err.message;}).
join(', '));};






function validate(x,type,path){
return new ValidationResult(recurse(x,type,path || []));}


function recurse(x,type,path){
return validators[type.meta.kind](x,type,path);}


var validators=validate.validators = {};


validators.irreducible = 
validators.enums = function validateIrreducible(x,type,path){
return {
value:x,
errors:type.is(x)?[]:[ValidationError.of(x,type,path)]};};



validators.list = function validateList(x,type,path){


if(!Arr.is(x)){
return {value:x,errors:[ValidationError.of(x,type,path)]};}


var ret={value:[],errors:[]};

for(var i=0,len=x.length;i < len;i++) {
var item=recurse(x[i],type.meta.type,path.concat(i));
ret.value[i] = item.value;
ret.errors = ret.errors.concat(item.errors);}

return ret;};


validators.subtype = function validateSubtype(x,type,path){


var ret=recurse(x,type.meta.type,path);
if(ret.errors.length){
return ret;}



if(!type.meta.predicate(ret.value)){
ret.errors = [ValidationError.of(x,type,path)];}


return ret;};



validators.maybe = function validateMaybe(x,type,path){
return t.Nil.is(x)?
{value:null,errors:[]}:
recurse(x,type.meta.type,path);};


validators.struct = function validateStruct(x,type,path){


if(!Obj.is(x)){
return {value:x,errors:[ValidationError.of(x,type,path)]};}



if(type.is(x)){
return {value:x,errors:[]};}


var ret={value:{},errors:[]};
var props=type.meta.props;

for(var name in props) {
if(props.hasOwnProperty(name)){
var prop=recurse(x[name],props[name],path.concat(name));
ret.value[name] = prop.value;
ret.errors = ret.errors.concat(prop.errors);}}


if(!ret.errors.length){
ret.value = new type(ret.value);}

return ret;};


validators.tuple = function validateTuple(x,type,path){

var types=type.meta.types;
var len=types.length;


if(!Arr.is(x) || x.length > len){
return {value:x,errors:[ValidationError.of(x,type,path)]};}


var ret={value:[],errors:[]};

for(var i=0;i < len;i++) {
var item=recurse(x[i],types[i],path.concat(i));
ret.value[i] = item.value;
ret.errors = ret.errors.concat(item.errors);}

return ret;};


validators.dict = function validateDict(x,type,path){


if(!Obj.is(x)){
return {value:x,errors:[ValidationError.of(x,type,path)]};}


var ret={value:{},errors:[]};


for(var k in x) {
if(x.hasOwnProperty(k)){
var subpath=path.concat(k);
var key=recurse(k,type.meta.domain,subpath);
var item=recurse(x[k],type.meta.codomain,subpath);
ret.value[k] = item.value;
ret.errors = ret.errors.concat(key.errors,item.errors);}}


return ret;};


validators.union = function validateUnion(x,type,path){
var ctor=type.dispatch(x);
return t.Func.is(ctor)?
recurse(x,ctor,path.concat(type.meta.types.indexOf(ctor))):
{value:x,errors:[ValidationError.of(x,type,path)]};};



t.mixin(t,{
ValidationError:ValidationError,
ValidationResult:ValidationResult,
validate:validate});


return t;});
});
__d('tcomb/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (function(root,factory){
'use strict';
if(typeof define === 'function' && define.amd && typeof __fbBatchedBridgeConfig === 'undefined'){
define([],factory);}else 
if(typeof exports === 'object'){
module.exports = factory();}else 
{
root.t = factory();}})(

this,function(){

'use strict';

function fail(message){
throw new TypeError(message);}


function assert(guard,message){
if(guard !== true){
message = message?format.apply(null,slice.call(arguments,1)):'assert failed';
exports.fail(message);}}







var slice=Array.prototype.slice;

function mixin(target,source,overwrite){
if(Nil.is(source)){return target;}
for(var k in source) {
if(source.hasOwnProperty(k)){
if(overwrite !== true){
assert(!target.hasOwnProperty(k),'Cannot overwrite property %s',k);}

target[k] = source[k];}}


return target;}


function format(){
var args=slice.call(arguments);
var len=args.length;
var i=1;
var message=args[0];

function formatArgument(match,type){
if(match === '%%'){return '%';}
if(i >= len){return match;}
var formatter=format.formatters[type];
if(!formatter){return match;}
return formatter(args[i++]);}


var str=message.replace(/%([a-z%])/g,formatArgument);
if(i < len){
str += ' ' + args.slice(i).join(' ');}

return str;}


function getFunctionName(f){
assert(typeof f === 'function','Invalid argument `f` = `%s` supplied to `getFunctionName()`',f);
return f.displayName || f.name || format('<function%s>',f.length);}


function replacer(key,value){
return Func.is(value)?getFunctionName(value):value;}


format.formatters = {
s:function(x){return String(x);},
j:function(x){
try{
return JSON.stringify(x,replacer);}
catch(e) {
return String(x);}}};




function getTypeName(type){
assert(Type.is(type),'Invalid argument `type` = `%s` supplied to `getTypeName()`',type);
return type.meta.name;}


function blockNew(x,type){
assert(!(x instanceof type),'Operator `new` is forbidden for type `%s`',getTypeName(type));}


function shallowCopy(x){
return Arr.is(x)?x.concat():Obj.is(x)?mixin({},x):x;}


function update(instance,spec){
assert(Obj.is(spec));
var value=shallowCopy(instance);
for(var k in spec) {
if(spec.hasOwnProperty(k)){
if(update.commands.hasOwnProperty(k)){
assert(Object.keys(spec).length === 1);
return update.commands[k](spec[k],value);}else 
{
value[k] = update(value[k],spec[k]);}}}



return value;}


update.commands = {
'$apply':function(f,value){
assert(Func.is(f));
return f(value);},

'$push':function(elements,arr){
assert(Arr.is(elements));
assert(Arr.is(arr));
return arr.concat(elements);},

'$remove':function(keys,obj){
assert(Arr.is(keys));
assert(Obj.is(obj));
for(var i=0,len=keys.length;i < len;i++) {
delete obj[keys[i]];}

return obj;},

'$set':function(value){
return value;},

'$splice':function(splices,arr){
assert(list(Arr).is(splices));
assert(Arr.is(arr));
return splices.reduce(function(acc,splice){
acc.splice.apply(acc,splice);
return acc;},
arr);},

'$swap':function(config,arr){
assert(Obj.is(config));
assert(Num.is(config.from));
assert(Num.is(config.to));
assert(Arr.is(arr));
var element=arr[config.to];
arr[config.to] = arr[config.from];
arr[config.from] = element;
return arr;},

'$unshift':function(elements,arr){
assert(Arr.is(elements));
assert(Arr.is(arr));
return elements.concat(arr);},

'$merge':function(obj,value){
return mixin(mixin({},value),obj,true);}};



function create(type,value,mut){
return type.meta.kind === 'struct'?new type(value,mut):type(value,mut);}






function irreducible(name,is){

assert(typeof name === 'string','Invalid argument `name` = `%s` supplied to `irreducible()`',name);
assert(typeof is === 'function','Invalid argument `is` = `%s` supplied to `irreducible()`',is);

function Irreducible(value){
blockNew(this,Irreducible);
assert(is(value),'Invalid argument `value` = `%s` supplied to irreducible type `%s`',value,name);
return value;}


Irreducible.meta = {
kind:'irreducible',
name:name};


Irreducible.displayName = name;

Irreducible.is = is;

return Irreducible;}


var Any=irreducible('Any',function(){
return true;});


var Nil=irreducible('Nil',function(x){
return x === null || x === void 0;});


var Str=irreducible('Str',function(x){
return typeof x === 'string';});


var Num=irreducible('Num',function(x){
return typeof x === 'number' && isFinite(x) && !isNaN(x);});


var Bool=irreducible('Bool',function(x){
return x === true || x === false;});


var Arr=irreducible('Arr',function(x){
return x instanceof Array;});


var Obj=irreducible('Obj',function(x){
return !Nil.is(x) && typeof x === 'object' && !Arr.is(x);});


var Func=irreducible('Func',function(x){
return typeof x === 'function';});


var Err=irreducible('Err',function(x){
return x instanceof Error;});


var Re=irreducible('Re',function(x){
return x instanceof RegExp;});


var Dat=irreducible('Dat',function(x){
return x instanceof Date;});


var Type=irreducible('Type',function(x){
return Func.is(x) && Obj.is(x.meta);});


function struct(props,name){

assert(dict(Str,Type).is(props),'Invalid argument `props` = `%s` supplied to `struct` combinator',props);
assert(maybe(Str).is(name),'Invalid argument `name` = `%s` supplied to `struct` combinator',name);
name = name || format('{%s}',Object.keys(props).map(function(prop){
return format('%s: %s',prop,getTypeName(props[prop]));}).
join(', '));

function Struct(value,mut){

if(Struct.is(value)){
return value;}

assert(Obj.is(value),'Invalid argument `value` = `%s` supplied to struct type `%s`',value,name);

if(!(this instanceof Struct)){
return new Struct(value,mut);}

for(var k in props) {
if(props.hasOwnProperty(k)){
var expected=props[k];
var actual=value[k];
this[k] = create(expected,actual,mut);}}


if(mut !== true){
Object.freeze(this);}}



Struct.meta = {
kind:'struct',
props:props,
name:name};


Struct.displayName = name;

Struct.is = function(x){
return x instanceof Struct;};


Struct.update = function(instance,spec){
return new Struct(exports.update(instance,spec));};


Struct.extend = function(arr,name){
arr = [].concat(arr).map(function(x){
return Obj.is(x)?x:x.meta.props;});

arr.unshift(props);
var ret=struct(arr.reduce(mixin,{}),name);
mixin(ret.prototype,Struct.prototype);
return ret;};


return Struct;}


function union(types,name){

assert(list(Type).is(types),'Invalid argument `types` = `%s` supplied to `union` combinator',types);
var len=types.length;
var defaultName=types.map(getTypeName).join(' | ');
assert(len >= 2,'Invalid argument `types` = `%s` supplied to `union` combinator, provide at least two types',defaultName);
assert(maybe(Str).is(name),'Invalid argument `name` = `%s` supplied to `union` combinator',name);
name = name || defaultName;

function Union(value,mut){
blockNew(this,Union);
assert(Func.is(Union.dispatch),'Unimplemented `dispatch()` function for union type `%s`',name);
var type=Union.dispatch(value);
assert(Type.is(type),'The `dispatch()` function of union type `%s` returns no type constructor',name);
return create(type,value,mut);}


Union.meta = {
kind:'union',
types:types,
name:name};


Union.displayName = name;

Union.is = function(x){
return types.some(function(type){
return type.is(x);});};




Union.dispatch = function(x){
for(var i=0;i < len;i++) {
if(types[i].is(x)){
return types[i];}}};




return Union;}


function maybe(type,name){

assert(Type.is(type),'Invalid argument `type` = `%s` supplied to `maybe` combinator',type);

if(type.meta.kind === 'maybe' || type === Any || type === Nil){
return type;}

assert(Nil.is(name) || Str.is(name),'Invalid argument `name` = `%s` supplied to `maybe` combinator',name);
name = name || '?' + getTypeName(type);

function Maybe(value,mut){
blockNew(this,Maybe);
return Nil.is(value)?null:create(type,value,mut);}


Maybe.meta = {
kind:'maybe',
type:type,
name:name};


Maybe.displayName = name;

Maybe.is = function(x){
return Nil.is(x) || type.is(x);};


return Maybe;}


function enums(map,name){

assert(Obj.is(map),'Invalid argument `map` = `%s` supplied to `enums` combinator',map);
assert(maybe(Str).is(name),'Invalid argument `name` = `%s` supplied to `enums` combinator',name);
var keys=Object.keys(map);
name = name || keys.map(function(k){return JSON.stringify(k);}).join(' | ');

function Enums(value){
blockNew(this,Enums);
assert(Enums.is(value),'Invalid argument `value` = `%s` supplied to enums type `%s`, expected one of %j',value,name,keys);
return value;}


Enums.meta = {
kind:'enums',
map:map,
name:name};


Enums.displayName = name;

Enums.is = function(x){
return Str.is(x) && map.hasOwnProperty(x);};


return Enums;}


enums.of = function(keys,name){
keys = Str.is(keys)?keys.split(' '):keys;
var value={};
keys.forEach(function(k){
value[k] = k;});

return enums(value,name);};


function tuple(types,name){

assert(list(Type).is(types),'Invalid argument `types` = `%s` supplied to `tuple` combinator',types);
var len=types.length;
assert(maybe(Str).is(name),'Invalid argument `name` = `%s` supplied to `tuple` combinator',name);
name = name || format('[%s]',types.map(getTypeName).join(', '));

function isTuple(x){
return types.every(function(type,i){
return type.is(x[i]);});}



function Tuple(value,mut){
assert(Arr.is(value) && value.length === len,'Invalid argument `value` = `%s` supplied to tuple type `%s`, expected an `Arr` of length `%s`',value,name,len);
var frozen=mut !== true;

if(isTuple(value) && Object.isFrozen(value) === frozen){
return value;}

var arr=[];
for(var i=0;i < len;i++) {
var expected=types[i];
var actual=value[i];
arr.push(create(expected,actual,mut));}

if(frozen){
Object.freeze(arr);}

return arr;}


Tuple.meta = {
kind:'tuple',
types:types,
length:len,
name:name};


Tuple.displayName = name;

Tuple.is = function(x){
return Arr.is(x) && x.length === len && isTuple(x);};


Tuple.update = function(instance,spec){
return Tuple(exports.update(instance,spec));};


return Tuple;}


function subtype(type,predicate,name){

assert(Type.is(type),'Invalid argument `type` = `%s` supplied to `subtype` combinator',type);
assert(Func.is(predicate),'Invalid argument `predicate` = `%s` supplied to `subtype` combinator',predicate);
assert(maybe(Str).is(name),'Invalid argument `name` = `%s` supplied to `subtype` combinator',name);
name = name || format('{%s | %s}',getTypeName(type),getFunctionName(predicate));

function Subtype(value,mut){
blockNew(this,Subtype);
var x=create(type,value,mut);
assert(predicate(x),'Invalid argument `value` = `%s` supplied to subtype type `%s`',value,name);
return x;}


Subtype.meta = {
kind:'subtype',
type:type,
predicate:predicate,
name:name};


Subtype.displayName = name;

Subtype.is = function(x){
return type.is(x) && predicate(x);};


Subtype.update = function(instance,spec){
return Subtype(exports.update(instance,spec));};


return Subtype;}


function list(type,name){

assert(Type.is(type),'Invalid argument `type` = `%s` supplied to `list` combinator',type);
assert(maybe(Str).is(name),'Invalid argument `name` = `%s` supplied to `list` combinator',name);
name = name || format('Array<%s>',getTypeName(type));

function isList(x){
return x.every(type.is);}


function List(value,mut){
assert(Arr.is(value),'Invalid argument `value` = `%s` supplied to list type `%s`',value,name);
var frozen=mut !== true;

if(isList(value) && Object.isFrozen(value) === frozen){
return value;}

var arr=[];
for(var i=0,len=value.length;i < len;i++) {
var actual=value[i];
arr.push(create(type,actual,mut));}

if(frozen){
Object.freeze(arr);}

return arr;}


List.meta = {
kind:'list',
type:type,
name:name};


List.displayName = name;

List.is = function(x){
return Arr.is(x) && isList(x);};


List.update = function(instance,spec){
return List(exports.update(instance,spec));};


return List;}


function dict(domain,codomain,name){

assert(Type.is(domain),'Invalid argument `domain` = `%s` supplied to `dict` combinator',domain);
assert(Type.is(codomain),'Invalid argument `codomain` = `%s` supplied to `dict` combinator',codomain);
assert(maybe(Str).is(name),'Invalid argument `name` = `%s` supplied to `dict` combinator',name);
name = name || format('{[key:%s]: %s}',getTypeName(domain),getTypeName(codomain));

function isDict(x){
for(var k in x) {
if(x.hasOwnProperty(k)){
if(!domain.is(k) || !codomain.is(x[k])){return false;}}}


return true;}


function Dict(value,mut){
assert(Obj.is(value),'Invalid argument `value` = `%s` supplied to dict type `%s`',value,name);
var frozen=mut !== true;

if(isDict(value) && Object.isFrozen(value) === frozen){
return value;}

var obj={};
for(var k in value) {
if(value.hasOwnProperty(k)){
k = create(domain,k);
var actual=value[k];
obj[k] = create(codomain,actual,mut);}}


if(frozen){
Object.freeze(obj);}

return obj;}


Dict.meta = {
kind:'dict',
domain:domain,
codomain:codomain,
name:name};


Dict.displayName = name;

Dict.is = function(x){
return Obj.is(x) && isDict(x);};


Dict.update = function(instance,spec){
return Dict(exports.update(instance,spec));};


return Dict;}


function isInstrumented(f){
return Func.is(f) && Obj.is(f.type);}


function func(domain,codomain,name){


domain = Arr.is(domain)?domain:[domain];
assert(list(Type).is(domain),'Invalid argument `domain` = `%s` supplied to `func` combinator',domain);
assert(Type.is(codomain),'Invalid argument `codomain` = `%s` supplied to `func` combinator',codomain);
assert(maybe(Str).is(name),'Invalid argument `name` = `%s` supplied to `func` combinator',name);
name = name || format('(%s) => %s',domain.map(getTypeName).join(', '),getTypeName(codomain));
var domainLen=domain.length;

function Func(value){

if(!isInstrumented(value)){
return Func.of(value);}

assert(Func.is(value),'Invalid argument `value` = `%s` supplied to func type `%s`',value,name);
return value;}


Func.meta = {
kind:'func',
domain:domain,
codomain:codomain,
name:name};


Func.displayName = name;

Func.is = function(x){
return isInstrumented(x) && 
x.type.domain.length === domainLen && 
x.type.domain.every(function(type,i){
return type === domain[i];}) && 

x.type.codomain === codomain;};


Func.of = function(f){

assert(typeof f === 'function');


if(Func.is(f)){
return f;}


function fn(){
var args=slice.call(arguments);
var len=args.length;
var argsType=tuple(domain.slice(0,len));
args = argsType(args);
if(len === domainLen){

return create(codomain,f.apply(this,args));}else 
{
var curried=Function.prototype.bind.apply(f,[this].concat(args));
var newdomain=func(domain.slice(len),codomain);
return newdomain.of(curried);}}



fn.type = {
domain:domain,
codomain:codomain,
f:f};


fn.displayName = getFunctionName(f);

return fn;};



return Func;}



var exports={
format:format,
getFunctionName:getFunctionName,
getTypeName:getTypeName,
mixin:mixin,
slice:slice,
shallowCopy:shallowCopy,
update:update,
assert:assert,
fail:fail,
Any:Any,
Nil:Nil,
Str:Str,
Num:Num,
Bool:Bool,
Arr:Arr,
Obj:Obj,
Func:Func,
Err:Err,
Re:Re,
Dat:Dat,
Type:Type,
irreducible:irreducible,
struct:struct,
enums:enums,
union:union,
maybe:maybe,
tuple:tuple,
subtype:subtype,
list:list,
dict:dict,
func:func};


return exports;});
});
__d('tcomb-form-native/lib/components.js',["tcomb-validation/index.js","tcomb-form-native/lib/util.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var t=require('tcomb-validation/index.js');var _require=
require('tcomb-form-native/lib/util.js');var React=_require.React;var humanize=_require.humanize;var merge=_require.merge;var getTypeInfo=_require.getTypeInfo;var getOptionsOfEnum=_require.getOptionsOfEnum;

var SOURCE='tcomb-form-native';
var nooptions=Object.freeze({});
var noop=function(){};
var Nil=t.Nil;

function getComponent(type,options){
if(options.factory){
return options.factory;}

var name=t.getTypeName(type);
switch(type.meta.kind){
case 'irreducible':
return (
type === t.Bool?Checkbox:
type === t.Dat?DatePicker:
Textbox);

case 'struct':
return Struct;
case 'enums':
return Select;
case 'maybe':
case 'subtype':
return getComponent(type.meta.type,options);
default:
t.fail('[' + SOURCE + '] unsupported type ' + name);}}



function sortByText(a,b){
return a.text < b.text?-1:a.text > b.text?1:0;}


function getComparator(order){
return ({
asc:sortByText,
desc:function(a,b){return -sortByText(a,b);}})[
order];}var 


Component=(function(_React$Component){_inherits(Component,_React$Component);

function Component(props){_classCallCheck(this,Component);
_get(Object.getPrototypeOf(Component.prototype),'constructor',this).call(this,props);
this.typeInfo = getTypeInfo(props.type);
this.state = {
hasError:false,
value:this.getTransformer().format(props.value)};}_createClass(Component,[{key:'getTransformer',value:



function getTransformer(){
return this.props.options.transformer || this.constructor.transformer;}},{key:'shouldComponentUpdate',value:


function shouldComponentUpdate(nextProps,nextState){
var should=
nextState.value !== this.state.value || 
nextState.hasError !== this.state.hasError || 
nextProps.options !== this.props.options || 
nextProps.type !== this.props.type;

return should;}},{key:'componentWillReceiveProps',value:


function componentWillReceiveProps(props){
if(props.type !== this.props.type){
this.typeInfo = getTypeInfo(props.type);}

this.setState({value:this.getTransformer().format(props.value)});}},{key:'onChange',value:


function onChange(value){var _this=this;
this.setState({value:value},function(){return _this.props.onChange(value,_this.props.ctx.path);});}},{key:'validate',value:


function validate(){
var value=this.getTransformer().parse(this.state.value);
var result=t.validate(value,this.props.type,this.props.ctx.path);
this.setState({hasError:!result.isValid()});
return result;}},{key:'getAuto',value:


function getAuto(){
return this.props.options.auto || this.props.ctx.auto;}},{key:'getI18n',value:


function getI18n(){
return this.props.options.i18n || this.props.ctx.i18n;}},{key:'getDefaultLabel',value:


function getDefaultLabel(){
var ctx=this.props.ctx;
if(ctx.label){
return ctx.label + (this.typeInfo.isMaybe?this.getI18n().optional:'');}}},{key:'getLabel',value:



function getLabel(){
var ctx=this.props.ctx;
var legend=this.props.options.legend;
var label=this.props.options.label;
label = label || legend;
if(Nil.is(label) && this.getAuto() === 'labels'){
label = this.getDefaultLabel();}

return label;}},{key:'getError',value:


function getError(){
var error=this.props.options.error;
return t.Func.is(error)?error(this.state.value):error;}},{key:'hasError',value:


function hasError(){
return this.props.options.hasError || this.state.hasError;}},{key:'getStylesheet',value:


function getStylesheet(){
return this.props.options.stylesheet || this.props.ctx.stylesheet;}},{key:'getLocals',value:


function getLocals(){
return {
path:this.props.ctx.path,
error:this.getError(),
hasError:this.hasError(),
label:this.getLabel(),
onChange:this.onChange.bind(this),
value:this.state.value,
stylesheet:this.getStylesheet()};}},{key:'render',value:



function render(){
var locals=this.getLocals();

t.assert(t.Func.is(this.getTemplate),'[' + SOURCE + '] missing getTemplate method of component ' + this.constructor.name);
var template=this.getTemplate();
return template(locals);}}]);return Component;})(React.Component);




Component.transformer = {
format:function(value){return Nil.is(value)?null:value;},
parse:function(value){return value;}};


function toNull(value){
return t.Str.is(value) && value.trim() === '' || Nil.is(value)?null:value;}


function parseNumber(value){
var n=parseFloat(value);
var isNumeric=value - n + 1 >= 0;
return isNumeric?n:toNull(value);}var 


Textbox=(function(_Component){_inherits(Textbox,_Component);function Textbox(){_classCallCheck(this,Textbox);_get(Object.getPrototypeOf(Textbox.prototype),'constructor',this).apply(this,arguments);}_createClass(Textbox,[{key:'getTransformer',value:

function getTransformer(){
var options=this.props.options;
return options.transformer?options.transformer:
this.typeInfo.innerType === t.Num?Textbox.numberTransformer:
Textbox.transformer;}},{key:'onChange',value:


function onChange(value){
this.state.value = value;
this.props.onChange(value,this.props.ctx.path);}},{key:'getTemplate',value:


function getTemplate(){
return this.props.options.template || this.props.ctx.templates.textbox;}},{key:'getPlaceholder',value:


function getPlaceholder(){
var placeholder=this.props.options.placeholder;
if(Nil.is(placeholder) && this.getAuto() === 'placeholders'){
placeholder = this.getDefaultLabel();}

return placeholder;}},{key:'getLocals',value:


function getLocals(){var _this2=this;
var locals=_get(Object.getPrototypeOf(Textbox.prototype),'getLocals',this).call(this);
locals.placeholder = this.getPlaceholder();

[
'help',
'autoCapitalize',
'autoCorrect',
'autoFocus',
'bufferDelay',
'clearButtonMode',
'editable',
'enablesReturnKeyAutomatically',
'keyboardType',
'multiline',
'onBlur',
'onEndEditing',
'onFocus',
'onSubmitEditing',
'password',
'placeholderTextColor',
'returnKeyType',
'selectTextOnFocus',
'secureTextEntry',
'selectionState'].
forEach(function(name){return locals[name] = _this2.props.options[name];});

return locals;}}]);return Textbox;})(Component);




Textbox.transformer = {
format:function(value){return Nil.is(value)?null:value;},
parse:toNull};


Textbox.numberTransformer = {
format:function(value){return Nil.is(value)?null:String(value);},
parse:parseNumber};var 


Checkbox=(function(_Component2){_inherits(Checkbox,_Component2);function Checkbox(){_classCallCheck(this,Checkbox);_get(Object.getPrototypeOf(Checkbox.prototype),'constructor',this).apply(this,arguments);}_createClass(Checkbox,[{key:'getTemplate',value:

function getTemplate(){
return this.props.options.template || this.props.ctx.templates.checkbox;}},{key:'getLocals',value:


function getLocals(){var _this3=this;
var locals=_get(Object.getPrototypeOf(Checkbox.prototype),'getLocals',this).call(this);

locals.label = locals.label || this.getDefaultLabel();

[
'help',
'disabled',
'onTintColor',
'thumbTintColor',
'tintColor'].
forEach(function(name){return locals[name] = _this3.props.options[name];});

return locals;}}]);return Checkbox;})(Component);




Checkbox.transformer = {
format:function(value){return Nil.is(value)?false:value;},
parse:function(value){return value;}};var 


Select=(function(_Component3){_inherits(Select,_Component3);function Select(){_classCallCheck(this,Select);_get(Object.getPrototypeOf(Select.prototype),'constructor',this).apply(this,arguments);}_createClass(Select,[{key:'getTransformer',value:

function getTransformer(){
var options=this.props.options;
if(options.transformer){
return options.transformer;}

return Select.transformer(this.getNullOption());}},{key:'getTemplate',value:


function getTemplate(){
return this.props.options.template || this.props.ctx.templates.select;}},{key:'getNullOption',value:


function getNullOption(){
return this.props.options.nullOption || {value:'',text:'-'};}},{key:'getEnum',value:


function getEnum(){
return this.typeInfo.innerType;}},{key:'getOptions',value:


function getOptions(){
var options=this.props.options;
var items=options.options?options.options.slice():getOptionsOfEnum(this.getEnum());
if(options.order){
items.sort(getComparator(options.order));}

var nullOption=this.getNullOption();
if(options.nullOption !== false){
items.unshift(nullOption);}

return items;}},{key:'getLocals',value:


function getLocals(){var _this4=this;
var locals=_get(Object.getPrototypeOf(Select.prototype),'getLocals',this).call(this);
locals.options = this.getOptions();

[
'help'].
forEach(function(name){return locals[name] = _this4.props.options[name];});

return locals;}}]);return Select;})(Component);




Select.transformer = function(nullOption){
return {
format:function(value){return Nil.is(value) && nullOption?nullOption.value:value;},
parse:function(value){return nullOption && nullOption.value === value?null:value;}};};var 



DatePicker=(function(_Component4){_inherits(DatePicker,_Component4);function DatePicker(){_classCallCheck(this,DatePicker);_get(Object.getPrototypeOf(DatePicker.prototype),'constructor',this).apply(this,arguments);}_createClass(DatePicker,[{key:'getTemplate',value:

function getTemplate(){
return this.props.options.template || this.props.ctx.templates.datepicker;}},{key:'getLocals',value:


function getLocals(){var _this5=this;
var locals=_get(Object.getPrototypeOf(DatePicker.prototype),'getLocals',this).call(this);

[
'help',
'maximumDate',
'minimumDate',
'minuteInterval',
'mode',
'timeZoneOffsetInMinutes'].
forEach(function(name){return locals[name] = _this5.props.options[name];});

return locals;}}]);return DatePicker;})(Component);




DatePicker.transformer = {
format:function(value){return Nil.is(value)?new Date():value;},
parse:function(value){return value;}};var 


Struct=(function(_Component5){_inherits(Struct,_Component5);function Struct(){_classCallCheck(this,Struct);_get(Object.getPrototypeOf(Struct.prototype),'constructor',this).apply(this,arguments);}_createClass(Struct,[{key:'validate',value:

function validate(){

var value={};
var errors=[];
var hasError=false;
var result;

for(var ref in this.refs) {
if(this.refs.hasOwnProperty(ref)){
result = this.refs[ref].validate();
errors = errors.concat(result.errors);
value[ref] = result.value;}}



if(errors.length === 0){
value = new this.typeInfo.innerType(value);
if(this.typeInfo.isSubtype && errors.length === 0){
result = t.validate(value,this.props.type,this.props.ctx.path);
hasError = !result.isValid();
errors = errors.concat(result.errors);}}



return new t.ValidationResult({errors:errors,value:value});}},{key:'onChange',value:


function onChange(fieldName,fieldValue,path){
var value=t.mixin({},this.state.value);
value[fieldName] = fieldValue;
this.state.value = value;
this.props.onChange(value,path);}},{key:'getTemplates',value:


function getTemplates(){
return merge(this.props.ctx.templates,this.props.options.templates);}},{key:'getTemplate',value:


function getTemplate(){
return this.props.options.template || this.getTemplates().struct;}},{key:'getStylesheet',value:


function getStylesheet(){
return this.props.options.stylesheet || this.props.ctx.stylesheet;}},{key:'getLocals',value:


function getLocals(){var _props=

this.props;var ctx=_props.ctx;var options=_props.options;

var props=this.typeInfo.innerType.meta.props;
var order=options.order || Object.keys(props);
var auto=this.getAuto();
var i18n=this.getI18n();
var value=this.state.value || {};
var templates=this.getTemplates();
var stylesheet=this.getStylesheet();

var inputs={};
for(var prop in props) {
if(props.hasOwnProperty(prop)){
var propType=props[prop];
var propOptions=options.fields && options.fields[prop]?options.fields[prop]:nooptions;
inputs[prop] = React.createElement(getComponent(propType,propOptions),{
key:prop,
ref:prop,
type:propType,
options:propOptions,
value:value[prop],
onChange:this.onChange.bind(this,prop),
ctx:{
auto:auto,
label:humanize(prop),
i18n:i18n,
stylesheet:stylesheet,
templates:templates,
path:this.props.ctx.path.concat(prop)}});}}





return {
order:order,
label:this.getLabel(),
inputs:inputs,
stylesheet:stylesheet,
template:templates.struct};}}]);return Struct;})(Component);var 





Form=(function(){function Form(){_classCallCheck(this,Form);}_createClass(Form,[{key:'validate',value:

function validate(){
return this.refs.input.validate();}},{key:'getValue',value:


function getValue(raw){
var result=this.validate();
return raw === true?result:
result.isValid()?result.value:
null;}},{key:'getComponent',value:


function getComponent(path){
path = t.Str.is(path)?path.split('.'):path;
return path.reduce(function(input,name){return input.refs[name];},this.refs.input);}},{key:'render',value:


function render(){

var type=this.props.type;
var options=this.props.options || nooptions;
var stylesheet=Form.stylesheet;
var templates=Form.templates;
var i18n=Form.i18n;

t.assert(t.Type.is(type),'[' + SOURCE + '] missing required prop type');
t.assert(t.Obj.is(options),'[' + SOURCE + '] prop options must be an object');
t.assert(t.Obj.is(stylesheet),'[' + SOURCE + '] missing stylesheet config');
t.assert(t.Obj.is(templates),'[' + SOURCE + '] missing templates config');
t.assert(t.Obj.is(i18n),'[' + SOURCE + '] missing i18n config');

var Component=getComponent(type,options);

return React.createElement(Component,{
ref:'input',
type:type,
options:options,
value:this.props.value,
onChange:this.props.onChange || noop,
ctx:{
auto:'labels',
stylesheet:stylesheet,
templates:templates,
i18n:i18n,
path:[]}});}}]);return Form;})();






module.exports = {
Component:Component,
Textbox:Textbox,
Checkbox:Checkbox,
Select:Select,
DatePicker:DatePicker,
Struct:Struct,
Form:Form};
});
__d('tcomb-form-native/lib/util.js',["tcomb-validation/index.js","react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _require=

require('tcomb-validation/index.js');var mixin=_require.mixin;

function getOptionsOfEnum(type){
var enums=type.meta.map;
return Object.keys(enums).map(function(value){
return {
value:value,
text:enums[value]};});}




function getTypeInfo(type){

var innerType=type;
var isMaybe=false;
var isSubtype=false;
var kind;

while(innerType) {
kind = innerType.meta.kind;
if(kind === 'maybe'){
isMaybe = true;
innerType = innerType.meta.type;
continue;}

if(kind === 'subtype'){
isSubtype = true;
innerType = innerType.meta.type;
continue;}

break;}


return {
isMaybe:isMaybe,
isSubtype:isSubtype,
innerType:innerType};}





function underscored(s){
return s.trim().replace(/([a-z\d])([A-Z]+)/g,'$1_$2').replace(/[-\s]+/g,'_').toLowerCase();}


function capitalize(s){
return s.charAt(0).toUpperCase() + s.slice(1);}


function humanize(s){
return capitalize(underscored(s).replace(/_id$/,'').replace(/_/g,' '));}


function merge(a,b){
return mixin(mixin({},a),b,true);}









var React;
try{
React = require.call(this,'react');}
catch(e) {
React = require('react-native/Libraries/react-native/react-native.js');}


module.exports = {
getOptionsOfEnum:getOptionsOfEnum,
getTypeInfo:getTypeInfo,
humanize:humanize,
merge:merge,
React:React};
});
__d('tcomb-form-native/lib/templates/bootstrap.js',["tcomb-form-native/lib/util.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _require=







require('tcomb-form-native/lib/util.js');var React=_require.React;var merge=_require.merge;var 
View=React.View;var Text=React.Text;var TextInput=React.TextInput;var SwitchIOS=React.SwitchIOS;var PickerIOS=React.PickerIOS;var DatePickerIOS=React.DatePickerIOS;


function textbox(locals){

var stylesheet=locals.stylesheet;
var formGroupStyle=stylesheet.formGroup.normal;
var controlLabelStyle=stylesheet.controlLabel.normal;
var textboxStyle=stylesheet.textbox.normal;
var helpBlockStyle=stylesheet.helpBlock.normal;
var errorBlockStyle=stylesheet.errorBlock;

if(locals.hasError){
formGroupStyle = stylesheet.formGroup.error;
controlLabelStyle = stylesheet.controlLabel.error;
textboxStyle = stylesheet.textbox.error;
helpBlockStyle = stylesheet.helpBlock.error;}


if(locals.editable === false){
textboxStyle = stylesheet.textbox.notEditable;}


var label=locals.label?React.createElement(Text,{style:controlLabelStyle},locals.label):null;
var help=locals.help?React.createElement(Text,{style:helpBlockStyle},locals.help):null;
var error=locals.hasError && locals.error?React.createElement(Text,{style:errorBlockStyle},locals.error):null;

return (
React.createElement(View,{style:formGroupStyle},
label,
React.createElement(TextInput,{
ref:'input',
autoCapitalize:locals.autoCapitalize,
autoCorrect:locals.autoCorrect,
autoFocus:locals.autoFocus,
bufferDelay:locals.bufferDelay,
clearButtonMode:locals.clearButtonMode,
editable:locals.editable,
enablesReturnKeyAutomatically:locals.enablesReturnKeyAutomatically,
keyboardType:locals.keyboardType,
multiline:locals.multiline,
onBlur:locals.onBlur,
onEndEditing:locals.onEndEditing,
onFocus:locals.onFocus,
onSubmitEditing:locals.onSubmitEditing,
password:locals.password,
placeholderTextColor:locals.placeholderTextColor,
returnKeyType:locals.returnKeyType,
selectTextOnFocus:locals.selectTextOnFocus,
secureTextEntry:locals.secureTextEntry,
selectionState:locals.selectionState,
onChangeText:function(value){return locals.onChange(value);},
placeholder:locals.placeholder,
style:textboxStyle,
value:locals.value}),

help,
error));}




function checkbox(locals){

var stylesheet=locals.stylesheet;
var formGroupStyle=stylesheet.formGroup.normal;
var controlLabelStyle=stylesheet.controlLabel.normal;
var checkboxStyle=stylesheet.checkbox.normal;
var helpBlockStyle=stylesheet.helpBlock.normal;
var errorBlockStyle=stylesheet.errorBlock;

if(locals.hasError){
formGroupStyle = stylesheet.formGroup.error;
controlLabelStyle = stylesheet.controlLabel.error;
checkboxStyle = stylesheet.checkbox.error;
helpBlockStyle = stylesheet.helpBlock.error;}


var label=locals.label?React.createElement(Text,{style:controlLabelStyle},locals.label):null;
var help=locals.help?React.createElement(Text,{style:helpBlockStyle},locals.help):null;
var error=locals.hasError && locals.error?React.createElement(Text,{style:errorBlockStyle},locals.error):null;

return (
React.createElement(View,{style:formGroupStyle},
label,
React.createElement(SwitchIOS,{
ref:'input',
disabled:locals.disabled,
onTintColor:locals.onTintColor,
thumbTintColor:locals.thumbTintColor,
tintColor:locals.tintColor,
style:checkboxStyle,
onValueChange:function(value){return locals.onChange(value);},
value:locals.value}),

help,
error));}




function select(locals){

var stylesheet=locals.stylesheet;
var formGroupStyle=stylesheet.formGroup.normal;
var controlLabelStyle=stylesheet.controlLabel.normal;
var selectStyle=stylesheet.select.normal;
var helpBlockStyle=stylesheet.helpBlock.normal;
var errorBlockStyle=stylesheet.errorBlock;

if(locals.hasError){
formGroupStyle = stylesheet.formGroup.error;
controlLabelStyle = stylesheet.controlLabel.error;
selectStyle = stylesheet.select.error;
helpBlockStyle = stylesheet.helpBlock.error;}


var label=locals.label?React.createElement(Text,{style:controlLabelStyle},locals.label):null;
var help=locals.help?React.createElement(Text,{style:helpBlockStyle},locals.help):null;
var error=locals.hasError && locals.error?React.createElement(Text,{style:errorBlockStyle},locals.error):null;

var options=locals.options.map(function(_ref){var value=_ref.value;var text=_ref.text;return React.createElement(PickerIOS.Item,{key:value,value:value,label:text});});

return (
React.createElement(View,{style:formGroupStyle},
label,
React.createElement(PickerIOS,{
ref:'input',
style:selectStyle,
selectedValue:locals.value,
onValueChange:locals.onChange},

options),

help,
error));}




function datepicker(locals){

var stylesheet=locals.stylesheet;
var formGroupStyle=stylesheet.formGroup.normal;
var controlLabelStyle=stylesheet.controlLabel.normal;
var datepickerStyle=stylesheet.datepicker.normal;
var helpBlockStyle=stylesheet.helpBlock.normal;
var errorBlockStyle=stylesheet.errorBlock;

if(locals.hasError){
formGroupStyle = stylesheet.formGroup.error;
controlLabelStyle = stylesheet.controlLabel.error;
datepickerStyle = stylesheet.datepicker.error;
helpBlockStyle = stylesheet.helpBlock.error;}


var label=locals.label?React.createElement(Text,{style:controlLabelStyle},locals.label):null;
var help=locals.help?React.createElement(Text,{style:helpBlockStyle},locals.help):null;
var error=locals.hasError && locals.error?React.createElement(Text,{style:errorBlockStyle},locals.error):null;

return (
React.createElement(View,{style:formGroupStyle},
label,
React.createElement(DatePickerIOS,{
ref:'input',
maximumDate:locals.maximumDate,
minimumDate:locals.minimumDate,
minuteInterval:locals.minuteInterval,
mode:locals.mode,
timeZoneOffsetInMinutes:locals.timeZoneOffsetInMinutes,
style:datepickerStyle,
onDateChange:function(value){return locals.onChange(value);},
date:locals.value}),

help,
error));}




function struct(locals){

var stylesheet=locals.stylesheet;
var fieldsetStyle=stylesheet.fieldset;

var rows=locals.order.map(function(name){
return locals.inputs[name];});


return (
React.createElement(View,{style:fieldsetStyle},
rows));}




module.exports = {
textbox:textbox,
checkbox:checkbox,
select:select,
datepicker:datepicker,
struct:struct};
});
__d('tcomb-form-native/lib/stylesheets/bootstrap.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






var LABEL_COLOR='#000000';
var INPUT_COLOR='#000000';
var ERROR_COLOR='#a94442';
var HELP_COLOR='#999999';
var BORDER_COLOR='#cccccc';
var DISABLED_COLOR='#777777';
var DISABLED_BACKGROUND_COLOR='#eeeeee';
var FONT_SIZE=17;
var FONT_WEIGHT='500';

var stylesheet=Object.freeze({
fieldset:{},

formGroup:{
normal:{
marginBottom:10},

error:{
marginBottom:10}},


controlLabel:{
normal:{
color:LABEL_COLOR,
fontSize:FONT_SIZE,
marginBottom:7,
fontWeight:FONT_WEIGHT},


error:{
color:ERROR_COLOR,
fontSize:FONT_SIZE,
marginBottom:7,
fontWeight:FONT_WEIGHT}},


helpBlock:{
normal:{
color:HELP_COLOR,
fontSize:FONT_SIZE,
marginBottom:2},


error:{
color:HELP_COLOR,
fontSize:FONT_SIZE,
marginBottom:2}},


errorBlock:{
fontSize:FONT_SIZE,
marginBottom:2,
color:ERROR_COLOR},

textbox:{
normal:{
color:INPUT_COLOR,
fontSize:FONT_SIZE,
height:36,
padding:7,
borderRadius:4,
borderColor:BORDER_COLOR,
borderWidth:1,
marginBottom:5},


error:{
color:INPUT_COLOR,
fontSize:FONT_SIZE,
height:36,
padding:7,
borderRadius:4,
borderColor:ERROR_COLOR,
borderWidth:1,
marginBottom:5},


notEditable:{
fontSize:FONT_SIZE,
height:36,
padding:7,
borderRadius:4,
borderColor:BORDER_COLOR,
borderWidth:1,
marginBottom:5,
color:DISABLED_COLOR,
backgroundColor:DISABLED_BACKGROUND_COLOR}},


checkbox:{
normal:{
color:INPUT_COLOR,
marginBottom:4},


error:{
color:INPUT_COLOR,
marginBottom:4}},


select:{
normal:{
marginBottom:4},


error:{
marginBottom:4}},


datepicker:{
normal:{
marginBottom:4},


error:{
marginBottom:4}}});




module.exports = stylesheet;
});
__d('moment/moment.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (





function(global,factory){
typeof exports === 'object' && typeof module !== 'undefined'?module.exports = factory():
typeof define === 'function' && define.amd?define(factory):
global.moment = factory();})(
this,function(){'use strict';

var hookCallback;

function utils_hooks__hooks(){
return hookCallback.apply(null,arguments);}




function setHookCallback(callback){
hookCallback = callback;}


function isArray(input){
return Object.prototype.toString.call(input) === '[object Array]';}


function isDate(input){
return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';}


function map(arr,fn){
var res=[],i;
for(i = 0;i < arr.length;++i) {
res.push(fn(arr[i],i));}

return res;}


function hasOwnProp(a,b){
return Object.prototype.hasOwnProperty.call(a,b);}


function extend(a,b){
for(var i in b) {
if(hasOwnProp(b,i)){
a[i] = b[i];}}



if(hasOwnProp(b,'toString')){
a.toString = b.toString;}


if(hasOwnProp(b,'valueOf')){
a.valueOf = b.valueOf;}


return a;}


function create_utc__createUTC(input,format,locale,strict){
return createLocalOrUTC(input,format,locale,strict,true).utc();}


function defaultParsingFlags(){

return {
empty:false,
unusedTokens:[],
unusedInput:[],
overflow:-2,
charsLeftOver:0,
nullInput:false,
invalidMonth:null,
invalidFormat:false,
userInvalidated:false,
iso:false};}



function getParsingFlags(m){
if(m._pf == null){
m._pf = defaultParsingFlags();}

return m._pf;}


function valid__isValid(m){
if(m._isValid == null){
var flags=getParsingFlags(m);
m._isValid = !isNaN(m._d.getTime()) && 
flags.overflow < 0 && 
!flags.empty && 
!flags.invalidMonth && 
!flags.invalidWeekday && 
!flags.nullInput && 
!flags.invalidFormat && 
!flags.userInvalidated;

if(m._strict){
m._isValid = m._isValid && 
flags.charsLeftOver === 0 && 
flags.unusedTokens.length === 0 && 
flags.bigHour === undefined;}}


return m._isValid;}


function valid__createInvalid(flags){
var m=create_utc__createUTC(NaN);
if(flags != null){
extend(getParsingFlags(m),flags);}else 

{
getParsingFlags(m).userInvalidated = true;}


return m;}


var momentProperties=utils_hooks__hooks.momentProperties = [];

function copyConfig(to,from){
var i,prop,val;

if(typeof from._isAMomentObject !== 'undefined'){
to._isAMomentObject = from._isAMomentObject;}

if(typeof from._i !== 'undefined'){
to._i = from._i;}

if(typeof from._f !== 'undefined'){
to._f = from._f;}

if(typeof from._l !== 'undefined'){
to._l = from._l;}

if(typeof from._strict !== 'undefined'){
to._strict = from._strict;}

if(typeof from._tzm !== 'undefined'){
to._tzm = from._tzm;}

if(typeof from._isUTC !== 'undefined'){
to._isUTC = from._isUTC;}

if(typeof from._offset !== 'undefined'){
to._offset = from._offset;}

if(typeof from._pf !== 'undefined'){
to._pf = getParsingFlags(from);}

if(typeof from._locale !== 'undefined'){
to._locale = from._locale;}


if(momentProperties.length > 0){
for(i in momentProperties) {
prop = momentProperties[i];
val = from[prop];
if(typeof val !== 'undefined'){
to[prop] = val;}}}




return to;}


var updateInProgress=false;


function Moment(config){
copyConfig(this,config);
this._d = new Date(config._d != null?config._d.getTime():NaN);


if(updateInProgress === false){
updateInProgress = true;
utils_hooks__hooks.updateOffset(this);
updateInProgress = false;}}



function isMoment(obj){
return obj instanceof Moment || obj != null && obj._isAMomentObject != null;}


function absFloor(number){
if(number < 0){
return Math.ceil(number);}else 
{
return Math.floor(number);}}



function toInt(argumentForCoercion){
var coercedNumber=+argumentForCoercion,
value=0;

if(coercedNumber !== 0 && isFinite(coercedNumber)){
value = absFloor(coercedNumber);}


return value;}


function compareArrays(array1,array2,dontConvert){
var len=Math.min(array1.length,array2.length),
lengthDiff=Math.abs(array1.length - array2.length),
diffs=0,
i;
for(i = 0;i < len;i++) {
if(dontConvert && array1[i] !== array2[i] || 
!dontConvert && toInt(array1[i]) !== toInt(array2[i])){
diffs++;}}


return diffs + lengthDiff;}


function Locale(){}


var locales={};
var globalLocale;

function normalizeLocale(key){
return key?key.toLowerCase().replace('_','-'):key;}





function chooseLocale(names){
var i=0,j,next,locale,split;

while(i < names.length) {
split = normalizeLocale(names[i]).split('-');
j = split.length;
next = normalizeLocale(names[i + 1]);
next = next?next.split('-'):null;
while(j > 0) {
locale = loadLocale(split.slice(0,j).join('-'));
if(locale){
return locale;}

if(next && next.length >= j && compareArrays(split,next,true) >= j - 1){

break;}

j--;}

i++;}

return null;}


function loadLocale(name){
var oldLocale=null;

if(!locales[name] && typeof module !== 'undefined' && 
module && module.exports){
try{
oldLocale = globalLocale._abbr;
require('./locale/' + name);


locale_locales__getSetGlobalLocale(oldLocale);}
catch(e) {}}

return locales[name];}





function locale_locales__getSetGlobalLocale(key,values){
var data;
if(key){
if(typeof values === 'undefined'){
data = locale_locales__getLocale(key);}else 

{
data = defineLocale(key,values);}


if(data){

globalLocale = data;}}



return globalLocale._abbr;}


function defineLocale(name,values){
if(values !== null){
values.abbr = name;
locales[name] = locales[name] || new Locale();
locales[name].set(values);


locale_locales__getSetGlobalLocale(name);

return locales[name];}else 
{

delete locales[name];
return null;}}




function locale_locales__getLocale(key){
var locale;

if(key && key._locale && key._locale._abbr){
key = key._locale._abbr;}


if(!key){
return globalLocale;}


if(!isArray(key)){

locale = loadLocale(key);
if(locale){
return locale;}

key = [key];}


return chooseLocale(key);}


var aliases={};

function addUnitAlias(unit,shorthand){
var lowerCase=unit.toLowerCase();
aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;}


function normalizeUnits(units){
return typeof units === 'string'?aliases[units] || aliases[units.toLowerCase()]:undefined;}


function normalizeObjectUnits(inputObject){
var normalizedInput={},
normalizedProp,
prop;

for(prop in inputObject) {
if(hasOwnProp(inputObject,prop)){
normalizedProp = normalizeUnits(prop);
if(normalizedProp){
normalizedInput[normalizedProp] = inputObject[prop];}}}




return normalizedInput;}


function makeGetSet(unit,keepTime){
return function(value){
if(value != null){
get_set__set(this,unit,value);
utils_hooks__hooks.updateOffset(this,keepTime);
return this;}else 
{
return get_set__get(this,unit);}};}




function get_set__get(mom,unit){
return mom._d['get' + (mom._isUTC?'UTC':'') + unit]();}


function get_set__set(mom,unit,value){
return mom._d['set' + (mom._isUTC?'UTC':'') + unit](value);}




function getSet(units,value){
var unit;
if(typeof units === 'object'){
for(unit in units) {
this.set(unit,units[unit]);}}else 

{
units = normalizeUnits(units);
if(typeof this[units] === 'function'){
return this[units](value);}}


return this;}


function zeroFill(number,targetLength,forceSign){
var absNumber='' + Math.abs(number),
zerosToFill=targetLength - absNumber.length,
sign=number >= 0;
return (sign?forceSign?'+':'':'-') + 
Math.pow(10,Math.max(0,zerosToFill)).toString().substr(1) + absNumber;}


var formattingTokens=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

var localFormattingTokens=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

var formatFunctions={};

var formatTokenFunctions={};





function addFormatToken(token,padded,ordinal,callback){
var func=callback;
if(typeof callback === 'string'){
func = function(){
return this[callback]();};}


if(token){
formatTokenFunctions[token] = func;}

if(padded){
formatTokenFunctions[padded[0]] = function(){
return zeroFill(func.apply(this,arguments),padded[1],padded[2]);};}


if(ordinal){
formatTokenFunctions[ordinal] = function(){
return this.localeData().ordinal(func.apply(this,arguments),token);};}}




function removeFormattingTokens(input){
if(input.match(/\[[\s\S]/)){
return input.replace(/^\[|\]$/g,'');}

return input.replace(/\\/g,'');}


function makeFormatFunction(format){
var array=format.match(formattingTokens),i,length;

for(i = 0,length = array.length;i < length;i++) {
if(formatTokenFunctions[array[i]]){
array[i] = formatTokenFunctions[array[i]];}else 
{
array[i] = removeFormattingTokens(array[i]);}}



return function(mom){
var output='';
for(i = 0;i < length;i++) {
output += array[i] instanceof Function?array[i].call(mom,format):array[i];}

return output;};}




function formatMoment(m,format){
if(!m.isValid()){
return m.localeData().invalidDate();}


format = expandFormat(format,m.localeData());
formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

return formatFunctions[format](m);}


function expandFormat(format,locale){
var i=5;

function replaceLongDateFormatTokens(input){
return locale.longDateFormat(input) || input;}


localFormattingTokens.lastIndex = 0;
while(i >= 0 && localFormattingTokens.test(format)) {
format = format.replace(localFormattingTokens,replaceLongDateFormatTokens);
localFormattingTokens.lastIndex = 0;
i -= 1;}


return format;}


var match1=/\d/;
var match2=/\d\d/;
var match3=/\d{3}/;
var match4=/\d{4}/;
var match6=/[+-]?\d{6}/;
var match1to2=/\d\d?/;
var match1to3=/\d{1,3}/;
var match1to4=/\d{1,4}/;
var match1to6=/[+-]?\d{1,6}/;

var matchUnsigned=/\d+/;
var matchSigned=/[+-]?\d+/;

var matchOffset=/Z|[+-]\d\d:?\d\d/gi;

var matchTimestamp=/[+-]?\d+(\.\d{1,3})?/;


var matchWord=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;

var regexes={};

function isFunction(sth){

return typeof sth === 'function' && 
Object.prototype.toString.call(sth) === '[object Function]';}



function addRegexToken(token,regex,strictRegex){
regexes[token] = isFunction(regex)?regex:function(isStrict){
return isStrict && strictRegex?strictRegex:regex;};}



function getParseRegexForToken(token,config){
if(!hasOwnProp(regexes,token)){
return new RegExp(unescapeFormat(token));}


return regexes[token](config._strict,config._locale);}



function unescapeFormat(s){
return s.replace('\\','').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(matched,p1,p2,p3,p4){
return p1 || p2 || p3 || p4;}).
replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');}


var tokens={};

function addParseToken(token,callback){
var i,func=callback;
if(typeof token === 'string'){
token = [token];}

if(typeof callback === 'number'){
func = function(input,array){
array[callback] = toInt(input);};}


for(i = 0;i < token.length;i++) {
tokens[token[i]] = func;}}



function addWeekParseToken(token,callback){
addParseToken(token,function(input,array,config,token){
config._w = config._w || {};
callback(input,config._w,config,token);});}



function addTimeToArrayFromToken(token,input,config){
if(input != null && hasOwnProp(tokens,token)){
tokens[token](input,config._a,config,token);}}



var YEAR=0;
var MONTH=1;
var DATE=2;
var HOUR=3;
var MINUTE=4;
var SECOND=5;
var MILLISECOND=6;

function daysInMonth(year,month){
return new Date(Date.UTC(year,month + 1,0)).getUTCDate();}




addFormatToken('M',['MM',2],'Mo',function(){
return this.month() + 1;});


addFormatToken('MMM',0,0,function(format){
return this.localeData().monthsShort(this,format);});


addFormatToken('MMMM',0,0,function(format){
return this.localeData().months(this,format);});




addUnitAlias('month','M');



addRegexToken('M',match1to2);
addRegexToken('MM',match1to2,match2);
addRegexToken('MMM',matchWord);
addRegexToken('MMMM',matchWord);

addParseToken(['M','MM'],function(input,array){
array[MONTH] = toInt(input) - 1;});


addParseToken(['MMM','MMMM'],function(input,array,config,token){
var month=config._locale.monthsParse(input,token,config._strict);

if(month != null){
array[MONTH] = month;}else 
{
getParsingFlags(config).invalidMonth = input;}});





var defaultLocaleMonths='January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
function localeMonths(m){
return this._months[m.month()];}


var defaultLocaleMonthsShort='Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
function localeMonthsShort(m){
return this._monthsShort[m.month()];}


function localeMonthsParse(monthName,format,strict){
var i,mom,regex;

if(!this._monthsParse){
this._monthsParse = [];
this._longMonthsParse = [];
this._shortMonthsParse = [];}


for(i = 0;i < 12;i++) {

mom = create_utc__createUTC([2000,i]);
if(strict && !this._longMonthsParse[i]){
this._longMonthsParse[i] = new RegExp('^' + this.months(mom,'').replace('.','') + '$','i');
this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom,'').replace('.','') + '$','i');}

if(!strict && !this._monthsParse[i]){
regex = '^' + this.months(mom,'') + '|^' + this.monthsShort(mom,'');
this._monthsParse[i] = new RegExp(regex.replace('.',''),'i');}


if(strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)){
return i;}else 
if(strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)){
return i;}else 
if(!strict && this._monthsParse[i].test(monthName)){
return i;}}}






function setMonth(mom,value){
var dayOfMonth;


if(typeof value === 'string'){
value = mom.localeData().monthsParse(value);

if(typeof value !== 'number'){
return mom;}}



dayOfMonth = Math.min(mom.date(),daysInMonth(mom.year(),value));
mom._d['set' + (mom._isUTC?'UTC':'') + 'Month'](value,dayOfMonth);
return mom;}


function getSetMonth(value){
if(value != null){
setMonth(this,value);
utils_hooks__hooks.updateOffset(this,true);
return this;}else 
{
return get_set__get(this,'Month');}}



function getDaysInMonth(){
return daysInMonth(this.year(),this.month());}


function checkOverflow(m){
var overflow;
var a=m._a;

if(a && getParsingFlags(m).overflow === -2){
overflow = 
a[MONTH] < 0 || a[MONTH] > 11?MONTH:
a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR],a[MONTH])?DATE:
a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)?HOUR:
a[MINUTE] < 0 || a[MINUTE] > 59?MINUTE:
a[SECOND] < 0 || a[SECOND] > 59?SECOND:
a[MILLISECOND] < 0 || a[MILLISECOND] > 999?MILLISECOND:
-1;

if(getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)){
overflow = DATE;}


getParsingFlags(m).overflow = overflow;}


return m;}


function warn(msg){
if(utils_hooks__hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn){
console.warn('Deprecation warning: ' + msg);}}



function deprecate(msg,fn){
var firstTime=true;

return extend(function(){
if(firstTime){
warn(msg + '\n' + new Error().stack);
firstTime = false;}

return fn.apply(this,arguments);},
fn);}


var deprecations={};

function deprecateSimple(name,msg){
if(!deprecations[name]){
warn(msg);
deprecations[name] = true;}}



utils_hooks__hooks.suppressDeprecationWarnings = false;

var from_string__isoRegex=/^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

var isoDates=[
['YYYYYY-MM-DD',/[+-]\d{6}-\d{2}-\d{2}/],
['YYYY-MM-DD',/\d{4}-\d{2}-\d{2}/],
['GGGG-[W]WW-E',/\d{4}-W\d{2}-\d/],
['GGGG-[W]WW',/\d{4}-W\d{2}/],
['YYYY-DDD',/\d{4}-\d{3}/]];



var isoTimes=[
['HH:mm:ss.SSSS',/(T| )\d\d:\d\d:\d\d\.\d+/],
['HH:mm:ss',/(T| )\d\d:\d\d:\d\d/],
['HH:mm',/(T| )\d\d:\d\d/],
['HH',/(T| )\d\d/]];


var aspNetJsonRegex=/^\/?Date\((\-?\d+)/i;


function configFromISO(config){
var i,l,
string=config._i,
match=from_string__isoRegex.exec(string);

if(match){
getParsingFlags(config).iso = true;
for(i = 0,l = isoDates.length;i < l;i++) {
if(isoDates[i][1].exec(string)){
config._f = isoDates[i][0];
break;}}


for(i = 0,l = isoTimes.length;i < l;i++) {
if(isoTimes[i][1].exec(string)){

config._f += (match[6] || ' ') + isoTimes[i][0];
break;}}


if(string.match(matchOffset)){
config._f += 'Z';}

configFromStringAndFormat(config);}else 
{
config._isValid = false;}}




function configFromString(config){
var matched=aspNetJsonRegex.exec(config._i);

if(matched !== null){
config._d = new Date(+matched[1]);
return;}


configFromISO(config);
if(config._isValid === false){
delete config._isValid;
utils_hooks__hooks.createFromInputFallback(config);}}



utils_hooks__hooks.createFromInputFallback = deprecate(
'moment construction falls back to js Date. This is ' + 
'discouraged and will be removed in upcoming major ' + 
'release. Please refer to ' + 
'https://github.com/moment/moment/issues/1407 for more info.',
function(config){
config._d = new Date(config._i + (config._useUTC?' UTC':''));});



function createDate(y,m,d,h,M,s,ms){


var date=new Date(y,m,d,h,M,s,ms);


if(y < 1970){
date.setFullYear(y);}

return date;}


function createUTCDate(y){
var date=new Date(Date.UTC.apply(null,arguments));
if(y < 1970){
date.setUTCFullYear(y);}

return date;}


addFormatToken(0,['YY',2],0,function(){
return this.year() % 100;});


addFormatToken(0,['YYYY',4],0,'year');
addFormatToken(0,['YYYYY',5],0,'year');
addFormatToken(0,['YYYYYY',6,true],0,'year');



addUnitAlias('year','y');



addRegexToken('Y',matchSigned);
addRegexToken('YY',match1to2,match2);
addRegexToken('YYYY',match1to4,match4);
addRegexToken('YYYYY',match1to6,match6);
addRegexToken('YYYYYY',match1to6,match6);

addParseToken(['YYYYY','YYYYYY'],YEAR);
addParseToken('YYYY',function(input,array){
array[YEAR] = input.length === 2?utils_hooks__hooks.parseTwoDigitYear(input):toInt(input);});

addParseToken('YY',function(input,array){
array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);});




function daysInYear(year){
return isLeapYear(year)?366:365;}


function isLeapYear(year){
return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;}




utils_hooks__hooks.parseTwoDigitYear = function(input){
return toInt(input) + (toInt(input) > 68?1900:2000);};




var getSetYear=makeGetSet('FullYear',false);

function getIsLeapYear(){
return isLeapYear(this.year());}


addFormatToken('w',['ww',2],'wo','week');
addFormatToken('W',['WW',2],'Wo','isoWeek');



addUnitAlias('week','w');
addUnitAlias('isoWeek','W');



addRegexToken('w',match1to2);
addRegexToken('ww',match1to2,match2);
addRegexToken('W',match1to2);
addRegexToken('WW',match1to2,match2);

addWeekParseToken(['w','ww','W','WW'],function(input,week,config,token){
week[token.substr(0,1)] = toInt(input);});











function weekOfYear(mom,firstDayOfWeek,firstDayOfWeekOfYear){
var end=firstDayOfWeekOfYear - firstDayOfWeek,
daysToDayOfWeek=firstDayOfWeekOfYear - mom.day(),
adjustedMoment;


if(daysToDayOfWeek > end){
daysToDayOfWeek -= 7;}


if(daysToDayOfWeek < end - 7){
daysToDayOfWeek += 7;}


adjustedMoment = local__createLocal(mom).add(daysToDayOfWeek,'d');
return {
week:Math.ceil(adjustedMoment.dayOfYear() / 7),
year:adjustedMoment.year()};}





function localeWeek(mom){
return weekOfYear(mom,this._week.dow,this._week.doy).week;}


var defaultLocaleWeek={
dow:0,
doy:6};


function localeFirstDayOfWeek(){
return this._week.dow;}


function localeFirstDayOfYear(){
return this._week.doy;}




function getSetWeek(input){
var week=this.localeData().week(this);
return input == null?week:this.add((input - week) * 7,'d');}


function getSetISOWeek(input){
var week=weekOfYear(this,1,4).week;
return input == null?week:this.add((input - week) * 7,'d');}


addFormatToken('DDD',['DDDD',3],'DDDo','dayOfYear');



addUnitAlias('dayOfYear','DDD');



addRegexToken('DDD',match1to3);
addRegexToken('DDDD',match3);
addParseToken(['DDD','DDDD'],function(input,array,config){
config._dayOfYear = toInt(input);});





function dayOfYearFromWeeks(year,week,weekday,firstDayOfWeekOfYear,firstDayOfWeek){
var week1Jan=6 + firstDayOfWeek - firstDayOfWeekOfYear,janX=createUTCDate(year,0,1 + week1Jan),d=janX.getUTCDay(),dayOfYear;
if(d < firstDayOfWeek){
d += 7;}


weekday = weekday != null?1 * weekday:firstDayOfWeek;

dayOfYear = 1 + week1Jan + 7 * (week - 1) - d + weekday;

return {
year:dayOfYear > 0?year:year - 1,
dayOfYear:dayOfYear > 0?dayOfYear:daysInYear(year - 1) + dayOfYear};}





function getSetDayOfYear(input){
var dayOfYear=Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
return input == null?dayOfYear:this.add(input - dayOfYear,'d');}



function defaults(a,b,c){
if(a != null){
return a;}

if(b != null){
return b;}

return c;}


function currentDateArray(config){
var now=new Date();
if(config._useUTC){
return [now.getUTCFullYear(),now.getUTCMonth(),now.getUTCDate()];}

return [now.getFullYear(),now.getMonth(),now.getDate()];}






function configFromArray(config){
var i,date,input=[],currentDate,yearToUse;

if(config._d){
return;}


currentDate = currentDateArray(config);


if(config._w && config._a[DATE] == null && config._a[MONTH] == null){
dayOfYearFromWeekInfo(config);}



if(config._dayOfYear){
yearToUse = defaults(config._a[YEAR],currentDate[YEAR]);

if(config._dayOfYear > daysInYear(yearToUse)){
getParsingFlags(config)._overflowDayOfYear = true;}


date = createUTCDate(yearToUse,0,config._dayOfYear);
config._a[MONTH] = date.getUTCMonth();
config._a[DATE] = date.getUTCDate();}







for(i = 0;i < 3 && config._a[i] == null;++i) {
config._a[i] = input[i] = currentDate[i];}



for(;i < 7;i++) {
config._a[i] = input[i] = config._a[i] == null?i === 2?1:0:config._a[i];}



if(config._a[HOUR] === 24 && 
config._a[MINUTE] === 0 && 
config._a[SECOND] === 0 && 
config._a[MILLISECOND] === 0){
config._nextDay = true;
config._a[HOUR] = 0;}


config._d = (config._useUTC?createUTCDate:createDate).apply(null,input);


if(config._tzm != null){
config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);}


if(config._nextDay){
config._a[HOUR] = 24;}}



function dayOfYearFromWeekInfo(config){
var w,weekYear,week,weekday,dow,doy,temp;

w = config._w;
if(w.GG != null || w.W != null || w.E != null){
dow = 1;
doy = 4;





weekYear = defaults(w.GG,config._a[YEAR],weekOfYear(local__createLocal(),1,4).year);
week = defaults(w.W,1);
weekday = defaults(w.E,1);}else 
{
dow = config._locale._week.dow;
doy = config._locale._week.doy;

weekYear = defaults(w.gg,config._a[YEAR],weekOfYear(local__createLocal(),dow,doy).year);
week = defaults(w.w,1);

if(w.d != null){

weekday = w.d;
if(weekday < dow){
++week;}}else 

if(w.e != null){

weekday = w.e + dow;}else 
{

weekday = dow;}}


temp = dayOfYearFromWeeks(weekYear,week,weekday,doy,dow);

config._a[YEAR] = temp.year;
config._dayOfYear = temp.dayOfYear;}


utils_hooks__hooks.ISO_8601 = function(){};


function configFromStringAndFormat(config){

if(config._f === utils_hooks__hooks.ISO_8601){
configFromISO(config);
return;}


config._a = [];
getParsingFlags(config).empty = true;


var string='' + config._i,
i,parsedInput,tokens,token,skipped,
stringLength=string.length,
totalParsedInputLength=0;

tokens = expandFormat(config._f,config._locale).match(formattingTokens) || [];

for(i = 0;i < tokens.length;i++) {
token = tokens[i];
parsedInput = (string.match(getParseRegexForToken(token,config)) || [])[0];
if(parsedInput){
skipped = string.substr(0,string.indexOf(parsedInput));
if(skipped.length > 0){
getParsingFlags(config).unusedInput.push(skipped);}

string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
totalParsedInputLength += parsedInput.length;}


if(formatTokenFunctions[token]){
if(parsedInput){
getParsingFlags(config).empty = false;}else 

{
getParsingFlags(config).unusedTokens.push(token);}

addTimeToArrayFromToken(token,parsedInput,config);}else 

if(config._strict && !parsedInput){
getParsingFlags(config).unusedTokens.push(token);}}




getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
if(string.length > 0){
getParsingFlags(config).unusedInput.push(string);}



if(getParsingFlags(config).bigHour === true && 
config._a[HOUR] <= 12 && 
config._a[HOUR] > 0){
getParsingFlags(config).bigHour = undefined;}


config._a[HOUR] = meridiemFixWrap(config._locale,config._a[HOUR],config._meridiem);

configFromArray(config);
checkOverflow(config);}



function meridiemFixWrap(locale,hour,meridiem){
var isPm;

if(meridiem == null){

return hour;}

if(locale.meridiemHour != null){
return locale.meridiemHour(hour,meridiem);}else 
if(locale.isPM != null){

isPm = locale.isPM(meridiem);
if(isPm && hour < 12){
hour += 12;}

if(!isPm && hour === 12){
hour = 0;}

return hour;}else 
{

return hour;}}



function configFromStringAndArray(config){
var tempConfig,
bestMoment,

scoreToBeat,
i,
currentScore;

if(config._f.length === 0){
getParsingFlags(config).invalidFormat = true;
config._d = new Date(NaN);
return;}


for(i = 0;i < config._f.length;i++) {
currentScore = 0;
tempConfig = copyConfig({},config);
if(config._useUTC != null){
tempConfig._useUTC = config._useUTC;}

tempConfig._f = config._f[i];
configFromStringAndFormat(tempConfig);

if(!valid__isValid(tempConfig)){
continue;}



currentScore += getParsingFlags(tempConfig).charsLeftOver;


currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

getParsingFlags(tempConfig).score = currentScore;

if(scoreToBeat == null || currentScore < scoreToBeat){
scoreToBeat = currentScore;
bestMoment = tempConfig;}}



extend(config,bestMoment || tempConfig);}


function configFromObject(config){
if(config._d){
return;}


var i=normalizeObjectUnits(config._i);
config._a = [i.year,i.month,i.day || i.date,i.hour,i.minute,i.second,i.millisecond];

configFromArray(config);}


function createFromConfig(config){
var res=new Moment(checkOverflow(prepareConfig(config)));
if(res._nextDay){

res.add(1,'d');
res._nextDay = undefined;}


return res;}


function prepareConfig(config){
var input=config._i,
format=config._f;

config._locale = config._locale || locale_locales__getLocale(config._l);

if(input === null || format === undefined && input === ''){
return valid__createInvalid({nullInput:true});}


if(typeof input === 'string'){
config._i = input = config._locale.preparse(input);}


if(isMoment(input)){
return new Moment(checkOverflow(input));}else 
if(isArray(format)){
configFromStringAndArray(config);}else 
if(format){
configFromStringAndFormat(config);}else 
if(isDate(input)){
config._d = input;}else 
{
configFromInput(config);}


return config;}


function configFromInput(config){
var input=config._i;
if(input === undefined){
config._d = new Date();}else 
if(isDate(input)){
config._d = new Date(+input);}else 
if(typeof input === 'string'){
configFromString(config);}else 
if(isArray(input)){
config._a = map(input.slice(0),function(obj){
return parseInt(obj,10);});

configFromArray(config);}else 
if(typeof input === 'object'){
configFromObject(config);}else 
if(typeof input === 'number'){

config._d = new Date(input);}else 
{
utils_hooks__hooks.createFromInputFallback(config);}}



function createLocalOrUTC(input,format,locale,strict,isUTC){
var c={};

if(typeof locale === 'boolean'){
strict = locale;
locale = undefined;}



c._isAMomentObject = true;
c._useUTC = c._isUTC = isUTC;
c._l = locale;
c._i = input;
c._f = format;
c._strict = strict;

return createFromConfig(c);}


function local__createLocal(input,format,locale,strict){
return createLocalOrUTC(input,format,locale,strict,false);}


var prototypeMin=deprecate(
'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',
function(){
var other=local__createLocal.apply(null,arguments);
return other < this?this:other;});



var prototypeMax=deprecate(
'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',
function(){
var other=local__createLocal.apply(null,arguments);
return other > this?this:other;});








function pickBy(fn,moments){
var res,i;
if(moments.length === 1 && isArray(moments[0])){
moments = moments[0];}

if(!moments.length){
return local__createLocal();}

res = moments[0];
for(i = 1;i < moments.length;++i) {
if(!moments[i].isValid() || moments[i][fn](res)){
res = moments[i];}}


return res;}



function min(){
var args=[].slice.call(arguments,0);

return pickBy('isBefore',args);}


function max(){
var args=[].slice.call(arguments,0);

return pickBy('isAfter',args);}


function Duration(duration){
var normalizedInput=normalizeObjectUnits(duration),
years=normalizedInput.year || 0,
quarters=normalizedInput.quarter || 0,
months=normalizedInput.month || 0,
weeks=normalizedInput.week || 0,
days=normalizedInput.day || 0,
hours=normalizedInput.hour || 0,
minutes=normalizedInput.minute || 0,
seconds=normalizedInput.second || 0,
milliseconds=normalizedInput.millisecond || 0;


this._milliseconds = +milliseconds + 
seconds * 1e3 + 
minutes * 6e4 + 
hours * 36e5;


this._days = +days + 
weeks * 7;



this._months = +months + 
quarters * 3 + 
years * 12;

this._data = {};

this._locale = locale_locales__getLocale();

this._bubble();}


function isDuration(obj){
return obj instanceof Duration;}


function offset(token,separator){
addFormatToken(token,0,0,function(){
var offset=this.utcOffset();
var sign='+';
if(offset < 0){
offset = -offset;
sign = '-';}

return sign + zeroFill(~ ~(offset / 60),2) + separator + zeroFill(~ ~offset % 60,2);});}



offset('Z',':');
offset('ZZ','');



addRegexToken('Z',matchOffset);
addRegexToken('ZZ',matchOffset);
addParseToken(['Z','ZZ'],function(input,array,config){
config._useUTC = true;
config._tzm = offsetFromString(input);});







var chunkOffset=/([\+\-]|\d\d)/gi;

function offsetFromString(string){
var matches=(string || '').match(matchOffset) || [];
var chunk=matches[matches.length - 1] || [];
var parts=(chunk + '').match(chunkOffset) || ['-',0,0];
var minutes=+(parts[1] * 60) + toInt(parts[2]);

return parts[0] === '+'?minutes:-minutes;}



function cloneWithOffset(input,model){
var res,diff;
if(model._isUTC){
res = model.clone();
diff = (isMoment(input) || isDate(input)?+input:+local__createLocal(input)) - +res;

res._d.setTime(+res._d + diff);
utils_hooks__hooks.updateOffset(res,false);
return res;}else 
{
return local__createLocal(input).local();}}



function getDateOffset(m){


return -Math.round(m._d.getTimezoneOffset() / 15) * 15;}






utils_hooks__hooks.updateOffset = function(){};













function getSetOffset(input,keepLocalTime){
var offset=this._offset || 0,
localAdjust;
if(input != null){
if(typeof input === 'string'){
input = offsetFromString(input);}

if(Math.abs(input) < 16){
input = input * 60;}

if(!this._isUTC && keepLocalTime){
localAdjust = getDateOffset(this);}

this._offset = input;
this._isUTC = true;
if(localAdjust != null){
this.add(localAdjust,'m');}

if(offset !== input){
if(!keepLocalTime || this._changeInProgress){
add_subtract__addSubtract(this,create__createDuration(input - offset,'m'),1,false);}else 
if(!this._changeInProgress){
this._changeInProgress = true;
utils_hooks__hooks.updateOffset(this,true);
this._changeInProgress = null;}}


return this;}else 
{
return this._isUTC?offset:getDateOffset(this);}}



function getSetZone(input,keepLocalTime){
if(input != null){
if(typeof input !== 'string'){
input = -input;}


this.utcOffset(input,keepLocalTime);

return this;}else 
{
return -this.utcOffset();}}



function setOffsetToUTC(keepLocalTime){
return this.utcOffset(0,keepLocalTime);}


function setOffsetToLocal(keepLocalTime){
if(this._isUTC){
this.utcOffset(0,keepLocalTime);
this._isUTC = false;

if(keepLocalTime){
this.subtract(getDateOffset(this),'m');}}


return this;}


function setOffsetToParsedOffset(){
if(this._tzm){
this.utcOffset(this._tzm);}else 
if(typeof this._i === 'string'){
this.utcOffset(offsetFromString(this._i));}

return this;}


function hasAlignedHourOffset(input){
input = input?local__createLocal(input).utcOffset():0;

return (this.utcOffset() - input) % 60 === 0;}


function isDaylightSavingTime(){
return (
this.utcOffset() > this.clone().month(0).utcOffset() || 
this.utcOffset() > this.clone().month(5).utcOffset());}



function isDaylightSavingTimeShifted(){
if(typeof this._isDSTShifted !== 'undefined'){
return this._isDSTShifted;}


var c={};

copyConfig(c,this);
c = prepareConfig(c);

if(c._a){
var other=c._isUTC?create_utc__createUTC(c._a):local__createLocal(c._a);
this._isDSTShifted = this.isValid() && 
compareArrays(c._a,other.toArray()) > 0;}else 
{
this._isDSTShifted = false;}


return this._isDSTShifted;}


function isLocal(){
return !this._isUTC;}


function isUtcOffset(){
return this._isUTC;}


function isUtc(){
return this._isUTC && this._offset === 0;}


var aspNetRegex=/(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/;



var create__isoRegex=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;

function create__createDuration(input,key){
var duration=input,

match=null,
sign,
ret,
diffRes;

if(isDuration(input)){
duration = {
ms:input._milliseconds,
d:input._days,
M:input._months};}else 

if(typeof input === 'number'){
duration = {};
if(key){
duration[key] = input;}else 
{
duration.milliseconds = input;}}else 

if(!!(match = aspNetRegex.exec(input))){
sign = match[1] === '-'?-1:1;
duration = {
y:0,
d:toInt(match[DATE]) * sign,
h:toInt(match[HOUR]) * sign,
m:toInt(match[MINUTE]) * sign,
s:toInt(match[SECOND]) * sign,
ms:toInt(match[MILLISECOND]) * sign};}else 

if(!!(match = create__isoRegex.exec(input))){
sign = match[1] === '-'?-1:1;
duration = {
y:parseIso(match[2],sign),
M:parseIso(match[3],sign),
d:parseIso(match[4],sign),
h:parseIso(match[5],sign),
m:parseIso(match[6],sign),
s:parseIso(match[7],sign),
w:parseIso(match[8],sign)};}else 

if(duration == null){
duration = {};}else 
if(typeof duration === 'object' && ('from' in duration || 'to' in duration)){
diffRes = momentsDifference(local__createLocal(duration.from),local__createLocal(duration.to));

duration = {};
duration.ms = diffRes.milliseconds;
duration.M = diffRes.months;}


ret = new Duration(duration);

if(isDuration(input) && hasOwnProp(input,'_locale')){
ret._locale = input._locale;}


return ret;}


create__createDuration.fn = Duration.prototype;

function parseIso(inp,sign){



var res=inp && parseFloat(inp.replace(',','.'));

return (isNaN(res)?0:res) * sign;}


function positiveMomentsDifference(base,other){
var res={milliseconds:0,months:0};

res.months = other.month() - base.month() + 
(other.year() - base.year()) * 12;
if(base.clone().add(res.months,'M').isAfter(other)){
--res.months;}


res.milliseconds = +other - +base.clone().add(res.months,'M');

return res;}


function momentsDifference(base,other){
var res;
other = cloneWithOffset(other,base);
if(base.isBefore(other)){
res = positiveMomentsDifference(base,other);}else 
{
res = positiveMomentsDifference(other,base);
res.milliseconds = -res.milliseconds;
res.months = -res.months;}


return res;}


function createAdder(direction,name){
return function(val,period){
var dur,tmp;

if(period !== null && !isNaN(+period)){
deprecateSimple(name,'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');
tmp = val;val = period;period = tmp;}


val = typeof val === 'string'?+val:val;
dur = create__createDuration(val,period);
add_subtract__addSubtract(this,dur,direction);
return this;};}



function add_subtract__addSubtract(mom,duration,isAdding,updateOffset){
var milliseconds=duration._milliseconds,
days=duration._days,
months=duration._months;
updateOffset = updateOffset == null?true:updateOffset;

if(milliseconds){
mom._d.setTime(+mom._d + milliseconds * isAdding);}

if(days){
get_set__set(mom,'Date',get_set__get(mom,'Date') + days * isAdding);}

if(months){
setMonth(mom,get_set__get(mom,'Month') + months * isAdding);}

if(updateOffset){
utils_hooks__hooks.updateOffset(mom,days || months);}}



var add_subtract__add=createAdder(1,'add');
var add_subtract__subtract=createAdder(-1,'subtract');

function moment_calendar__calendar(time,formats){


var now=time || local__createLocal(),
sod=cloneWithOffset(now,this).startOf('day'),
diff=this.diff(sod,'days',true),
format=diff < -6?'sameElse':
diff < -1?'lastWeek':
diff < 0?'lastDay':
diff < 1?'sameDay':
diff < 2?'nextDay':
diff < 7?'nextWeek':'sameElse';
return this.format(formats && formats[format] || this.localeData().calendar(format,this,local__createLocal(now)));}


function clone(){
return new Moment(this);}


function isAfter(input,units){
var inputMs;
units = normalizeUnits(typeof units !== 'undefined'?units:'millisecond');
if(units === 'millisecond'){
input = isMoment(input)?input:local__createLocal(input);
return +this > +input;}else 
{
inputMs = isMoment(input)?+input:+local__createLocal(input);
return inputMs < +this.clone().startOf(units);}}



function isBefore(input,units){
var inputMs;
units = normalizeUnits(typeof units !== 'undefined'?units:'millisecond');
if(units === 'millisecond'){
input = isMoment(input)?input:local__createLocal(input);
return +this < +input;}else 
{
inputMs = isMoment(input)?+input:+local__createLocal(input);
return +this.clone().endOf(units) < inputMs;}}



function isBetween(from,to,units){
return this.isAfter(from,units) && this.isBefore(to,units);}


function isSame(input,units){
var inputMs;
units = normalizeUnits(units || 'millisecond');
if(units === 'millisecond'){
input = isMoment(input)?input:local__createLocal(input);
return +this === +input;}else 
{
inputMs = +local__createLocal(input);
return +this.clone().startOf(units) <= inputMs && inputMs <= +this.clone().endOf(units);}}



function diff(input,units,asFloat){
var that=cloneWithOffset(input,this),
zoneDelta=(that.utcOffset() - this.utcOffset()) * 6e4,
delta,output;

units = normalizeUnits(units);

if(units === 'year' || units === 'month' || units === 'quarter'){
output = monthDiff(this,that);
if(units === 'quarter'){
output = output / 3;}else 
if(units === 'year'){
output = output / 12;}}else 

{
delta = this - that;
output = units === 'second'?delta / 1e3:
units === 'minute'?delta / 6e4:
units === 'hour'?delta / 36e5:
units === 'day'?(delta - zoneDelta) / 864e5:
units === 'week'?(delta - zoneDelta) / 6048e5:
delta;}

return asFloat?output:absFloor(output);}


function monthDiff(a,b){

var wholeMonthDiff=(b.year() - a.year()) * 12 + (b.month() - a.month()),

anchor=a.clone().add(wholeMonthDiff,'months'),
anchor2,adjust;

if(b - anchor < 0){
anchor2 = a.clone().add(wholeMonthDiff - 1,'months');

adjust = (b - anchor) / (anchor - anchor2);}else 
{
anchor2 = a.clone().add(wholeMonthDiff + 1,'months');

adjust = (b - anchor) / (anchor2 - anchor);}


return -(wholeMonthDiff + adjust);}


utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';

function toString(){
return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');}


function moment_format__toISOString(){
var m=this.clone().utc();
if(0 < m.year() && m.year() <= 9999){
if('function' === typeof Date.prototype.toISOString){

return this.toDate().toISOString();}else 
{
return formatMoment(m,'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');}}else 

{
return formatMoment(m,'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');}}



function format(inputString){
var output=formatMoment(this,inputString || utils_hooks__hooks.defaultFormat);
return this.localeData().postformat(output);}


function from(time,withoutSuffix){
if(!this.isValid()){
return this.localeData().invalidDate();}

return create__createDuration({to:this,from:time}).locale(this.locale()).humanize(!withoutSuffix);}


function fromNow(withoutSuffix){
return this.from(local__createLocal(),withoutSuffix);}


function to(time,withoutSuffix){
if(!this.isValid()){
return this.localeData().invalidDate();}

return create__createDuration({from:this,to:time}).locale(this.locale()).humanize(!withoutSuffix);}


function toNow(withoutSuffix){
return this.to(local__createLocal(),withoutSuffix);}


function locale(key){
var newLocaleData;

if(key === undefined){
return this._locale._abbr;}else 
{
newLocaleData = locale_locales__getLocale(key);
if(newLocaleData != null){
this._locale = newLocaleData;}

return this;}}



var lang=deprecate(
'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
function(key){
if(key === undefined){
return this.localeData();}else 
{
return this.locale(key);}});




function localeData(){
return this._locale;}


function startOf(units){
units = normalizeUnits(units);


switch(units){
case 'year':
this.month(0);

case 'quarter':
case 'month':
this.date(1);

case 'week':
case 'isoWeek':
case 'day':
this.hours(0);

case 'hour':
this.minutes(0);

case 'minute':
this.seconds(0);

case 'second':
this.milliseconds(0);}



if(units === 'week'){
this.weekday(0);}

if(units === 'isoWeek'){
this.isoWeekday(1);}



if(units === 'quarter'){
this.month(Math.floor(this.month() / 3) * 3);}


return this;}


function endOf(units){
units = normalizeUnits(units);
if(units === undefined || units === 'millisecond'){
return this;}

return this.startOf(units).add(1,units === 'isoWeek'?'week':units).subtract(1,'ms');}


function to_type__valueOf(){
return +this._d - (this._offset || 0) * 60000;}


function unix(){
return Math.floor(+this / 1000);}


function toDate(){
return this._offset?new Date(+this):this._d;}


function toArray(){
var m=this;
return [m.year(),m.month(),m.date(),m.hour(),m.minute(),m.second(),m.millisecond()];}


function toObject(){
var m=this;
return {
years:m.year(),
months:m.month(),
date:m.date(),
hours:m.hours(),
minutes:m.minutes(),
seconds:m.seconds(),
milliseconds:m.milliseconds()};}



function moment_valid__isValid(){
return valid__isValid(this);}


function parsingFlags(){
return extend({},getParsingFlags(this));}


function invalidAt(){
return getParsingFlags(this).overflow;}


addFormatToken(0,['gg',2],0,function(){
return this.weekYear() % 100;});


addFormatToken(0,['GG',2],0,function(){
return this.isoWeekYear() % 100;});


function addWeekYearFormatToken(token,getter){
addFormatToken(0,[token,token.length],0,getter);}


addWeekYearFormatToken('gggg','weekYear');
addWeekYearFormatToken('ggggg','weekYear');
addWeekYearFormatToken('GGGG','isoWeekYear');
addWeekYearFormatToken('GGGGG','isoWeekYear');



addUnitAlias('weekYear','gg');
addUnitAlias('isoWeekYear','GG');



addRegexToken('G',matchSigned);
addRegexToken('g',matchSigned);
addRegexToken('GG',match1to2,match2);
addRegexToken('gg',match1to2,match2);
addRegexToken('GGGG',match1to4,match4);
addRegexToken('gggg',match1to4,match4);
addRegexToken('GGGGG',match1to6,match6);
addRegexToken('ggggg',match1to6,match6);

addWeekParseToken(['gggg','ggggg','GGGG','GGGGG'],function(input,week,config,token){
week[token.substr(0,2)] = toInt(input);});


addWeekParseToken(['gg','GG'],function(input,week,config,token){
week[token] = utils_hooks__hooks.parseTwoDigitYear(input);});




function weeksInYear(year,dow,doy){
return weekOfYear(local__createLocal([year,11,31 + dow - doy]),dow,doy).week;}




function getSetWeekYear(input){
var year=weekOfYear(this,this.localeData()._week.dow,this.localeData()._week.doy).year;
return input == null?year:this.add(input - year,'y');}


function getSetISOWeekYear(input){
var year=weekOfYear(this,1,4).year;
return input == null?year:this.add(input - year,'y');}


function getISOWeeksInYear(){
return weeksInYear(this.year(),1,4);}


function getWeeksInYear(){
var weekInfo=this.localeData()._week;
return weeksInYear(this.year(),weekInfo.dow,weekInfo.doy);}


addFormatToken('Q',0,0,'quarter');



addUnitAlias('quarter','Q');



addRegexToken('Q',match1);
addParseToken('Q',function(input,array){
array[MONTH] = (toInt(input) - 1) * 3;});




function getSetQuarter(input){
return input == null?Math.ceil((this.month() + 1) / 3):this.month((input - 1) * 3 + this.month() % 3);}


addFormatToken('D',['DD',2],'Do','date');



addUnitAlias('date','D');



addRegexToken('D',match1to2);
addRegexToken('DD',match1to2,match2);
addRegexToken('Do',function(isStrict,locale){
return isStrict?locale._ordinalParse:locale._ordinalParseLenient;});


addParseToken(['D','DD'],DATE);
addParseToken('Do',function(input,array){
array[DATE] = toInt(input.match(match1to2)[0],10);});




var getSetDayOfMonth=makeGetSet('Date',true);

addFormatToken('d',0,'do','day');

addFormatToken('dd',0,0,function(format){
return this.localeData().weekdaysMin(this,format);});


addFormatToken('ddd',0,0,function(format){
return this.localeData().weekdaysShort(this,format);});


addFormatToken('dddd',0,0,function(format){
return this.localeData().weekdays(this,format);});


addFormatToken('e',0,0,'weekday');
addFormatToken('E',0,0,'isoWeekday');



addUnitAlias('day','d');
addUnitAlias('weekday','e');
addUnitAlias('isoWeekday','E');



addRegexToken('d',match1to2);
addRegexToken('e',match1to2);
addRegexToken('E',match1to2);
addRegexToken('dd',matchWord);
addRegexToken('ddd',matchWord);
addRegexToken('dddd',matchWord);

addWeekParseToken(['dd','ddd','dddd'],function(input,week,config){
var weekday=config._locale.weekdaysParse(input);

if(weekday != null){
week.d = weekday;}else 
{
getParsingFlags(config).invalidWeekday = input;}});



addWeekParseToken(['d','e','E'],function(input,week,config,token){
week[token] = toInt(input);});




function parseWeekday(input,locale){
if(typeof input !== 'string'){
return input;}


if(!isNaN(input)){
return parseInt(input,10);}


input = locale.weekdaysParse(input);
if(typeof input === 'number'){
return input;}


return null;}




var defaultLocaleWeekdays='Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
function localeWeekdays(m){
return this._weekdays[m.day()];}


var defaultLocaleWeekdaysShort='Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
function localeWeekdaysShort(m){
return this._weekdaysShort[m.day()];}


var defaultLocaleWeekdaysMin='Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
function localeWeekdaysMin(m){
return this._weekdaysMin[m.day()];}


function localeWeekdaysParse(weekdayName){
var i,mom,regex;

this._weekdaysParse = this._weekdaysParse || [];

for(i = 0;i < 7;i++) {

if(!this._weekdaysParse[i]){
mom = local__createLocal([2000,1]).day(i);
regex = '^' + this.weekdays(mom,'') + '|^' + this.weekdaysShort(mom,'') + '|^' + this.weekdaysMin(mom,'');
this._weekdaysParse[i] = new RegExp(regex.replace('.',''),'i');}


if(this._weekdaysParse[i].test(weekdayName)){
return i;}}}






function getSetDayOfWeek(input){
var day=this._isUTC?this._d.getUTCDay():this._d.getDay();
if(input != null){
input = parseWeekday(input,this.localeData());
return this.add(input - day,'d');}else 
{
return day;}}



function getSetLocaleDayOfWeek(input){
var weekday=(this.day() + 7 - this.localeData()._week.dow) % 7;
return input == null?weekday:this.add(input - weekday,'d');}


function getSetISODayOfWeek(input){



return input == null?this.day() || 7:this.day(this.day() % 7?input:input - 7);}


addFormatToken('H',['HH',2],0,'hour');
addFormatToken('h',['hh',2],0,function(){
return this.hours() % 12 || 12;});


function meridiem(token,lowercase){
addFormatToken(token,0,0,function(){
return this.localeData().meridiem(this.hours(),this.minutes(),lowercase);});}



meridiem('a',true);
meridiem('A',false);



addUnitAlias('hour','h');



function matchMeridiem(isStrict,locale){
return locale._meridiemParse;}


addRegexToken('a',matchMeridiem);
addRegexToken('A',matchMeridiem);
addRegexToken('H',match1to2);
addRegexToken('h',match1to2);
addRegexToken('HH',match1to2,match2);
addRegexToken('hh',match1to2,match2);

addParseToken(['H','HH'],HOUR);
addParseToken(['a','A'],function(input,array,config){
config._isPm = config._locale.isPM(input);
config._meridiem = input;});

addParseToken(['h','hh'],function(input,array,config){
array[HOUR] = toInt(input);
getParsingFlags(config).bigHour = true;});




function localeIsPM(input){


return (input + '').toLowerCase().charAt(0) === 'p';}


var defaultLocaleMeridiemParse=/[ap]\.?m?\.?/i;
function localeMeridiem(hours,minutes,isLower){
if(hours > 11){
return isLower?'pm':'PM';}else 
{
return isLower?'am':'AM';}}










var getSetHour=makeGetSet('Hours',true);

addFormatToken('m',['mm',2],0,'minute');



addUnitAlias('minute','m');



addRegexToken('m',match1to2);
addRegexToken('mm',match1to2,match2);
addParseToken(['m','mm'],MINUTE);



var getSetMinute=makeGetSet('Minutes',false);

addFormatToken('s',['ss',2],0,'second');



addUnitAlias('second','s');



addRegexToken('s',match1to2);
addRegexToken('ss',match1to2,match2);
addParseToken(['s','ss'],SECOND);



var getSetSecond=makeGetSet('Seconds',false);

addFormatToken('S',0,0,function(){
return ~ ~(this.millisecond() / 100);});


addFormatToken(0,['SS',2],0,function(){
return ~ ~(this.millisecond() / 10);});


addFormatToken(0,['SSS',3],0,'millisecond');
addFormatToken(0,['SSSS',4],0,function(){
return this.millisecond() * 10;});

addFormatToken(0,['SSSSS',5],0,function(){
return this.millisecond() * 100;});

addFormatToken(0,['SSSSSS',6],0,function(){
return this.millisecond() * 1000;});

addFormatToken(0,['SSSSSSS',7],0,function(){
return this.millisecond() * 10000;});

addFormatToken(0,['SSSSSSSS',8],0,function(){
return this.millisecond() * 100000;});

addFormatToken(0,['SSSSSSSSS',9],0,function(){
return this.millisecond() * 1000000;});





addUnitAlias('millisecond','ms');



addRegexToken('S',match1to3,match1);
addRegexToken('SS',match1to3,match2);
addRegexToken('SSS',match1to3,match3);

var token;
for(token = 'SSSS';token.length <= 9;token += 'S') {
addRegexToken(token,matchUnsigned);}


function parseMs(input,array){
array[MILLISECOND] = toInt(('0.' + input) * 1000);}


for(token = 'S';token.length <= 9;token += 'S') {
addParseToken(token,parseMs);}



var getSetMillisecond=makeGetSet('Milliseconds',false);

addFormatToken('z',0,0,'zoneAbbr');
addFormatToken('zz',0,0,'zoneName');



function getZoneAbbr(){
return this._isUTC?'UTC':'';}


function getZoneName(){
return this._isUTC?'Coordinated Universal Time':'';}


var momentPrototype__proto=Moment.prototype;

momentPrototype__proto.add = add_subtract__add;
momentPrototype__proto.calendar = moment_calendar__calendar;
momentPrototype__proto.clone = clone;
momentPrototype__proto.diff = diff;
momentPrototype__proto.endOf = endOf;
momentPrototype__proto.format = format;
momentPrototype__proto.from = from;
momentPrototype__proto.fromNow = fromNow;
momentPrototype__proto.to = to;
momentPrototype__proto.toNow = toNow;
momentPrototype__proto.get = getSet;
momentPrototype__proto.invalidAt = invalidAt;
momentPrototype__proto.isAfter = isAfter;
momentPrototype__proto.isBefore = isBefore;
momentPrototype__proto.isBetween = isBetween;
momentPrototype__proto.isSame = isSame;
momentPrototype__proto.isValid = moment_valid__isValid;
momentPrototype__proto.lang = lang;
momentPrototype__proto.locale = locale;
momentPrototype__proto.localeData = localeData;
momentPrototype__proto.max = prototypeMax;
momentPrototype__proto.min = prototypeMin;
momentPrototype__proto.parsingFlags = parsingFlags;
momentPrototype__proto.set = getSet;
momentPrototype__proto.startOf = startOf;
momentPrototype__proto.subtract = add_subtract__subtract;
momentPrototype__proto.toArray = toArray;
momentPrototype__proto.toObject = toObject;
momentPrototype__proto.toDate = toDate;
momentPrototype__proto.toISOString = moment_format__toISOString;
momentPrototype__proto.toJSON = moment_format__toISOString;
momentPrototype__proto.toString = toString;
momentPrototype__proto.unix = unix;
momentPrototype__proto.valueOf = to_type__valueOf;


momentPrototype__proto.year = getSetYear;
momentPrototype__proto.isLeapYear = getIsLeapYear;


momentPrototype__proto.weekYear = getSetWeekYear;
momentPrototype__proto.isoWeekYear = getSetISOWeekYear;


momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;


momentPrototype__proto.month = getSetMonth;
momentPrototype__proto.daysInMonth = getDaysInMonth;


momentPrototype__proto.week = momentPrototype__proto.weeks = getSetWeek;
momentPrototype__proto.isoWeek = momentPrototype__proto.isoWeeks = getSetISOWeek;
momentPrototype__proto.weeksInYear = getWeeksInYear;
momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;


momentPrototype__proto.date = getSetDayOfMonth;
momentPrototype__proto.day = momentPrototype__proto.days = getSetDayOfWeek;
momentPrototype__proto.weekday = getSetLocaleDayOfWeek;
momentPrototype__proto.isoWeekday = getSetISODayOfWeek;
momentPrototype__proto.dayOfYear = getSetDayOfYear;


momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;


momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;


momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;


momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;


momentPrototype__proto.utcOffset = getSetOffset;
momentPrototype__proto.utc = setOffsetToUTC;
momentPrototype__proto.local = setOffsetToLocal;
momentPrototype__proto.parseZone = setOffsetToParsedOffset;
momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;
momentPrototype__proto.isDST = isDaylightSavingTime;
momentPrototype__proto.isDSTShifted = isDaylightSavingTimeShifted;
momentPrototype__proto.isLocal = isLocal;
momentPrototype__proto.isUtcOffset = isUtcOffset;
momentPrototype__proto.isUtc = isUtc;
momentPrototype__proto.isUTC = isUtc;


momentPrototype__proto.zoneAbbr = getZoneAbbr;
momentPrototype__proto.zoneName = getZoneName;


momentPrototype__proto.dates = deprecate('dates accessor is deprecated. Use date instead.',getSetDayOfMonth);
momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead',getSetMonth);
momentPrototype__proto.years = deprecate('years accessor is deprecated. Use year instead',getSetYear);
momentPrototype__proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779',getSetZone);

var momentPrototype=momentPrototype__proto;

function moment__createUnix(input){
return local__createLocal(input * 1000);}


function moment__createInZone(){
return local__createLocal.apply(null,arguments).parseZone();}


var defaultCalendar={
sameDay:'[Today at] LT',
nextDay:'[Tomorrow at] LT',
nextWeek:'dddd [at] LT',
lastDay:'[Yesterday at] LT',
lastWeek:'[Last] dddd [at] LT',
sameElse:'L'};


function locale_calendar__calendar(key,mom,now){
var output=this._calendar[key];
return typeof output === 'function'?output.call(mom,now):output;}


var defaultLongDateFormat={
LTS:'h:mm:ss A',
LT:'h:mm A',
L:'MM/DD/YYYY',
LL:'MMMM D, YYYY',
LLL:'MMMM D, YYYY h:mm A',
LLLL:'dddd, MMMM D, YYYY h:mm A'};


function longDateFormat(key){
var format=this._longDateFormat[key],
formatUpper=this._longDateFormat[key.toUpperCase()];

if(format || !formatUpper){
return format;}


this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g,function(val){
return val.slice(1);});


return this._longDateFormat[key];}


var defaultInvalidDate='Invalid date';

function invalidDate(){
return this._invalidDate;}


var defaultOrdinal='%d';
var defaultOrdinalParse=/\d{1,2}/;

function ordinal(number){
return this._ordinal.replace('%d',number);}


function preParsePostFormat(string){
return string;}


var defaultRelativeTime={
future:'in %s',
past:'%s ago',
s:'a few seconds',
m:'a minute',
mm:'%d minutes',
h:'an hour',
hh:'%d hours',
d:'a day',
dd:'%d days',
M:'a month',
MM:'%d months',
y:'a year',
yy:'%d years'};


function relative__relativeTime(number,withoutSuffix,string,isFuture){
var output=this._relativeTime[string];
return typeof output === 'function'?
output(number,withoutSuffix,string,isFuture):
output.replace(/%d/i,number);}


function pastFuture(diff,output){
var format=this._relativeTime[diff > 0?'future':'past'];
return typeof format === 'function'?format(output):format.replace(/%s/i,output);}


function locale_set__set(config){
var prop,i;
for(i in config) {
prop = config[i];
if(typeof prop === 'function'){
this[i] = prop;}else 
{
this['_' + i] = prop;}}




this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\d{1,2}/.source);}


var prototype__proto=Locale.prototype;

prototype__proto._calendar = defaultCalendar;
prototype__proto.calendar = locale_calendar__calendar;
prototype__proto._longDateFormat = defaultLongDateFormat;
prototype__proto.longDateFormat = longDateFormat;
prototype__proto._invalidDate = defaultInvalidDate;
prototype__proto.invalidDate = invalidDate;
prototype__proto._ordinal = defaultOrdinal;
prototype__proto.ordinal = ordinal;
prototype__proto._ordinalParse = defaultOrdinalParse;
prototype__proto.preparse = preParsePostFormat;
prototype__proto.postformat = preParsePostFormat;
prototype__proto._relativeTime = defaultRelativeTime;
prototype__proto.relativeTime = relative__relativeTime;
prototype__proto.pastFuture = pastFuture;
prototype__proto.set = locale_set__set;


prototype__proto.months = localeMonths;
prototype__proto._months = defaultLocaleMonths;
prototype__proto.monthsShort = localeMonthsShort;
prototype__proto._monthsShort = defaultLocaleMonthsShort;
prototype__proto.monthsParse = localeMonthsParse;


prototype__proto.week = localeWeek;
prototype__proto._week = defaultLocaleWeek;
prototype__proto.firstDayOfYear = localeFirstDayOfYear;
prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;


prototype__proto.weekdays = localeWeekdays;
prototype__proto._weekdays = defaultLocaleWeekdays;
prototype__proto.weekdaysMin = localeWeekdaysMin;
prototype__proto._weekdaysMin = defaultLocaleWeekdaysMin;
prototype__proto.weekdaysShort = localeWeekdaysShort;
prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;
prototype__proto.weekdaysParse = localeWeekdaysParse;


prototype__proto.isPM = localeIsPM;
prototype__proto._meridiemParse = defaultLocaleMeridiemParse;
prototype__proto.meridiem = localeMeridiem;

function lists__get(format,index,field,setter){
var locale=locale_locales__getLocale();
var utc=create_utc__createUTC().set(setter,index);
return locale[field](utc,format);}


function list(format,index,field,count,setter){
if(typeof format === 'number'){
index = format;
format = undefined;}


format = format || '';

if(index != null){
return lists__get(format,index,field,setter);}


var i;
var out=[];
for(i = 0;i < count;i++) {
out[i] = lists__get(format,i,field,setter);}

return out;}


function lists__listMonths(format,index){
return list(format,index,'months',12,'month');}


function lists__listMonthsShort(format,index){
return list(format,index,'monthsShort',12,'month');}


function lists__listWeekdays(format,index){
return list(format,index,'weekdays',7,'day');}


function lists__listWeekdaysShort(format,index){
return list(format,index,'weekdaysShort',7,'day');}


function lists__listWeekdaysMin(format,index){
return list(format,index,'weekdaysMin',7,'day');}


locale_locales__getSetGlobalLocale('en',{
ordinalParse:/\d{1,2}(th|st|nd|rd)/,
ordinal:function(number){
var b=number % 10,
output=toInt(number % 100 / 10) === 1?'th':
b === 1?'st':
b === 2?'nd':
b === 3?'rd':'th';
return number + output;}});




utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.',locale_locales__getSetGlobalLocale);
utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.',locale_locales__getLocale);

var mathAbs=Math.abs;

function duration_abs__abs(){
var data=this._data;

this._milliseconds = mathAbs(this._milliseconds);
this._days = mathAbs(this._days);
this._months = mathAbs(this._months);

data.milliseconds = mathAbs(data.milliseconds);
data.seconds = mathAbs(data.seconds);
data.minutes = mathAbs(data.minutes);
data.hours = mathAbs(data.hours);
data.months = mathAbs(data.months);
data.years = mathAbs(data.years);

return this;}


function duration_add_subtract__addSubtract(duration,input,value,direction){
var other=create__createDuration(input,value);

duration._milliseconds += direction * other._milliseconds;
duration._days += direction * other._days;
duration._months += direction * other._months;

return duration._bubble();}



function duration_add_subtract__add(input,value){
return duration_add_subtract__addSubtract(this,input,value,1);}



function duration_add_subtract__subtract(input,value){
return duration_add_subtract__addSubtract(this,input,value,-1);}


function absCeil(number){
if(number < 0){
return Math.floor(number);}else 
{
return Math.ceil(number);}}



function bubble(){
var milliseconds=this._milliseconds;
var days=this._days;
var months=this._months;
var data=this._data;
var seconds,minutes,hours,years,monthsFromDays;



if(!(milliseconds >= 0 && days >= 0 && months >= 0 || 
milliseconds <= 0 && days <= 0 && months <= 0)){
milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
days = 0;
months = 0;}




data.milliseconds = milliseconds % 1000;

seconds = absFloor(milliseconds / 1000);
data.seconds = seconds % 60;

minutes = absFloor(seconds / 60);
data.minutes = minutes % 60;

hours = absFloor(minutes / 60);
data.hours = hours % 24;

days += absFloor(hours / 24);


monthsFromDays = absFloor(daysToMonths(days));
months += monthsFromDays;
days -= absCeil(monthsToDays(monthsFromDays));


years = absFloor(months / 12);
months %= 12;

data.days = days;
data.months = months;
data.years = years;

return this;}


function daysToMonths(days){


return days * 4800 / 146097;}


function monthsToDays(months){

return months * 146097 / 4800;}


function as(units){
var days;
var months;
var milliseconds=this._milliseconds;

units = normalizeUnits(units);

if(units === 'month' || units === 'year'){
days = this._days + milliseconds / 864e5;
months = this._months + daysToMonths(days);
return units === 'month'?months:months / 12;}else 
{

days = this._days + Math.round(monthsToDays(this._months));
switch(units){
case 'week':return days / 7 + milliseconds / 6048e5;
case 'day':return days + milliseconds / 864e5;
case 'hour':return days * 24 + milliseconds / 36e5;
case 'minute':return days * 1440 + milliseconds / 6e4;
case 'second':return days * 86400 + milliseconds / 1000;

case 'millisecond':return Math.floor(days * 864e5) + milliseconds;
default:throw new Error('Unknown unit ' + units);}}}





function duration_as__valueOf(){
return (
this._milliseconds + 
this._days * 864e5 + 
this._months % 12 * 2592e6 + 
toInt(this._months / 12) * 31536e6);}



function makeAs(alias){
return function(){
return this.as(alias);};}



var asMilliseconds=makeAs('ms');
var asSeconds=makeAs('s');
var asMinutes=makeAs('m');
var asHours=makeAs('h');
var asDays=makeAs('d');
var asWeeks=makeAs('w');
var asMonths=makeAs('M');
var asYears=makeAs('y');

function duration_get__get(units){
units = normalizeUnits(units);
return this[units + 's']();}


function makeGetter(name){
return function(){
return this._data[name];};}



var milliseconds=makeGetter('milliseconds');
var seconds=makeGetter('seconds');
var minutes=makeGetter('minutes');
var hours=makeGetter('hours');
var days=makeGetter('days');
var months=makeGetter('months');
var years=makeGetter('years');

function weeks(){
return absFloor(this.days() / 7);}


var round=Math.round;
var thresholds={
s:45,
m:45,
h:22,
d:26,
M:11};



function substituteTimeAgo(string,number,withoutSuffix,isFuture,locale){
return locale.relativeTime(number || 1,!!withoutSuffix,string,isFuture);}


function duration_humanize__relativeTime(posNegDuration,withoutSuffix,locale){
var duration=create__createDuration(posNegDuration).abs();
var seconds=round(duration.as('s'));
var minutes=round(duration.as('m'));
var hours=round(duration.as('h'));
var days=round(duration.as('d'));
var months=round(duration.as('M'));
var years=round(duration.as('y'));

var a=seconds < thresholds.s && ['s',seconds] || 
minutes === 1 && ['m'] || 
minutes < thresholds.m && ['mm',minutes] || 
hours === 1 && ['h'] || 
hours < thresholds.h && ['hh',hours] || 
days === 1 && ['d'] || 
days < thresholds.d && ['dd',days] || 
months === 1 && ['M'] || 
months < thresholds.M && ['MM',months] || 
years === 1 && ['y'] || ['yy',years];

a[2] = withoutSuffix;
a[3] = +posNegDuration > 0;
a[4] = locale;
return substituteTimeAgo.apply(null,a);}



function duration_humanize__getSetRelativeTimeThreshold(threshold,limit){
if(thresholds[threshold] === undefined){
return false;}

if(limit === undefined){
return thresholds[threshold];}

thresholds[threshold] = limit;
return true;}


function humanize(withSuffix){
var locale=this.localeData();
var output=duration_humanize__relativeTime(this,!withSuffix,locale);

if(withSuffix){
output = locale.pastFuture(+this,output);}


return locale.postformat(output);}


var iso_string__abs=Math.abs;

function iso_string__toISOString(){







var seconds=iso_string__abs(this._milliseconds) / 1000;
var days=iso_string__abs(this._days);
var months=iso_string__abs(this._months);
var minutes,hours,years;


minutes = absFloor(seconds / 60);
hours = absFloor(minutes / 60);
seconds %= 60;
minutes %= 60;


years = absFloor(months / 12);
months %= 12;



var Y=years;
var M=months;
var D=days;
var h=hours;
var m=minutes;
var s=seconds;
var total=this.asSeconds();

if(!total){


return 'P0D';}


return (total < 0?'-':'') + 
'P' + (
Y?Y + 'Y':'') + (
M?M + 'M':'') + (
D?D + 'D':'') + (
h || m || s?'T':'') + (
h?h + 'H':'') + (
m?m + 'M':'') + (
s?s + 'S':'');}


var duration_prototype__proto=Duration.prototype;

duration_prototype__proto.abs = duration_abs__abs;
duration_prototype__proto.add = duration_add_subtract__add;
duration_prototype__proto.subtract = duration_add_subtract__subtract;
duration_prototype__proto.as = as;
duration_prototype__proto.asMilliseconds = asMilliseconds;
duration_prototype__proto.asSeconds = asSeconds;
duration_prototype__proto.asMinutes = asMinutes;
duration_prototype__proto.asHours = asHours;
duration_prototype__proto.asDays = asDays;
duration_prototype__proto.asWeeks = asWeeks;
duration_prototype__proto.asMonths = asMonths;
duration_prototype__proto.asYears = asYears;
duration_prototype__proto.valueOf = duration_as__valueOf;
duration_prototype__proto._bubble = bubble;
duration_prototype__proto.get = duration_get__get;
duration_prototype__proto.milliseconds = milliseconds;
duration_prototype__proto.seconds = seconds;
duration_prototype__proto.minutes = minutes;
duration_prototype__proto.hours = hours;
duration_prototype__proto.days = days;
duration_prototype__proto.weeks = weeks;
duration_prototype__proto.months = months;
duration_prototype__proto.years = years;
duration_prototype__proto.humanize = humanize;
duration_prototype__proto.toISOString = iso_string__toISOString;
duration_prototype__proto.toString = iso_string__toISOString;
duration_prototype__proto.toJSON = iso_string__toISOString;
duration_prototype__proto.locale = locale;
duration_prototype__proto.localeData = localeData;


duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',iso_string__toISOString);
duration_prototype__proto.lang = lang;



addFormatToken('X',0,0,'unix');
addFormatToken('x',0,0,'valueOf');



addRegexToken('x',matchSigned);
addRegexToken('X',matchTimestamp);
addParseToken('X',function(input,array,config){
config._d = new Date(parseFloat(input,10) * 1000);});

addParseToken('x',function(input,array,config){
config._d = new Date(toInt(input));});





utils_hooks__hooks.version = '2.10.6';

setHookCallback(local__createLocal);

utils_hooks__hooks.fn = momentPrototype;
utils_hooks__hooks.min = min;
utils_hooks__hooks.max = max;
utils_hooks__hooks.utc = create_utc__createUTC;
utils_hooks__hooks.unix = moment__createUnix;
utils_hooks__hooks.months = lists__listMonths;
utils_hooks__hooks.isDate = isDate;
utils_hooks__hooks.locale = locale_locales__getSetGlobalLocale;
utils_hooks__hooks.invalid = valid__createInvalid;
utils_hooks__hooks.duration = create__createDuration;
utils_hooks__hooks.isMoment = isMoment;
utils_hooks__hooks.weekdays = lists__listWeekdays;
utils_hooks__hooks.parseZone = moment__createInZone;
utils_hooks__hooks.localeData = locale_locales__getLocale;
utils_hooks__hooks.isDuration = isDuration;
utils_hooks__hooks.monthsShort = lists__listMonthsShort;
utils_hooks__hooks.weekdaysMin = lists__listWeekdaysMin;
utils_hooks__hooks.defineLocale = defineLocale;
utils_hooks__hooks.weekdaysShort = lists__listWeekdaysShort;
utils_hooks__hooks.normalizeUnits = normalizeUnits;
utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;

var _moment=utils_hooks__hooks;

return _moment;});
});
__d('tradle-constants/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
DATA_ARG_NAME='data';

module.exports = {
IDENTITY_PUBLISH_ADDRESS:'mhKnKtPFCbYpC61buDMgSBB57mqiWvXCUo',
DATA_ARG_NAME:DATA_ARG_NAME,
JSON_CONTENT_DISP:'Content-Disposition: form-data; name="' + DATA_ARG_NAME + '"',
DEFAULT_BOUNDARY:'--------------------------000000000000000000000000',
OP_RETURN_PREFIX:'tradle',
TYPE:'_t',
CUR_HASH:'_c',
PREV_HASH:'_p',
ROOT_HASH:'_r',
OWNER:'_o',
NEXT_OWNER:'_n',
SIG:'_s',
TYPES:{
IDENTITY:'tradle.Identity'}};
});
__d('LinearGradient',["react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _require=






require('react-native/Libraries/react-native/react-native.js');var requireNativeComponent=_require.requireNativeComponent;
var LinearGradient=requireNativeComponent('BVLinearGradient',null);

module.exports = LinearGradient;
});
__d('Identity/Components/ArticleView.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}var React=require('react-native/Libraries/react-native/react-native.js');var 

WebView=






React.WebView;var View=React.View;var Component=React.Component;var Text=React.Text;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;var ScrollView=React.ScrollView;var StyleSheet=React.StyleSheet;var 

ArticleView=(function(_Component){_inherits(ArticleView,_Component);
function ArticleView(props){_classCallCheck(this,ArticleView);
_get(Object.getPrototypeOf(ArticleView.prototype),'constructor',this).call(this,props);}_createClass(ArticleView,[{key:'renderError',value:

function renderError(domain,code,description){
return React.createElement(Text,{style:styles.error},'error :( - ',description?description:'');}},{key:'renderLoading',value:

function renderLoading(){
return (
React.createElement(ScrollView,{contentContainerStyle:styles.contentContainer},
React.createElement(View,{style:styles.container},
React.createElement(View,{style:styles.loading},
React.createElement(Text,null,'Loading'),
React.createElement(ActivityIndicatorIOS,{style:{alignSelf:'center'}})))));}},{key:'render',value:





function render(){
return (
React.createElement(WebView,{style:styles.webView,
url:this.props.url,
startInLoadingState:true,
renderError:this.renderError.bind(this),
automaticallyAdjustContentInsets:false,
renderLoading:this.renderLoading}));}}]);return ArticleView;})(Component);




var styles=StyleSheet.create({
contentContainer:{
padding:10},

container:{
flex:1},

error:{
marginTop:160,
paddingHorizontal:20,
fontSize:20,
color:'#7AAAC3'},

webView:{
backgroundColor:'#ffffff',
marginTop:60,
height:350}});




module.exports = ArticleView;
});
__d('Ionicons',["createIconSet"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';







var createIconSet=require('createIconSet');
var glyphMap={
"alert":61697,
"alert-circled":61696,
"android-add":62151,
"android-add-circle":62297,
"android-alarm-clock":62298,
"android-alert":62299,
"android-apps":62300,
"android-archive":62153,
"android-arrow-back":62154,
"android-arrow-down":62301,
"android-arrow-dropdown":62303,
"android-arrow-dropdown-circle":62302,
"android-arrow-dropleft":62305,
"android-arrow-dropleft-circle":62304,
"android-arrow-dropright":62307,
"android-arrow-dropright-circle":62306,
"android-arrow-dropup":62309,
"android-arrow-dropup-circle":62308,
"android-arrow-forward":62223,
"android-arrow-up":62310,
"android-attach":62311,
"android-bar":62312,
"android-bicycle":62313,
"android-boat":62314,
"android-bookmark":62315,
"android-bulb":62316,
"android-bus":62317,
"android-calendar":62161,
"android-call":62162,
"android-camera":62163,
"android-cancel":62318,
"android-car":62319,
"android-cart":62320,
"android-chat":62164,
"android-checkbox":62324,
"android-checkbox-blank":62321,
"android-checkbox-outline":62323,
"android-checkbox-outline-blank":62322,
"android-checkmark-circle":62325,
"android-clipboard":62326,
"android-close":62167,
"android-cloud":62330,
"android-cloud-circle":62327,
"android-cloud-done":62328,
"android-cloud-outline":62329,
"android-color-palette":62331,
"android-compass":62332,
"android-contact":62168,
"android-contacts":62169,
"android-contract":62333,
"android-create":62334,
"android-delete":62335,
"android-desktop":62336,
"android-document":62337,
"android-done":62339,
"android-done-all":62338,
"android-download":62173,
"android-drafts":62340,
"android-exit":62341,
"android-expand":62342,
"android-favorite":62344,
"android-favorite-outline":62343,
"android-film":62345,
"android-folder":62176,
"android-folder-open":62346,
"android-funnel":62347,
"android-globe":62348,
"android-hand":62179,
"android-hangout":62349,
"android-happy":62350,
"android-home":62351,
"android-image":62180,
"android-laptop":62352,
"android-list":62353,
"android-locate":62185,
"android-lock":62354,
"android-mail":62187,
"android-map":62355,
"android-menu":62356,
"android-microphone":62188,
"android-microphone-off":62357,
"android-more-horizontal":62358,
"android-more-vertical":62359,
"android-navigate":62360,
"android-notifications":62363,
"android-notifications-none":62361,
"android-notifications-off":62362,
"android-open":62364,
"android-options":62365,
"android-people":62366,
"android-person":62368,
"android-person-add":62367,
"android-phone-landscape":62369,
"android-phone-portrait":62370,
"android-pin":62371,
"android-plane":62372,
"android-playstore":62192,
"android-print":62373,
"android-radio-button-off":62374,
"android-radio-button-on":62375,
"android-refresh":62376,
"android-remove":62196,
"android-remove-circle":62377,
"android-restaurant":62378,
"android-sad":62379,
"android-search":62197,
"android-send":62198,
"android-settings":62199,
"android-share":62200,
"android-share-alt":62380,
"android-star":62204,
"android-star-half":62381,
"android-star-outline":62382,
"android-stopwatch":62205,
"android-subway":62383,
"android-sunny":62384,
"android-sync":62385,
"android-textsms":62386,
"android-time":62387,
"android-train":62388,
"android-unlock":62389,
"android-upload":62390,
"android-volume-down":62391,
"android-volume-mute":62392,
"android-volume-off":62393,
"android-volume-up":62394,
"android-walk":62395,
"android-warning":62396,
"android-watch":62397,
"android-wifi":62213,
"aperture":62227,
"archive":61698,
"arrow-down-a":61699,
"arrow-down-b":61700,
"arrow-down-c":61701,
"arrow-expand":62046,
"arrow-graph-down-left":62047,
"arrow-graph-down-right":62048,
"arrow-graph-up-left":62049,
"arrow-graph-up-right":62050,
"arrow-left-a":61702,
"arrow-left-b":61703,
"arrow-left-c":61704,
"arrow-move":62051,
"arrow-resize":62052,
"arrow-return-left":62053,
"arrow-return-right":62054,
"arrow-right-a":61705,
"arrow-right-b":61706,
"arrow-right-c":61707,
"arrow-shrink":62055,
"arrow-swap":62056,
"arrow-up-a":61708,
"arrow-up-b":61709,
"arrow-up-c":61710,
"asterisk":62228,
"at":61711,
"backspace":62399,
"backspace-outline":62398,
"bag":61712,
"battery-charging":61713,
"battery-empty":61714,
"battery-full":61715,
"battery-half":61716,
"battery-low":61717,
"beaker":62057,
"beer":62058,
"bluetooth":61718,
"bonfire":62229,
"bookmark":62059,
"bowtie":62400,
"briefcase":62060,
"bug":62142,
"calculator":62061,
"calendar":61719,
"camera":61720,
"card":61721,
"cash":62230,
"chatbox":61723,
"chatbox-working":61722,
"chatboxes":61724,
"chatbubble":61726,
"chatbubble-working":61725,
"chatbubbles":61727,
"checkmark":61730,
"checkmark-circled":61728,
"checkmark-round":61729,
"chevron-down":61731,
"chevron-left":61732,
"chevron-right":61733,
"chevron-up":61734,
"clipboard":61735,
"clock":62062,
"close":61738,
"close-circled":61736,
"close-round":61737,
"closed-captioning":62231,
"cloud":61739,
"code":62065,
"code-download":62063,
"code-working":62064,
"coffee":62066,
"compass":62067,
"compose":61740,
"connection-bars":62068,
"contrast":62069,
"crop":62401,
"cube":62232,
"disc":61741,
"document":61743,
"document-text":61742,
"drag":61744,
"earth":62070,
"easel":62402,
"edit":62143,
"egg":62071,
"eject":61745,
"email":61746,
"email-unread":62403,
"erlenmeyer-flask":62405,
"erlenmeyer-flask-bubbles":62404,
"eye":61747,
"eye-disabled":62214,
"female":62072,
"filing":61748,
"film-marker":61749,
"fireball":62233,
"flag":62073,
"flame":62234,
"flash":61751,
"flash-off":61750,
"folder":61753,
"fork":62074,
"fork-repo":62144,
"forward":61754,
"funnel":62235,
"gear-a":61757,
"gear-b":61758,
"grid":61759,
"hammer":62075,
"happy":62236,
"happy-outline":62406,
"headphone":61760,
"heart":61761,
"heart-broken":62237,
"help":61763,
"help-buoy":62076,
"help-circled":61762,
"home":61764,
"icecream":62077,
"image":61767,
"images":61768,
"information":61770,
"information-circled":61769,
"ionic":61771,
"ios-alarm":62408,
"ios-alarm-outline":62407,
"ios-albums":62410,
"ios-albums-outline":62409,
"ios-americanfootball":62412,
"ios-americanfootball-outline":62411,
"ios-analytics":62414,
"ios-analytics-outline":62413,
"ios-arrow-back":62415,
"ios-arrow-down":62416,
"ios-arrow-forward":62417,
"ios-arrow-left":62418,
"ios-arrow-right":62419,
"ios-arrow-thin-down":62420,
"ios-arrow-thin-left":62421,
"ios-arrow-thin-right":62422,
"ios-arrow-thin-up":62423,
"ios-arrow-up":62424,
"ios-at":62426,
"ios-at-outline":62425,
"ios-barcode":62428,
"ios-barcode-outline":62427,
"ios-baseball":62430,
"ios-baseball-outline":62429,
"ios-basketball":62432,
"ios-basketball-outline":62431,
"ios-bell":62434,
"ios-bell-outline":62433,
"ios-body":62436,
"ios-body-outline":62435,
"ios-bolt":62438,
"ios-bolt-outline":62437,
"ios-book":62440,
"ios-book-outline":62439,
"ios-bookmarks":62442,
"ios-bookmarks-outline":62441,
"ios-box":62444,
"ios-box-outline":62443,
"ios-briefcase":62446,
"ios-briefcase-outline":62445,
"ios-browsers":62448,
"ios-browsers-outline":62447,
"ios-calculator":62450,
"ios-calculator-outline":62449,
"ios-calendar":62452,
"ios-calendar-outline":62451,
"ios-camera":62454,
"ios-camera-outline":62453,
"ios-cart":62456,
"ios-cart-outline":62455,
"ios-chatboxes":62458,
"ios-chatboxes-outline":62457,
"ios-chatbubble":62460,
"ios-chatbubble-outline":62459,
"ios-checkmark":62463,
"ios-checkmark-empty":62461,
"ios-checkmark-outline":62462,
"ios-circle-filled":62464,
"ios-circle-outline":62465,
"ios-clock":62467,
"ios-clock-outline":62466,
"ios-close":62470,
"ios-close-empty":62468,
"ios-close-outline":62469,
"ios-cloud":62476,
"ios-cloud-download":62472,
"ios-cloud-download-outline":62471,
"ios-cloud-outline":62473,
"ios-cloud-upload":62475,
"ios-cloud-upload-outline":62474,
"ios-cloudy":62480,
"ios-cloudy-night":62478,
"ios-cloudy-night-outline":62477,
"ios-cloudy-outline":62479,
"ios-cog":62482,
"ios-cog-outline":62481,
"ios-color-filter":62484,
"ios-color-filter-outline":62483,
"ios-color-wand":62486,
"ios-color-wand-outline":62485,
"ios-compose":62488,
"ios-compose-outline":62487,
"ios-contact":62490,
"ios-contact-outline":62489,
"ios-copy":62492,
"ios-copy-outline":62491,
"ios-crop":62494,
"ios-crop-strong":62493,
"ios-download":62496,
"ios-download-outline":62495,
"ios-drag":62497,
"ios-email":62499,
"ios-email-outline":62498,
"ios-eye":62501,
"ios-eye-outline":62500,
"ios-fastforward":62503,
"ios-fastforward-outline":62502,
"ios-filing":62505,
"ios-filing-outline":62504,
"ios-film":62507,
"ios-film-outline":62506,
"ios-flag":62509,
"ios-flag-outline":62508,
"ios-flame":62511,
"ios-flame-outline":62510,
"ios-flask":62513,
"ios-flask-outline":62512,
"ios-flower":62515,
"ios-flower-outline":62514,
"ios-folder":62517,
"ios-folder-outline":62516,
"ios-football":62519,
"ios-football-outline":62518,
"ios-game-controller-a":62521,
"ios-game-controller-a-outline":62520,
"ios-game-controller-b":62523,
"ios-game-controller-b-outline":62522,
"ios-gear":62525,
"ios-gear-outline":62524,
"ios-glasses":62527,
"ios-glasses-outline":62526,
"ios-grid-view":62529,
"ios-grid-view-outline":62528,
"ios-heart":62531,
"ios-heart-outline":62530,
"ios-help":62534,
"ios-help-empty":62532,
"ios-help-outline":62533,
"ios-home":62536,
"ios-home-outline":62535,
"ios-infinite":62538,
"ios-infinite-outline":62537,
"ios-information":62541,
"ios-information-empty":62539,
"ios-information-outline":62540,
"ios-ionic-outline":62542,
"ios-keypad":62544,
"ios-keypad-outline":62543,
"ios-lightbulb":62546,
"ios-lightbulb-outline":62545,
"ios-list":62548,
"ios-list-outline":62547,
"ios-location":62550,
"ios-location-outline":62549,
"ios-locked":62552,
"ios-locked-outline":62551,
"ios-loop":62554,
"ios-loop-strong":62553,
"ios-medical":62556,
"ios-medical-outline":62555,
"ios-medkit":62558,
"ios-medkit-outline":62557,
"ios-mic":62561,
"ios-mic-off":62559,
"ios-mic-outline":62560,
"ios-minus":62564,
"ios-minus-empty":62562,
"ios-minus-outline":62563,
"ios-monitor":62566,
"ios-monitor-outline":62565,
"ios-moon":62568,
"ios-moon-outline":62567,
"ios-more":62570,
"ios-more-outline":62569,
"ios-musical-note":62571,
"ios-musical-notes":62572,
"ios-navigate":62574,
"ios-navigate-outline":62573,
"ios-nutrition":62576,
"ios-nutrition-outline":62575,
"ios-paper":62578,
"ios-paper-outline":62577,
"ios-paperplane":62580,
"ios-paperplane-outline":62579,
"ios-partlysunny":62582,
"ios-partlysunny-outline":62581,
"ios-pause":62584,
"ios-pause-outline":62583,
"ios-paw":62586,
"ios-paw-outline":62585,
"ios-people":62588,
"ios-people-outline":62587,
"ios-person":62590,
"ios-person-outline":62589,
"ios-personadd":62592,
"ios-personadd-outline":62591,
"ios-photos":62594,
"ios-photos-outline":62593,
"ios-pie":62596,
"ios-pie-outline":62595,
"ios-pint":62598,
"ios-pint-outline":62597,
"ios-play":62600,
"ios-play-outline":62599,
"ios-plus":62603,
"ios-plus-empty":62601,
"ios-plus-outline":62602,
"ios-pricetag":62605,
"ios-pricetag-outline":62604,
"ios-pricetags":62607,
"ios-pricetags-outline":62606,
"ios-printer":62609,
"ios-printer-outline":62608,
"ios-pulse":62611,
"ios-pulse-strong":62610,
"ios-rainy":62613,
"ios-rainy-outline":62612,
"ios-recording":62615,
"ios-recording-outline":62614,
"ios-redo":62617,
"ios-redo-outline":62616,
"ios-refresh":62620,
"ios-refresh-empty":62618,
"ios-refresh-outline":62619,
"ios-reload":62621,
"ios-reverse-camera":62623,
"ios-reverse-camera-outline":62622,
"ios-rewind":62625,
"ios-rewind-outline":62624,
"ios-rose":62627,
"ios-rose-outline":62626,
"ios-search":62629,
"ios-search-strong":62628,
"ios-settings":62631,
"ios-settings-strong":62630,
"ios-shuffle":62633,
"ios-shuffle-strong":62632,
"ios-skipbackward":62635,
"ios-skipbackward-outline":62634,
"ios-skipforward":62637,
"ios-skipforward-outline":62636,
"ios-snowy":62638,
"ios-speedometer":62640,
"ios-speedometer-outline":62639,
"ios-star":62643,
"ios-star-half":62641,
"ios-star-outline":62642,
"ios-stopwatch":62645,
"ios-stopwatch-outline":62644,
"ios-sunny":62647,
"ios-sunny-outline":62646,
"ios-telephone":62649,
"ios-telephone-outline":62648,
"ios-tennisball":62651,
"ios-tennisball-outline":62650,
"ios-thunderstorm":62653,
"ios-thunderstorm-outline":62652,
"ios-time":62655,
"ios-time-outline":62654,
"ios-timer":62657,
"ios-timer-outline":62656,
"ios-toggle":62659,
"ios-toggle-outline":62658,
"ios-trash":62661,
"ios-trash-outline":62660,
"ios-undo":62663,
"ios-undo-outline":62662,
"ios-unlocked":62665,
"ios-unlocked-outline":62664,
"ios-upload":62667,
"ios-upload-outline":62666,
"ios-videocam":62669,
"ios-videocam-outline":62668,
"ios-volume-high":62670,
"ios-volume-low":62671,
"ios-wineglass":62673,
"ios-wineglass-outline":62672,
"ios-world":62675,
"ios-world-outline":62674,
"ipad":61945,
"iphone":61946,
"ipod":61947,
"jet":62101,
"key":62102,
"knife":62103,
"laptop":61948,
"leaf":61949,
"levels":62104,
"lightbulb":62105,
"link":61950,
"load-a":62106,
"load-b":62107,
"load-c":62108,
"load-d":62109,
"location":61951,
"lock-combination":62676,
"locked":61952,
"log-in":62110,
"log-out":62111,
"loop":61953,
"magnet":62112,
"male":62113,
"man":61954,
"map":61955,
"medkit":62114,
"merge":62271,
"mic-a":61956,
"mic-b":61957,
"mic-c":61958,
"minus":61961,
"minus-circled":61959,
"minus-round":61960,
"model-s":62145,
"monitor":61962,
"more":61963,
"mouse":62272,
"music-note":61964,
"navicon":61966,
"navicon-round":61965,
"navigate":62115,
"network":62273,
"no-smoking":62146,
"nuclear":62116,
"outlet":62274,
"paintbrush":62677,
"paintbucket":62678,
"paper-airplane":62147,
"paperclip":61967,
"pause":61968,
"person":61971,
"person-add":61969,
"person-stalker":61970,
"pie-graph":62117,
"pin":62118,
"pinpoint":62119,
"pizza":62120,
"plane":61972,
"planet":62275,
"play":61973,
"playstation":62218,
"plus":61976,
"plus-circled":61974,
"plus-round":61975,
"podium":62276,
"pound":61977,
"power":62121,
"pricetag":62122,
"pricetags":62123,
"printer":61978,
"pull-request":62277,
"qr-scanner":62278,
"quote":62279,
"radio-waves":62124,
"record":61979,
"refresh":61980,
"reply":61982,
"reply-all":61981,
"ribbon-a":62280,
"ribbon-b":62281,
"sad":62282,
"sad-outline":62679,
"scissors":62283,
"search":61983,
"settings":62125,
"share":61984,
"shuffle":61985,
"skip-backward":61986,
"skip-forward":61987,
"social-android":61989,
"social-android-outline":61988,
"social-angular":62681,
"social-angular-outline":62680,
"social-apple":61991,
"social-apple-outline":61990,
"social-bitcoin":62127,
"social-bitcoin-outline":62126,
"social-buffer":61993,
"social-buffer-outline":61992,
"social-chrome":62683,
"social-chrome-outline":62682,
"social-codepen":62685,
"social-codepen-outline":62684,
"social-css3":62687,
"social-css3-outline":62686,
"social-designernews":61995,
"social-designernews-outline":61994,
"social-dribbble":61997,
"social-dribbble-outline":61996,
"social-dropbox":61999,
"social-dropbox-outline":61998,
"social-euro":62689,
"social-euro-outline":62688,
"social-facebook":62001,
"social-facebook-outline":62000,
"social-foursquare":62285,
"social-foursquare-outline":62284,
"social-freebsd-devil":62148,
"social-github":62003,
"social-github-outline":62002,
"social-google":62287,
"social-google-outline":62286,
"social-googleplus":62005,
"social-googleplus-outline":62004,
"social-hackernews":62007,
"social-hackernews-outline":62006,
"social-html5":62691,
"social-html5-outline":62690,
"social-instagram":62289,
"social-instagram-outline":62288,
"social-javascript":62693,
"social-javascript-outline":62692,
"social-linkedin":62009,
"social-linkedin-outline":62008,
"social-markdown":62694,
"social-nodejs":62695,
"social-octocat":62696,
"social-pinterest":62129,
"social-pinterest-outline":62128,
"social-python":62697,
"social-reddit":62011,
"social-reddit-outline":62010,
"social-rss":62013,
"social-rss-outline":62012,
"social-sass":62698,
"social-skype":62015,
"social-skype-outline":62014,
"social-snapchat":62700,
"social-snapchat-outline":62699,
"social-tumblr":62017,
"social-tumblr-outline":62016,
"social-tux":62149,
"social-twitch":62702,
"social-twitch-outline":62701,
"social-twitter":62019,
"social-twitter-outline":62018,
"social-usd":62291,
"social-usd-outline":62290,
"social-vimeo":62021,
"social-vimeo-outline":62020,
"social-whatsapp":62704,
"social-whatsapp-outline":62703,
"social-windows":62023,
"social-windows-outline":62022,
"social-wordpress":62025,
"social-wordpress-outline":62024,
"social-yahoo":62027,
"social-yahoo-outline":62026,
"social-yen":62706,
"social-yen-outline":62705,
"social-youtube":62029,
"social-youtube-outline":62028,
"soup-can":62708,
"soup-can-outline":62707,
"speakerphone":62130,
"speedometer":62131,
"spoon":62132,
"star":62030,
"stats-bars":62133,
"steam":62219,
"stop":62031,
"thermometer":62134,
"thumbsdown":62032,
"thumbsup":62033,
"toggle":62293,
"toggle-filled":62292,
"transgender":62709,
"trash-a":62034,
"trash-b":62035,
"trophy":62294,
"tshirt":62711,
"tshirt-outline":62710,
"umbrella":62135,
"university":62295,
"unlocked":62036,
"upload":62037,
"usb":62136,
"videocamera":62038,
"volume-high":62039,
"volume-low":62040,
"volume-medium":62041,
"volume-mute":62042,
"wand":62296,
"waterdrop":62043,
"wifi":62044,
"wineglass":62137,
"woman":62045,
"wrench":62138,
"xbox":62220};


var Ionicons=createIconSet(glyphMap,'Ionicons');

module.exports = Ionicons;
module.exports.glyphMap = glyphMap;
});
__d('createIconSet',["flattenStyle","ViewStylePropTypes","TextStylePropTypes","lodash/index.js","react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};





var _=require('lodash/index.js');
var React=require('react-native/Libraries/react-native/react-native.js');var 

View=




React.View;var Text=React.Text;var StyleSheet=React.StyleSheet;var TabBarIOS=React.TabBarIOS;var NativeModules=React.NativeModules;
var RNVectorIconsManager=NativeModules.RNVectorIconsManager;
var flattenStyle=require('flattenStyle');
var ViewStylePropTypes=require('ViewStylePropTypes');
var TextStylePropTypes=require('TextStylePropTypes');

var DEFAULT_ICON_SIZE=12;
var TAB_BAR_ICON_SIZE=30;
var DEFAULT_ICON_COLOR='black';

function createIconSet(glyphMap,fontFamily){
var styles=StyleSheet.create({
container:{
overflow:'hidden',
backgroundColor:'transparent',
flexDirection:'row',
justifyContent:'flex-start',
alignItems:'center'},

text:{
fontFamily:fontFamily}});



var Icon=React.createClass({displayName:'Icon',
propTypes:{
name:React.PropTypes.oneOf(Object.keys(glyphMap)).isRequired,
size:React.PropTypes.number,
color:React.PropTypes.string,
style:React.PropTypes.oneOfType([
React.PropTypes.number,
React.PropTypes.object,
React.PropTypes.array])},



setNativeProps:function(nativeProps){
this._root.setNativeProps(nativeProps);},


render:function(){var _this=this;

var name=this.props.name;
var glyph=glyphMap[name] || '?';
if(typeof glyph === 'number'){
glyph = String.fromCharCode(glyph);}


var containerStyle=_.pick(flattenStyle([styles.container,this.props.style]),Object.keys(ViewStylePropTypes));

var textStyle=_.pick(
flattenStyle([this.props.style,styles.text]),
Object.keys(TextStylePropTypes));


var size=this.props.size || textStyle.fontSize || DEFAULT_ICON_SIZE;
var color=this.props.color || textStyle.color || DEFAULT_ICON_COLOR;

textStyle.fontSize = size;
textStyle.lineHeight = size;
textStyle.height = size;
textStyle.color = color;

return (
React.createElement(View,_extends({ref:function(component){return _this._root = component;}},this.props,{style:containerStyle}),
React.createElement(Text,{style:textStyle},glyph),
this.props.children));}});





var imageSourceCache={};

var getImageSource=function(name,size,color){
if(!RNVectorIconsManager){
throw new Error('RNVectorIconsManager not available, did you add the library to your project and link with libRNVectorIcons.a?');}


var glyph=glyphMap[name] || '?';
if(typeof glyph === 'number'){
glyph = String.fromCharCode(glyph);}

size = size || DEFAULT_ICON_SIZE;
color = color || DEFAULT_ICON_COLOR;

var cacheKey=glyph + ':' + size + ':' + color;

return new Promise(function(resolve,reject){
var cached=imageSourceCache[cacheKey];
if(typeof cached !== 'undefined'){
if(!cached || cached instanceof Error){reject(cached);}
return resolve({uri:cached});}

RNVectorIconsManager.getImageForFont(fontFamily,glyph,size,color,function(err,image){
if(typeof err === 'string'){
err = new Error(err);}

imageSourceCache[cacheKey] = image || err || false;
if(!err && image){
return resolve({uri:image});}

reject(err);});});};





var TabBarItem=React.createClass({displayName:'TabBarItem',
componentDidMount:function(){var _this2=this;
var size=this.props.iconSize || TAB_BAR_ICON_SIZE;
if(this.props.iconName){
getImageSource(this.props.iconName,size).then(function(image){return _this2.setState({icon:image});});}

if(this.props.selectedIconName){
getImageSource(this.props.selectedIconName,size).then(function(image){return _this2.setState({selectedIcon:image});});}},



render:function(){
return React.createElement(TabBarIOS.Item,_extends({},this.props,this.state));}});



Icon.TabBarItem = TabBarItem;
Icon.getImageSource = getImageSource;

return Icon;}
;

module.exports = createIconSet;
});
__d('lodash/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  /**
 * @license
 * lodash 3.10.1 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern -d -o ./index.js`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */
;(function(){


var undefined;


var VERSION='3.10.1';


var BIND_FLAG=1,
BIND_KEY_FLAG=2,
CURRY_BOUND_FLAG=4,
CURRY_FLAG=8,
CURRY_RIGHT_FLAG=16,
PARTIAL_FLAG=32,
PARTIAL_RIGHT_FLAG=64,
ARY_FLAG=128,
REARG_FLAG=256;


var DEFAULT_TRUNC_LENGTH=30,
DEFAULT_TRUNC_OMISSION='...';


var HOT_COUNT=150,
HOT_SPAN=16;


var LARGE_ARRAY_SIZE=200;


var LAZY_FILTER_FLAG=1,
LAZY_MAP_FLAG=2;


var FUNC_ERROR_TEXT='Expected a function';


var PLACEHOLDER='__lodash_placeholder__';


var argsTag='[object Arguments]',
arrayTag='[object Array]',
boolTag='[object Boolean]',
dateTag='[object Date]',
errorTag='[object Error]',
funcTag='[object Function]',
mapTag='[object Map]',
numberTag='[object Number]',
objectTag='[object Object]',
regexpTag='[object RegExp]',
setTag='[object Set]',
stringTag='[object String]',
weakMapTag='[object WeakMap]';

var arrayBufferTag='[object ArrayBuffer]',
float32Tag='[object Float32Array]',
float64Tag='[object Float64Array]',
int8Tag='[object Int8Array]',
int16Tag='[object Int16Array]',
int32Tag='[object Int32Array]',
uint8Tag='[object Uint8Array]',
uint8ClampedTag='[object Uint8ClampedArray]',
uint16Tag='[object Uint16Array]',
uint32Tag='[object Uint32Array]';


var reEmptyStringLeading=/\b__p \+= '';/g,
reEmptyStringMiddle=/\b(__p \+=) '' \+/g,
reEmptyStringTrailing=/(__e\(.*?\)|\b__t\)) \+\n'';/g;


var reEscapedHtml=/&(?:amp|lt|gt|quot|#39|#96);/g,
reUnescapedHtml=/[&<>"'`]/g,
reHasEscapedHtml=RegExp(reEscapedHtml.source),
reHasUnescapedHtml=RegExp(reUnescapedHtml.source);


var reEscape=/<%-([\s\S]+?)%>/g,
reEvaluate=/<%([\s\S]+?)%>/g,
reInterpolate=/<%=([\s\S]+?)%>/g;


var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,
reIsPlainProp=/^\w*$/,
rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g;





var reRegExpChars=/^[:!,]|[\\^$.*+?()[\]{}|\/]|(^[0-9a-fA-Fnrtuvx])|([\n\r\u2028\u2029])/g,
reHasRegExpChars=RegExp(reRegExpChars.source);


var reComboMark=/[\u0300-\u036f\ufe20-\ufe23]/g;


var reEscapeChar=/\\(\\)?/g;


var reEsTemplate=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;


var reFlags=/\w*$/;


var reHasHexPrefix=/^0[xX]/;


var reIsHostCtor=/^\[object .+?Constructor\]$/;


var reIsUint=/^\d+$/;


var reLatin1=/[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g;


var reNoMatch=/($^)/;


var reUnescapedString=/['\n\r\u2028\u2029\\]/g;


var reWords=(function(){
var upper='[A-Z\\xc0-\\xd6\\xd8-\\xde]',
lower='[a-z\\xdf-\\xf6\\xf8-\\xff]+';

return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+','g');})();



var contextProps=[
'Array','ArrayBuffer','Date','Error','Float32Array','Float64Array',
'Function','Int8Array','Int16Array','Int32Array','Math','Number',
'Object','RegExp','Set','String','_','clearTimeout','isFinite',
'parseFloat','parseInt','setTimeout','TypeError','Uint8Array',
'Uint8ClampedArray','Uint16Array','Uint32Array','WeakMap'];



var templateCounter=-1;


var typedArrayTags={};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = 
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = 
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = 
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = 
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] = 
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = 
typedArrayTags[dateTag] = typedArrayTags[errorTag] = 
typedArrayTags[funcTag] = typedArrayTags[mapTag] = 
typedArrayTags[numberTag] = typedArrayTags[objectTag] = 
typedArrayTags[regexpTag] = typedArrayTags[setTag] = 
typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;


var cloneableTags={};
cloneableTags[argsTag] = cloneableTags[arrayTag] = 
cloneableTags[arrayBufferTag] = cloneableTags[boolTag] = 
cloneableTags[dateTag] = cloneableTags[float32Tag] = 
cloneableTags[float64Tag] = cloneableTags[int8Tag] = 
cloneableTags[int16Tag] = cloneableTags[int32Tag] = 
cloneableTags[numberTag] = cloneableTags[objectTag] = 
cloneableTags[regexpTag] = cloneableTags[stringTag] = 
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = 
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] = 
cloneableTags[mapTag] = cloneableTags[setTag] = 
cloneableTags[weakMapTag] = false;


var deburredLetters={
'\xc0':'A','\xc1':'A','\xc2':'A','\xc3':'A','\xc4':'A','\xc5':'A',
'\xe0':'a','\xe1':'a','\xe2':'a','\xe3':'a','\xe4':'a','\xe5':'a',
'\xc7':'C','\xe7':'c',
'\xd0':'D','\xf0':'d',
'\xc8':'E','\xc9':'E','\xca':'E','\xcb':'E',
'\xe8':'e','\xe9':'e','\xea':'e','\xeb':'e',
'\xcC':'I','\xcd':'I','\xce':'I','\xcf':'I',
'\xeC':'i','\xed':'i','\xee':'i','\xef':'i',
'\xd1':'N','\xf1':'n',
'\xd2':'O','\xd3':'O','\xd4':'O','\xd5':'O','\xd6':'O','\xd8':'O',
'\xf2':'o','\xf3':'o','\xf4':'o','\xf5':'o','\xf6':'o','\xf8':'o',
'\xd9':'U','\xda':'U','\xdb':'U','\xdc':'U',
'\xf9':'u','\xfa':'u','\xfb':'u','\xfc':'u',
'\xdd':'Y','\xfd':'y','\xff':'y',
'\xc6':'Ae','\xe6':'ae',
'\xde':'Th','\xfe':'th',
'\xdf':'ss'};



var htmlEscapes={
'&':'&amp;',
'<':'&lt;',
'>':'&gt;',
'"':'&quot;',
"'":'&#39;',
'`':'&#96;'};



var htmlUnescapes={
'&amp;':'&',
'&lt;':'<',
'&gt;':'>',
'&quot;':'"',
'&#39;':"'",
'&#96;':'`'};



var objectTypes={
'function':true,
'object':true};



var regexpEscapes={
'0':'x30','1':'x31','2':'x32','3':'x33','4':'x34',
'5':'x35','6':'x36','7':'x37','8':'x38','9':'x39',
'A':'x41','B':'x42','C':'x43','D':'x44','E':'x45','F':'x46',
'a':'x61','b':'x62','c':'x63','d':'x64','e':'x65','f':'x66',
'n':'x6e','r':'x72','t':'x74','u':'x75','v':'x76','x':'x78'};



var stringEscapes={
'\\':'\\',
"'":"'",
'\n':'n',
'\r':'r',
'\u2028':'u2028',
'\u2029':'u2029'};



var freeExports=objectTypes[typeof exports] && exports && !exports.nodeType && exports;


var freeModule=objectTypes[typeof module] && module && !module.nodeType && module;


var freeGlobal=freeExports && freeModule && typeof global == 'object' && global && global.Object && global;


var freeSelf=objectTypes[typeof self] && self && self.Object && self;


var freeWindow=objectTypes[typeof window] && window && window.Object && window;


var moduleExports=freeModule && freeModule.exports === freeExports && freeExports;







var root=freeGlobal || freeWindow !== (this && this.window) && freeWindow || freeSelf || this;












function baseCompareAscending(value,other){
if(value !== other){
var valIsNull=value === null,
valIsUndef=value === undefined,
valIsReflexive=value === value;

var othIsNull=other === null,
othIsUndef=other === undefined,
othIsReflexive=other === other;

if(value > other && !othIsNull || !valIsReflexive || 
valIsNull && !othIsUndef && othIsReflexive || 
valIsUndef && othIsReflexive){
return 1;}

if(value < other && !valIsNull || !othIsReflexive || 
othIsNull && !valIsUndef && valIsReflexive || 
othIsUndef && valIsReflexive){
return -1;}}


return 0;}












function baseFindIndex(array,predicate,fromRight){
var length=array.length,
index=fromRight?length:-1;

while(fromRight?index--:++index < length) {
if(predicate(array[index],index,array)){
return index;}}


return -1;}











function baseIndexOf(array,value,fromIndex){
if(value !== value){
return indexOfNaN(array,fromIndex);}

var index=fromIndex - 1,
length=array.length;

while(++index < length) {
if(array[index] === value){
return index;}}


return -1;}










function baseIsFunction(value){


return typeof value == 'function' || false;}










function baseToString(value){
return value == null?'':value + '';}











function charsLeftIndex(string,chars){
var index=-1,
length=string.length;

while(++index < length && chars.indexOf(string.charAt(index)) > -1) {}
return index;}











function charsRightIndex(string,chars){
var index=string.length;

while(index-- && chars.indexOf(string.charAt(index)) > -1) {}
return index;}











function compareAscending(object,other){
return baseCompareAscending(object.criteria,other.criteria) || object.index - other.index;}
















function compareMultiple(object,other,orders){
var index=-1,
objCriteria=object.criteria,
othCriteria=other.criteria,
length=objCriteria.length,
ordersLength=orders.length;

while(++index < length) {
var result=baseCompareAscending(objCriteria[index],othCriteria[index]);
if(result){
if(index >= ordersLength){
return result;}

var order=orders[index];
return result * (order === 'asc' || order === true?1:-1);}}









return object.index - other.index;}









function deburrLetter(letter){
return deburredLetters[letter];}









function escapeHtmlChar(chr){
return htmlEscapes[chr];}











function escapeRegExpChar(chr,leadingChar,whitespaceChar){
if(leadingChar){
chr = regexpEscapes[chr];}else 
if(whitespaceChar){
chr = stringEscapes[chr];}

return '\\' + chr;}









function escapeStringChar(chr){
return '\\' + stringEscapes[chr];}











function indexOfNaN(array,fromIndex,fromRight){
var length=array.length,
index=fromIndex + (fromRight?0:-1);

while(fromRight?index--:++index < length) {
var other=array[index];
if(other !== other){
return index;}}


return -1;}









function isObjectLike(value){
return !!value && typeof value == 'object';}










function isSpace(charCode){
return charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160 || charCode == 5760 || charCode == 6158 || 
charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279);}











function replaceHolders(array,placeholder){
var index=-1,
length=array.length,
resIndex=-1,
result=[];

while(++index < length) {
if(array[index] === placeholder){
array[index] = PLACEHOLDER;
result[++resIndex] = index;}}


return result;}











function sortedUniq(array,iteratee){
var seen,
index=-1,
length=array.length,
resIndex=-1,
result=[];

while(++index < length) {
var value=array[index],
computed=iteratee?iteratee(value,index,array):value;

if(!index || seen !== computed){
seen = computed;
result[++resIndex] = value;}}


return result;}










function trimmedLeftIndex(string){
var index=-1,
length=string.length;

while(++index < length && isSpace(string.charCodeAt(index))) {}
return index;}










function trimmedRightIndex(string){
var index=string.length;

while(index-- && isSpace(string.charCodeAt(index))) {}
return index;}









function unescapeHtmlChar(chr){
return htmlUnescapes[chr];}







































function runInContext(context){




context = context?_.defaults(root.Object(),context,_.pick(root,contextProps)):root;


var Array=context.Array,
Date=context.Date,
Error=context.Error,
Function=context.Function,
Math=context.Math,
Number=context.Number,
Object=context.Object,
RegExp=context.RegExp,
String=context.String,
TypeError=context.TypeError;


var arrayProto=Array.prototype,
objectProto=Object.prototype,
stringProto=String.prototype;


var fnToString=Function.prototype.toString;


var hasOwnProperty=objectProto.hasOwnProperty;


var idCounter=0;





var objToString=objectProto.toString;


var oldDash=root._;


var reIsNative=RegExp('^' + 
fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g,'\\$&').
replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,'$1.*?') + '$');



var ArrayBuffer=context.ArrayBuffer,
clearTimeout=context.clearTimeout,
parseFloat=context.parseFloat,
pow=Math.pow,
propertyIsEnumerable=objectProto.propertyIsEnumerable,
Set=getNative(context,'Set'),
setTimeout=context.setTimeout,
splice=arrayProto.splice,
Uint8Array=context.Uint8Array,
WeakMap=getNative(context,'WeakMap');


var nativeCeil=Math.ceil,
nativeCreate=getNative(Object,'create'),
nativeFloor=Math.floor,
nativeIsArray=getNative(Array,'isArray'),
nativeIsFinite=context.isFinite,
nativeKeys=getNative(Object,'keys'),
nativeMax=Math.max,
nativeMin=Math.min,
nativeNow=getNative(Date,'now'),
nativeParseInt=context.parseInt,
nativeRandom=Math.random;


var NEGATIVE_INFINITY=Number.NEGATIVE_INFINITY,
POSITIVE_INFINITY=Number.POSITIVE_INFINITY;


var MAX_ARRAY_LENGTH=4294967295,
MAX_ARRAY_INDEX=MAX_ARRAY_LENGTH - 1,
HALF_MAX_ARRAY_LENGTH=MAX_ARRAY_LENGTH >>> 1;





var MAX_SAFE_INTEGER=9007199254740991;


var metaMap=WeakMap && new WeakMap();


var realNames={};



































































































function lodash(value){
if(isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)){
if(value instanceof LodashWrapper){
return value;}

if(hasOwnProperty.call(value,'__chain__') && hasOwnProperty.call(value,'__wrapped__')){
return wrapperClone(value);}}


return new LodashWrapper(value);}







function baseLodash(){}











function LodashWrapper(value,chainAll,actions){
this.__wrapped__ = value;
this.__actions__ = actions || [];
this.__chain__ = !!chainAll;}









var support=lodash.support = {};










lodash.templateSettings = {







'escape':reEscape,







'evaluate':reEvaluate,







'interpolate':reInterpolate,







'variable':'',







'imports':{







'_':lodash}};











function LazyWrapper(value){
this.__wrapped__ = value;
this.__actions__ = [];
this.__dir__ = 1;
this.__filtered__ = false;
this.__iteratees__ = [];
this.__takeCount__ = POSITIVE_INFINITY;
this.__views__ = [];}










function lazyClone(){
var result=new LazyWrapper(this.__wrapped__);
result.__actions__ = arrayCopy(this.__actions__);
result.__dir__ = this.__dir__;
result.__filtered__ = this.__filtered__;
result.__iteratees__ = arrayCopy(this.__iteratees__);
result.__takeCount__ = this.__takeCount__;
result.__views__ = arrayCopy(this.__views__);
return result;}










function lazyReverse(){
if(this.__filtered__){
var result=new LazyWrapper(this);
result.__dir__ = -1;
result.__filtered__ = true;}else 
{
result = this.clone();
result.__dir__ *= -1;}

return result;}










function lazyValue(){
var array=this.__wrapped__.value(),
dir=this.__dir__,
isArr=isArray(array),
isRight=dir < 0,
arrLength=isArr?array.length:0,
view=getView(0,arrLength,this.__views__),
start=view.start,
end=view.end,
length=end - start,
index=isRight?end:start - 1,
iteratees=this.__iteratees__,
iterLength=iteratees.length,
resIndex=0,
takeCount=nativeMin(length,this.__takeCount__);

if(!isArr || arrLength < LARGE_ARRAY_SIZE || arrLength == length && takeCount == length){
return baseWrapperValue(isRight && isArr?array.reverse():array,this.__actions__);}

var result=[];

outer: 
while(length-- && resIndex < takeCount) {
index += dir;

var iterIndex=-1,
value=array[index];

while(++iterIndex < iterLength) {
var data=iteratees[iterIndex],
iteratee=data.iteratee,
type=data.type,
computed=iteratee(value);

if(type == LAZY_MAP_FLAG){
value = computed;}else 
if(!computed){
if(type == LAZY_FILTER_FLAG){
continue outer;}else 
{
break outer;}}}



result[resIndex++] = value;}

return result;}












function MapCache(){
this.__data__ = {};}











function mapDelete(key){
return this.has(key) && delete this.__data__[key];}











function mapGet(key){
return key == '__proto__'?undefined:this.__data__[key];}











function mapHas(key){
return key != '__proto__' && hasOwnProperty.call(this.__data__,key);}












function mapSet(key,value){
if(key != '__proto__'){
this.__data__[key] = value;}

return this;}











function SetCache(values){
var length=values?values.length:0;

this.data = {'hash':nativeCreate(null),'set':new Set()};
while(length--) {
this.push(values[length]);}}












function cacheIndexOf(cache,value){
var data=cache.data,
result=typeof value == 'string' || isObject(value)?data.set.has(value):data.hash[value];

return result?0:-1;}










function cachePush(value){
var data=this.data;
if(typeof value == 'string' || isObject(value)){
data.set.add(value);}else 
{
data.hash[value] = true;}}













function arrayConcat(array,other){
var index=-1,
length=array.length,
othIndex=-1,
othLength=other.length,
result=Array(length + othLength);

while(++index < length) {
result[index] = array[index];}

while(++othIndex < othLength) {
result[index++] = other[othIndex];}

return result;}










function arrayCopy(source,array){
var index=-1,
length=source.length;

array || (array = Array(length));
while(++index < length) {
array[index] = source[index];}

return array;}











function arrayEach(array,iteratee){
var index=-1,
length=array.length;

while(++index < length) {
if(iteratee(array[index],index,array) === false){
break;}}


return array;}











function arrayEachRight(array,iteratee){
var length=array.length;

while(length--) {
if(iteratee(array[length],length,array) === false){
break;}}


return array;}












function arrayEvery(array,predicate){
var index=-1,
length=array.length;

while(++index < length) {
if(!predicate(array[index],index,array)){
return false;}}


return true;}













function arrayExtremum(array,iteratee,comparator,exValue){
var index=-1,
length=array.length,
computed=exValue,
result=computed;

while(++index < length) {
var value=array[index],
current=+iteratee(value);

if(comparator(current,computed)){
computed = current;
result = value;}}


return result;}











function arrayFilter(array,predicate){
var index=-1,
length=array.length,
resIndex=-1,
result=[];

while(++index < length) {
var value=array[index];
if(predicate(value,index,array)){
result[++resIndex] = value;}}


return result;}











function arrayMap(array,iteratee){
var index=-1,
length=array.length,
result=Array(length);

while(++index < length) {
result[index] = iteratee(array[index],index,array);}

return result;}










function arrayPush(array,values){
var index=-1,
length=values.length,
offset=array.length;

while(++index < length) {
array[offset + index] = values[index];}

return array;}














function arrayReduce(array,iteratee,accumulator,initFromArray){
var index=-1,
length=array.length;

if(initFromArray && length){
accumulator = array[++index];}

while(++index < length) {
accumulator = iteratee(accumulator,array[index],index,array);}

return accumulator;}














function arrayReduceRight(array,iteratee,accumulator,initFromArray){
var length=array.length;
if(initFromArray && length){
accumulator = array[--length];}

while(length--) {
accumulator = iteratee(accumulator,array[length],length,array);}

return accumulator;}












function arraySome(array,predicate){
var index=-1,
length=array.length;

while(++index < length) {
if(predicate(array[index],index,array)){
return true;}}


return false;}











function arraySum(array,iteratee){
var length=array.length,
result=0;

while(length--) {
result += +iteratee(array[length]) || 0;}

return result;}










function assignDefaults(objectValue,sourceValue){
return objectValue === undefined?sourceValue:objectValue;}















function assignOwnDefaults(objectValue,sourceValue,key,object){
return objectValue === undefined || !hasOwnProperty.call(object,key)?
sourceValue:
objectValue;}













function assignWith(object,source,customizer){
var index=-1,
props=keys(source),
length=props.length;

while(++index < length) {
var key=props[index],
value=object[key],
result=customizer(value,source[key],key,object,source);

if((result === result?result !== value:value === value) || 
value === undefined && !(key in object)){
object[key] = result;}}


return object;}











function baseAssign(object,source){
return source == null?
object:
baseCopy(source,keys(source),object);}











function baseAt(collection,props){
var index=-1,
isNil=collection == null,
isArr=!isNil && isArrayLike(collection),
length=isArr?collection.length:0,
propsLength=props.length,
result=Array(propsLength);

while(++index < propsLength) {
var key=props[index];
if(isArr){
result[index] = isIndex(key,length)?collection[key]:undefined;}else 
{
result[index] = isNil?undefined:collection[key];}}


return result;}











function baseCopy(source,props,object){
object || (object = {});

var index=-1,
length=props.length;

while(++index < length) {
var key=props[index];
object[key] = source[key];}

return object;}












function baseCallback(func,thisArg,argCount){
var type=typeof func;
if(type == 'function'){
return thisArg === undefined?
func:
bindCallback(func,thisArg,argCount);}

if(func == null){
return identity;}

if(type == 'object'){
return baseMatches(func);}

return thisArg === undefined?
property(func):
baseMatchesProperty(func,thisArg);}
















function baseClone(value,isDeep,customizer,key,object,stackA,stackB){
var result;
if(customizer){
result = object?customizer(value,key,object):customizer(value);}

if(result !== undefined){
return result;}

if(!isObject(value)){
return value;}

var isArr=isArray(value);
if(isArr){
result = initCloneArray(value);
if(!isDeep){
return arrayCopy(value,result);}}else 

{
var tag=objToString.call(value),
isFunc=tag == funcTag;

if(tag == objectTag || tag == argsTag || isFunc && !object){
result = initCloneObject(isFunc?{}:value);
if(!isDeep){
return baseAssign(result,value);}}else 

{
return cloneableTags[tag]?
initCloneByTag(value,tag,isDeep):
object?value:{};}}



stackA || (stackA = []);
stackB || (stackB = []);

var length=stackA.length;
while(length--) {
if(stackA[length] == value){
return stackB[length];}}



stackA.push(value);
stackB.push(result);


(isArr?arrayEach:baseForOwn)(value,function(subValue,key){
result[key] = baseClone(subValue,isDeep,customizer,key,value,stackA,stackB);});

return result;}










var baseCreate=(function(){
function object(){}
return function(prototype){
if(isObject(prototype)){
object.prototype = prototype;
var result=new object();
object.prototype = undefined;}

return result || {};};})();













function baseDelay(func,wait,args){
if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

return setTimeout(function(){func.apply(undefined,args);},wait);}











function baseDifference(array,values){
var length=array?array.length:0,
result=[];

if(!length){
return result;}

var index=-1,
indexOf=getIndexOf(),
isCommon=indexOf == baseIndexOf,
cache=isCommon && values.length >= LARGE_ARRAY_SIZE?createCache(values):null,
valuesLength=values.length;

if(cache){
indexOf = cacheIndexOf;
isCommon = false;
values = cache;}

outer: 
while(++index < length) {
var value=array[index];

if(isCommon && value === value){
var valuesIndex=valuesLength;
while(valuesIndex--) {
if(values[valuesIndex] === value){
continue outer;}}


result.push(value);}else 

if(indexOf(values,value,0) < 0){
result.push(value);}}


return result;}











var baseEach=createBaseEach(baseForOwn);










var baseEachRight=createBaseEach(baseForOwnRight,true);











function baseEvery(collection,predicate){
var result=true;
baseEach(collection,function(value,index,collection){
result = !!predicate(value,index,collection);
return result;});

return result;}














function baseExtremum(collection,iteratee,comparator,exValue){
var computed=exValue,
result=computed;

baseEach(collection,function(value,index,collection){
var current=+iteratee(value,index,collection);
if(comparator(current,computed) || current === exValue && current === result){
computed = current;
result = value;}});


return result;}












function baseFill(array,value,start,end){
var length=array.length;

start = start == null?0:+start || 0;
if(start < 0){
start = -start > length?0:length + start;}

end = end === undefined || end > length?length:+end || 0;
if(end < 0){
end += length;}

length = start > end?0:end >>> 0;
start >>>= 0;

while(start < length) {
array[start++] = value;}

return array;}











function baseFilter(collection,predicate){
var result=[];
baseEach(collection,function(value,index,collection){
if(predicate(value,index,collection)){
result.push(value);}});


return result;}















function baseFind(collection,predicate,eachFunc,retKey){
var result;
eachFunc(collection,function(value,key,collection){
if(predicate(value,key,collection)){
result = retKey?key:value;
return false;}});


return result;}













function baseFlatten(array,isDeep,isStrict,result){
result || (result = []);

var index=-1,
length=array.length;

while(++index < length) {
var value=array[index];
if(isObjectLike(value) && isArrayLike(value) && (
isStrict || isArray(value) || isArguments(value))){
if(isDeep){

baseFlatten(value,isDeep,isStrict,result);}else 
{
arrayPush(result,value);}}else 

if(!isStrict){
result[result.length] = value;}}


return result;}














var baseFor=createBaseFor();











var baseForRight=createBaseFor(true);










function baseForIn(object,iteratee){
return baseFor(object,iteratee,keysIn);}











function baseForOwn(object,iteratee){
return baseFor(object,iteratee,keys);}











function baseForOwnRight(object,iteratee){
return baseForRight(object,iteratee,keys);}











function baseFunctions(object,props){
var index=-1,
length=props.length,
resIndex=-1,
result=[];

while(++index < length) {
var key=props[index];
if(isFunction(object[key])){
result[++resIndex] = key;}}


return result;}












function baseGet(object,path,pathKey){
if(object == null){
return;}

if(pathKey !== undefined && pathKey in toObject(object)){
path = [pathKey];}

var index=0,
length=path.length;

while(object != null && index < length) {
object = object[path[index++]];}

return index && index == length?object:undefined;}















function baseIsEqual(value,other,customizer,isLoose,stackA,stackB){
if(value === other){
return true;}

if(value == null || other == null || !isObject(value) && !isObjectLike(other)){
return value !== value && other !== other;}

return baseIsEqualDeep(value,other,baseIsEqual,customizer,isLoose,stackA,stackB);}

















function baseIsEqualDeep(object,other,equalFunc,customizer,isLoose,stackA,stackB){
var objIsArr=isArray(object),
othIsArr=isArray(other),
objTag=arrayTag,
othTag=arrayTag;

if(!objIsArr){
objTag = objToString.call(object);
if(objTag == argsTag){
objTag = objectTag;}else 
if(objTag != objectTag){
objIsArr = isTypedArray(object);}}


if(!othIsArr){
othTag = objToString.call(other);
if(othTag == argsTag){
othTag = objectTag;}else 
if(othTag != objectTag){
othIsArr = isTypedArray(other);}}


var objIsObj=objTag == objectTag,
othIsObj=othTag == objectTag,
isSameTag=objTag == othTag;

if(isSameTag && !(objIsArr || objIsObj)){
return equalByTag(object,other,objTag);}

if(!isLoose){
var objIsWrapped=objIsObj && hasOwnProperty.call(object,'__wrapped__'),
othIsWrapped=othIsObj && hasOwnProperty.call(other,'__wrapped__');

if(objIsWrapped || othIsWrapped){
return equalFunc(objIsWrapped?object.value():object,othIsWrapped?other.value():other,customizer,isLoose,stackA,stackB);}}


if(!isSameTag){
return false;}



stackA || (stackA = []);
stackB || (stackB = []);

var length=stackA.length;
while(length--) {
if(stackA[length] == object){
return stackB[length] == other;}}



stackA.push(object);
stackB.push(other);

var result=(objIsArr?equalArrays:equalObjects)(object,other,equalFunc,customizer,isLoose,stackA,stackB);

stackA.pop();
stackB.pop();

return result;}












function baseIsMatch(object,matchData,customizer){
var index=matchData.length,
length=index,
noCustomizer=!customizer;

if(object == null){
return !length;}

object = toObject(object);
while(index--) {
var data=matchData[index];
if(noCustomizer && data[2]?
data[1] !== object[data[0]]:
!(data[0] in object))
{
return false;}}


while(++index < length) {
data = matchData[index];
var key=data[0],
objValue=object[key],
srcValue=data[1];

if(noCustomizer && data[2]){
if(objValue === undefined && !(key in object)){
return false;}}else 

{
var result=customizer?customizer(objValue,srcValue,key):undefined;
if(!(result === undefined?baseIsEqual(srcValue,objValue,customizer,true):result)){
return false;}}}



return true;}











function baseMap(collection,iteratee){
var index=-1,
result=isArrayLike(collection)?Array(collection.length):[];

baseEach(collection,function(value,key,collection){
result[++index] = iteratee(value,key,collection);});

return result;}









function baseMatches(source){
var matchData=getMatchData(source);
if(matchData.length == 1 && matchData[0][2]){
var key=matchData[0][0],
value=matchData[0][1];

return function(object){
if(object == null){
return false;}

return object[key] === value && (value !== undefined || key in toObject(object));};}


return function(object){
return baseIsMatch(object,matchData);};}











function baseMatchesProperty(path,srcValue){
var isArr=isArray(path),
isCommon=isKey(path) && isStrictComparable(srcValue),
pathKey=path + '';

path = toPath(path);
return function(object){
if(object == null){
return false;}

var key=pathKey;
object = toObject(object);
if((isArr || !isCommon) && !(key in object)){
object = path.length == 1?object:baseGet(object,baseSlice(path,0,-1));
if(object == null){
return false;}

key = last(path);
object = toObject(object);}

return object[key] === srcValue?
srcValue !== undefined || key in object:
baseIsEqual(srcValue,object[key],undefined,true);};}















function baseMerge(object,source,customizer,stackA,stackB){
if(!isObject(object)){
return object;}

var isSrcArr=isArrayLike(source) && (isArray(source) || isTypedArray(source)),
props=isSrcArr?undefined:keys(source);

arrayEach(props || source,function(srcValue,key){
if(props){
key = srcValue;
srcValue = source[key];}

if(isObjectLike(srcValue)){
stackA || (stackA = []);
stackB || (stackB = []);
baseMergeDeep(object,source,key,baseMerge,customizer,stackA,stackB);}else 

{
var value=object[key],
result=customizer?customizer(value,srcValue,key,object,source):undefined,
isCommon=result === undefined;

if(isCommon){
result = srcValue;}

if((result !== undefined || isSrcArr && !(key in object)) && (
isCommon || (result === result?result !== value:value === value))){
object[key] = result;}}});



return object;}

















function baseMergeDeep(object,source,key,mergeFunc,customizer,stackA,stackB){
var length=stackA.length,
srcValue=source[key];

while(length--) {
if(stackA[length] == srcValue){
object[key] = stackB[length];
return;}}


var value=object[key],
result=customizer?customizer(value,srcValue,key,object,source):undefined,
isCommon=result === undefined;

if(isCommon){
result = srcValue;
if(isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))){
result = isArray(value)?
value:
isArrayLike(value)?arrayCopy(value):[];}else 

if(isPlainObject(srcValue) || isArguments(srcValue)){
result = isArguments(value)?
toPlainObject(value):
isPlainObject(value)?value:{};}else 

{
isCommon = false;}}




stackA.push(srcValue);
stackB.push(result);

if(isCommon){

object[key] = mergeFunc(result,srcValue,customizer,stackA,stackB);}else 
if(result === result?result !== value:value === value){
object[key] = result;}}










function baseProperty(key){
return function(object){
return object == null?undefined:object[key];};}










function basePropertyDeep(path){
var pathKey=path + '';
path = toPath(path);
return function(object){
return baseGet(object,path,pathKey);};}












function basePullAt(array,indexes){
var length=array?indexes.length:0;
while(length--) {
var index=indexes[length];
if(index != previous && isIndex(index)){
var previous=index;
splice.call(array,index,1);}}


return array;}











function baseRandom(min,max){
return min + nativeFloor(nativeRandom() * (max - min + 1));}
















function baseReduce(collection,iteratee,accumulator,initFromCollection,eachFunc){
eachFunc(collection,function(value,index,collection){
accumulator = initFromCollection?(
initFromCollection = false,value):
iteratee(accumulator,value,index,collection);});

return accumulator;}










var baseSetData=!metaMap?identity:function(func,data){
metaMap.set(func,data);
return func;};











function baseSlice(array,start,end){
var index=-1,
length=array.length;

start = start == null?0:+start || 0;
if(start < 0){
start = -start > length?0:length + start;}

end = end === undefined || end > length?length:+end || 0;
if(end < 0){
end += length;}

length = start > end?0:end - start >>> 0;
start >>>= 0;

var result=Array(length);
while(++index < length) {
result[index] = array[index + start];}

return result;}












function baseSome(collection,predicate){
var result;

baseEach(collection,function(value,index,collection){
result = predicate(value,index,collection);
return !result;});

return !!result;}












function baseSortBy(array,comparer){
var length=array.length;

array.sort(comparer);
while(length--) {
array[length] = array[length].value;}

return array;}











function baseSortByOrder(collection,iteratees,orders){
var callback=getCallback(),
index=-1;

iteratees = arrayMap(iteratees,function(iteratee){return callback(iteratee);});

var result=baseMap(collection,function(value){
var criteria=arrayMap(iteratees,function(iteratee){return iteratee(value);});
return {'criteria':criteria,'index':++index,'value':value};});


return baseSortBy(result,function(object,other){
return compareMultiple(object,other,orders);});}












function baseSum(collection,iteratee){
var result=0;
baseEach(collection,function(value,index,collection){
result += +iteratee(value,index,collection) || 0;});

return result;}











function baseUniq(array,iteratee){
var index=-1,
indexOf=getIndexOf(),
length=array.length,
isCommon=indexOf == baseIndexOf,
isLarge=isCommon && length >= LARGE_ARRAY_SIZE,
seen=isLarge?createCache():null,
result=[];

if(seen){
indexOf = cacheIndexOf;
isCommon = false;}else 
{
isLarge = false;
seen = iteratee?[]:result;}

outer: 
while(++index < length) {
var value=array[index],
computed=iteratee?iteratee(value,index,array):value;

if(isCommon && value === value){
var seenIndex=seen.length;
while(seenIndex--) {
if(seen[seenIndex] === computed){
continue outer;}}


if(iteratee){
seen.push(computed);}

result.push(value);}else 

if(indexOf(seen,computed,0) < 0){
if(iteratee || isLarge){
seen.push(computed);}

result.push(value);}}


return result;}












function baseValues(object,props){
var index=-1,
length=props.length,
result=Array(length);

while(++index < length) {
result[index] = object[props[index]];}

return result;}













function baseWhile(array,predicate,isDrop,fromRight){
var length=array.length,
index=fromRight?length:-1;

while((fromRight?index--:++index < length) && predicate(array[index],index,array)) {}
return isDrop?
baseSlice(array,fromRight?0:index,fromRight?index + 1:length):
baseSlice(array,fromRight?index + 1:0,fromRight?length:index);}












function baseWrapperValue(value,actions){
var result=value;
if(result instanceof LazyWrapper){
result = result.value();}

var index=-1,
length=actions.length;

while(++index < length) {
var action=actions[index];
result = action.func.apply(action.thisArg,arrayPush([result],action.args));}

return result;}













function binaryIndex(array,value,retHighest){
var low=0,
high=array?array.length:low;

if(typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH){
while(low < high) {
var mid=low + high >>> 1,
computed=array[mid];

if((retHighest?computed <= value:computed < value) && computed !== null){
low = mid + 1;}else 
{
high = mid;}}


return high;}

return binaryIndexBy(array,value,identity,retHighest);}















function binaryIndexBy(array,value,iteratee,retHighest){
value = iteratee(value);

var low=0,
high=array?array.length:0,
valIsNaN=value !== value,
valIsNull=value === null,
valIsUndef=value === undefined;

while(low < high) {
var mid=nativeFloor((low + high) / 2),
computed=iteratee(array[mid]),
isDef=computed !== undefined,
isReflexive=computed === computed;

if(valIsNaN){
var setLow=isReflexive || retHighest;}else 
if(valIsNull){
setLow = isReflexive && isDef && (retHighest || computed != null);}else 
if(valIsUndef){
setLow = isReflexive && (retHighest || isDef);}else 
if(computed == null){
setLow = false;}else 
{
setLow = retHighest?computed <= value:computed < value;}

if(setLow){
low = mid + 1;}else 
{
high = mid;}}


return nativeMin(high,MAX_ARRAY_INDEX);}












function bindCallback(func,thisArg,argCount){
if(typeof func != 'function'){
return identity;}

if(thisArg === undefined){
return func;}

switch(argCount){
case 1:return function(value){
return func.call(thisArg,value);};

case 3:return function(value,index,collection){
return func.call(thisArg,value,index,collection);};

case 4:return function(accumulator,value,index,collection){
return func.call(thisArg,accumulator,value,index,collection);};

case 5:return function(value,other,key,object,source){
return func.call(thisArg,value,other,key,object,source);};}


return function(){
return func.apply(thisArg,arguments);};}










function bufferClone(buffer){
var result=new ArrayBuffer(buffer.byteLength),
view=new Uint8Array(result);

view.set(new Uint8Array(buffer));
return result;}












function composeArgs(args,partials,holders){
var holdersLength=holders.length,
argsIndex=-1,
argsLength=nativeMax(args.length - holdersLength,0),
leftIndex=-1,
leftLength=partials.length,
result=Array(leftLength + argsLength);

while(++leftIndex < leftLength) {
result[leftIndex] = partials[leftIndex];}

while(++argsIndex < holdersLength) {
result[holders[argsIndex]] = args[argsIndex];}

while(argsLength--) {
result[leftIndex++] = args[argsIndex++];}

return result;}












function composeArgsRight(args,partials,holders){
var holdersIndex=-1,
holdersLength=holders.length,
argsIndex=-1,
argsLength=nativeMax(args.length - holdersLength,0),
rightIndex=-1,
rightLength=partials.length,
result=Array(argsLength + rightLength);

while(++argsIndex < argsLength) {
result[argsIndex] = args[argsIndex];}

var offset=argsIndex;
while(++rightIndex < rightLength) {
result[offset + rightIndex] = partials[rightIndex];}

while(++holdersIndex < holdersLength) {
result[offset + holders[holdersIndex]] = args[argsIndex++];}

return result;}










function createAggregator(setter,initializer){
return function(collection,iteratee,thisArg){
var result=initializer?initializer():{};
iteratee = getCallback(iteratee,thisArg,3);

if(isArray(collection)){
var index=-1,
length=collection.length;

while(++index < length) {
var value=collection[index];
setter(result,value,iteratee(value,index,collection),collection);}}else 

{
baseEach(collection,function(value,key,collection){
setter(result,value,iteratee(value,key,collection),collection);});}


return result;};}










function createAssigner(assigner){
return restParam(function(object,sources){
var index=-1,
length=object == null?0:sources.length,
customizer=length > 2?sources[length - 2]:undefined,
guard=length > 2?sources[2]:undefined,
thisArg=length > 1?sources[length - 1]:undefined;

if(typeof customizer == 'function'){
customizer = bindCallback(customizer,thisArg,5);
length -= 2;}else 
{
customizer = typeof thisArg == 'function'?thisArg:undefined;
length -= customizer?1:0;}

if(guard && isIterateeCall(sources[0],sources[1],guard)){
customizer = length < 3?undefined:customizer;
length = 1;}

while(++index < length) {
var source=sources[index];
if(source){
assigner(object,source,customizer);}}


return object;});}











function createBaseEach(eachFunc,fromRight){
return function(collection,iteratee){
var length=collection?getLength(collection):0;
if(!isLength(length)){
return eachFunc(collection,iteratee);}

var index=fromRight?length:-1,
iterable=toObject(collection);

while(fromRight?index--:++index < length) {
if(iteratee(iterable[index],index,iterable) === false){
break;}}


return collection;};}










function createBaseFor(fromRight){
return function(object,iteratee,keysFunc){
var iterable=toObject(object),
props=keysFunc(object),
length=props.length,
index=fromRight?length:-1;

while(fromRight?index--:++index < length) {
var key=props[index];
if(iteratee(iterable[key],key,iterable) === false){
break;}}


return object;};}












function createBindWrapper(func,thisArg){
var Ctor=createCtorWrapper(func);

function wrapper(){
var fn=this && this !== root && this instanceof wrapper?Ctor:func;
return fn.apply(thisArg,arguments);}

return wrapper;}









function createCache(values){
return nativeCreate && Set?new SetCache(values):null;}










function createCompounder(callback){
return function(string){
var index=-1,
array=words(deburr(string)),
length=array.length,
result='';

while(++index < length) {
result = callback(result,array[index],index);}

return result;};}











function createCtorWrapper(Ctor){
return function(){



var args=arguments;
switch(args.length){
case 0:return new Ctor();
case 1:return new Ctor(args[0]);
case 2:return new Ctor(args[0],args[1]);
case 3:return new Ctor(args[0],args[1],args[2]);
case 4:return new Ctor(args[0],args[1],args[2],args[3]);
case 5:return new Ctor(args[0],args[1],args[2],args[3],args[4]);
case 6:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5]);
case 7:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);}

var thisBinding=baseCreate(Ctor.prototype),
result=Ctor.apply(thisBinding,args);



return isObject(result)?result:thisBinding;};}










function createCurry(flag){
function curryFunc(func,arity,guard){
if(guard && isIterateeCall(func,arity,guard)){
arity = undefined;}

var result=createWrapper(func,flag,undefined,undefined,undefined,undefined,undefined,arity);
result.placeholder = curryFunc.placeholder;
return result;}

return curryFunc;}










function createDefaults(assigner,customizer){
return restParam(function(args){
var object=args[0];
if(object == null){
return object;}

args.push(customizer);
return assigner.apply(undefined,args);});}











function createExtremum(comparator,exValue){
return function(collection,iteratee,thisArg){
if(thisArg && isIterateeCall(collection,iteratee,thisArg)){
iteratee = undefined;}

iteratee = getCallback(iteratee,thisArg,3);
if(iteratee.length == 1){
collection = isArray(collection)?collection:toIterable(collection);
var result=arrayExtremum(collection,iteratee,comparator,exValue);
if(!(collection.length && result === exValue)){
return result;}}


return baseExtremum(collection,iteratee,comparator,exValue);};}











function createFind(eachFunc,fromRight){
return function(collection,predicate,thisArg){
predicate = getCallback(predicate,thisArg,3);
if(isArray(collection)){
var index=baseFindIndex(collection,predicate,fromRight);
return index > -1?collection[index]:undefined;}

return baseFind(collection,predicate,eachFunc);};}










function createFindIndex(fromRight){
return function(array,predicate,thisArg){
if(!(array && array.length)){
return -1;}

predicate = getCallback(predicate,thisArg,3);
return baseFindIndex(array,predicate,fromRight);};}










function createFindKey(objectFunc){
return function(object,predicate,thisArg){
predicate = getCallback(predicate,thisArg,3);
return baseFind(object,predicate,objectFunc,true);};}










function createFlow(fromRight){
return function(){
var wrapper,
length=arguments.length,
index=fromRight?length:-1,
leftIndex=0,
funcs=Array(length);

while(fromRight?index--:++index < length) {
var func=funcs[leftIndex++] = arguments[index];
if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

if(!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper'){
wrapper = new LodashWrapper([],true);}}


index = wrapper?-1:length;
while(++index < length) {
func = funcs[index];

var funcName=getFuncName(func),
data=funcName == 'wrapper'?getData(func):undefined;

if(data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1){
wrapper = wrapper[getFuncName(data[0])].apply(wrapper,data[3]);}else 
{
wrapper = func.length == 1 && isLaziable(func)?wrapper[funcName]():wrapper.thru(func);}}


return function(){
var args=arguments,
value=args[0];

if(wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE){
return wrapper.plant(value).value();}

var index=0,
result=length?funcs[index].apply(this,args):value;

while(++index < length) {
result = funcs[index].call(this,result);}

return result;};};}












function createForEach(arrayFunc,eachFunc){
return function(collection,iteratee,thisArg){
return typeof iteratee == 'function' && thisArg === undefined && isArray(collection)?
arrayFunc(collection,iteratee):
eachFunc(collection,bindCallback(iteratee,thisArg,3));};}










function createForIn(objectFunc){
return function(object,iteratee,thisArg){
if(typeof iteratee != 'function' || thisArg !== undefined){
iteratee = bindCallback(iteratee,thisArg,3);}

return objectFunc(object,iteratee,keysIn);};}










function createForOwn(objectFunc){
return function(object,iteratee,thisArg){
if(typeof iteratee != 'function' || thisArg !== undefined){
iteratee = bindCallback(iteratee,thisArg,3);}

return objectFunc(object,iteratee);};}










function createObjectMapper(isMapKeys){
return function(object,iteratee,thisArg){
var result={};
iteratee = getCallback(iteratee,thisArg,3);

baseForOwn(object,function(value,key,object){
var mapped=iteratee(value,key,object);
key = isMapKeys?mapped:key;
value = isMapKeys?value:mapped;
result[key] = value;});

return result;};}










function createPadDir(fromRight){
return function(string,length,chars){
string = baseToString(string);
return (fromRight?string:'') + createPadding(string,length,chars) + (fromRight?'':string);};}










function createPartial(flag){
var partialFunc=restParam(function(func,partials){
var holders=replaceHolders(partials,partialFunc.placeholder);
return createWrapper(func,flag,undefined,partials,holders);});

return partialFunc;}










function createReduce(arrayFunc,eachFunc){
return function(collection,iteratee,accumulator,thisArg){
var initFromArray=arguments.length < 3;
return typeof iteratee == 'function' && thisArg === undefined && isArray(collection)?
arrayFunc(collection,iteratee,accumulator,initFromArray):
baseReduce(collection,getCallback(iteratee,thisArg,4),accumulator,initFromArray,eachFunc);};}




















function createHybridWrapper(func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity){
var isAry=bitmask & ARY_FLAG,
isBind=bitmask & BIND_FLAG,
isBindKey=bitmask & BIND_KEY_FLAG,
isCurry=bitmask & CURRY_FLAG,
isCurryBound=bitmask & CURRY_BOUND_FLAG,
isCurryRight=bitmask & CURRY_RIGHT_FLAG,
Ctor=isBindKey?undefined:createCtorWrapper(func);

function wrapper(){


var length=arguments.length,
index=length,
args=Array(length);

while(index--) {
args[index] = arguments[index];}

if(partials){
args = composeArgs(args,partials,holders);}

if(partialsRight){
args = composeArgsRight(args,partialsRight,holdersRight);}

if(isCurry || isCurryRight){
var placeholder=wrapper.placeholder,
argsHolders=replaceHolders(args,placeholder);

length -= argsHolders.length;
if(length < arity){
var newArgPos=argPos?arrayCopy(argPos):undefined,
newArity=nativeMax(arity - length,0),
newsHolders=isCurry?argsHolders:undefined,
newHoldersRight=isCurry?undefined:argsHolders,
newPartials=isCurry?args:undefined,
newPartialsRight=isCurry?undefined:args;

bitmask |= isCurry?PARTIAL_FLAG:PARTIAL_RIGHT_FLAG;
bitmask &= ~(isCurry?PARTIAL_RIGHT_FLAG:PARTIAL_FLAG);

if(!isCurryBound){
bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);}

var newData=[func,bitmask,thisArg,newPartials,newsHolders,newPartialsRight,newHoldersRight,newArgPos,ary,newArity],
result=createHybridWrapper.apply(undefined,newData);

if(isLaziable(func)){
setData(result,newData);}

result.placeholder = placeholder;
return result;}}


var thisBinding=isBind?thisArg:this,
fn=isBindKey?thisBinding[func]:func;

if(argPos){
args = reorder(args,argPos);}

if(isAry && ary < args.length){
args.length = ary;}

if(this && this !== root && this instanceof wrapper){
fn = Ctor || createCtorWrapper(func);}

return fn.apply(thisBinding,args);}

return wrapper;}












function createPadding(string,length,chars){
var strLength=string.length;
length = +length;

if(strLength >= length || !nativeIsFinite(length)){
return '';}

var padLength=length - strLength;
chars = chars == null?' ':chars + '';
return repeat(chars,nativeCeil(padLength / chars.length)).slice(0,padLength);}














function createPartialWrapper(func,bitmask,thisArg,partials){
var isBind=bitmask & BIND_FLAG,
Ctor=createCtorWrapper(func);

function wrapper(){


var argsIndex=-1,
argsLength=arguments.length,
leftIndex=-1,
leftLength=partials.length,
args=Array(leftLength + argsLength);

while(++leftIndex < leftLength) {
args[leftIndex] = partials[leftIndex];}

while(argsLength--) {
args[leftIndex++] = arguments[++argsIndex];}

var fn=this && this !== root && this instanceof wrapper?Ctor:func;
return fn.apply(isBind?thisArg:this,args);}

return wrapper;}









function createRound(methodName){
var func=Math[methodName];
return function(number,precision){
precision = precision === undefined?0:+precision || 0;
if(precision){
precision = pow(10,precision);
return func(number * precision) / precision;}

return func(number);};}










function createSortedIndex(retHighest){
return function(array,value,iteratee,thisArg){
var callback=getCallback(iteratee);
return iteratee == null && callback === baseCallback?
binaryIndex(array,value,retHighest):
binaryIndexBy(array,value,callback(iteratee,thisArg,1),retHighest);};}




























function createWrapper(func,bitmask,thisArg,partials,holders,argPos,ary,arity){
var isBindKey=bitmask & BIND_KEY_FLAG;
if(!isBindKey && typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

var length=partials?partials.length:0;
if(!length){
bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
partials = holders = undefined;}

length -= holders?holders.length:0;
if(bitmask & PARTIAL_RIGHT_FLAG){
var partialsRight=partials,
holdersRight=holders;

partials = holders = undefined;}

var data=isBindKey?undefined:getData(func),
newData=[func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity];

if(data){
mergeData(newData,data);
bitmask = newData[1];
arity = newData[9];}

newData[9] = arity == null?
isBindKey?0:func.length:
nativeMax(arity - length,0) || 0;

if(bitmask == BIND_FLAG){
var result=createBindWrapper(newData[0],newData[2]);}else 
if((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length){
result = createPartialWrapper.apply(undefined,newData);}else 
{
result = createHybridWrapper.apply(undefined,newData);}

var setter=data?baseSetData:setData;
return setter(result,newData);}
















function equalArrays(array,other,equalFunc,customizer,isLoose,stackA,stackB){
var index=-1,
arrLength=array.length,
othLength=other.length;

if(arrLength != othLength && !(isLoose && othLength > arrLength)){
return false;}


while(++index < arrLength) {
var arrValue=array[index],
othValue=other[index],
result=customizer?customizer(isLoose?othValue:arrValue,isLoose?arrValue:othValue,index):undefined;

if(result !== undefined){
if(result){
continue;}

return false;}


if(isLoose){
if(!arraySome(other,function(othValue){
return arrValue === othValue || equalFunc(arrValue,othValue,customizer,isLoose,stackA,stackB);}))
{
return false;}}else 

if(!(arrValue === othValue || equalFunc(arrValue,othValue,customizer,isLoose,stackA,stackB))){
return false;}}


return true;}















function equalByTag(object,other,tag){
switch(tag){
case boolTag:
case dateTag:


return +object == +other;

case errorTag:
return object.name == other.name && object.message == other.message;

case numberTag:

return object != +object?
other != +other:
object == +other;

case regexpTag:
case stringTag:


return object == other + '';}

return false;}
















function equalObjects(object,other,equalFunc,customizer,isLoose,stackA,stackB){
var objProps=keys(object),
objLength=objProps.length,
othProps=keys(other),
othLength=othProps.length;

if(objLength != othLength && !isLoose){
return false;}

var index=objLength;
while(index--) {
var key=objProps[index];
if(!(isLoose?key in other:hasOwnProperty.call(other,key))){
return false;}}


var skipCtor=isLoose;
while(++index < objLength) {
key = objProps[index];
var objValue=object[key],
othValue=other[key],
result=customizer?customizer(isLoose?othValue:objValue,isLoose?objValue:othValue,key):undefined;


if(!(result === undefined?equalFunc(objValue,othValue,customizer,isLoose,stackA,stackB):result)){
return false;}

skipCtor || (skipCtor = key == 'constructor');}

if(!skipCtor){
var objCtor=object.constructor,
othCtor=other.constructor;


if(objCtor != othCtor && (
'constructor' in object && 'constructor' in other) && 
!(typeof objCtor == 'function' && objCtor instanceof objCtor && 
typeof othCtor == 'function' && othCtor instanceof othCtor)){
return false;}}


return true;}











function getCallback(func,thisArg,argCount){
var result=lodash.callback || callback;
result = result === callback?baseCallback:result;
return argCount?result(func,thisArg,argCount):result;}









var getData=!metaMap?noop:function(func){
return metaMap.get(func);};









function getFuncName(func){
var result=func.name,
array=realNames[result],
length=array?array.length:0;

while(length--) {
var data=array[length],
otherFunc=data.func;
if(otherFunc == null || otherFunc == func){
return data.name;}}


return result;}











function getIndexOf(collection,target,fromIndex){
var result=lodash.indexOf || indexOf;
result = result === indexOf?baseIndexOf:result;
return collection?result(collection,target,fromIndex):result;}












var getLength=baseProperty('length');








function getMatchData(object){
var result=pairs(object),
length=result.length;

while(length--) {
result[length][2] = isStrictComparable(result[length][1]);}

return result;}










function getNative(object,key){
var value=object == null?undefined:object[key];
return isNative(value)?value:undefined;}












function getView(start,end,transforms){
var index=-1,
length=transforms.length;

while(++index < length) {
var data=transforms[index],
size=data.size;

switch(data.type){
case 'drop':start += size;break;
case 'dropRight':end -= size;break;
case 'take':end = nativeMin(end,start + size);break;
case 'takeRight':start = nativeMax(start,end - size);break;}}


return {'start':start,'end':end};}









function initCloneArray(array){
var length=array.length,
result=new array.constructor(length);


if(length && typeof array[0] == 'string' && hasOwnProperty.call(array,'index')){
result.index = array.index;
result.input = array.input;}

return result;}









function initCloneObject(object){
var Ctor=object.constructor;
if(!(typeof Ctor == 'function' && Ctor instanceof Ctor)){
Ctor = Object;}

return new Ctor();}














function initCloneByTag(object,tag,isDeep){
var Ctor=object.constructor;
switch(tag){
case arrayBufferTag:
return bufferClone(object);

case boolTag:
case dateTag:
return new Ctor(+object);

case float32Tag:case float64Tag:
case int8Tag:case int16Tag:case int32Tag:
case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:
var buffer=object.buffer;
return new Ctor(isDeep?bufferClone(buffer):buffer,object.byteOffset,object.length);

case numberTag:
case stringTag:
return new Ctor(object);

case regexpTag:
var result=new Ctor(object.source,reFlags.exec(object));
result.lastIndex = object.lastIndex;}

return result;}











function invokePath(object,path,args){
if(object != null && !isKey(path,object)){
path = toPath(path);
object = path.length == 1?object:baseGet(object,baseSlice(path,0,-1));
path = last(path);}

var func=object == null?object:object[path];
return func == null?undefined:func.apply(object,args);}









function isArrayLike(value){
return value != null && isLength(getLength(value));}










function isIndex(value,length){
value = typeof value == 'number' || reIsUint.test(value)?+value:-1;
length = length == null?MAX_SAFE_INTEGER:length;
return value > -1 && value % 1 == 0 && value < length;}











function isIterateeCall(value,index,object){
if(!isObject(object)){
return false;}

var type=typeof index;
if(type == 'number'?
isArrayLike(object) && isIndex(index,object.length):
type == 'string' && index in object){
var other=object[index];
return value === value?value === other:other !== other;}

return false;}










function isKey(value,object){
var type=typeof value;
if(type == 'string' && reIsPlainProp.test(value) || type == 'number'){
return true;}

if(isArray(value)){
return false;}

var result=!reIsDeepProp.test(value);
return result || object != null && value in toObject(object);}









function isLaziable(func){
var funcName=getFuncName(func);
if(!(funcName in LazyWrapper.prototype)){
return false;}

var other=lodash[funcName];
if(func === other){
return true;}

var data=getData(other);
return !!data && func === data[0];}











function isLength(value){
return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;}










function isStrictComparable(value){
return value === value && !isObject(value);}

















function mergeData(data,source){
var bitmask=data[1],
srcBitmask=source[1],
newBitmask=bitmask | srcBitmask,
isCommon=newBitmask < ARY_FLAG;

var isCombo=
srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG || 
srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8] || 
srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG;


if(!(isCommon || isCombo)){
return data;}


if(srcBitmask & BIND_FLAG){
data[2] = source[2];

newBitmask |= bitmask & BIND_FLAG?0:CURRY_BOUND_FLAG;}


var value=source[3];
if(value){
var partials=data[3];
data[3] = partials?composeArgs(partials,value,source[4]):arrayCopy(value);
data[4] = partials?replaceHolders(data[3],PLACEHOLDER):arrayCopy(source[4]);}


value = source[5];
if(value){
partials = data[5];
data[5] = partials?composeArgsRight(partials,value,source[6]):arrayCopy(value);
data[6] = partials?replaceHolders(data[5],PLACEHOLDER):arrayCopy(source[6]);}


value = source[7];
if(value){
data[7] = arrayCopy(value);}


if(srcBitmask & ARY_FLAG){
data[8] = data[8] == null?source[8]:nativeMin(data[8],source[8]);}


if(data[9] == null){
data[9] = source[9];}


data[0] = source[0];
data[1] = newBitmask;

return data;}










function mergeDefaults(objectValue,sourceValue){
return objectValue === undefined?sourceValue:merge(objectValue,sourceValue,mergeDefaults);}











function pickByArray(object,props){
object = toObject(object);

var index=-1,
length=props.length,
result={};

while(++index < length) {
var key=props[index];
if(key in object){
result[key] = object[key];}}


return result;}











function pickByCallback(object,predicate){
var result={};
baseForIn(object,function(value,key,object){
if(predicate(value,key,object)){
result[key] = value;}});


return result;}












function reorder(array,indexes){
var arrLength=array.length,
length=nativeMin(indexes.length,arrLength),
oldArray=arrayCopy(array);

while(length--) {
var index=indexes[length];
array[length] = isIndex(index,arrLength)?oldArray[index]:undefined;}

return array;}















var setData=(function(){
var count=0,
lastCalled=0;

return function(key,value){
var stamp=now(),
remaining=HOT_SPAN - (stamp - lastCalled);

lastCalled = stamp;
if(remaining > 0){
if(++count >= HOT_COUNT){
return key;}}else 

{
count = 0;}

return baseSetData(key,value);};})();











function shimKeys(object){
var props=keysIn(object),
propsLength=props.length,
length=propsLength && object.length;

var allowIndexes=!!length && isLength(length) && (
isArray(object) || isArguments(object));

var index=-1,
result=[];

while(++index < propsLength) {
var key=props[index];
if(allowIndexes && isIndex(key,length) || hasOwnProperty.call(object,key)){
result.push(key);}}


return result;}









function toIterable(value){
if(value == null){
return [];}

if(!isArrayLike(value)){
return values(value);}

return isObject(value)?value:Object(value);}









function toObject(value){
return isObject(value)?value:Object(value);}









function toPath(value){
if(isArray(value)){
return value;}

var result=[];
baseToString(value).replace(rePropName,function(match,number,quote,string){
result.push(quote?string.replace(reEscapeChar,'$1'):number || match);});

return result;}









function wrapperClone(wrapper){
return wrapper instanceof LazyWrapper?
wrapper.clone():
new LodashWrapper(wrapper.__wrapped__,wrapper.__chain__,arrayCopy(wrapper.__actions__));}
























function chunk(array,size,guard){
if(guard?isIterateeCall(array,size,guard):size == null){
size = 1;}else 
{
size = nativeMax(nativeFloor(size) || 1,1);}

var index=0,
length=array?array.length:0,
resIndex=-1,
result=Array(nativeCeil(length / size));

while(index < length) {
result[++resIndex] = baseSlice(array,index,index += size);}

return result;}
















function compact(array){
var index=-1,
length=array?array.length:0,
resIndex=-1,
result=[];

while(++index < length) {
var value=array[index];
if(value){
result[++resIndex] = value;}}


return result;}


















var difference=restParam(function(array,values){
return isObjectLike(array) && isArrayLike(array)?
baseDifference(array,baseFlatten(values,false,true)):
[];});


























function drop(array,n,guard){
var length=array?array.length:0;
if(!length){
return [];}

if(guard?isIterateeCall(array,n,guard):n == null){
n = 1;}

return baseSlice(array,n < 0?0:n);}


























function dropRight(array,n,guard){
var length=array?array.length:0;
if(!length){
return [];}

if(guard?isIterateeCall(array,n,guard):n == null){
n = 1;}

n = length - (+n || 0);
return baseSlice(array,0,n < 0?0:n);}



















































function dropRightWhile(array,predicate,thisArg){
return array && array.length?
baseWhile(array,getCallback(predicate,thisArg,3),true,true):
[];}



















































function dropWhile(array,predicate,thisArg){
return array && array.length?
baseWhile(array,getCallback(predicate,thisArg,3),true):
[];}






























function fill(array,value,start,end){
var length=array?array.length:0;
if(!length){
return [];}

if(start && typeof start != 'number' && isIterateeCall(array,value,start)){
start = 0;
end = length;}

return baseFill(array,value,start,end);}


















































var findIndex=createFindIndex();

















































var findLastIndex=createFindIndex(true);


















function first(array){
return array?array[0]:undefined;}






















function flatten(array,isDeep,guard){
var length=array?array.length:0;
if(guard && isIterateeCall(array,isDeep,guard)){
isDeep = false;}

return length?baseFlatten(array,isDeep):[];}















function flattenDeep(array){
var length=array?array.length:0;
return length?baseFlatten(array,true):[];}






























function indexOf(array,value,fromIndex){
var length=array?array.length:0;
if(!length){
return -1;}

if(typeof fromIndex == 'number'){
fromIndex = fromIndex < 0?nativeMax(length + fromIndex,0):fromIndex;}else 
if(fromIndex){
var index=binaryIndex(array,value);
if(index < length && (
value === value?value === array[index]:array[index] !== array[index])){
return index;}

return -1;}

return baseIndexOf(array,value,fromIndex || 0);}















function initial(array){
return dropRight(array,1);}
















var intersection=restParam(function(arrays){
var othLength=arrays.length,
othIndex=othLength,
caches=Array(length),
indexOf=getIndexOf(),
isCommon=indexOf == baseIndexOf,
result=[];

while(othIndex--) {
var value=arrays[othIndex] = isArrayLike(value = arrays[othIndex])?value:[];
caches[othIndex] = isCommon && value.length >= 120?createCache(othIndex && value):null;}

var array=arrays[0],
index=-1,
length=array?array.length:0,
seen=caches[0];

outer: 
while(++index < length) {
value = array[index];
if((seen?cacheIndexOf(seen,value):indexOf(result,value,0)) < 0){
var othIndex=othLength;
while(--othIndex) {
var cache=caches[othIndex];
if((cache?cacheIndexOf(cache,value):indexOf(arrays[othIndex],value,0)) < 0){
continue outer;}}


if(seen){
seen.push(value);}

result.push(value);}}


return result;});















function last(array){
var length=array?array.length:0;
return length?array[length - 1]:undefined;}



























function lastIndexOf(array,value,fromIndex){
var length=array?array.length:0;
if(!length){
return -1;}

var index=length;
if(typeof fromIndex == 'number'){
index = (fromIndex < 0?nativeMax(length + fromIndex,0):nativeMin(fromIndex || 0,length - 1)) + 1;}else 
if(fromIndex){
index = binaryIndex(array,value,true) - 1;
var other=array[index];
if(value === value?value === other:other !== other){
return index;}

return -1;}

if(value !== value){
return indexOfNaN(array,index,true);}

while(index--) {
if(array[index] === value){
return index;}}


return -1;}























function pull(){
var args=arguments,
array=args[0];

if(!(array && array.length)){
return array;}

var index=0,
indexOf=getIndexOf(),
length=args.length;

while(++index < length) {
var fromIndex=0,
value=args[index];

while((fromIndex = indexOf(array,value,fromIndex)) > -1) {
splice.call(array,fromIndex,1);}}


return array;}



























var pullAt=restParam(function(array,indexes){
indexes = baseFlatten(indexes);

var result=baseAt(array,indexes);
basePullAt(array,indexes.sort(baseCompareAscending));
return result;});









































function remove(array,predicate,thisArg){
var result=[];
if(!(array && array.length)){
return result;}

var index=-1,
indexes=[],
length=array.length;

predicate = getCallback(predicate,thisArg,3);
while(++index < length) {
var value=array[index];
if(predicate(value,index,array)){
result.push(value);
indexes.push(index);}}


basePullAt(array,indexes);
return result;}
















function rest(array){
return drop(array,1);}
















function slice(array,start,end){
var length=array?array.length:0;
if(!length){
return [];}

if(end && typeof end != 'number' && isIterateeCall(array,start,end)){
start = 0;
end = length;}

return baseSlice(array,start,end);}


















































var sortedIndex=createSortedIndex();





















var sortedLastIndex=createSortedIndex(true);

























function take(array,n,guard){
var length=array?array.length:0;
if(!length){
return [];}

if(guard?isIterateeCall(array,n,guard):n == null){
n = 1;}

return baseSlice(array,0,n < 0?0:n);}


























function takeRight(array,n,guard){
var length=array?array.length:0;
if(!length){
return [];}

if(guard?isIterateeCall(array,n,guard):n == null){
n = 1;}

n = length - (+n || 0);
return baseSlice(array,n < 0?0:n);}



















































function takeRightWhile(array,predicate,thisArg){
return array && array.length?
baseWhile(array,getCallback(predicate,thisArg,3),false,true):
[];}



















































function takeWhile(array,predicate,thisArg){
return array && array.length?
baseWhile(array,getCallback(predicate,thisArg,3)):
[];}

















var union=restParam(function(arrays){
return baseUniq(baseFlatten(arrays,false,true));});



















































function uniq(array,isSorted,iteratee,thisArg){
var length=array?array.length:0;
if(!length){
return [];}

if(isSorted != null && typeof isSorted != 'boolean'){
thisArg = iteratee;
iteratee = isIterateeCall(array,isSorted,thisArg)?undefined:isSorted;
isSorted = false;}

var callback=getCallback();
if(!(iteratee == null && callback === baseCallback)){
iteratee = callback(iteratee,thisArg,3);}

return isSorted && getIndexOf() == baseIndexOf?
sortedUniq(array,iteratee):
baseUniq(array,iteratee);}




















function unzip(array){
if(!(array && array.length)){
return [];}

var index=-1,
length=0;

array = arrayFilter(array,function(group){
if(isArrayLike(group)){
length = nativeMax(group.length,length);
return true;}});


var result=Array(length);
while(++index < length) {
result[index] = arrayMap(array,baseProperty(index));}

return result;}






















function unzipWith(array,iteratee,thisArg){
var length=array?array.length:0;
if(!length){
return [];}

var result=unzip(array);
if(iteratee == null){
return result;}

iteratee = bindCallback(iteratee,thisArg,4);
return arrayMap(result,function(group){
return arrayReduce(group,iteratee,undefined,true);});}



















var without=restParam(function(array,values){
return isArrayLike(array)?
baseDifference(array,values):
[];});
















function xor(){
var index=-1,
length=arguments.length;

while(++index < length) {
var array=arguments[index];
if(isArrayLike(array)){
var result=result?
arrayPush(baseDifference(result,array),baseDifference(array,result)):
array;}}


return result?baseUniq(result):[];}

















var zip=restParam(unzip);






















function zipObject(props,values){
var index=-1,
length=props?props.length:0,
result={};

if(length && !values && !isArray(props[0])){
values = [];}

while(++index < length) {
var key=props[index];
if(values){
result[key] = values[index];}else 
if(key){
result[key[0]] = key[1];}}


return result;}



















var zipWith=restParam(function(arrays){
var length=arrays.length,
iteratee=length > 2?arrays[length - 2]:undefined,
thisArg=length > 1?arrays[length - 1]:undefined;

if(length > 2 && typeof iteratee == 'function'){
length -= 2;}else 
{
iteratee = length > 1 && typeof thisArg == 'function'?(--length,thisArg):undefined;
thisArg = undefined;}

arrays.length = length;
return unzipWith(arrays,iteratee,thisArg);});






























function chain(value){
var result=lodash(value);
result.__chain__ = true;
return result;}

























function tap(value,interceptor,thisArg){
interceptor.call(thisArg,value);
return value;}























function thru(value,interceptor,thisArg){
return interceptor.call(thisArg,value);}



























function wrapperChain(){
return chain(this);}



























function wrapperCommit(){
return new LodashWrapper(this.value(),this.__chain__);}






















var wrapperConcat=restParam(function(values){
values = baseFlatten(values);
return this.thru(function(array){
return arrayConcat(isArray(array)?array:[toObject(array)],values);});});


























function wrapperPlant(value){
var result,
parent=this;

while(parent instanceof baseLodash) {
var clone=wrapperClone(parent);
if(result){
previous.__wrapped__ = clone;}else 
{
result = clone;}

var previous=clone;
parent = parent.__wrapped__;}

previous.__wrapped__ = value;
return result;}






















function wrapperReverse(){
var value=this.__wrapped__;

var interceptor=function(value){
return wrapped && wrapped.__dir__ < 0?value:value.reverse();};

if(value instanceof LazyWrapper){
var wrapped=value;
if(this.__actions__.length){
wrapped = new LazyWrapper(this);}

wrapped = wrapped.reverse();
wrapped.__actions__.push({'func':thru,'args':[interceptor],'thisArg':undefined});
return new LodashWrapper(wrapped,this.__chain__);}

return this.thru(interceptor);}














function wrapperToString(){
return this.value() + '';}















function wrapperValue(){
return baseWrapperValue(this.__wrapped__,this.__actions__);}
























var at=restParam(function(collection,props){
return baseAt(collection,baseFlatten(props));});











































var countBy=createAggregator(function(result,value,key){
hasOwnProperty.call(result,key)?++result[key]:result[key] = 1;});


















































function every(collection,predicate,thisArg){
var func=isArray(collection)?arrayEvery:baseEvery;
if(thisArg && isIterateeCall(collection,predicate,thisArg)){
predicate = undefined;}

if(typeof predicate != 'function' || thisArg !== undefined){
predicate = getCallback(predicate,thisArg,3);}

return func(collection,predicate);}



















































function filter(collection,predicate,thisArg){
var func=isArray(collection)?arrayFilter:baseFilter;
predicate = getCallback(predicate,thisArg,3);
return func(collection,predicate);}




















































var find=createFind(baseEach);




















var findLast=createFind(baseEachRight,true);






























function findWhere(collection,source){
return find(collection,baseMatches(source));}
































var forEach=createForEach(arrayEach,baseEach);




















var forEachRight=createForEach(arrayEachRight,baseEachRight);











































var groupBy=createAggregator(function(result,value,key){
if(hasOwnProperty.call(result,key)){
result[key].push(value);}else 
{
result[key] = [value];}});
































function includes(collection,target,fromIndex,guard){
var length=collection?getLength(collection):0;
if(!isLength(length)){
collection = values(collection);
length = collection.length;}

if(typeof fromIndex != 'number' || guard && isIterateeCall(target,fromIndex,guard)){
fromIndex = 0;}else 
{
fromIndex = fromIndex < 0?nativeMax(length + fromIndex,0):fromIndex || 0;}

return typeof collection == 'string' || !isArray(collection) && isString(collection)?
fromIndex <= length && collection.indexOf(target,fromIndex) > -1:
!!length && getIndexOf(collection,target,fromIndex) > -1;}
















































var indexBy=createAggregator(function(result,value,key){
result[key] = value;});
























var invoke=restParam(function(collection,path,args){
var index=-1,
isFunc=typeof path == 'function',
isProp=isKey(path),
result=isArrayLike(collection)?Array(collection.length):[];

baseEach(collection,function(value){
var func=isFunc?path:isProp && value != null?value[path]:undefined;
result[++index] = func?func.apply(value,args):invokePath(value,path,args);});

return result;});


























































function map(collection,iteratee,thisArg){
var func=isArray(collection)?arrayMap:baseMap;
iteratee = getCallback(iteratee,thisArg,3);
return func(collection,iteratee);}





























































var partition=createAggregator(function(result,value,key){
result[key?0:1].push(value);},
function(){return [[],[]];});
























function pluck(collection,path){
return map(collection,property(path));}







































var reduce=createReduce(arrayReduce,baseEach);























var reduceRight=createReduce(arrayReduceRight,baseEachRight);





































function reject(collection,predicate,thisArg){
var func=isArray(collection)?arrayFilter:baseFilter;
predicate = getCallback(predicate,thisArg,3);
return func(collection,function(value,index,collection){
return !predicate(value,index,collection);});}





















function sample(collection,n,guard){
if(guard?isIterateeCall(collection,n,guard):n == null){
collection = toIterable(collection);
var length=collection.length;
return length > 0?collection[baseRandom(0,length - 1)]:undefined;}

var index=-1,
result=toArray(collection),
length=result.length,
lastIndex=length - 1;

n = nativeMin(n < 0?0:+n || 0,length);
while(++index < n) {
var rand=baseRandom(index,lastIndex),
value=result[rand];

result[rand] = result[index];
result[index] = value;}

result.length = n;
return result;}
















function shuffle(collection){
return sample(collection,POSITIVE_INFINITY);}






















function size(collection){
var length=collection?getLength(collection):0;
return isLength(length)?length:keys(collection).length;}



















































function some(collection,predicate,thisArg){
var func=isArray(collection)?arraySome:baseSome;
if(thisArg && isIterateeCall(collection,predicate,thisArg)){
predicate = undefined;}

if(typeof predicate != 'function' || thisArg !== undefined){
predicate = getCallback(predicate,thisArg,3);}

return func(collection,predicate);}


















































function sortBy(collection,iteratee,thisArg){
if(collection == null){
return [];}

if(thisArg && isIterateeCall(collection,iteratee,thisArg)){
iteratee = undefined;}

var index=-1;
iteratee = getCallback(iteratee,thisArg,3);

var result=baseMap(collection,function(value,key,collection){
return {'criteria':iteratee(value,key,collection),'index':++index,'value':value};});

return baseSortBy(result,compareAscending);}





































var sortByAll=restParam(function(collection,iteratees){
if(collection == null){
return [];}

var guard=iteratees[2];
if(guard && isIterateeCall(iteratees[0],iteratees[1],guard)){
iteratees.length = 1;}

return baseSortByOrder(collection,baseFlatten(iteratees),[]);});




































function sortByOrder(collection,iteratees,orders,guard){
if(collection == null){
return [];}

if(guard && isIterateeCall(iteratees,orders,guard)){
orders = undefined;}

if(!isArray(iteratees)){
iteratees = iteratees == null?[]:[iteratees];}

if(!isArray(orders)){
orders = orders == null?[]:[orders];}

return baseSortByOrder(collection,iteratees,orders);}































function where(collection,source){
return filter(collection,baseMatches(source));}


















var now=nativeNow || function(){
return new Date().getTime();};



























function after(n,func){
if(typeof func != 'function'){
if(typeof n == 'function'){
var temp=n;
n = func;
func = temp;}else 
{
throw new TypeError(FUNC_ERROR_TEXT);}}


n = nativeIsFinite(n = +n)?n:0;
return function(){
if(--n < 1){
return func.apply(this,arguments);}};}




















function ary(func,n,guard){
if(guard && isIterateeCall(func,n,guard)){
n = undefined;}

n = func && n == null?func.length:nativeMax(+n || 0,0);
return createWrapper(func,ARY_FLAG,undefined,undefined,undefined,undefined,n);}


















function before(n,func){
var result;
if(typeof func != 'function'){
if(typeof n == 'function'){
var temp=n;
n = func;
func = temp;}else 
{
throw new TypeError(FUNC_ERROR_TEXT);}}


return function(){
if(--n > 0){
result = func.apply(this,arguments);}

if(n <= 1){
func = undefined;}

return result;};}






































var bind=restParam(function(func,thisArg,partials){
var bitmask=BIND_FLAG;
if(partials.length){
var holders=replaceHolders(partials,bind.placeholder);
bitmask |= PARTIAL_FLAG;}

return createWrapper(func,bitmask,thisArg,partials,holders);});






























var bindAll=restParam(function(object,methodNames){
methodNames = methodNames.length?baseFlatten(methodNames):functions(object);

var index=-1,
length=methodNames.length;

while(++index < length) {
var key=methodNames[index];
object[key] = createWrapper(object[key],BIND_FLAG,object);}

return object;});














































var bindKey=restParam(function(object,key,partials){
var bitmask=BIND_FLAG | BIND_KEY_FLAG;
if(partials.length){
var holders=replaceHolders(partials,bindKey.placeholder);
bitmask |= PARTIAL_FLAG;}

return createWrapper(key,bitmask,object,partials,holders);});










































var curry=createCurry(CURRY_FLAG);






































var curryRight=createCurry(CURRY_RIGHT_FLAG);
































































function debounce(func,wait,options){
var args,
maxTimeoutId,
result,
stamp,
thisArg,
timeoutId,
trailingCall,
lastCalled=0,
maxWait=false,
trailing=true;

if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

wait = wait < 0?0:+wait || 0;
if(options === true){
var leading=true;
trailing = false;}else 
if(isObject(options)){
leading = !!options.leading;
maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0,wait);
trailing = 'trailing' in options?!!options.trailing:trailing;}


function cancel(){
if(timeoutId){
clearTimeout(timeoutId);}

if(maxTimeoutId){
clearTimeout(maxTimeoutId);}

lastCalled = 0;
maxTimeoutId = timeoutId = trailingCall = undefined;}


function complete(isCalled,id){
if(id){
clearTimeout(id);}

maxTimeoutId = timeoutId = trailingCall = undefined;
if(isCalled){
lastCalled = now();
result = func.apply(thisArg,args);
if(!timeoutId && !maxTimeoutId){
args = thisArg = undefined;}}}




function delayed(){
var remaining=wait - (now() - stamp);
if(remaining <= 0 || remaining > wait){
complete(trailingCall,maxTimeoutId);}else 
{
timeoutId = setTimeout(delayed,remaining);}}



function maxDelayed(){
complete(trailing,timeoutId);}


function debounced(){
args = arguments;
stamp = now();
thisArg = this;
trailingCall = trailing && (timeoutId || !leading);

if(maxWait === false){
var leadingCall=leading && !timeoutId;}else 
{
if(!maxTimeoutId && !leading){
lastCalled = stamp;}

var remaining=maxWait - (stamp - lastCalled),
isCalled=remaining <= 0 || remaining > maxWait;

if(isCalled){
if(maxTimeoutId){
maxTimeoutId = clearTimeout(maxTimeoutId);}

lastCalled = stamp;
result = func.apply(thisArg,args);}else 

if(!maxTimeoutId){
maxTimeoutId = setTimeout(maxDelayed,remaining);}}


if(isCalled && timeoutId){
timeoutId = clearTimeout(timeoutId);}else 

if(!timeoutId && wait !== maxWait){
timeoutId = setTimeout(delayed,wait);}

if(leadingCall){
isCalled = true;
result = func.apply(thisArg,args);}

if(isCalled && !timeoutId && !maxTimeoutId){
args = thisArg = undefined;}

return result;}

debounced.cancel = cancel;
return debounced;}



















var defer=restParam(function(func,args){
return baseDelay(func,1,args);});




















var delay=restParam(function(func,wait,args){
return baseDelay(func,wait,args);});






















var flow=createFlow();





















var flowRight=createFlow(true);




















































function memoize(func,resolver){
if(typeof func != 'function' || resolver && typeof resolver != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

var memoized=function(){
var args=arguments,
key=resolver?resolver.apply(this,args):args[0],
cache=memoized.cache;

if(cache.has(key)){
return cache.get(key);}

var result=func.apply(this,args);
memoized.cache = cache.set(key,result);
return result;};

memoized.cache = new memoize.Cache();
return memoized;}

































var modArgs=restParam(function(func,transforms){
transforms = baseFlatten(transforms);
if(typeof func != 'function' || !arrayEvery(transforms,baseIsFunction)){
throw new TypeError(FUNC_ERROR_TEXT);}

var length=transforms.length;
return restParam(function(args){
var index=nativeMin(args.length,length);
while(index--) {
args[index] = transforms[index](args[index]);}

return func.apply(this,args);});});






















function negate(predicate){
if(typeof predicate != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

return function(){
return !predicate.apply(this,arguments);};}




















function once(func){
return before(2,func);}


































var partial=createPartial(PARTIAL_FLAG);
































var partialRight=createPartial(PARTIAL_RIGHT_FLAG);





























var rearg=restParam(function(func,indexes){
return createWrapper(func,REARG_FLAG,undefined,undefined,undefined,baseFlatten(indexes));});
























function restParam(func,start){
if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

start = nativeMax(start === undefined?func.length - 1:+start || 0,0);
return function(){
var args=arguments,
index=-1,
length=nativeMax(args.length - start,0),
rest=Array(length);

while(++index < length) {
rest[index] = args[start + index];}

switch(start){
case 0:return func.call(this,rest);
case 1:return func.call(this,args[0],rest);
case 2:return func.call(this,args[0],args[1],rest);}

var otherArgs=Array(start + 1);
index = -1;
while(++index < start) {
otherArgs[index] = args[index];}

otherArgs[start] = rest;
return func.apply(this,otherArgs);};}


































function spread(func){
if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

return function(array){
return func.apply(this,array);};}










































function throttle(func,wait,options){
var leading=true,
trailing=true;

if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

if(options === false){
leading = false;}else 
if(isObject(options)){
leading = 'leading' in options?!!options.leading:leading;
trailing = 'trailing' in options?!!options.trailing:trailing;}

return debounce(func,wait,{'leading':leading,'maxWait':+wait,'trailing':trailing});}























function wrap(value,wrapper){
wrapper = wrapper == null?identity:wrapper;
return createWrapper(wrapper,PARTIAL_FLAG,undefined,[value],[]);}























































function clone(value,isDeep,customizer,thisArg){
if(isDeep && typeof isDeep != 'boolean' && isIterateeCall(value,isDeep,customizer)){
isDeep = false;}else 

if(typeof isDeep == 'function'){
thisArg = customizer;
customizer = isDeep;
isDeep = false;}

return typeof customizer == 'function'?
baseClone(value,isDeep,bindCallback(customizer,thisArg,1)):
baseClone(value,isDeep);}















































function cloneDeep(value,customizer,thisArg){
return typeof customizer == 'function'?
baseClone(value,true,bindCallback(customizer,thisArg,1)):
baseClone(value,true);}






















function gt(value,other){
return value > other;}






















function gte(value,other){
return value >= other;}


















function isArguments(value){
return isObjectLike(value) && isArrayLike(value) && 
hasOwnProperty.call(value,'callee') && !propertyIsEnumerable.call(value,'callee');}


















var isArray=nativeIsArray || function(value){
return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;};


















function isBoolean(value){
return value === true || value === false || isObjectLike(value) && objToString.call(value) == boolTag;}


















function isDate(value){
return isObjectLike(value) && objToString.call(value) == dateTag;}


















function isElement(value){
return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);}





























function isEmpty(value){
if(value == null){
return true;}

if(isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) || 
isObjectLike(value) && isFunction(value.splice))){
return !value.length;}

return !keys(value).length;}














































function isEqual(value,other,customizer,thisArg){
customizer = typeof customizer == 'function'?bindCallback(customizer,thisArg,3):undefined;
var result=customizer?customizer(value,other):undefined;
return result === undefined?baseIsEqual(value,other,customizer):!!result;}



















function isError(value){
return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;}





























function isFinite(value){
return typeof value == 'number' && nativeIsFinite(value);}


















function isFunction(value){



return isObject(value) && objToString.call(value) == funcTag;}






















function isObject(value){


var type=typeof value;
return !!value && (type == 'object' || type == 'function');}









































function isMatch(object,source,customizer,thisArg){
customizer = typeof customizer == 'function'?bindCallback(customizer,thisArg,3):undefined;
return baseIsMatch(object,getMatchData(source),customizer);}



























function isNaN(value){


return isNumber(value) && value != +value;}


















function isNative(value){
if(value == null){
return false;}

if(isFunction(value)){
return reIsNative.test(fnToString.call(value));}

return isObjectLike(value) && reIsHostCtor.test(value);}


















function isNull(value){
return value === null;}
























function isNumber(value){
return typeof value == 'number' || isObjectLike(value) && objToString.call(value) == numberTag;}
































function isPlainObject(value){
var Ctor;


if(!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) || 
!hasOwnProperty.call(value,'constructor') && (Ctor = value.constructor,typeof Ctor == 'function' && !(Ctor instanceof Ctor))){
return false;}




var result;



baseForIn(value,function(subValue,key){
result = key;});

return result === undefined || hasOwnProperty.call(value,result);}


















function isRegExp(value){
return isObject(value) && objToString.call(value) == regexpTag;}


















function isString(value){
return typeof value == 'string' || isObjectLike(value) && objToString.call(value) == stringTag;}


















function isTypedArray(value){
return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];}


















function isUndefined(value){
return value === undefined;}






















function lt(value,other){
return value < other;}






















function lte(value,other){
return value <= other;}

















function toArray(value){
var length=value?getLength(value):0;
if(!isLength(length)){
return values(value);}

if(!length){
return [];}

return arrayCopy(value);}

























function toPlainObject(value){
return baseCopy(value,keysIn(value));}




















































var merge=createAssigner(baseMerge);

































var assign=createAssigner(function(object,source,customizer){
return customizer?
assignWith(object,source,customizer):
baseAssign(object,source);});




































function create(prototype,properties,guard){
var result=baseCreate(prototype);
if(guard && isIterateeCall(prototype,properties,guard)){
properties = undefined;}

return properties?baseAssign(result,properties):result;}




















var defaults=createDefaults(assign,assignDefaults);



















var defaultsDeep=createDefaults(merge,mergeDefaults);

















































var findKey=createFindKey(baseForOwn);

















































var findLastKey=createFindKey(baseForOwnRight);




























var forIn=createForIn(baseFor);


























var forInRight=createForIn(baseForRight);




























var forOwn=createForOwn(baseForOwn);


























var forOwnRight=createForOwn(baseForOwnRight);
















function functions(object){
return baseFunctions(object,keysIn(object));}


























function get(object,path,defaultValue){
var result=object == null?undefined:baseGet(object,toPath(path),path + '');
return result === undefined?defaultValue:result;}
























function has(object,path){
if(object == null){
return false;}

var result=hasOwnProperty.call(object,path);
if(!result && !isKey(path)){
path = toPath(path);
object = path.length == 1?object:baseGet(object,baseSlice(path,0,-1));
if(object == null){
return false;}

path = last(path);
result = hasOwnProperty.call(object,path);}

return result || isLength(object.length) && isIndex(path,object.length) && (
isArray(object) || isArguments(object));}

























function invert(object,multiValue,guard){
if(guard && isIterateeCall(object,multiValue,guard)){
multiValue = undefined;}

var index=-1,
props=keys(object),
length=props.length,
result={};

while(++index < length) {
var key=props[index],
value=object[key];

if(multiValue){
if(hasOwnProperty.call(result,value)){
result[value].push(key);}else 
{
result[value] = [key];}}else 


{
result[value] = key;}}


return result;}





























var keys=!nativeKeys?shimKeys:function(object){
var Ctor=object == null?undefined:object.constructor;
if(typeof Ctor == 'function' && Ctor.prototype === object || 
typeof object != 'function' && isArrayLike(object)){
return shimKeys(object);}

return isObject(object)?nativeKeys(object):[];};
























function keysIn(object){
if(object == null){
return [];}

if(!isObject(object)){
object = Object(object);}

var length=object.length;
length = length && isLength(length) && (
isArray(object) || isArguments(object)) && length || 0;

var Ctor=object.constructor,
index=-1,
isProto=typeof Ctor == 'function' && Ctor.prototype === object,
result=Array(length),
skipIndexes=length > 0;

while(++index < length) {
result[index] = index + '';}

for(var key in object) {
if(!(skipIndexes && isIndex(key,length)) && 
!(key == 'constructor' && (isProto || !hasOwnProperty.call(object,key)))){
result.push(key);}}


return result;}






















var mapKeys=createObjectMapper(true);










































var mapValues=createObjectMapper();
























var omit=restParam(function(object,props){
if(object == null){
return {};}

if(typeof props[0] != 'function'){
var props=arrayMap(baseFlatten(props),String);
return pickByArray(object,baseDifference(keysIn(object),props));}

var predicate=bindCallback(props[0],props[1],3);
return pickByCallback(object,function(value,key,object){
return !predicate(value,key,object);});});

















function pairs(object){
object = toObject(object);

var index=-1,
props=keys(object),
length=props.length,
result=Array(length);

while(++index < length) {
var key=props[index];
result[index] = [key,object[key]];}

return result;}




























var pick=restParam(function(object,props){
if(object == null){
return {};}

return typeof props[0] == 'function'?
pickByCallback(object,bindCallback(props[0],props[1],3)):
pickByArray(object,baseFlatten(props));});






























function result(object,path,defaultValue){
var result=object == null?undefined:object[path];
if(result === undefined){
if(object != null && !isKey(path,object)){
path = toPath(path);
object = path.length == 1?object:baseGet(object,baseSlice(path,0,-1));
result = object == null?undefined:object[last(path)];}

result = result === undefined?defaultValue:result;}

return isFunction(result)?result.call(object):result;}

























function set(object,path,value){
if(object == null){
return object;}

var pathKey=path + '';
path = object[pathKey] != null || isKey(path,object)?[pathKey]:toPath(path);

var index=-1,
length=path.length,
lastIndex=length - 1,
nested=object;

while(nested != null && ++index < length) {
var key=path[index];
if(isObject(nested)){
if(index == lastIndex){
nested[key] = value;}else 
if(nested[key] == null){
nested[key] = isIndex(path[index + 1])?[]:{};}}


nested = nested[key];}

return object;}































function transform(object,iteratee,accumulator,thisArg){
var isArr=isArray(object) || isTypedArray(object);
iteratee = getCallback(iteratee,thisArg,4);

if(accumulator == null){
if(isArr || isObject(object)){
var Ctor=object.constructor;
if(isArr){
accumulator = isArray(object)?new Ctor():[];}else 
{
accumulator = baseCreate(isFunction(Ctor)?Ctor.prototype:undefined);}}else 

{
accumulator = {};}}


(isArr?arrayEach:baseForOwn)(object,function(value,index,object){
return iteratee(accumulator,value,index,object);});

return accumulator;}



























function values(object){
return baseValues(object,keys(object));}

























function valuesIn(object){
return baseValues(object,keysIn(object));}



































function inRange(value,start,end){
start = +start || 0;
if(end === undefined){
end = start;
start = 0;}else 
{
end = +end || 0;}

return value >= nativeMin(start,end) && value < nativeMax(start,end);}





























function random(min,max,floating){
if(floating && isIterateeCall(min,max,floating)){
max = floating = undefined;}

var noMin=min == null,
noMax=max == null;

if(floating == null){
if(noMax && typeof min == 'boolean'){
floating = min;
min = 1;}else 

if(typeof max == 'boolean'){
floating = max;
noMax = true;}}


if(noMin && noMax){
max = 1;
noMax = false;}

min = +min || 0;
if(noMax){
max = min;
min = 0;}else 
{
max = +max || 0;}

if(floating || min % 1 || max % 1){
var rand=nativeRandom();
return nativeMin(min + rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1))),max);}

return baseRandom(min,max);}























var camelCase=createCompounder(function(result,word,index){
word = word.toLowerCase();
return result + (index?word.charAt(0).toUpperCase() + word.slice(1):word);});















function capitalize(string){
string = baseToString(string);
return string && string.charAt(0).toUpperCase() + string.slice(1);}
















function deburr(string){
string = baseToString(string);
return string && string.replace(reLatin1,deburrLetter).replace(reComboMark,'');}























function endsWith(string,target,position){
string = baseToString(string);
target = target + '';

var length=string.length;
position = position === undefined?
length:
nativeMin(position < 0?0:+position || 0,length);

position -= target.length;
return position >= 0 && string.indexOf(target,position) == position;}


































function escape(string){

string = baseToString(string);
return string && reHasUnescapedHtml.test(string)?
string.replace(reUnescapedHtml,escapeHtmlChar):
string;}
















function escapeRegExp(string){
string = baseToString(string);
return string && reHasRegExpChars.test(string)?
string.replace(reRegExpChars,escapeRegExpChar):
string || '(?:)';}





















var kebabCase=createCompounder(function(result,word,index){
return result + (index?'-':'') + word.toLowerCase();});
























function pad(string,length,chars){
string = baseToString(string);
length = +length;

var strLength=string.length;
if(strLength >= length || !nativeIsFinite(length)){
return string;}

var mid=(length - strLength) / 2,
leftLength=nativeFloor(mid),
rightLength=nativeCeil(mid);

chars = createPadding('',rightLength,chars);
return chars.slice(0,leftLength) + string + chars;}
























var padLeft=createPadDir();























var padRight=createPadDir(true);
























function parseInt(string,radix,guard){



if(guard?isIterateeCall(string,radix,guard):radix == null){
radix = 0;}else 
if(radix){
radix = +radix;}

string = trim(string);
return nativeParseInt(string,radix || (reHasHexPrefix.test(string)?16:10));}






















function repeat(string,n){
var result='';
string = baseToString(string);
n = +n;
if(n < 1 || !string || !nativeIsFinite(n)){
return result;}



do {
if(n % 2){
result += string;}

n = nativeFloor(n / 2);
string += string;}while(
n);

return result;}





















var snakeCase=createCompounder(function(result,word,index){
return result + (index?'_':'') + word.toLowerCase();});





















var startCase=createCompounder(function(result,word,index){
return result + (index?' ':'') + (word.charAt(0).toUpperCase() + word.slice(1));});























function startsWith(string,target,position){
string = baseToString(string);
position = position == null?
0:
nativeMin(position < 0?0:+position || 0,string.length);

return string.lastIndexOf(target,position) == position;}


































































































function template(string,options,otherOptions){


var settings=lodash.templateSettings;

if(otherOptions && isIterateeCall(string,options,otherOptions)){
options = otherOptions = undefined;}

string = baseToString(string);
options = assignWith(baseAssign({},otherOptions || options),settings,assignOwnDefaults);

var imports=assignWith(baseAssign({},options.imports),settings.imports,assignOwnDefaults),
importsKeys=keys(imports),
importsValues=baseValues(imports,importsKeys);

var isEscaping,
isEvaluating,
index=0,
interpolate=options.interpolate || reNoMatch,
source="__p += '";


var reDelimiters=RegExp(
(options.escape || reNoMatch).source + '|' + 
interpolate.source + '|' + 
(interpolate === reInterpolate?reEsTemplate:reNoMatch).source + '|' + 
(options.evaluate || reNoMatch).source + '|$',
'g');


var sourceURL='//# sourceURL=' + (
'sourceURL' in options?
options.sourceURL:
'lodash.templateSources[' + ++templateCounter + ']') + 
'\n';

string.replace(reDelimiters,function(match,escapeValue,interpolateValue,esTemplateValue,evaluateValue,offset){
interpolateValue || (interpolateValue = esTemplateValue);


source += string.slice(index,offset).replace(reUnescapedString,escapeStringChar);


if(escapeValue){
isEscaping = true;
source += "' +\n__e(" + escapeValue + ") +\n'";}

if(evaluateValue){
isEvaluating = true;
source += "';\n" + evaluateValue + ";\n__p += '";}

if(interpolateValue){
source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";}

index = offset + match.length;



return match;});


source += "';\n";



var variable=options.variable;
if(!variable){
source = 'with (obj) {\n' + source + '\n}\n';}


source = (isEvaluating?source.replace(reEmptyStringLeading,''):source).
replace(reEmptyStringMiddle,'$1').
replace(reEmptyStringTrailing,'$1;');


source = 'function(' + (variable || 'obj') + ') {\n' + (
variable?
'':
'obj || (obj = {});\n') + 

"var __t, __p = ''" + (
isEscaping?
', __e = _.escape':
'') + (

isEvaluating?
', __j = Array.prototype.join;\n' + 
"function print() { __p += __j.call(arguments, '') }\n":
';\n') + 

source + 
'return __p\n}';

var result=attempt(function(){
return Function(importsKeys,sourceURL + 'return ' + source).apply(undefined,importsValues);});




result.source = source;
if(isError(result)){
throw result;}

return result;}























function trim(string,chars,guard){
var value=string;
string = baseToString(string);
if(!string){
return string;}

if(guard?isIterateeCall(value,chars,guard):chars == null){
return string.slice(trimmedLeftIndex(string),trimmedRightIndex(string) + 1);}

chars = chars + '';
return string.slice(charsLeftIndex(string,chars),charsRightIndex(string,chars) + 1);}




















function trimLeft(string,chars,guard){
var value=string;
string = baseToString(string);
if(!string){
return string;}

if(guard?isIterateeCall(value,chars,guard):chars == null){
return string.slice(trimmedLeftIndex(string));}

return string.slice(charsLeftIndex(string,chars + ''));}




















function trimRight(string,chars,guard){
var value=string;
string = baseToString(string);
if(!string){
return string;}

if(guard?isIterateeCall(value,chars,guard):chars == null){
return string.slice(0,trimmedRightIndex(string) + 1);}

return string.slice(0,charsRightIndex(string,chars + '') + 1);}










































function trunc(string,options,guard){
if(guard && isIterateeCall(string,options,guard)){
options = undefined;}

var length=DEFAULT_TRUNC_LENGTH,
omission=DEFAULT_TRUNC_OMISSION;

if(options != null){
if(isObject(options)){
var separator='separator' in options?options.separator:separator;
length = 'length' in options?+options.length || 0:length;
omission = 'omission' in options?baseToString(options.omission):omission;}else 
{
length = +options || 0;}}


string = baseToString(string);
if(length >= string.length){
return string;}

var end=length - omission.length;
if(end < 1){
return omission;}

var result=string.slice(0,end);
if(separator == null){
return result + omission;}

if(isRegExp(separator)){
if(string.slice(end).search(separator)){
var match,
newEnd,
substring=string.slice(0,end);

if(!separator.global){
separator = RegExp(separator.source,(reFlags.exec(separator) || '') + 'g');}

separator.lastIndex = 0;
while(match = separator.exec(substring)) {
newEnd = match.index;}

result = result.slice(0,newEnd == null?end:newEnd);}}else 

if(string.indexOf(separator,end) != end){
var index=result.lastIndexOf(separator);
if(index > -1){
result = result.slice(0,index);}}


return result + omission;}




















function unescape(string){
string = baseToString(string);
return string && reHasEscapedHtml.test(string)?
string.replace(reEscapedHtml,unescapeHtmlChar):
string;}




















function words(string,pattern,guard){
if(guard && isIterateeCall(string,pattern,guard)){
pattern = undefined;}

string = baseToString(string);
return string.match(pattern || reWords) || [];}
























var attempt=restParam(function(func,args){
try{
return func.apply(undefined,args);}
catch(e) {
return isError(e)?e:new Error(e);}});









































function callback(func,thisArg,guard){
if(guard && isIterateeCall(func,thisArg,guard)){
thisArg = undefined;}

return isObjectLike(func)?
matches(func):
baseCallback(func,thisArg);}


















function constant(value){
return function(){
return value;};}


















function identity(value){
return value;}



























function matches(source){
return baseMatches(baseClone(source,true));}


























function matchesProperty(path,srcValue){
return baseMatchesProperty(path,baseClone(srcValue,true));}

























var method=restParam(function(path,args){
return function(object){
return invokePath(object,path,args);};});

























var methodOf=restParam(function(object,args){
return function(path){
return invokePath(object,path,args);};});







































function mixin(object,source,options){
if(options == null){
var isObj=isObject(source),
props=isObj?keys(source):undefined,
methodNames=props && props.length?baseFunctions(source,props):undefined;

if(!(methodNames?methodNames.length:isObj)){
methodNames = false;
options = source;
source = object;
object = this;}}


if(!methodNames){
methodNames = baseFunctions(source,keys(source));}

var chain=true,
index=-1,
isFunc=isFunction(object),
length=methodNames.length;

if(options === false){
chain = false;}else 
if(isObject(options) && 'chain' in options){
chain = options.chain;}

while(++index < length) {
var methodName=methodNames[index],
func=source[methodName];

object[methodName] = func;
if(isFunc){
object.prototype[methodName] = (function(func){
return function(){
var chainAll=this.__chain__;
if(chain || chainAll){
var result=object(this.__wrapped__),
actions=result.__actions__ = arrayCopy(this.__actions__);

actions.push({'func':func,'args':arguments,'thisArg':object});
result.__chain__ = chainAll;
return result;}

return func.apply(object,arrayPush([this.value()],arguments));};})(

func);}}


return object;}














function noConflict(){
root._ = oldDash;
return this;}
















function noop(){}

























function property(path){
return isKey(path)?baseProperty(path):basePropertyDeep(path);}






















function propertyOf(object){
return function(path){
return baseGet(object,toPath(path),path + '');};}




































function range(start,end,step){
if(step && isIterateeCall(start,end,step)){
end = step = undefined;}

start = +start || 0;
step = step == null?1:+step || 0;

if(end == null){
end = start;
start = 0;}else 
{
end = +end || 0;}



var index=-1,
length=nativeMax(nativeCeil((end - start) / (step || 1)),0),
result=Array(length);

while(++index < length) {
result[index] = start;
start += step;}

return result;}





























function times(n,iteratee,thisArg){
n = nativeFloor(n);



if(n < 1 || !nativeIsFinite(n)){
return [];}

var index=-1,
result=Array(nativeMin(n,MAX_ARRAY_LENGTH));

iteratee = bindCallback(iteratee,thisArg,1);
while(++index < n) {
if(index < MAX_ARRAY_LENGTH){
result[index] = iteratee(index);}else 
{
iteratee(index);}}


return result;}


















function uniqueId(prefix){
var id=++idCounter;
return baseToString(prefix) + id;}


















function add(augend,addend){
return (+augend || 0) + (+addend || 0);}






















var ceil=createRound('ceil');





















var floor=createRound('floor');
















































var max=createExtremum(gt,NEGATIVE_INFINITY);
















































var min=createExtremum(lt,POSITIVE_INFINITY);





















var round=createRound('round');

































function sum(collection,iteratee,thisArg){
if(thisArg && isIterateeCall(collection,iteratee,thisArg)){
iteratee = undefined;}

iteratee = getCallback(iteratee,thisArg,3);
return iteratee.length == 1?
arraySum(isArray(collection)?collection:toIterable(collection),iteratee):
baseSum(collection,iteratee);}





lodash.prototype = baseLodash.prototype;

LodashWrapper.prototype = baseCreate(baseLodash.prototype);
LodashWrapper.prototype.constructor = LodashWrapper;

LazyWrapper.prototype = baseCreate(baseLodash.prototype);
LazyWrapper.prototype.constructor = LazyWrapper;


MapCache.prototype['delete'] = mapDelete;
MapCache.prototype.get = mapGet;
MapCache.prototype.has = mapHas;
MapCache.prototype.set = mapSet;


SetCache.prototype.push = cachePush;


memoize.Cache = MapCache;


lodash.after = after;
lodash.ary = ary;
lodash.assign = assign;
lodash.at = at;
lodash.before = before;
lodash.bind = bind;
lodash.bindAll = bindAll;
lodash.bindKey = bindKey;
lodash.callback = callback;
lodash.chain = chain;
lodash.chunk = chunk;
lodash.compact = compact;
lodash.constant = constant;
lodash.countBy = countBy;
lodash.create = create;
lodash.curry = curry;
lodash.curryRight = curryRight;
lodash.debounce = debounce;
lodash.defaults = defaults;
lodash.defaultsDeep = defaultsDeep;
lodash.defer = defer;
lodash.delay = delay;
lodash.difference = difference;
lodash.drop = drop;
lodash.dropRight = dropRight;
lodash.dropRightWhile = dropRightWhile;
lodash.dropWhile = dropWhile;
lodash.fill = fill;
lodash.filter = filter;
lodash.flatten = flatten;
lodash.flattenDeep = flattenDeep;
lodash.flow = flow;
lodash.flowRight = flowRight;
lodash.forEach = forEach;
lodash.forEachRight = forEachRight;
lodash.forIn = forIn;
lodash.forInRight = forInRight;
lodash.forOwn = forOwn;
lodash.forOwnRight = forOwnRight;
lodash.functions = functions;
lodash.groupBy = groupBy;
lodash.indexBy = indexBy;
lodash.initial = initial;
lodash.intersection = intersection;
lodash.invert = invert;
lodash.invoke = invoke;
lodash.keys = keys;
lodash.keysIn = keysIn;
lodash.map = map;
lodash.mapKeys = mapKeys;
lodash.mapValues = mapValues;
lodash.matches = matches;
lodash.matchesProperty = matchesProperty;
lodash.memoize = memoize;
lodash.merge = merge;
lodash.method = method;
lodash.methodOf = methodOf;
lodash.mixin = mixin;
lodash.modArgs = modArgs;
lodash.negate = negate;
lodash.omit = omit;
lodash.once = once;
lodash.pairs = pairs;
lodash.partial = partial;
lodash.partialRight = partialRight;
lodash.partition = partition;
lodash.pick = pick;
lodash.pluck = pluck;
lodash.property = property;
lodash.propertyOf = propertyOf;
lodash.pull = pull;
lodash.pullAt = pullAt;
lodash.range = range;
lodash.rearg = rearg;
lodash.reject = reject;
lodash.remove = remove;
lodash.rest = rest;
lodash.restParam = restParam;
lodash.set = set;
lodash.shuffle = shuffle;
lodash.slice = slice;
lodash.sortBy = sortBy;
lodash.sortByAll = sortByAll;
lodash.sortByOrder = sortByOrder;
lodash.spread = spread;
lodash.take = take;
lodash.takeRight = takeRight;
lodash.takeRightWhile = takeRightWhile;
lodash.takeWhile = takeWhile;
lodash.tap = tap;
lodash.throttle = throttle;
lodash.thru = thru;
lodash.times = times;
lodash.toArray = toArray;
lodash.toPlainObject = toPlainObject;
lodash.transform = transform;
lodash.union = union;
lodash.uniq = uniq;
lodash.unzip = unzip;
lodash.unzipWith = unzipWith;
lodash.values = values;
lodash.valuesIn = valuesIn;
lodash.where = where;
lodash.without = without;
lodash.wrap = wrap;
lodash.xor = xor;
lodash.zip = zip;
lodash.zipObject = zipObject;
lodash.zipWith = zipWith;


lodash.backflow = flowRight;
lodash.collect = map;
lodash.compose = flowRight;
lodash.each = forEach;
lodash.eachRight = forEachRight;
lodash.extend = assign;
lodash.iteratee = callback;
lodash.methods = functions;
lodash.object = zipObject;
lodash.select = filter;
lodash.tail = rest;
lodash.unique = uniq;


mixin(lodash,lodash);




lodash.add = add;
lodash.attempt = attempt;
lodash.camelCase = camelCase;
lodash.capitalize = capitalize;
lodash.ceil = ceil;
lodash.clone = clone;
lodash.cloneDeep = cloneDeep;
lodash.deburr = deburr;
lodash.endsWith = endsWith;
lodash.escape = escape;
lodash.escapeRegExp = escapeRegExp;
lodash.every = every;
lodash.find = find;
lodash.findIndex = findIndex;
lodash.findKey = findKey;
lodash.findLast = findLast;
lodash.findLastIndex = findLastIndex;
lodash.findLastKey = findLastKey;
lodash.findWhere = findWhere;
lodash.first = first;
lodash.floor = floor;
lodash.get = get;
lodash.gt = gt;
lodash.gte = gte;
lodash.has = has;
lodash.identity = identity;
lodash.includes = includes;
lodash.indexOf = indexOf;
lodash.inRange = inRange;
lodash.isArguments = isArguments;
lodash.isArray = isArray;
lodash.isBoolean = isBoolean;
lodash.isDate = isDate;
lodash.isElement = isElement;
lodash.isEmpty = isEmpty;
lodash.isEqual = isEqual;
lodash.isError = isError;
lodash.isFinite = isFinite;
lodash.isFunction = isFunction;
lodash.isMatch = isMatch;
lodash.isNaN = isNaN;
lodash.isNative = isNative;
lodash.isNull = isNull;
lodash.isNumber = isNumber;
lodash.isObject = isObject;
lodash.isPlainObject = isPlainObject;
lodash.isRegExp = isRegExp;
lodash.isString = isString;
lodash.isTypedArray = isTypedArray;
lodash.isUndefined = isUndefined;
lodash.kebabCase = kebabCase;
lodash.last = last;
lodash.lastIndexOf = lastIndexOf;
lodash.lt = lt;
lodash.lte = lte;
lodash.max = max;
lodash.min = min;
lodash.noConflict = noConflict;
lodash.noop = noop;
lodash.now = now;
lodash.pad = pad;
lodash.padLeft = padLeft;
lodash.padRight = padRight;
lodash.parseInt = parseInt;
lodash.random = random;
lodash.reduce = reduce;
lodash.reduceRight = reduceRight;
lodash.repeat = repeat;
lodash.result = result;
lodash.round = round;
lodash.runInContext = runInContext;
lodash.size = size;
lodash.snakeCase = snakeCase;
lodash.some = some;
lodash.sortedIndex = sortedIndex;
lodash.sortedLastIndex = sortedLastIndex;
lodash.startCase = startCase;
lodash.startsWith = startsWith;
lodash.sum = sum;
lodash.template = template;
lodash.trim = trim;
lodash.trimLeft = trimLeft;
lodash.trimRight = trimRight;
lodash.trunc = trunc;
lodash.unescape = unescape;
lodash.uniqueId = uniqueId;
lodash.words = words;


lodash.all = every;
lodash.any = some;
lodash.contains = includes;
lodash.eq = isEqual;
lodash.detect = find;
lodash.foldl = reduce;
lodash.foldr = reduceRight;
lodash.head = first;
lodash.include = includes;
lodash.inject = reduce;

mixin(lodash,(function(){
var source={};
baseForOwn(lodash,function(func,methodName){
if(!lodash.prototype[methodName]){
source[methodName] = func;}});


return source;})(),
false);




lodash.sample = sample;

lodash.prototype.sample = function(n){
if(!this.__chain__ && n == null){
return sample(this.value());}

return this.thru(function(value){
return sample(value,n);});};












lodash.VERSION = VERSION;


arrayEach(['bind','bindKey','curry','curryRight','partial','partialRight'],function(methodName){
lodash[methodName].placeholder = lodash;});



arrayEach(['drop','take'],function(methodName,index){
LazyWrapper.prototype[methodName] = function(n){
var filtered=this.__filtered__;
if(filtered && !index){
return new LazyWrapper(this);}

n = n == null?1:nativeMax(nativeFloor(n) || 0,0);

var result=this.clone();
if(filtered){
result.__takeCount__ = nativeMin(result.__takeCount__,n);}else 
{
result.__views__.push({'size':n,'type':methodName + (result.__dir__ < 0?'Right':'')});}

return result;};


LazyWrapper.prototype[methodName + 'Right'] = function(n){
return this.reverse()[methodName](n).reverse();};});




arrayEach(['filter','map','takeWhile'],function(methodName,index){
var type=index + 1,
isFilter=type != LAZY_MAP_FLAG;

LazyWrapper.prototype[methodName] = function(iteratee,thisArg){
var result=this.clone();
result.__iteratees__.push({'iteratee':getCallback(iteratee,thisArg,1),'type':type});
result.__filtered__ = result.__filtered__ || isFilter;
return result;};});




arrayEach(['first','last'],function(methodName,index){
var takeName='take' + (index?'Right':'');

LazyWrapper.prototype[methodName] = function(){
return this[takeName](1).value()[0];};});




arrayEach(['initial','rest'],function(methodName,index){
var dropName='drop' + (index?'':'Right');

LazyWrapper.prototype[methodName] = function(){
return this.__filtered__?new LazyWrapper(this):this[dropName](1);};});




arrayEach(['pluck','where'],function(methodName,index){
var operationName=index?'filter':'map',
createCallback=index?baseMatches:property;

LazyWrapper.prototype[methodName] = function(value){
return this[operationName](createCallback(value));};});



LazyWrapper.prototype.compact = function(){
return this.filter(identity);};


LazyWrapper.prototype.reject = function(predicate,thisArg){
predicate = getCallback(predicate,thisArg,1);
return this.filter(function(value){
return !predicate(value);});};



LazyWrapper.prototype.slice = function(start,end){
start = start == null?0:+start || 0;

var result=this;
if(result.__filtered__ && (start > 0 || end < 0)){
return new LazyWrapper(result);}

if(start < 0){
result = result.takeRight(-start);}else 
if(start){
result = result.drop(start);}

if(end !== undefined){
end = +end || 0;
result = end < 0?result.dropRight(-end):result.take(end - start);}

return result;};


LazyWrapper.prototype.takeRightWhile = function(predicate,thisArg){
return this.reverse().takeWhile(predicate,thisArg).reverse();};


LazyWrapper.prototype.toArray = function(){
return this.take(POSITIVE_INFINITY);};



baseForOwn(LazyWrapper.prototype,function(func,methodName){
var checkIteratee=/^(?:filter|map|reject)|While$/.test(methodName),
retUnwrapped=/^(?:first|last)$/.test(methodName),
lodashFunc=lodash[retUnwrapped?'take' + (methodName == 'last'?'Right':''):methodName];

if(!lodashFunc){
return;}

lodash.prototype[methodName] = function(){
var args=retUnwrapped?[1]:arguments,
chainAll=this.__chain__,
value=this.__wrapped__,
isHybrid=!!this.__actions__.length,
isLazy=value instanceof LazyWrapper,
iteratee=args[0],
useLazy=isLazy || isArray(value);

if(useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1){

isLazy = useLazy = false;}

var interceptor=function(value){
return retUnwrapped && chainAll?
lodashFunc(value,1)[0]:
lodashFunc.apply(undefined,arrayPush([value],args));};


var action={'func':thru,'args':[interceptor],'thisArg':undefined},
onlyLazy=isLazy && !isHybrid;

if(retUnwrapped && !chainAll){
if(onlyLazy){
value = value.clone();
value.__actions__.push(action);
return func.call(value);}

return lodashFunc.call(undefined,this.value())[0];}

if(!retUnwrapped && useLazy){
value = onlyLazy?value:new LazyWrapper(this);
var result=func.apply(value,args);
result.__actions__.push(action);
return new LodashWrapper(result,chainAll);}

return this.thru(interceptor);};});




arrayEach(['join','pop','push','replace','shift','sort','splice','split','unshift'],function(methodName){
var func=(/^(?:replace|split)$/.test(methodName)?stringProto:arrayProto)[methodName],
chainName=/^(?:push|sort|unshift)$/.test(methodName)?'tap':'thru',
retUnwrapped=/^(?:join|pop|replace|shift)$/.test(methodName);

lodash.prototype[methodName] = function(){
var args=arguments;
if(retUnwrapped && !this.__chain__){
return func.apply(this.value(),args);}

return this[chainName](function(value){
return func.apply(value,args);});};});





baseForOwn(LazyWrapper.prototype,function(func,methodName){
var lodashFunc=lodash[methodName];
if(lodashFunc){
var key=lodashFunc.name,
names=realNames[key] || (realNames[key] = []);

names.push({'name':methodName,'func':lodashFunc});}});



realNames[createHybridWrapper(undefined,BIND_KEY_FLAG).name] = [{'name':'wrapper','func':undefined}];


LazyWrapper.prototype.clone = lazyClone;
LazyWrapper.prototype.reverse = lazyReverse;
LazyWrapper.prototype.value = lazyValue;


lodash.prototype.chain = wrapperChain;
lodash.prototype.commit = wrapperCommit;
lodash.prototype.concat = wrapperConcat;
lodash.prototype.plant = wrapperPlant;
lodash.prototype.reverse = wrapperReverse;
lodash.prototype.toString = wrapperToString;
lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;


lodash.prototype.collect = lodash.prototype.map;
lodash.prototype.head = lodash.prototype.first;
lodash.prototype.select = lodash.prototype.filter;
lodash.prototype.tail = lodash.prototype.rest;

return lodash;}





var _=runInContext();


if(typeof define == 'function' && typeof define.amd == 'object' && define.amd){




root._ = _;



define(function(){
return _;});}else 



if(freeExports && freeModule){

if(moduleExports){
(freeModule.exports = _)._ = _;}else 


{
freeExports._ = _;}}else 


{

root._ = _;}}).

call(this);
});
__d('Identity/Components/ResourceView.js',["react-native/Libraries/react-native/react-native.js","Identity/utils/utils.js","Identity/Components/ShowPropertiesView.js","Identity/Components/PhotoView.js","Identity/Components/PhotoList.js","Identity/Components/AddNewIdentity.js","Identity/Components/SwitchIdentity.js","Identity/Components/ShowRefList.js","Identity/Components/IdentitiesList.js","Identity/Actions/Actions.js","reflux/src/index.js","Identity/Store/Store.js","react-mixin/index.js","Identity/Components/ResourceViewMixin.js","extend/index.js","tradle-constants/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var utils=require('Identity/utils/utils.js');
var ShowPropertiesView=require('Identity/Components/ShowPropertiesView.js');
var PhotoView=require('Identity/Components/PhotoView.js');
var PhotoList=require('Identity/Components/PhotoList.js');
var AddNewIdentity=require('Identity/Components/AddNewIdentity.js');
var SwitchIdentity=require('Identity/Components/SwitchIdentity.js');
var ShowRefList=require('Identity/Components/ShowRefList.js');
var IdentitiesList=require('Identity/Components/IdentitiesList.js');
var Actions=require('Identity/Actions/Actions.js');
var Reflux=require('reflux/src/index.js');
var Store=require('Identity/Store/Store.js');
var reactMixin=require('react-mixin/index.js');
var ResourceViewMixin=require('Identity/Components/ResourceViewMixin.js');

var extend=require('extend/index.js');
var constants=require('tradle-constants/index.js');var 


StyleSheet=







React.StyleSheet;var ScrollView=React.ScrollView;var Image=React.Image;var View=React.View;var Text=React.Text;var TextInput=React.TextInput;var TouchableHighlight=React.TouchableHighlight;var Component=React.Component;var 

ResourceView=(function(_Component){_inherits(ResourceView,_Component);
function ResourceView(props){_classCallCheck(this,ResourceView);
_get(Object.getPrototypeOf(ResourceView.prototype),'constructor',this).call(this,props);
this.state = {
resource:props.resource,
embedHeight:{height:0}};}_createClass(ResourceView,[{key:'componentDidMount',value:


function componentDidMount(){
this.listenTo(Store,'handleEvent');}},{key:'handleEvent',value:

function handleEvent(params){
if(params.action === 'showIdentityList')
this.onShowIdentityList(params);else 
if(params.action == 'getItem')
this.showRefResource(params.resource);else 

this.onResourceUpdate(params);}},{key:'onResourceUpdate',value:


function onResourceUpdate(params){
var resource=params.resource;
if(resource && this.props.resource[constants.ROOT_HASH] === resource[constants.ROOT_HASH]){
var me=utils.getMe();
if(resource[constants.ROOT_HASH] === me[constants.ROOT_HASH])
utils.setMe(resource);
this.setState({resource:resource});}}},{key:'changePhoto',value:


function changePhoto(photo){
this.setState({currentPhoto:photo});}},{key:'onShowIdentityList',value:

function onShowIdentityList(params){
var me=utils.getMe();
this.props.navigator.push({
id:8,
title:'My Identities',
component:IdentitiesList,
backButtonTitle:'Profile',
passProps:{
filter:'',
list:params.list}});}},{key:'render',value:




function render(){
var resource=this.state.resource;
var modelName=resource[constants.TYPE];
var model=utils.getModel(modelName).value;
var photos=[];
if(resource.photos && resource.photos.length > 1){
extend(photos,resource.photos);
photos.splice(0,1);}


return (
React.createElement(ScrollView,{ref:'this',style:styles.container},
React.createElement(View,{style:[styles.photoBG,{marginTop:-20}]},
React.createElement(PhotoView,{resource:resource})),

React.createElement(AddNewIdentity,{resource:resource,navigator:this.props.navigator}),
React.createElement(SwitchIdentity,{resource:resource,navigator:this.props.navigator}),
React.createElement(ShowRefList,{resource:resource,navigator:this.props.navigator}),
React.createElement(PhotoList,{photos:photos,navigator:this.props.navigator,isView:true,numberInRow:photos.length > 4?5:photos.length}),
React.createElement(ShowPropertiesView,{resource:resource,
showItems:this.showResources.bind(this),
showRefResource:this.getRefResource.bind(this),
excludedProperties:['photos'],
navigator:this.props.navigator})));}},{key:'getRefResource',value:



function getRefResource(resource,prop){
var model=utils.getModel(this.props.resource[constants.TYPE]).value;

this.state.prop = prop;
this.state.propValue = utils.getId(resource.id);
Actions.getItem(resource.id);}}]);return ResourceView;})(Component);



reactMixin(ResourceView.prototype,Reflux.ListenerMixin);
reactMixin(ResourceView.prototype,ResourceViewMixin);

var styles=StyleSheet.create({
container:{
marginTop:64,
flex:1},

photoBG:{
backgroundColor:'#2E3B4E',
alignItems:'center'}});


















module.exports = ResourceView;
});
__d('Identity/Components/ShowPropertiesView.js',["react-native/Libraries/react-native/react-native.js","Identity/Components/PhotoList.js","Identity/Components/ArticleView.js","Identity/utils/utils.js","tradle-constants/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var PhotoList=require('Identity/Components/PhotoList.js');
var ArticleView=require('Identity/Components/ArticleView.js');
var utils=require('Identity/utils/utils.js');
var constants=require('tradle-constants/index.js');

var MONEY_TYPE='tradle.Money';
var DEFAULT_CURRENCY_SYMBOL='$';var 


StyleSheet=








React.StyleSheet;var Image=React.Image;var View=React.View;var ListView=React.ListView;var LayoutAnimation=React.LayoutAnimation;var Text=React.Text;var TextInput=React.TextInput;var TouchableHighlight=React.TouchableHighlight;var Component=React.Component;var 

ShowPropertiesView=(function(_Component){_inherits(ShowPropertiesView,_Component);
function ShowPropertiesView(props){_classCallCheck(this,ShowPropertiesView);
_get(Object.getPrototypeOf(ShowPropertiesView.prototype),'constructor',this).call(this,props);
var dataSource=new ListView.DataSource({
rowHasChanged:function(row1,row2){return row1 !== row2;}});

this.state = {
resource:this.props.resource,
viewStyle:{margin:3},
dataSource:dataSource};}_createClass(ShowPropertiesView,[{key:'render',value:



function render(){
var viewCols=this.getViewCols();
return (
React.createElement(View,null,
viewCols));}},{key:'getViewCols',value:




function getViewCols(resource,model){
var resource=this.state.resource;
var modelName=resource[constants.TYPE];
var model=utils.getModel(modelName).value;
var vCols=model.viewCols;

var excludedProperties=this.props.excludedProperties;
var props=model.properties;
if(excludedProperties){
var mapped=[];
for(var p of excludedProperties) {
if(props[p]){
mapped.push(p);
continue;}}


excludedProperties = mapped;}


if(!vCols){
vCols = [];
for(var p in props) {
if(p != constants.TYPE)
vCols.push(p);}}





var len=vCols.length;
for(var i=0;i < len;i++) {
if(props[vCols[i]].displayName){
vCols.splice(i,1);
len--;}}


var self=this;
var first=true;
var viewCols=vCols.map(function(p){
if(excludedProperties && excludedProperties.indexOf(p) !== -1)
return;

var val=resource[p];
var pMeta=model.properties[p];
var isRef;
var isDirectionRow;
if(!val){
if(pMeta.displayAs)
val = utils.templateIt(pMeta,resource);else 

return;}else 

if(pMeta.ref){
if(pMeta.ref == MONEY_TYPE){
if(typeof val === 'number')
val = DEFAULT_CURRENCY_SYMBOL + val;else 

{
var currencies=utils.getModel(pMeta.ref).value.properties.currency.oneOf;
var valCurrency=val.currency;
for(var c of currencies) {
var currencySymbol=c[valCurrency];
if(currencySymbol){
val = valCurrency == 'USD'?currencySymbol + val.value:val.value + currencySymbol;
break;}}}}else 




{

var value=val[constants.TYPE]?utils.getDisplayName(val,utils.getModel(val[constants.TYPE]).value.properties):val.title;

val = React.createElement(TouchableHighlight,{onPress:self.props.showRefResource.bind(self,val,pMeta),underlayColor:'transparent'},
React.createElement(Text,{style:styles.itemTitle},value));


isRef = true;
isDirectionRow = true;}}else 


if(pMeta.type === 'date')
val = utils.formatDate(val);

if(!val)
return React.createElement(View,null);
if(!isRef){
if(val instanceof Array){
if(pMeta.items.backlink)
return React.createElement(View,null);
var vCols=pMeta.viewCols;
var cnt=val.length;
val = self.renderItems(val,pMeta);
first = false;}else 

if(typeof val === 'number'){
val = React.createElement(Text,{style:styles.description},val);
isDirectionRow = true;}else 

if(val.indexOf('http://') == 0 || val.indexOf('https://') === 0)
val = React.createElement(Text,{onPress:self.onPress.bind(self,val),style:[styles.description,{color:'#7AAAC3'}]},val);else 
{
if(val.length < 30)
isDirectionRow = true;
val = React.createElement(Text,{style:[styles.description],numberOfLines:2},val);}}




var separator=first?
React.createElement(View,null):
React.createElement(View,{style:styles.separator});

var title=model.properties[p].skipLabel?
React.createElement(View,null):
React.createElement(Text,{style:styles.title},model.properties[p].title || utils.makeLabel(p));

return React.createElement(View,{style:{padding:5}},
separator,
React.createElement(View,{style:[styles.textContainer,isDirectionRow?{flexDirection:'row'}:{flexDirection:'column'}]},
title,
val));});




return viewCols;}},{key:'renderItems',value:


function renderItems(val,pMeta){
var itemsMeta=pMeta.items.properties;
if(!itemsMeta){
var ref=pMeta.items.ref;
if(ref){
pMeta = utils.getModel(ref).value;
itemsMeta = pMeta.properties;}}


var counter=0;
var vCols=pMeta.viewCols;
if(!vCols){
vCols = [];
for(var p in itemsMeta) 
vCols.push(p);}

var cnt=val.length;
var self=this;
return val.map(function(v){
var ret=[];
counter++;
for(var p of vCols) {
var itemMeta=itemsMeta[p];
if(!v[p] && !itemMeta.displayAs)
continue;
if(itemMeta.displayName)
continue;
var value;
if(itemMeta.displayAs)
value = utils.templateIt(itemMeta,v);else 
if(itemMeta.type === 'date')
value = utils.formatDate(v[p]);else 
if(itemMeta.type !== 'object'){
if(p == 'photos'){
var photos=[];
ret.push(
React.createElement(PhotoList,{photos:v.photos,navigator:self.props.navigator,numberInRow:4}));

continue;}else 


value = v[p];}else 

if(itemMeta.ref)
value = v[p].title || utils.getDisplayName(v[p],utils.getModel(itemMeta.ref).value.properties);else 

value = v[p].title;

if(!value)
continue;










ret.push(
React.createElement(View,null,
React.createElement(View,{style:value.length > 60?styles.itemColContainer:styles.itemContainer},
React.createElement(Text,{style:itemMeta.skipLabel?{height:0}:styles.itemTitle},itemMeta.skipLabel?'':itemMeta.title || utils.makeLabel(p)),
React.createElement(Text,{style:styles.description},value))));}



return (
React.createElement(View,null,
ret,
counter == cnt?React.createElement(View,null):React.createElement(View,{style:styles.itemSeparator})));});}},{key:'onPress',value:




function onPress(event){
var model=utils.getModel(this.props.resource[constants.TYPE]).value;
this.props.navigator.push({
id:7,
backButtonTitle:'Back',
title:utils.getDisplayName(this.props.resource,model.properties),
component:ArticleView,
passProps:{url:this.props.resource.url}});}}]);return ShowPropertiesView;})(Component);




var styles=StyleSheet.create({
textContainer:{
flex:1},


itemContainer:{
flex:1,
flexDirection:'row'},

itemColContainer:{
flex:1},


separator:{
height:1,
backgroundColor:'#DDDDDD'},

itemSeparator:{
height:1,
backgroundColor:'#D7E6ED'},

title:{
fontSize:18,
marginTop:3,
marginBottom:0,
marginHorizontal:7,
color:'#2E3B4E'},

itemTitle:{
fontSize:18,
marginTop:3,
marginBottom:0,
marginHorizontal:7,
color:'#7AAAC3'},


description:{
fontSize:18,
marginVertical:3,
marginHorizontal:7,
paddingLeft:5,
color:'#999999'},

photo:{
width:86,
height:86,
marginLeft:1},

icon:{
width:40,
height:40}});



module.exports = ShowPropertiesView;
});
__d('Identity/Components/PhotoList.js',["groupByEveryN","react-native/Libraries/react-native/react-native.js","Identity/utils/utils.js","Identity/Components/PhotoCarousel.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var utils=require('Identity/utils/utils.js');
var groupByEveryN=require('groupByEveryN');
var PhotoCarousel=require('Identity/Components/PhotoCarousel.js');var 


StyleSheet=








React.StyleSheet;var Image=React.Image;var View=React.View;var ListView=React.ListView;var Text=React.Text;var TextInput=React.TextInput;var TouchableHighlight=React.TouchableHighlight;var Component=React.Component;var 

PhotoList=(function(_Component){_inherits(PhotoList,_Component);
function PhotoList(props){_classCallCheck(this,PhotoList);
_get(Object.getPrototypeOf(PhotoList.prototype),'constructor',this).call(this,props);
var dataSource=new ListView.DataSource({
rowHasChanged:function(row1,row2){return row1 !== row2;}});

this.state = {
photos:this.props.photos,

dataSource:dataSource};}_createClass(PhotoList,[{key:'render',value:













function render(){
var photos=this.props.photos;
if(!photos || !photos.length || photos.length <= 1 && this.props.isView)
return null;

var val=this.renderPhotoList(photos);
return (
React.createElement(View,{style:[styles.photoContainer,this.props.style?{}:{marginHorizontal:5}]},
val));}},{key:'renderPhotoList',value:




function renderPhotoList(val){
var dataSource=this.state.dataSource.cloneWithRows(
groupByEveryN(val,this.props.numberInRow || 3));

return (
React.createElement(View,{style:styles.row},
React.createElement(ListView,{
renderRow:this.renderRow.bind(this),
dataSource:dataSource})));}},{key:'renderRow',value:




function renderRow(photos){var _this=this;
var len=photos.length;
var imageStyle=this.props.style;
if(!imageStyle){
switch(len){
case 1:
case 2:
case 3:
imageStyle = styles.thumb3;
break;
case 4:
imageStyle = styles.thumb4;
break;
default:
case 5:
imageStyle = styles.thumb5;
break;}}


var photos=photos.map(function(photo){
if(photo === null)
return null;
var title=!photo.title || photo.title === 'photo'?
React.createElement(View,null):
React.createElement(Text,{style:styles.photoTitle},photo.title);












var uri=utils.getImageUri(photo.url);
var source={uri:uri};
if(uri.indexOf('data') === 0)
source.isStatic = true;

return (
React.createElement(View,{style:{paddingTop:2,paddingRight:1,flexDirection:'column'}},
React.createElement(TouchableHighlight,{underlayColor:'transparent',onPress:_this.showCarousel.bind(_this,photo)},
React.createElement(View,null,
React.createElement(Image,{style:[styles.thumbCommon,imageStyle],source:source}),
title))));});






return (
React.createElement(View,{style:styles.row},
photos));}},{key:'showCarousel',value:



function showCarousel(currentPhoto){
this.props.navigator.push({
id:14,
title:'Photos',
noLeftButton:true,
component:PhotoCarousel,
passProps:{
currentPhoto:currentPhoto,
photos:this.props.photos},

rightButtonTitle:'Done',
titleTintColor:'black',
tintColor:'#dddddd',
onRightButtonPress:{
stateChange:this.closeCarousel.bind(this)}});}},{key:'closeCarousel',value:



function closeCarousel(){
this.props.navigator.pop();}}]);return PhotoList;})(Component);



var styles=StyleSheet.create({
photoContainer:{
flex:1,
paddingTop:5,
alignSelf:'center'},

photoTitle:{
fontSize:14,
alignSelf:'center',
marginBottom:5,
color:'#656565'},

thumb3:{
width:120,
height:120},

thumb4:{
width:90,
height:90},

thumb5:{
width:70,
height:70},

thumbCommon:{
borderRadius:5,
borderWidth:1,
marginHorizontal:1,
borderColor:'transparent'},

row:{
flexDirection:'row',
flex:1}});



module.exports = PhotoList;
});
__d('groupByEveryN',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




























function groupByEveryN(array,n){
var result=[];
var temp=[];

for(var i=0;i < array.length;++i) {
if(i > 0 && i % n === 0){
result.push(temp);
temp = [];}

temp.push(array[i]);}


if(temp.length > 0){
while(temp.length !== n) {
temp.push(null);}

result.push(temp);}


return result;}


module.exports = groupByEveryN;
});
__d('Identity/Components/PhotoCarousel.js',["react-native/Libraries/react-native/react-native.js","react-native-carousel/Carousel.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var Carousel=require('react-native-carousel/Carousel.js');var 


StyleSheet=



React.StyleSheet;var Component=React.Component;var Image=React.Image;var View=React.View;var 

PhotoCarousel=(function(_Component){_inherits(PhotoCarousel,_Component);
function PhotoCarousel(props){_classCallCheck(this,PhotoCarousel);
_get(Object.getPrototypeOf(PhotoCarousel.prototype),'constructor',this).call(this,props);}_createClass(PhotoCarousel,[{key:'render',value:

function render(){
var photos=[];
var currentPhoto=this.props.currentPhoto || this.props.photos[0];
var currentPhotoIndex=-1;
var n=this.props.photos.length;
for(var j=0;j < 2;j++) {
for(var i=0;i < n;i++) {
var photo=this.props.photos[i];

if(currentPhotoIndex == -1 && photo.url !== currentPhoto.url)
continue;
if(currentPhotoIndex == -1)
currentPhotoIndex = i;
photos.push(
React.createElement(View,{style:styles.container},
React.createElement(Image,{source:{uri:photo.url},style:styles.image})));}



n = currentPhotoIndex;}

return (
React.createElement(Carousel,{width:375},
photos));}}]);return PhotoCarousel;})(Component);





var styles=StyleSheet.create({
image:{
width:375,
height:400},

container:{
width:375,
flex:1,
justifyContent:'center',
alignItems:'center',
backgroundColor:'black'}});


module.exports = PhotoCarousel;
});
__d('react-native-carousel/Carousel.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=



React.StyleSheet;var View=React.View;var Text=React.Text;var ScrollView=React.ScrollView;

var Carousel=React.createClass({displayName:'Carousel',

getDefaultProps:function(){
return {
hideIndicators:false,
indicatorColor:'#000000',
indicatorSize:20,
inactiveIndicatorColor:'#999999',
indicatorAtBottom:true,
width:375,
initialPage:0};},



getInitialState:function(){
return {
activePage:0};},



componentDidMount:function(){
if(this.props.initialPage > 0){
var width=this.props.initialPage * this.props.width;
this.setState({
activePage:this.props.initialPage});

this.refs.scrollview.scrollWithoutAnimationTo(0,this.props.initialPage * width);}},



render:function(){

return (
React.createElement(View,{style:{flex:1}},
React.createElement(ScrollView,{ref:'scrollview',
contentContainerStyle:styles.container,
automaticallyAdjustContentInsets:false,
horizontal:true,
pagingEnabled:true,
showsHorizontalScrollIndicator:false,
bounces:false,
onMomentumScrollEnd:this.onAnimationEnd},

this.props.children),

this.renderPageIndicator()));},




indicatorPressed:function(ind){
this.setState({
activePage:ind});


this.refs.scrollview.scrollTo(0,ind * this.props.width);},


renderPageIndicator:function(){
if(this.props.hideIndicators === true){
return null;}


var indicators=[],
indicatorStyle=this.props.indicatorAtBottom?styles.pageIndicatorBottom:styles.pageIndicatorTop,
style,position;

position = {
width:this.props.children.length * 15};

position.left = (this.props.width - position.width) / 2;

for(var i=0;i < this.props.children.length;i++) {
style = i === this.state.activePage?{color:this.props.indicatorColor}:{color:this.props.inactiveIndicatorColor};
indicators.push(React.createElement(Text,{style:[style,{fontSize:this.props.indicatorSize}],key:i,onPress:this.indicatorPressed.bind(this,i)},'•'));}


return (
React.createElement(View,{style:[styles.pageIndicator,position,indicatorStyle]},
indicators));},




onAnimationEnd:function(e){
var activePage=e.nativeEvent.contentOffset.x / this.props.width;
this.setState({
activePage:activePage});

if(this.props.onPageChange){
this.props.onPageChange(activePage);}}});




var styles=StyleSheet.create({
container:{
flex:1,
justifyContent:'center'},

page:{
alignItems:'center',
justifyContent:'center',
borderWidth:1},

pageIndicator:{
position:'absolute',
flexDirection:'row',
flex:1,
justifyContent:'space-around',
alignItems:'center',
backgroundColor:'transparent'},

pageIndicatorTop:{
top:20},

pageIndicatorBottom:{
bottom:20}});



module.exports = Carousel;
});
__d('Identity/Components/PhotoView.js',["react-native/Libraries/react-native/react-native.js","Identity/utils/utils.js","react-native-icons/index.js","tradle-constants/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var utils=require('Identity/utils/utils.js');var _require=
require('react-native-icons/index.js');var Icon=_require.Icon;
var constants=require('tradle-constants/index.js');var 


StyleSheet=





React.StyleSheet;var Image=React.Image;var View=React.View;var Text=React.Text;var TouchableHighlight=React.TouchableHighlight;var Component=React.Component;var 

PhotoView=(function(_Component){_inherits(PhotoView,_Component);
function PhotoView(props){_classCallCheck(this,PhotoView);
_get(Object.getPrototypeOf(PhotoView.prototype),'constructor',this).call(this,props);
this.state = {};}_createClass(PhotoView,[{key:'changePhoto',value:

function changePhoto(photo){
this.setState({currentPhoto:photo});}},{key:'render',value:

function render(){
var resource=this.props.resource;
if(!resource)
return React.createElement(View,null);
var modelName=resource[constants.TYPE];
var model=utils.getModel(modelName).value;
if(!model.interfaces && !model.isInterface && !resource[constants.ROOT_HASH])
return React.createElement(View,null);
var hasPhoto=resource.photos && resource.photos.length;
var currentPhoto=this.state.currentPhoto || hasPhoto && resource.photos[0];

if(!currentPhoto){
var icon;
if(model.id === constants.TYPES.IDENTITY)
icon = 'ion|person';else 

icon = 'ion|chatboxes';
return React.createElement(Icon,{name:icon,size:200,color:'#f6f6f4',style:styles.icon});}


var url=currentPhoto.url;
var nextPhoto=resource.photos.length == 1;
var uri=utils.getImageUri(url);
if(resource.photos.length == 1)
return React.createElement(Image,{source:{uri:uri},style:styles.image});else 
{
var nextPhoto;
var len=resource.photos.length;
for(var i=0;i < len && !nextPhoto;i++) {
var p=resource.photos[i].url;
if(p === url)
nextPhoto = i === len - 1?resource.photos[0]:resource.photos[i + 1];}

return React.createElement(TouchableHighlight,{underlayColor:'#ffffff',onPress:this.changePhoto.bind(this,nextPhoto)},
React.createElement(Image,{source:{uri:uri},style:styles.image}));}}}]);return PhotoView;})(Component);





var styles=StyleSheet.create({
image:{
width:400,
height:350,
alignSelf:'stretch'},

icon:{
width:300,
height:250,
alignSelf:'center'}});



module.exports = PhotoView;
});
__d('react-native-icons/index.js',["SMXIconImage","SMXTabBarIOS","SMXLoadingImage"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {
Icon:require('SMXIconImage'),
TabBarIOS:require('SMXTabBarIOS'),
Spinner:require('SMXLoadingImage')};
});
__d('SMXIconImage',["react-native/Libraries/react-native/react-native.js","react-native-icons/shim-assert.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};






var React=require('react-native/Libraries/react-native/react-native.js');var 
StyleSheet=React.StyleSheet;var View=React.View;var requireNativeComponent=React.requireNativeComponent;
var shimAssert=require('react-native-icons/shim-assert.js');

var ICON_REF='icon';

var SMXIconImage=React.createClass({displayName:'SMXIconImage',
propTypes:{
name:React.PropTypes.string,
size:React.PropTypes.number,
color:React.PropTypes.string,





accessible:React.PropTypes.bool,



accessibilityLabel:React.PropTypes.string,





testID:React.PropTypes.string,
icon:React.PropTypes.object},


setNativeProps:function(props){
this.refs[ICON_REF].setNativeProps(props);},


render:function(){
var style=[styles.base,this.props.style];
shimAssert.basic(style,'style must be initialized');

var name=this.props.name;
shimAssert.basic(name,'name must be initialized');

var size=this.props.size;
shimAssert.basic(size,'size must be initialized');

var color=this.props.color;

var nativeProps=Object.assign({},this.props);
nativeProps.style = style;
nativeProps.icon = {
name:name,
size:size,
color:color};


return React.createElement(SMXIconImageView,_extends({},nativeProps,{ref:ICON_REF}));}});



var styles=StyleSheet.create({
base:{
overflow:'hidden'}});



var SMXIconImageView=requireNativeComponent('FAKIconImage',SMXIconImage);

module.exports = SMXIconImage;
});
__d('react-native-icons/shim-assert.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';


module.exports = {

basic:function(object,text){

if(!object){
throw Error(text);}}};
});
__d('SMXTabBarIOS',["SMXTabBarItemIOS","react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};






var React=require('react-native/Libraries/react-native/react-native.js');var 
StyleSheet=React.StyleSheet;var requireNativeComponent=React.requireNativeComponent;var PropTypes=React.PropTypes;
var SMXTabBarIconItemIOS=require('SMXTabBarItemIOS');

var SMXTabBarIOS=React.createClass({displayName:'SMXTabBarIOS',
propTypes:{
tintColor:PropTypes.string,
barTintColor:PropTypes.string,
translucent:PropTypes.bool},


statics:{
Item:SMXTabBarIconItemIOS},


render:function(){
var nativeProps={
tintColor:this.props.tintColor,
barTintColor:this.props.barTintColor,
translucent:this.props.translucent};


return (
React.createElement(SMXIconTabBar,_extends({style:[styles.tabGroup,this.props.style]},nativeProps),
this.props.children));}});





var styles=StyleSheet.create({
tabGroup:{
flex:1}});



var SMXIconTabBar=requireNativeComponent('SMXTabBar',SMXTabBarIOS);

module.exports = SMXTabBarIOS;
});
__d('SMXTabBarItemIOS',["react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}






var React=require('react-native/Libraries/react-native/react-native.js');var 
Image=React.Image;var StyleSheet=React.StyleSheet;var View=React.View;var requireNativeComponent=React.requireNativeComponent;var PropTypes=React.PropTypes;var Dimensions=React.Dimensions;

var onlyChild=React.Children.only;var 


StaticContainer=(function(_React$Component){_inherits(StaticContainer,_React$Component);function StaticContainer(){_classCallCheck(this,StaticContainer);_get(Object.getPrototypeOf(StaticContainer.prototype),'constructor',this).apply(this,arguments);}_createClass(StaticContainer,[{key:'shouldComponentUpdate',value:

function shouldComponentUpdate(nextProps){
return !!nextProps.shouldUpdate;}},{key:'render',value:


function render(){
var child=this.props.children;
return child === null || child === false?null:onlyChild(child);}}]);return StaticContainer;})(React.Component);




var SmixxTabBarItemIOS=React.createClass({displayName:'SmixxTabBarItemIOS',
propTypes:{
onPress:PropTypes.func.isRequired,
selected:PropTypes.bool.isRequired,
badgeValue:PropTypes.string,
title:PropTypes.string,
icon:PropTypes.object},


getInitialState:function(){
return {
hasBeenSelected:false};},



componentWillMount:function(){
if(this.props.selected){
this.setState({hasBeenSelected:true});}},



componentWillReceiveProps:function(nextProps){
if(this.state.hasBeenSelected || nextProps.selected){
this.setState({hasBeenSelected:true});}},



render:function(){
var tabContents=null;


if(this.state.hasBeenSelected){
tabContents = 
React.createElement(StaticContainer,{shouldUpdate:this.props.selected},
this.props.children);}else 


{
tabContents = React.createElement(View,null);}


var icon={name:this.props.iconName,size:this.props.iconSize?this.props.iconSize:28};

return (
React.createElement(SmixxTabBarItem,{
icon:icon,
selectedIcon:icon,
onPress:this.props.onPress,
selected:this.props.selected,
badgeValue:this.props.badgeValue,
title:this.props.title,
style:[styles.tab,this.props.style]},
tabContents));}});





var styles=StyleSheet.create({
tab:{
position:'absolute',
width:Dimensions.get('window').width,
height:Dimensions.get('window').height}});



var SmixxTabBarItem=requireNativeComponent('SMXTabBarItem',SmixxTabBarItemIOS);
module.exports = SmixxTabBarItemIOS;
});
__d('SMXLoadingImage',["react-native/Libraries/react-native/react-native.js","react-native-icons/shim-assert.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};






var React=require('react-native/Libraries/react-native/react-native.js');var 
StyleSheet=React.StyleSheet;var View=React.View;var requireNativeComponent=React.requireNativeComponent;var Animated=React.Animated;var Easing=React.Easing;

var shimAssert=require('react-native-icons/shim-assert.js');

var SMXLoadingImage=React.createClass({displayName:'SMXLoadingImage',
propTypes:{
name:React.PropTypes.string,
size:React.PropTypes.number,
color:React.PropTypes.string,





accessible:React.PropTypes.bool,



accessibilityLabel:React.PropTypes.string,





testID:React.PropTypes.string,
icon:React.PropTypes.object},


getInitialState:function(){
return {
angle:new Animated.Value(0)};},



setNativeProps:function(props){},



_animate:function(){
this.state.angle.setValue(0);
this._anim = Animated.timing(this.state.angle,{
toValue:360,
duration:1200,
easing:Easing.linear}).
start(this._animate);},


componentDidMount:function(){
this._animate();},


render:function(){
var transformStyle={
transform:[
{
rotate:this.state.angle.interpolate({
inputRange:[0,360],
outputRange:['0deg','360deg']})}]};





var style=[styles.base,this.props.style];

shimAssert.basic(style,'style must be initialized');

var name=this.props.name;
shimAssert.basic(name,'name must be initialized');

var size=this.props.size;
shimAssert.basic(size,'size must be initialized');

var color=this.props.color;

var nativeProps=Object.assign({},this.props);
nativeProps.icon = {
name:name,
size:size,
color:color};


return React.createElement(Animated.View,{style:[styles.base,style,transformStyle]},
React.createElement(SMXLoadingImageView,_extends({style:{backgroundColor:'transparent'}},nativeProps)));}});





var styles=StyleSheet.create({
base:{
overflow:'hidden'}});


var SMXLoadingImageView=requireNativeComponent('FAKIconImage',SMXLoadingImage);

module.exports = SMXLoadingImage;
});
__d('Identity/Components/AddNewIdentity.js',["Ionicons","react-native/Libraries/react-native/react-native.js","Identity/utils/utils.js","Identity/Components/NewResource.js","reflux/src/index.js","Identity/Store/Store.js","Identity/Actions/Actions.js","react-mixin/index.js","Identity/styles/buttonStyles.js","tradle-constants/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var utils=require('Identity/utils/utils.js');
var NewResource=require('Identity/Components/NewResource.js');
var Reflux=require('reflux/src/index.js');
var Store=require('Identity/Store/Store.js');
var Actions=require('Identity/Actions/Actions.js');
var reactMixin=require('react-mixin/index.js');
var Icon=require('Ionicons');
var buttonStyles=require('Identity/styles/buttonStyles.js');
var constants=require('tradle-constants/index.js');var 


View=




React.View;var Text=React.Text;var TextInput=React.TextInput;var TouchableHighlight=React.TouchableHighlight;var Component=React.Component;var 

AddNewIdentity=(function(_Component){_inherits(AddNewIdentity,_Component);function AddNewIdentity(){_classCallCheck(this,AddNewIdentity);_get(Object.getPrototypeOf(AddNewIdentity.prototype),'constructor',this).apply(this,arguments);}_createClass(AddNewIdentity,[{key:'componentDidMount',value:
function componentDidMount(){
this.listenTo(Store,'onAddNewIdentity');}},{key:'onAddNewIdentity',value:

function onAddNewIdentity(params){
if(params.action !== 'addNewIdentity')
return;
this.setState({resource:params.resource});}},{key:'render',value:

function render(){
var resource=this.props.resource;

return this.props.isRegistration || resource[constants.ROOT_HASH] === utils.getMe()[constants.ROOT_HASH]?
React.createElement(View,{style:[buttonStyles.container,{top:5}]},
React.createElement(TouchableHighlight,{onPress:this.createNewIdentity.bind(this),underlayColor:'transparent'},
React.createElement(View,null,
React.createElement(View,{style:buttonStyles.buttonContent}),
React.createElement(View,{style:buttonStyles.row},
React.createElement(Icon,{name:'plus',size:25,color:'#ffffff',style:buttonStyles.icon}),
React.createElement(Text,{style:buttonStyles.text},'Add Identity'))))):




React.createElement(View,null);}},{key:'createNewIdentity',value:

function createNewIdentity(){
var resource=this.props.resource;
var model=utils.getModel(resource[constants.TYPE]).value;
var title='New Identity for ' + resource.firstName;
this.props.navigator.push({
title:title,
id:4,
component:NewResource,
backButtonTitle:resource?resource.firstName:'Back',
titleTextColor:'#7AAAC3',
passProps:{
model:model,
callback:this.addNewIdentity}});}},{key:'addNewIdentity',value:



function addNewIdentity(resource){
Actions.addNewIdentity(resource);}}]);return AddNewIdentity;})(Component);


reactMixin(AddNewIdentity.prototype,Reflux.ListenerMixin);

module.exports = AddNewIdentity;
});
__d('Identity/Components/NewResource.js',["react-native/Libraries/react-native/react-native.js","Identity/utils/utils.js","Identity/Components/NewItem.js","Identity/Components/PhotoView.js","Identity/Components/ResourceList.js","Identity/Components/ResourceView.js","Identity/Components/ChatMessage.js","tcomb-form-native/index.js","extend/index.js","Identity/Actions/Actions.js","Identity/Store/Store.js","reflux/src/index.js","react-mixin/index.js","react-native-icons/index.js","Identity/styles/styles.js","react-native-keyboardevents/KeyboardEvents.ios.js","tradle-constants/index.js","Identity/Components/FromToView.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var utils=require('Identity/utils/utils.js');
var NewItem=require('Identity/Components/NewItem.js');
var PhotoView=require('Identity/Components/PhotoView.js');
var ResourceList=require('Identity/Components/ResourceList.js');
var ResourceView=require('Identity/Components/ResourceView.js');
var ChatMessage=require('Identity/Components/ChatMessage.js');
var t=require('tcomb-form-native/index.js');
var extend=require('extend/index.js');
var Actions=require('Identity/Actions/Actions.js');
var Store=require('Identity/Store/Store.js');
var Reflux=require('reflux/src/index.js');
var reactMixin=require('react-mixin/index.js');var _require=
require('react-native-icons/index.js');var Icon=_require.Icon;
var myStyles=require('Identity/styles/styles.js');
var KeyboardEvents=require('react-native-keyboardevents/KeyboardEvents.ios.js');
var KeyboardEventEmitter=KeyboardEvents.Emitter;
var constants=require('tradle-constants/index.js');

var Form=t.form.Form;
Form.stylesheet = myStyles;var 


StyleSheet=







React.StyleSheet;var View=React.View;var Text=React.Text;var TextInput=React.TextInput;var ScrollView=React.ScrollView;var LayoutAnimation=React.LayoutAnimation;var Component=React.Component;var TouchableHighlight=React.TouchableHighlight;var 

NewResource=(function(_Component){_inherits(NewResource,_Component);
function NewResource(props){_classCallCheck(this,NewResource);
_get(Object.getPrototypeOf(NewResource.prototype),'constructor',this).call(this,props);
this.updateKeyboardSpace = this.updateKeyboardSpace.bind(this);
this.resetKeyboardSpace = this.resetKeyboardSpace.bind(this);
var r={};
if(props.resource)
r = props.resource;else 
{
r[constants.TYPE] = props.model.id;}

this.state = {
resource:r,
keyboardSpace:0};

var currentRoutes=this.props.navigator.getCurrentRoutes();
var currentRoutesLength=currentRoutes.length;
currentRoutes[currentRoutesLength - 1].onRightButtonPress = {
stateChange:this.onSavePressed.bind(this)};}_createClass(NewResource,[{key:'updateKeyboardSpace',value:


function updateKeyboardSpace(frames){
LayoutAnimation.configureNext(animations.layout.spring);
this.setState({keyboardSpace:frames.end.height});}},{key:'resetKeyboardSpace',value:


function resetKeyboardSpace(){
LayoutAnimation.configureNext(animations.layout.spring);
this.setState({keyboardSpace:0});}},{key:'componentDidMount',value:


function componentDidMount(){
this.listenTo(Store,'itemAdded');
KeyboardEventEmitter.on(KeyboardEvents.KeyboardDidShowEvent,this.updateKeyboardSpace);
KeyboardEventEmitter.on(KeyboardEvents.KeyboardWillHideEvent,this.resetKeyboardSpace);}},{key:'componentWillUnmount',value:


function componentWillUnmount(){
KeyboardEventEmitter.off(KeyboardEvents.KeyboardDidShowEvent,this.updateKeyboardSpace);
KeyboardEventEmitter.off(KeyboardEvents.KeyboardWillHideEvent,this.resetKeyboardSpace);}},{key:'itemAdded',value:

function itemAdded(params){
var resource=params.resource;
if(!resource || params.action !== 'addItem' && params.action !== 'addMessage')
return;
if(params.error){
if(resource[constants.TYPE] == this.props.resource[constants.TYPE])
this.setState({err:params.error,resource:resource});
return;}




var self=this;
var title=utils.getDisplayName(resource,self.props.model.properties);
var isMessage=this.props.model.interfaces && this.props.model.interfaces.indexOf('tradle.Message') != -1;


if(this.props.callback){
this.props.navigator.pop();
this.props.callback(resource);
return;}

if(isMessage){
this.props.navigator.pop();
return;}

var currentRoutes=self.props.navigator.getCurrentRoutes();
var currentRoutesLength=currentRoutes.length;
var navigateTo=currentRoutesLength == 2?
this.props.navigator.replace:
this.props.navigator.replacePrevious;

navigateTo({
id:3,
title:title,
component:ResourceView,
titleTextColor:'#7AAAC3',
rightButtonTitle:'Edit',
backButtonTitle:'Back',
onRightButtonPress:{
title:title,
id:4,
component:NewResource,
rightButtonTitle:'Done',
backButtonTitle:'Back',
titleTextColor:'#7AAAC3',
passProps:{
model:self.props.model,
resource:resource}},


passProps:{
resource:resource}});


if(currentRoutesLength != 2)
this.props.navigator.pop();}},{key:'onSavePressed',value:

function onSavePressed(){
var resource=this.state.resource;
var value=this.refs.form.getValue();
if(!value){
value = this.refs.form.refs.input.state.value;
if(!value)
return;
var required=this.props.model.required;
for(var p of required) 
if(!value[p] && !resource[p])
return;}

if(!value){
var errors=this.refs.form.refs.input.getValue().errors;
var msg='';
var errMsg=errors.forEach(function(err){
msg += ' ' + err.message;});

this.setState({err:msg});
return;}


var json=JSON.parse(JSON.stringify(value));

if(!resource){
resource = {};
resource[constants.TYPE] = this.props.model.id;}

var isRegistration=!utils.getMe() && this.props.model.id === constants.TYPES.IDENTITY && (!resource || !resource[constants.ROOT_HASH]);
if(isRegistration)
this.state.isRegistration = true;
Actions.addItem(json,resource,this.props.model,isRegistration);}},{key:'chooser',value:

function chooser(prop,propName,event){
var resource=this.state.resource;
if(!resource){
resource = {};
resource[constants.TYPE] = this.props.model.id;}


var value=this.refs.form.input;

var filter=event.nativeEvent.text;
var m=utils.getModel(prop.ref).value;
var currentRoutes=this.props.navigator.getCurrentRoutes();
this.props.navigator.push({
title:m.title,
titleTextColor:'#7AAAC3',
id:10,
component:ResourceList,
backButtonTitle:'Back',
passProps:{
filter:filter,
prop:propName,
modelName:prop.ref,
resource:resource,
returnRoute:currentRoutes[currentRoutes.length - 1],
callback:this.setChosenValue.bind(this)}});}},{key:'setChosenValue',value:




function setChosenValue(propName,value){
var resource=this.state.resource;
resource[propName] = value;
var data=this.refs.form.refs.input.state.value;
if(data){
for(var p in data) 
if(!resource[p])
resource[p] = data[p];}


this.setState({
resource:this.state.resource});}},{key:'addFormValues',value:



function addFormValues(){
var value=this.refs.form.getValue();
var json=value?JSON.parse(JSON.stringify(value)):{};
var resource=this.state.resource;
if(!resource){
resource = {};
resource[constants.TYPE] = this.props.model.id;}

for(var p in json) 
if(!resource[p] && json[p])
resource[p] = json[p];
return resource;}},{key:'onAddItem',value:


function onAddItem(propName,item){
if(!item)
return;
var resource=this.addFormValues();







var items=resource[propName];
if(!items){
items = [];
resource[propName] = items;}

items.push(item);



this.setState({resource:resource,err:''});}},{key:'onNewPressed',value:

function onNewPressed(bl){




















var resource=this.addFormValues();
this.setState({resource:resource,err:''});
this.props.navigator.push({
id:6,
title:'Add new ' + bl.title,
backButtonTitle:'Back',
component:NewItem,
rightButtonTitle:'Done',




passProps:{
metadata:bl,
resource:this.state.resource,
parentMeta:this.props.parentMeta,
onAddItem:this.onAddItem.bind(this)}});}},{key:'render',value:




function render(){
var props=this.props;
var parentBG={backgroundColor:'#7AAAC3'};
var err=this.state.err;

var resource=this.state.resource;
var iKey=resource?
resource[constants.TYPE] + '_' + resource[constants.ROOT_HASH]:
null;

var meta=props.model;
if(this.props.setProperty)
this.state.resource[this.props.setProperty.name] = this.props.setProperty.value;
var data={};
var model={};
var arrays=[];
extend(true,data,resource);
var isMessage=meta.interfaces && meta.interfaces.indexOf('tradle.Message') != -1;
var showSendVerificationForm=false;
if(isMessage){
var len=resource.message && utils.splitMessage(resource.message).length;
if(len < 2)
showSendVerificationForm = true;else 

data.message = '';}


var options=utils.getFormFields({
meta:meta,
data:data,
chooser:this.chooser.bind(this),
model:model,
items:arrays,
onSubmitEditing:this.onSavePressed.bind(this),
onEndEditing:this.onEndEditing.bind(this),
onChange:this.onChange.bind(this)});


var Model=t.struct(model);

var errStyle=err?styles.err:{'padding':0,'height':0};
var itemsMeta=utils.getItemsMeta(meta);
var self=this;
var arrayItems=itemsMeta.map(function(bl){
if(bl.readOnly || bl.items.backlink)
return React.createElement(View,null);
var counter;
if(resource && resource[bl.name]){
if(resource[bl.name].length)
counter = 
React.createElement(View,{style:styles.itemsCounter},React.createElement(Text,null,resource[bl.name]?resource[bl.name].length:''));else 
if(model.required && model.required.indexOf(bl.name) != -1)
counter = 
React.createElement(View,null,
React.createElement(Icon,{name:'fontawesome|asterisk',size:20,color:'#96415A',style:styles.icon}));else 


counter = React.createElement(View,null);}else 

if(self.props.model.required && self.props.model.required.indexOf(bl.name) != -1)
counter = 
React.createElement(View,null,
React.createElement(Icon,{name:'fontawesome|asterisk',size:20,color:'#96415A',style:styles.icon}));else 


counter = React.createElement(View,null);

return (
React.createElement(TouchableHighlight,{style:styles.itemButton,underlayColor:'#7AAAC3',
onPress:self.onNewPressed.bind(self,bl)},
React.createElement(View,{style:{flexDirection:'row',justifyContent:'space-between'}},
React.createElement(View,{style:{justifyContent:'flex-start',flexDirection:'row'}},
React.createElement(Icon,{name:'fontawesome|plus',size:20,color:'#7AAAC3',style:styles.icon}),
React.createElement(Text,{style:styles.itemsText},bl.title)),

counter)));});




var FromToView=require('Identity/Components/FromToView.js');
var style=isMessage?{height:570}:{height:867};
style.marginTop = 60;
options.auto = 'placeholders';
options.tintColor = 'red';

var content=React.createElement(ScrollView,{style:style},
React.createElement(View,{style:styles.container},
React.createElement(Text,{style:errStyle},err),
React.createElement(View,{style:styles.photoBG},
React.createElement(PhotoView,{resource:resource})),

React.createElement(FromToView,{resource:resource,model:meta,navigator:this.props.navigator}),
React.createElement(View,{style:{'padding':15}},
React.createElement(Form,{ref:'form',type:Model,options:options,value:data}),
arrayItems),

React.createElement(View,{style:{height:30}})));


if(isMessage)
return (
React.createElement(View,null,
content,
React.createElement(View,{style:{height:this.state.keyboardSpace}},
React.createElement(View,{style:{marginTop:-35}},
React.createElement(ChatMessage,{resource:resource,
model:meta,
onSubmitEditing:this.onSubmitEditing.bind(this)})))));else 





return content;}},{key:'onEndEditing',value:

function onEndEditing(prop,event){
if(this.state.resource[prop] || event.nativeEvent.text.length)
this.state.resource[prop] = event.nativeEvent.text;}},{key:'onChange',value:

function onChange(prop,value){
this.props.resource[prop] = value;}},{key:'onSubmitEditing',value:


function onSubmitEditing(msg){
msg = msg?msg:this.state.userInput;
var assets=this.state.selectedAssets;
var isNoAssets=utils.isEmpty(assets);
if(!msg && isNoAssets)
return;
var me=utils.getMe();
var resource={from:utils.getMe(),to:this.props.resource.to};
var model=this.props.model;

var toName=utils.getDisplayName(resource.to,utils.getModel(resource.to[constants.TYPE]).value.properties);
var meta=utils.getModel(me[constants.TYPE]).value.properties;
var meName=utils.getDisplayName(me,meta);
var modelName='tradle.SimpleMessage';
var value={
message:msg?
model.isInterface?msg:'[' + msg + '](' + model.id + ')':
'',

from:{
id:me[constants.TYPE] + '_' + me[constants.ROOT_HASH] + '_' + me[constants.CUR_HASH],
title:meName},

to:{
id:resource.to[constants.TYPE] + '_' + resource.to[constants.ROOT_HASH] + '_' + resource.to[constants.CUR_HASH],
title:toName},


time:new Date().getTime()};

value[constants.TYPE] = modelName;

if(!isNoAssets){
var photos=[];
for(var assetUri in assets) 
photos.push({url:assetUri,title:'photo'});

value.photos = photos;}

this.setState({userInput:'',selectedAssets:{}});




Actions.addMessage(value);}}]);return NewResource;})(Component);


reactMixin(NewResource.prototype,Reflux.ListenerMixin);
var animations={
layout:{
spring:{
duration:400,
create:{
duration:300,
type:LayoutAnimation.Types.easeInEaseOut,
property:LayoutAnimation.Properties.opacity},

update:{
type:LayoutAnimation.Types.spring,
springDamping:1}},


easeInEaseOut:{
duration:400,
create:{
type:LayoutAnimation.Types.easeInEaseOut,
property:LayoutAnimation.Properties.scaleXY},

update:{
type:LayoutAnimation.Types.easeInEaseOut}}}};





var styles=StyleSheet.create({
container:{
flex:1},

buttons:{
width:100,
alignSelf:'center'},

itemsText:{
fontSize:18,
color:'#2E3B4E',
alignSelf:'center'},

itemsCounter:{
borderColor:'#2E3B4E',
borderRadius:10,
borderWidth:1,
alignSelf:'center',
paddingHorizontal:5},

itemButton:{
height:36,
padding:20,
alignSelf:'stretch',
borderColor:'#6093ae',
borderWidth:0.5,
borderRadius:8,
marginTop:7,
justifyContent:'center'},

buttonText:{
fontSize:18,
color:'white',
alignSelf:'center'},

button:{
height:36,
flex:1,
flexDirection:'row',
backgroundColor:'#ffffff',
borderColor:'#6093ae',
borderWidth:1,
borderRadius:8,

justifyContent:'center',
margin:10},

photoBG:{
backgroundColor:'#2E3B4E',
alignItems:'center'},

icon:{
width:20,
height:20,
marginLeft:-5,
marginRight:5},

err:{
paddingTop:30,
paddingLeft:20,
fontSize:20,
color:'darkred'}});




module.exports = NewResource;
});
__d('Identity/Components/NewItem.js',["logError","react-native/Libraries/react-native/react-native.js","tcomb-form-native/index.js","Identity/utils/utils.js","extend/index.js","Identity/Components/SelectPhotoList.js","Identity/styles/styles.js","tradle-constants/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var t=require('tcomb-form-native/index.js');
var utils=require('Identity/utils/utils.js');
var extend=require('extend/index.js');
var logError=require('logError');
var SelectPhotoList=require('Identity/Components/SelectPhotoList.js');
var myStyles=require('Identity/styles/styles.js');
var constants=require('tradle-constants/index.js');

var Form=t.form.Form;
Form.stylesheet = myStyles;var 


StyleSheet=





React.StyleSheet;var View=React.View;var Text=React.Text;var ScrollView=React.ScrollView;var Component=React.Component;var TouchableHighlight=React.TouchableHighlight;var 

NewItem=(function(_Component){_inherits(NewItem,_Component);
function NewItem(props){_classCallCheck(this,NewItem);
_get(Object.getPrototypeOf(NewItem.prototype),'constructor',this).call(this,props);
this.state = {
selectedAssets:{}};

var currentRoutes=this.props.navigator.getCurrentRoutes();
var currentRoutesLength=currentRoutes.length;
currentRoutes[currentRoutesLength - 1].onRightButtonPress = {
stateChange:this.onSavePressed.bind(this)};}_createClass(NewItem,[{key:'onSavePressed',value:


function onSavePressed(){
var value=this.refs.form.getValue();
if(!value)
return;
var propName=this.props.metadata.name;
var item=JSON.parse(JSON.stringify(value));
if(!this.validateValues(this.props.metadata,item))
return;




if(utils.isEmpty(this.state.selectedAssets))
this.props.onAddItem(propName,item);else 
{
for(var assetUri in this.state.selectedAssets) {
var newItem={};
extend(newItem,item);
newItem = {url:assetUri,title:'photo'};
this.props.onAddItem(propName,newItem);}}


this.props.navigator.pop();}},{key:'validateValues',value:

function validateValues(prop,item){
var required=prop.required;
var hasError;
this.state.options = {
fields:{}};

if(required){
for(var p of required) 
if(!item[p] && prop.name == 'photos'){
if(!utils.isEmpty(this.state.selectedAssets))
continue;
hasError = true;
this.setState({err:'Select the photo please'});}}


if(!hasError)
this.state.options = null;
return !hasError;}},{key:'addItem',value:

function addItem(){
var propName=this.props.metadata.name;
var json=JSON.parse(JSON.stringify(value));
this.props.onAddItem(propName,json);
return true;}},{key:'render',value:

function render(){
var props=this.props;
var parentBG={backgroundColor:'#7AAAC3'};
var err=props.err || this.state.err || '';
var errStyle=err?styles.err:{'padding':0,'height':0};
var error=err?
React.createElement(Text,{style:errStyle},err):
React.createElement(View,null);


var meta=props.metadata;
var model={};
var params={
meta:meta,
model:model,
onSubmitEditing:this.onSavePressed.bind(this)};


var options=utils.getFormFields(params);
var Model=t.struct(model);
if(this.state.options){
for(var fieldName in this.state.options.fields) {
var fields=this.state.options.fields[fieldName];
for(var f in fields) {
options.fields[fieldName][f] = fields[f];}}}




return (
React.createElement(View,{style:styles.container},
React.createElement(View,{style:{padding:15,marginBottom:15}},
React.createElement(Form,{ref:'form',type:Model,options:options})),

error,
React.createElement(SelectPhotoList,{style:{marginTop:-40},
metadata:this.props.metadata,
navigator:this.props.navigator,
onSelect:this.onSelect.bind(this)})));}},{key:'onSelect',value:



function onSelect(asset){
var selectedAssets=this.state.selectedAssets;

if(selectedAssets[asset.node.image.uri])
delete selectedAssets[asset.node.image.uri];else 

selectedAssets[asset.node.image.uri] = asset;}}]);return NewItem;})(Component);



var styles=StyleSheet.create({
container:{
flex:1,
marginTop:60},

imageContainer:{
flex:1},

row:{
flexDirection:'row',
flex:1,
alignSelf:'center'},

buttons:{
flex:1,
flexDirection:'row'},

buttonText:{
fontSize:16,
color:'white',
alignSelf:'center'},

button:{
height:36,
width:100,
flex:1,
backgroundColor:'#ffffff',
borderColor:'#6093ae',
borderWidth:1,
borderRadius:8,
marginBottom:10,
justifyContent:'center',
alignSelf:'center'},

err:{
paddingVertical:10,
fontSize:20,
color:'darkred'}});



module.exports = NewItem;
});
__d('extend/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var hasOwn=Object.prototype.hasOwnProperty;
var toStr=Object.prototype.toString;
var undefined;

var isArray=function isArray(arr){
if(typeof Array.isArray === 'function'){
return Array.isArray(arr);}


return toStr.call(arr) === '[object Array]';};


var isPlainObject=function isPlainObject(obj){
'use strict';
if(!obj || toStr.call(obj) !== '[object Object]'){
return false;}


var has_own_constructor=hasOwn.call(obj,'constructor');
var has_is_property_of_method=obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype,'isPrototypeOf');

if(obj.constructor && !has_own_constructor && !has_is_property_of_method){
return false;}




var key;
for(key in obj) {}

return key === undefined || hasOwn.call(obj,key);};


module.exports = function extend(){
'use strict';
var options,name,src,copy,copyIsArray,clone,
target=arguments[0],
i=1,
length=arguments.length,
deep=false;


if(typeof target === 'boolean'){
deep = target;
target = arguments[1] || {};

i = 2;}else 
if(typeof target !== 'object' && typeof target !== 'function' || target == null){
target = {};}


for(;i < length;++i) {
options = arguments[i];

if(options != null){

for(name in options) {
src = target[name];
copy = options[name];


if(target === copy){
continue;}



if(deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))){
if(copyIsArray){
copyIsArray = false;
clone = src && isArray(src)?src:[];}else 
{
clone = src && isPlainObject(src)?src:{};}



target[name] = extend(deep,clone,copy);}else 


if(copy !== undefined){
target[name] = copy;}}}}






return target;};
});
__d('Identity/Components/SelectPhotoList.js',["logError","groupByEveryN","react-native/Libraries/react-native/react-native.js","tcomb-form-native/index.js","Identity/utils/utils.js","react-native-icons/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var t=require('tcomb-form-native/index.js');
var utils=require('Identity/utils/utils.js');
var logError=require('logError');
var groupByEveryN=require('groupByEveryN');var _require=
require('react-native-icons/index.js');var Icon=_require.Icon;

var Form=t.form.Form;var 


StyleSheet=







React.StyleSheet;var View=React.View;var Image=React.Image;var Text=React.Text;var CameraRoll=React.CameraRoll;var ListView=React.ListView;var Component=React.Component;var TouchableHighlight=React.TouchableHighlight;var 

SelectPhotoList=(function(_Component){_inherits(SelectPhotoList,_Component);
function SelectPhotoList(props){_classCallCheck(this,SelectPhotoList);
_get(Object.getPrototypeOf(SelectPhotoList.prototype),'constructor',this).call(this,props);
var dataSource=new ListView.DataSource({
rowHasChanged:function(row1,row2){return row1 !== row2;}});

this.state = {
assets:[],
batchSize:32,
groupTypes:'SavedPhotos',
lastCursor:null,
selected:{},
noMore:false,
imagesPerRow:this.props.imagesPerRow || 4,
loadingMore:false,
dataSource:dataSource};}_createClass(SelectPhotoList,[{key:'componentDidMount',value:


function componentDidMount(){
this.fetch();}},{key:'fetch',value:

function fetch(clear){var _this=this;
if(!this.state.loadingMore){
this.setState({loadingMore:true},function(){_this.fetchAssets(clear);});}}},{key:'render',value:



function render(){
if(this.props.metadata.name !== 'photos')
return false;
return (
React.createElement(ListView,{
renderRow:this.renderRow.bind(this),
style:this.props.style || styles.photoContainer,
dataSource:this.state.dataSource,
onEndReached:this.onEndReached.bind(this)}));}},{key:'fetchAssets',value:


function fetchAssets(clear){
if(clear){
this.fetch();
this.setState(this.state,this.fetch);
return;}


var fetchParams={
first:this.state.batchSize,
groupTypes:this.state.groupTypes};

if(this.state.lastCursor)
fetchParams.after = this.state.lastCursor;

CameraRoll.getPhotos(fetchParams,this._appendAssets.bind(this),logError);}},{key:'onEndReached',value:

function onEndReached(){
if(!this.state.noMore)
this.fetch();}},{key:'renderRow',value:

function renderRow(assets,sectionID,rowID){
var photos=[];
for(var asset of assets) {
if(asset === null)
continue;
var icon=this.state.selected[asset.node.image.uri]?

React.createElement(TouchableHighlight,{onPress:this.onSelect.bind(this,asset),underlayColor:'#ffffff'},
React.createElement(View,null,
React.createElement(Icon,{name:'ion|ios-checkmark-empty',size:20,color:'#eeeeee',style:styles.icon}))):


React.createElement(View,null);
photos.push(
React.createElement(View,null,
React.createElement(TouchableHighlight,{onPress:this.onSelect.bind(this,asset),underlayColor:'#ffffff'},
React.createElement(Image,{style:styles.image,source:asset.node.image})),

icon));}




return (
React.createElement(View,{style:styles.row},
photos));}},{key:'onSelect',value:



function onSelect(asset){
this.props.onSelect(asset);
var selected=this.state.selected;
if(selected[asset.node.image.uri])
delete selected[asset.node.image.uri];else 

selected[asset.node.image.uri] = asset;

var newDataSource=this.state.dataSource.cloneWithRows(
groupByEveryN(this.state.assets,this.state.imagesPerRow));


this.setState({selected:selected,dataSource:newDataSource});}},{key:'_appendAssets',value:



function _appendAssets(data){
var assets=data.edges;
var state={loadingMore:false};

if(!data.page_info.has_next_page)
state.noMore = true;

if(assets.length > 0){
state.lastCursor = data.page_info.end_cursor;
state.assets = this.state.assets.concat(assets);
state.dataSource = this.state.dataSource.cloneWithRows(
groupByEveryN(state.assets,this.state.imagesPerRow));}



this.setState(state);}}]);return SelectPhotoList;})(Component);



var styles=StyleSheet.create({
photoContainer:{
marginTop:65,
flex:1},

row:{
flexDirection:'row',
flex:1,
marginLeft:1},


image:{
margin:1,
width:91,
height:91},

icon:{
width:20,
height:20,
marginLeft:4,
borderWidth:1,
borderColor:'#eeeeee',
backgroundColor:'blue',
borderRadius:10,
marginTop:-25}});


module.exports = SelectPhotoList;
});
__d('Identity/styles/styles.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






var LABEL_COLOR='#000000';
var INPUT_COLOR='#000000';
var ERROR_COLOR='#a94442';
var HELP_COLOR='#999999';
var BORDER_COLOR='#cccccc';
var DISABLED_COLOR='#777777';
var DISABLED_BACKGROUND_COLOR='#eeeeee';
var FONT_SIZE=17;
var HELP_FONT_SIZE=15;

var FONT_WEIGHT='400';

var stylesheet=Object.freeze({
fieldset:{},

formGroup:{
normal:{
marginBottom:10},

error:{
marginBottom:10}},


controlLabel:{
normal:{
color:LABEL_COLOR,
fontSize:FONT_SIZE,
marginBottom:3,
fontWeight:FONT_WEIGHT},


error:{
color:ERROR_COLOR,
fontSize:FONT_SIZE,
marginBottom:7,
fontWeight:FONT_WEIGHT}},


helpBlock:{
normal:{
color:HELP_COLOR,
fontSize:HELP_FONT_SIZE,
marginLeft:10,
marginBottom:2},


error:{
color:HELP_COLOR,
fontSize:HELP_FONT_SIZE,
marginLeft:10,
marginBottom:2}},


errorBlock:{
fontSize:FONT_SIZE,
marginBottom:2,
color:ERROR_COLOR},

textbox:{
normal:{
color:INPUT_COLOR,
fontSize:FONT_SIZE,
height:36,
padding:7,
borderRadius:4,
borderColor:BORDER_COLOR,




borderWidth:0.5,
marginBottom:5},


error:{
color:INPUT_COLOR,
fontSize:FONT_SIZE,
height:36,
padding:7,
borderRadius:4,
borderColor:ERROR_COLOR,
borderWidth:1,
marginBottom:5},


notEditable:{
fontSize:FONT_SIZE,
height:36,
padding:7,
borderRadius:4,
borderColor:BORDER_COLOR,
borderWidth:1,
marginBottom:5,
color:DISABLED_COLOR,
backgroundColor:DISABLED_BACKGROUND_COLOR}},


checkbox:{
normal:{
color:INPUT_COLOR,
marginBottom:4},


error:{
color:INPUT_COLOR,
marginBottom:4}},


select:{
normal:{
marginBottom:4},


error:{
marginBottom:4}},


datepicker:{
normal:{
marginBottom:4},


error:{
marginBottom:4}}});




module.exports = stylesheet;
});
__d('Identity/Components/ChatMessage.js',["react-native/Libraries/react-native/react-native.js","Identity/utils/utils.js","tradle-constants/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var utils=require('Identity/utils/utils.js');
var constants=require('tradle-constants/index.js');var 

Component=




React.Component;var View=React.View;var TextInput=React.TextInput;var Text=React.Text;var StyleSheet=React.StyleSheet;var 



ChatMessage=(function(_Component){_inherits(ChatMessage,_Component);
function ChatMessage(props){_classCallCheck(this,ChatMessage);
_get(Object.getPrototypeOf(ChatMessage.prototype),'constructor',this).call(this,props);
this.state = {userInput:''};}_createClass(ChatMessage,[{key:'render',value:

function render(){
var model=this.props.model;
var isMessage=model.interfaces && model.interfaces.indexOf('tradle.Message') != -1;
if(!isMessage && !model.isInterface)
return React.createElement(View,null);
var resource=this.props.resource;
var title=resource.to[constants.TYPE]?
utils.getDisplayName(resource.to,utils.getModel(resource.to[constants.TYPE]).value.properties):
resource.to.title;
if(resource.message && utils.splitMessage(resource.message).length === 1)
return React.createElement(View,null);
var alignStyle=model.isInterface?{alignSelf:'center',marginTop:10}:{alignSelf:'stretch'};

var messageField=
React.createElement(View,{style:[styles.chat,alignStyle]},
React.createElement(TextInput,{ref:'chat',
autoCapitalize:'none',
autoCorrect:false,
bufferDelay:20,
placeholder:'Say something',
placeholderTextColor:'#bbbbbb',
style:styles.chatInput,
value:this.state.userInput,
onChange:this.handleChange.bind(this),
onSubmitEditing:this.onSubmitEditing.bind(this)}));





if(model.isInterface)
return messageField;
return (
React.createElement(View,null,
React.createElement(View,{style:styles.view},
React.createElement(Text,{style:styles.formRequest},'Send this form to ',title)),

messageField));}},{key:'clear',value:



function clear(){
this.setState({userInput:''});}},{key:'handleChange',value:

function handleChange(event){
if(this.props.onChange)
this.props.onChange(event);
this.setState({userInput:event.nativeEvent.text});}},{key:'onSubmitEditing',value:

function onSubmitEditing(){
var msg=this.state.userInput;
if(!msg)
return;
this.props.onSubmitEditing(msg);
setTimeout((function(){
this.setState({userInput:''});
this.refs.chat.focus();}).
bind(this),0);}}]);return ChatMessage;})(Component);


var styles=StyleSheet.create({
view:{
backgroundColor:'#efffe5',
borderWidth:1,
borderTopColor:'#deeeb4',
borderLeftColor:'#efffe5',
borderRightColor:'#efffe5',
borderBottomColor:'#deeeb4',
paddingVertical:7},

chat:{
marginBottom:5,
flex:1,
alignSelf:'center',
backgroundColor:'#eeeeee',
borderTopColor:'#eeeeee',
borderRightColor:'#eeeeee',
borderLeftColor:'#eeeeee',
borderWidth:2,
borderBottomColor:'#cccccc'},

chatInput:{
height:30,
fontSize:18,
paddingLeft:10,
backgroundColor:'#eeeeee',
fontWeight:'bold',
alignSelf:'stretch',
borderColor:'#eeeeee'},

formRequest:{
paddingLeft:10,
fontSize:18,
color:'#2E3B4E'}});













module.exports = ChatMessage;
});
__d('Identity/Actions/Actions.js',["reflux/src/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var Reflux=require('reflux/src/index.js');

var Actions=Reflux.createActions([
'addItem',
'addMessage',
'getItem',
'addNewIdentity',
'removeIdentity',
'showIdentityList',
'changeIdentity',
'reloadDB',
'list',
'messageList',
'addModelFromUrl',
'start',
'addVerification']);





module.exports = Actions;
});
__d('reflux/src/index.js',["reflux-core/lib/index.js","reflux/src/connect.js","reflux/src/connectFilter.js","reflux/src/ListenerMixin.js","reflux/src/listenTo.js","reflux/src/listenToMany.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var Reflux=require('reflux-core/lib/index.js');

Reflux.connect = require('reflux/src/connect.js');

Reflux.connectFilter = require('reflux/src/connectFilter.js');

Reflux.ListenerMixin = require('reflux/src/ListenerMixin.js');

Reflux.listenTo = require('reflux/src/listenTo.js');

Reflux.listenToMany = require('reflux/src/listenToMany.js');

module.exports = Reflux;
});
__d('reflux-core/lib/index.js',["reflux-core/lib/ActionMethods.js","reflux-core/lib/ListenerMethods.js","reflux-core/lib/PublisherMethods.js","reflux-core/lib/StoreMethods.js","reflux-core/lib/createAction.js","reflux-core/lib/createStore.js","reflux-core/lib/joins.js","reflux-core/lib/utils.js","reflux-core/lib/Keep.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

Object.defineProperty(exports,"__esModule",{
value:true});

var Reflux={
version:{
"reflux-core":"0.2.1"}};



Reflux.ActionMethods = require("reflux-core/lib/ActionMethods.js");

Reflux.ListenerMethods = require("reflux-core/lib/ListenerMethods.js");

Reflux.PublisherMethods = require("reflux-core/lib/PublisherMethods.js");

Reflux.StoreMethods = require("reflux-core/lib/StoreMethods.js");

Reflux.createAction = require("reflux-core/lib/createAction.js");

Reflux.createStore = require("reflux-core/lib/createStore.js");

var maker=require("reflux-core/lib/joins.js").staticJoinCreator;

Reflux.joinTrailing = Reflux.all = maker("last");

Reflux.joinLeading = maker("first");

Reflux.joinStrict = maker("strict");

Reflux.joinConcat = maker("all");

var _=Reflux.utils = require("reflux-core/lib/utils.js");

Reflux.EventEmitter = _.EventEmitter;

Reflux.Promise = _.Promise;







Reflux.createActions = (function(){
var reducer=function reducer(definitions,actions){
Object.keys(definitions).forEach(function(actionName){
var val=definitions[actionName];
actions[actionName] = Reflux.createAction(val);});};



return function(definitions){
var actions={};
if(definitions instanceof Array){
definitions.forEach(function(val){
if(_.isObject(val)){
reducer(val,actions);}else 
{
actions[val] = Reflux.createAction(val);}});}else 


{
reducer(definitions,actions);}

return actions;};})();






Reflux.setEventEmitter = function(ctx){
Reflux.EventEmitter = _.EventEmitter = ctx;};





Reflux.setPromise = function(ctx){
Reflux.Promise = _.Promise = ctx;};






Reflux.setPromiseFactory = function(factory){
_.createPromise = factory;};





Reflux.nextTick = function(nextTick){
_.nextTick = nextTick;};


Reflux.use = function(pluginCb){
pluginCb(Reflux);};






Reflux.__keep = require("reflux-core/lib/Keep.js");





if(!Function.prototype.bind){
console.error("Function.prototype.bind not available. " + "ES5 shim required. " + "https://github.com/spoike/refluxjs#es5");}


exports["default"] = Reflux;
module.exports = exports["default"];
});
__d('reflux-core/lib/ActionMethods.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





module.exports = {};
});
__d('reflux-core/lib/ListenerMethods.js',["reflux-core/lib/utils.js","reflux-core/lib/joins.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var _=require("reflux-core/lib/utils.js"),
maker=require("reflux-core/lib/joins.js").instanceJoinCreator;







var mapChildListenables=function mapChildListenables(listenable){
var i=0,
children={},
childName;
for(;i < (listenable.children || []).length;++i) {
childName = listenable.children[i];
if(listenable[childName]){
children[childName] = listenable[childName];}}


return children;};








var flattenListenables=function flattenListenables(listenables){
var flattened={};
for(var key in listenables) {
var listenable=listenables[key];
var childMap=mapChildListenables(listenable);


var children=flattenListenables(childMap);


flattened[key] = listenable;
for(var childKey in children) {
var childListenable=children[childKey];
flattened[key + _.capitalize(childKey)] = childListenable;}}



return flattened;};





module.exports = {







hasListener:function hasListener(listenable){
var i=0,
j,
listener,
listenables;
for(;i < (this.subscriptions || []).length;++i) {
listenables = [].concat(this.subscriptions[i].listenable);
for(j = 0;j < listenables.length;j++) {
listener = listenables[j];
if(listener === listenable || listener.hasListener && listener.hasListener(listenable)){
return true;}}}



return false;},







listenToMany:function listenToMany(listenables){
var allListenables=flattenListenables(listenables);
for(var key in allListenables) {
var cbname=_.callbackName(key),
localname=this[cbname]?cbname:this[key]?key:undefined;
if(localname){
this.listenTo(allListenables[key],localname,this[cbname + "Default"] || this[localname + "Default"] || localname);}}},











validateListening:function validateListening(listenable){
if(listenable === this){
return "Listener is not able to listen to itself";}

if(!_.isFunction(listenable.listen)){
return listenable + " is missing a listen method";}

if(listenable.hasListener && listenable.hasListener(this)){
return "Listener cannot listen to this listenable because of circular loop";}},












listenTo:function listenTo(listenable,callback,defaultCallback){
var desub,
unsubscriber,
subscriptionobj,
subs=this.subscriptions = this.subscriptions || [];
_.throwIf(this.validateListening(listenable));
this.fetchInitialState(listenable,defaultCallback);
desub = listenable.listen(this[callback] || callback,this);
unsubscriber = function(){
var index=subs.indexOf(subscriptionobj);
_.throwIf(index === -1,"Tried to remove listen already gone from subscriptions list!");
subs.splice(index,1);
desub();};

subscriptionobj = {
stop:unsubscriber,
listenable:listenable};

subs.push(subscriptionobj);
return subscriptionobj;},








stopListeningTo:function stopListeningTo(listenable){
var sub,
i=0,
subs=this.subscriptions || [];
for(;i < subs.length;i++) {
sub = subs[i];
if(sub.listenable === listenable){
sub.stop();
_.throwIf(subs.indexOf(sub) !== -1,"Failed to remove listen from subscriptions list!");
return true;}}


return false;},





stopListeningToAll:function stopListeningToAll(){
var remaining,
subs=this.subscriptions || [];
while(remaining = subs.length) {
subs[0].stop();
_.throwIf(subs.length !== remaining - 1,"Failed to remove listen from subscriptions list!");}},








fetchInitialState:function fetchInitialState(listenable,defaultCallback){
defaultCallback = defaultCallback && this[defaultCallback] || defaultCallback;
var me=this;
if(_.isFunction(defaultCallback) && _.isFunction(listenable.getInitialState)){
var data=listenable.getInitialState();
if(data && _.isFunction(data.then)){
data.then(function(){
defaultCallback.apply(me,arguments);});}else 

{
defaultCallback.call(this,data);}}},











joinTrailing:maker("last"),








joinLeading:maker("first"),








joinConcat:maker("all"),








joinStrict:maker("strict")};
});
__d('reflux-core/lib/utils.js',["eventemitter3/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

Object.defineProperty(exports,"__esModule",{
value:true});

exports.capitalize = capitalize;
exports.callbackName = callbackName;
exports.isObject = isObject;
exports.extend = extend;
exports.isFunction = isFunction;
exports.object = object;
exports.isArguments = isArguments;
exports.throwIf = throwIf;

function capitalize(string){
return string.charAt(0).toUpperCase() + string.slice(1);}


function callbackName(string,prefix){
prefix = prefix || "on";
return prefix + exports.capitalize(string);}


var environment={};

exports.environment = environment;
function checkEnv(target){
var flag=undefined;
try{

if(eval(target)){
flag = true;}}


catch(e) {
flag = false;}

environment[callbackName(target,"has")] = flag;}

checkEnv("setImmediate");
checkEnv("Promise");






function isObject(obj){
var type=typeof obj;
return type === "function" || type === "object" && !!obj;}


function extend(obj){
if(!isObject(obj)){
return obj;}

var source,prop;
for(var i=1,length=arguments.length;i < length;i++) {
source = arguments[i];
for(prop in source) {
if(Object.getOwnPropertyDescriptor && Object.defineProperty){
var propertyDescriptor=Object.getOwnPropertyDescriptor(source,prop);
Object.defineProperty(obj,prop,propertyDescriptor);}else 
{
obj[prop] = source[prop];}}}



return obj;}


function isFunction(value){
return typeof value === "function";}


exports.EventEmitter = require("eventemitter3/index.js");

if(environment.hasSetImmediate){
exports.nextTick = function(callback){
setImmediate(callback);};}else 

{
exports.nextTick = function(callback){
setTimeout(callback,0);};}



function object(keys,vals){
var o={},
i=0;
for(;i < keys.length;i++) {
o[keys[i]] = vals[i];}

return o;}


if(environment.hasPromise){
exports.Promise = Promise;
exports.createPromise = function(resolver){
return new exports.Promise(resolver);};}else 

{
exports.Promise = null;
exports.createPromise = function(){};}


function isArguments(value){
return typeof value === "object" && "callee" in value && typeof value.length === "number";}


function throwIf(val,msg){
if(val){
throw Error(msg || val);}}
});
__d('eventemitter3/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';









var prefix=typeof Object.create !== 'function'?'~':false;









function EE(fn,context,once){
this.fn = fn;
this.context = context;
this.once = once || false;}









function EventEmitter(){}







EventEmitter.prototype._events = undefined;









EventEmitter.prototype.listeners = function listeners(event,exists){
var evt=prefix?prefix + event:event,
available=this._events && this._events[evt];

if(exists)return !!available;
if(!available)return [];
if(available.fn)return [available.fn];

for(var i=0,l=available.length,ee=new Array(l);i < l;i++) {
ee[i] = available[i].fn;}


return ee;};









EventEmitter.prototype.emit = function emit(event,a1,a2,a3,a4,a5){
var evt=prefix?prefix + event:event;

if(!this._events || !this._events[evt])return false;

var listeners=this._events[evt],
len=arguments.length,
args,
i;

if('function' === typeof listeners.fn){
if(listeners.once)this.removeListener(event,listeners.fn,undefined,true);

switch(len){
case 1:return (listeners.fn.call(listeners.context),true);
case 2:return (listeners.fn.call(listeners.context,a1),true);
case 3:return (listeners.fn.call(listeners.context,a1,a2),true);
case 4:return (listeners.fn.call(listeners.context,a1,a2,a3),true);
case 5:return (listeners.fn.call(listeners.context,a1,a2,a3,a4),true);
case 6:return (listeners.fn.call(listeners.context,a1,a2,a3,a4,a5),true);}


for(i = 1,args = new Array(len - 1);i < len;i++) {
args[i - 1] = arguments[i];}


listeners.fn.apply(listeners.context,args);}else 
{
var length=listeners.length,
j;

for(i = 0;i < length;i++) {
if(listeners[i].once)this.removeListener(event,listeners[i].fn,undefined,true);

switch(len){
case 1:listeners[i].fn.call(listeners[i].context);break;
case 2:listeners[i].fn.call(listeners[i].context,a1);break;
case 3:listeners[i].fn.call(listeners[i].context,a1,a2);break;
default:
if(!args)for(j = 1,args = new Array(len - 1);j < len;j++) {
args[j - 1] = arguments[j];}


listeners[i].fn.apply(listeners[i].context,args);}}}




return true;};










EventEmitter.prototype.on = function on(event,fn,context){
var listener=new EE(fn,context || this),
evt=prefix?prefix + event:event;

if(!this._events)this._events = prefix?{}:Object.create(null);
if(!this._events[evt])this._events[evt] = listener;else 
{
if(!this._events[evt].fn)this._events[evt].push(listener);else 
this._events[evt] = [
this._events[evt],listener];}



return this;};










EventEmitter.prototype.once = function once(event,fn,context){
var listener=new EE(fn,context || this,true),
evt=prefix?prefix + event:event;

if(!this._events)this._events = prefix?{}:Object.create(null);
if(!this._events[evt])this._events[evt] = listener;else 
{
if(!this._events[evt].fn)this._events[evt].push(listener);else 
this._events[evt] = [
this._events[evt],listener];}



return this;};











EventEmitter.prototype.removeListener = function removeListener(event,fn,context,once){
var evt=prefix?prefix + event:event;

if(!this._events || !this._events[evt])return this;

var listeners=this._events[evt],
events=[];

if(fn){
if(listeners.fn){
if(
listeners.fn !== fn || 
once && !listeners.once || 
context && listeners.context !== context)
{
events.push(listeners);}}else 

{
for(var i=0,length=listeners.length;i < length;i++) {
if(
listeners[i].fn !== fn || 
once && !listeners[i].once || 
context && listeners[i].context !== context)
{
events.push(listeners[i]);}}}}








if(events.length){
this._events[evt] = events.length === 1?events[0]:events;}else 
{
delete this._events[evt];}


return this;};








EventEmitter.prototype.removeAllListeners = function removeAllListeners(event){
if(!this._events)return this;

if(event)delete this._events[prefix?prefix + event:event];else 
this._events = prefix?{}:Object.create(null);

return this;};





EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;




EventEmitter.prototype.setMaxListeners = function setMaxListeners(){
return this;};





EventEmitter.prefixed = prefix;




if('undefined' !== typeof module){
module.exports = EventEmitter;}
});
__d('reflux-core/lib/joins.js',["reflux-core/lib/createStore.js","reflux-core/lib/utils.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var createStore=require("reflux-core/lib/createStore.js"),
_=require("reflux-core/lib/utils.js");

var slice=Array.prototype.slice,
strategyMethodNames={
strict:"joinStrict",
first:"joinLeading",
last:"joinTrailing",
all:"joinConcat"};







exports.staticJoinCreator = function(strategy){
return function(){
var listenables=slice.call(arguments);
return createStore({
init:function init(){
this[strategyMethodNames[strategy]].apply(this,listenables.concat("triggerAsync"));}});};};










exports.instanceJoinCreator = function(strategy){
return function(){
_.throwIf(arguments.length < 2,"Cannot create a join with less than 2 listenables!");
var listenables=slice.call(arguments),
callback=listenables.pop(),
numberOfListenables=listenables.length,
join={
numberOfListenables:numberOfListenables,
callback:this[callback] || callback,
listener:this,
strategy:strategy},

i,
cancels=[],
subobj;
for(i = 0;i < numberOfListenables;i++) {
_.throwIf(this.validateListening(listenables[i]));}

for(i = 0;i < numberOfListenables;i++) {
cancels.push(listenables[i].listen(newListener(i,join),this));}

reset(join);
subobj = {listenable:listenables};
subobj.stop = makeStopper(subobj,cancels,this);
this.subscriptions = (this.subscriptions || []).concat(subobj);
return subobj;};};





function makeStopper(subobj,cancels,context){
return function(){
var i,
subs=context.subscriptions,
index=subs?subs.indexOf(subobj):-1;
_.throwIf(index === -1,"Tried to remove join already gone from subscriptions list!");
for(i = 0;i < cancels.length;i++) {
cancels[i]();}

subs.splice(index,1);};}



function reset(join){
join.listenablesEmitted = new Array(join.numberOfListenables);
join.args = new Array(join.numberOfListenables);}


function newListener(i,join){
return function(){
var callargs=slice.call(arguments);
if(join.listenablesEmitted[i]){
switch(join.strategy){
case "strict":
throw new Error("Strict join failed because listener triggered twice.");
case "last":
join.args[i] = callargs;break;
case "all":
join.args[i].push(callargs);}}else 

{
join.listenablesEmitted[i] = true;
join.args[i] = join.strategy === "all"?[callargs]:callargs;}

emitIfAllListenablesEmitted(join);};}



function emitIfAllListenablesEmitted(join){
for(var i=0;i < join.numberOfListenables;i++) {
if(!join.listenablesEmitted[i]){
return;}}


join.callback.apply(join.listener,join.args);
reset(join);}
});
__d('reflux-core/lib/createStore.js',["reflux-core/lib/utils.js","reflux-core/lib/Keep.js","reflux-core/lib/mixer.js","reflux-core/lib/bindMethods.js","reflux-core/lib/StoreMethods.js","reflux-core/lib/PublisherMethods.js","reflux-core/lib/ListenerMethods.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var _=require("reflux-core/lib/utils.js"),
Keep=require("reflux-core/lib/Keep.js"),
mixer=require("reflux-core/lib/mixer.js"),
bindMethods=require("reflux-core/lib/bindMethods.js");

var allowed={preEmit:1,shouldEmit:1};









module.exports = function(definition){

var StoreMethods=require("reflux-core/lib/StoreMethods.js"),
PublisherMethods=require("reflux-core/lib/PublisherMethods.js"),
ListenerMethods=require("reflux-core/lib/ListenerMethods.js");

definition = definition || {};

for(var a in StoreMethods) {
if(!allowed[a] && (PublisherMethods[a] || ListenerMethods[a])){
throw new Error("Cannot override API method " + a + " in Reflux.StoreMethods. Use another method name or override it on Reflux.PublisherMethods / Reflux.ListenerMethods instead.");}}



for(var d in definition) {
if(!allowed[d] && (PublisherMethods[d] || ListenerMethods[d])){
throw new Error("Cannot override API method " + d + " in store creation. Use another method name or override it on Reflux.PublisherMethods / Reflux.ListenerMethods instead.");}}



definition = mixer(definition);

function Store(){
var i=0,
arr;
this.subscriptions = [];
this.emitter = new _.EventEmitter();
this.eventLabel = "change";
bindMethods(this,definition);
if(this.init && _.isFunction(this.init)){
this.init();}

if(this.listenables){
arr = [].concat(this.listenables);
for(;i < arr.length;i++) {
this.listenToMany(arr[i]);}}}




_.extend(Store.prototype,ListenerMethods,PublisherMethods,StoreMethods,definition);

var store=new Store();
Keep.createdStores.push(store);

return store;};
});
__d('reflux-core/lib/Keep.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

exports.createdStores = [];

exports.createdActions = [];

exports.reset = function(){
while(exports.createdStores.length) {
exports.createdStores.pop();}

while(exports.createdActions.length) {
exports.createdActions.pop();}};
});
__d('reflux-core/lib/mixer.js',["reflux-core/lib/utils.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var _=require("reflux-core/lib/utils.js");

module.exports = function mix(def){
var composed={
init:[],
preEmit:[],
shouldEmit:[]};


var updated=(function mixDef(mixin){
var mixed={};
if(mixin.mixins){
mixin.mixins.forEach(function(subMixin){
_.extend(mixed,mixDef(subMixin));});}


_.extend(mixed,mixin);
Object.keys(composed).forEach(function(composable){
if(mixin.hasOwnProperty(composable)){
composed[composable].push(mixin[composable]);}});


return mixed;})(
def);

if(composed.init.length > 1){
updated.init = function(){
var args=arguments;
composed.init.forEach(function(init){
init.apply(this,args);},
this);};}


if(composed.preEmit.length > 1){
updated.preEmit = function(){
return composed.preEmit.reduce((function(args,preEmit){
var newValue=preEmit.apply(this,args);
return newValue === undefined?args:[newValue];}).
bind(this),arguments);};}


if(composed.shouldEmit.length > 1){
updated.shouldEmit = function(){
var args=arguments;
return !composed.shouldEmit.some(function(shouldEmit){
return !shouldEmit.apply(this,args);},
this);};}


Object.keys(composed).forEach(function(composable){
if(composed[composable].length === 1){
updated[composable] = composed[composable][0];}});



return updated;};
});
__d('reflux-core/lib/bindMethods.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

module.exports = function(store,definition){
for(var name in definition) {
if(Object.getOwnPropertyDescriptor && Object.defineProperty){
var propertyDescriptor=Object.getOwnPropertyDescriptor(definition,name);

if(!propertyDescriptor.value || typeof propertyDescriptor.value !== "function" || !definition.hasOwnProperty(name)){
continue;}


store[name] = definition[name].bind(store);}else 
{
var property=definition[name];

if(typeof property !== "function" || !definition.hasOwnProperty(name)){
continue;}


store[name] = property.bind(store);}}



return store;};
});
__d('reflux-core/lib/StoreMethods.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





module.exports = {};
});
__d('reflux-core/lib/PublisherMethods.js',["reflux-core/lib/utils.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var _=require("reflux-core/lib/utils.js");





module.exports = {








preEmit:function preEmit(){},








shouldEmit:function shouldEmit(){
return true;},









listen:function listen(callback,bindContext){
bindContext = bindContext || this;
var eventHandler=function eventHandler(args){
if(aborted){
return;}

callback.apply(bindContext,args);},

me=this,
aborted=false;
this.emitter.addListener(this.eventLabel,eventHandler);
return function(){
aborted = true;
me.emitter.removeListener(me.eventLabel,eventHandler);};},









promise:function promise(_promise){
var me=this;

var canHandlePromise=this.children.indexOf("completed") >= 0 && this.children.indexOf("failed") >= 0;

if(!canHandlePromise){
throw new Error("Publisher must have \"completed\" and \"failed\" child publishers");}


_promise.then(function(response){
return me.completed(response);},
function(error){
return me.failed(error);});},









listenAndPromise:function listenAndPromise(callback,bindContext){
var me=this;
bindContext = bindContext || this;
this.willCallPromise = (this.willCallPromise || 0) + 1;

var removeListen=this.listen(function(){

if(!callback){
throw new Error("Expected a function returning a promise but got " + callback);}


var args=arguments,
promise=callback.apply(bindContext,args);
return me.promise.call(me,promise);},
bindContext);

return function(){
me.willCallPromise--;
removeListen.call(me);};},






trigger:function trigger(){
var args=arguments,
pre=this.preEmit.apply(this,args);
args = pre === undefined?args:_.isArguments(pre)?pre:[].concat(pre);
if(this.shouldEmit.apply(this,args)){
this.emitter.emit(this.eventLabel,args);}},






triggerAsync:function triggerAsync(){
var args=arguments,
me=this;
_.nextTick(function(){
me.trigger.apply(me,args);});},












triggerPromise:function triggerPromise(){
var me=this;
var args=arguments;

var canHandlePromise=this.children.indexOf("completed") >= 0 && this.children.indexOf("failed") >= 0;

var promise=_.createPromise(function(resolve,reject){


if(me.willCallPromise){
_.nextTick(function(){
var previousPromise=me.promise;
me.promise = function(inputPromise){
inputPromise.then(resolve,reject);

me.promise = previousPromise;
return me.promise.apply(me,arguments);};

me.trigger.apply(me,args);});

return;}


if(canHandlePromise){
var removeSuccess=me.completed.listen(function(argsArr){
removeSuccess();
removeFailed();
resolve(argsArr);});


var removeFailed=me.failed.listen(function(argsArr){
removeSuccess();
removeFailed();
reject(argsArr);});}



me.triggerAsync.apply(me,args);

if(!canHandlePromise){
resolve();}});



return promise;}};
});
__d('reflux-core/lib/createAction.js',["reflux-core/lib/utils.js","reflux-core/lib/ActionMethods.js","reflux-core/lib/PublisherMethods.js","reflux-core/lib/Keep.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var _=require("reflux-core/lib/utils.js"),
ActionMethods=require("reflux-core/lib/ActionMethods.js"),
PublisherMethods=require("reflux-core/lib/PublisherMethods.js"),
Keep=require("reflux-core/lib/Keep.js");

var allowed={preEmit:1,shouldEmit:1};








var createAction=function createAction(definition){

definition = definition || {};
if(!_.isObject(definition)){
definition = {actionName:definition};}


for(var a in ActionMethods) {
if(!allowed[a] && PublisherMethods[a]){
throw new Error("Cannot override API method " + a + " in Reflux.ActionMethods. Use another method name or override it on Reflux.PublisherMethods instead.");}}



for(var d in definition) {
if(!allowed[d] && PublisherMethods[d]){
throw new Error("Cannot override API method " + d + " in action creation. Use another method name or override it on Reflux.PublisherMethods instead.");}}



definition.children = definition.children || [];
if(definition.asyncResult){
definition.children = definition.children.concat(["completed","failed"]);}


var i=0,
childActions={};
for(;i < definition.children.length;i++) {
var name=definition.children[i];
childActions[name] = createAction(name);}


var context=_.extend({
eventLabel:"action",
emitter:new _.EventEmitter(),
_isAction:true},
PublisherMethods,ActionMethods,definition);

var functor=function functor(){
var triggerType=functor.sync?"trigger":_.environment.hasPromise?"triggerPromise":"triggerAsync";
return functor[triggerType].apply(functor,arguments);};


_.extend(functor,childActions,context);

Keep.createdActions.push(functor);

return functor;};


module.exports = createAction;
});
__d('reflux/src/connect.js',["reflux-core/lib/ListenerMethods.js","reflux/src/ListenerMixin.js","reflux-core/lib/utils.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var ListenerMethods=require('reflux-core/lib/ListenerMethods.js'),
ListenerMixin=require('reflux/src/ListenerMixin.js'),
_=require('reflux-core/lib/utils.js');

module.exports = function(listenable,key){
return {
getInitialState:function(){
if(!_.isFunction(listenable.getInitialState)){
return {};}else 
if(key === undefined){
return listenable.getInitialState();}else 
{
return _.object([key],[listenable.getInitialState()]);}},


componentDidMount:function(){
_.extend(this,ListenerMethods);
var me=this,cb=key === undefined?this.setState:function(v){
if(typeof me.isMounted === "undefined" || me.isMounted() === true){
me.setState(_.object([key],[v]));}};


this.listenTo(listenable,cb);},

componentWillUnmount:ListenerMixin.componentWillUnmount};};
});
__d('reflux/src/ListenerMixin.js',["reflux-core/lib/utils.js","reflux-core/lib/ListenerMethods.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _=require('reflux-core/lib/utils.js'),
ListenerMethods=require('reflux-core/lib/ListenerMethods.js');







module.exports = _.extend({




componentWillUnmount:ListenerMethods.stopListeningToAll},

ListenerMethods);
});
__d('reflux/src/connectFilter.js',["reflux-core/lib/ListenerMethods.js","reflux/src/ListenerMixin.js","reflux-core/lib/utils.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var ListenerMethods=require('reflux-core/lib/ListenerMethods.js'),
ListenerMixin=require('reflux/src/ListenerMixin.js'),
_=require('reflux-core/lib/utils.js');

module.exports = function(listenable,key,filterFunc){
filterFunc = _.isFunction(key)?key:filterFunc;
return {
getInitialState:function(){
if(!_.isFunction(listenable.getInitialState)){
return {};}else 
if(_.isFunction(key)){
return filterFunc.call(this,listenable.getInitialState());}else 
{

var result=filterFunc.call(this,listenable.getInitialState());
if(typeof result !== "undefined"){
return _.object([key],[result]);}else 
{
return {};}}},



componentDidMount:function(){
_.extend(this,ListenerMethods);
var me=this;
var cb=function(value){
if(_.isFunction(key)){
me.setState(filterFunc.call(me,value));}else 
{
var result=filterFunc.call(me,value);
me.setState(_.object([key],[result]));}};



this.listenTo(listenable,cb);},

componentWillUnmount:ListenerMixin.componentWillUnmount};};
});
__d('reflux/src/listenTo.js',["reflux-core/lib/ListenerMethods.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var ListenerMethods=require('reflux-core/lib/ListenerMethods.js');











module.exports = function(listenable,callback,initial){
return {




componentDidMount:function(){
for(var m in ListenerMethods) {
if(this[m] !== ListenerMethods[m]){
if(this[m]){
throw "Can't have other property '" + m + "' when using Reflux.listenTo!";}

this[m] = ListenerMethods[m];}}


this.listenTo(listenable,callback,initial);},




componentWillUnmount:ListenerMethods.stopListeningToAll};};
});
__d('reflux/src/listenToMany.js',["reflux-core/lib/ListenerMethods.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var ListenerMethods=require('reflux-core/lib/ListenerMethods.js');









module.exports = function(listenables){
return {




componentDidMount:function(){
for(var m in ListenerMethods) {
if(this[m] !== ListenerMethods[m]){
if(this[m]){
throw "Can't have other property '" + m + "' when using Reflux.listenToMany!";}

this[m] = ListenerMethods[m];}}


this.listenToMany(listenables);},




componentWillUnmount:ListenerMethods.stopListeningToAll};};
});
__d('Identity/Store/Store.js',["NativeModules","reflux/src/index.js","Identity/Actions/Actions.js","extend/index.js","q/q.js","Identity/data/data.js","Identity/data/models.js","stable-sha1/browser.js","Identity/utils/utils.js","react-native-level/index.js","q-level/index.js","tradle-constants/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var Reflux=require('reflux/src/index.js');
var Actions=require('Identity/Actions/Actions.js');
var extend=require('extend/index.js');
var Q=require('q/q.js');
var AddressBook=require('NativeModules').AddressBook;
var sampleData=require('Identity/data/data.js');
var voc=require('Identity/data/models.js');
var sha=require('stable-sha1/browser.js');
var utils=require('Identity/utils/utils.js');
var level=require('react-native-level/index.js');
var promisify=require('q-level/index.js');
var constants=require('tradle-constants/index.js');



var tim;





var IDENTITY_MODEL=constants.TYPES.IDENTITY;
var MODEL_TYPE_VALUE='tradle.Model';
var MY_IDENTITIES_MODEL='tradle.MyIdentities';

var models={};
var list={};
var idenities={};
var db;
var ldb;
var isLoaded;
var me;
var ready;

var Store=Reflux.createStore({

listenables:[Actions],

init:function(){
var ldb=level('TiM.db',{valueEncoding:'json'});


db = promisify(ldb);




this.ready = this.loadResources().
then(function(){
isLoaded = true;}).

catch(function(err){
err = err;});},


onStart:function(){
var self=this;
this.ready.then(function(){
self.trigger({
action:'start',
models:models,
me:me});});},


onAddMessage:function(r){
var props=this.getModel(r[constants.TYPE]).value.properties;
var rr={};
for(var p in r) {
if(props[p].ref && !props[p].id){
var type=r[p][constants.TYPE];
var id=type?type + '_' + r[p][constants.ROOT_HASH] + '_' + r[p][constants.CUR_HASH]:r[p].id;
var title=type?utils.getDisplayName(r[p],this.getModel(type).value.properties):r[p].title;
rr[p] = {
id:id,
title:title};}else 



rr[p] = r[p];}

var rootHash=sha(rr);
rr[constants.ROOT_HASH] = rootHash;
rr[constants.CUR_HASH] = rootHash;
var self=this;
var key=rr[constants.TYPE] + '_' + rootHash;
var batch=[];
batch.push({type:'put',key:key,value:rr});


list[key] = {key:key,value:r};
var to=list[utils.getId(r.to)].value;
var from=list[utils.getId(r.from)].value;
var dn=r.message || utils.getDisplayName(r,props);
to.lastMessage = from[constants.ROOT_HASH] === me[constants.ROOT_HASH]?'You: ' + dn:dn;
to.lastMessageTime = r.time;
from.lastMessage = r.message;
from.lastMessageTime = r.time;
batch.push({type:'put',key:to[constants.TYPE] + '_' + to[constants.ROOT_HASH],value:to});
batch.push({type:'put',key:from[constants.TYPE] + '_' + from[constants.ROOT_HASH],value:from});

db.batch(batch).
then(function(){
self.trigger({
action:'addMessage',
resource:rr});}).


catch(function(err){
err = err;});},



onAddVerification:function(r,notOneClickVerification){
var batch=[];
var key;
var fromId=utils.getId(r.from);
var from=list[fromId].value;
if(r[constants.ROOT_HASH])
key = r[constants.TYPE] + '_' + r[constants.ROOT_HASH];else 
{
var rootHash=sha(r);
r[constants.ROOT_HASH] = rootHash;
r[constants.CUR_HASH] = rootHash;

key = r[constants.TYPE] + '_' + rootHash;
if(from.organization)
r.organization = from.organization;

batch.push({type:'put',key:key,value:r});}

var toId=utils.getId(r.to);
var verificationRequestId=utils.getId(r.document);
var to=list[toId].value;

var newVerification={
id:key + '_' + r[constants.CUR_HASH],
title:r.document.title?r.document.title:''};

var verificationRequest=list[verificationRequestId].value;
if(!verificationRequest.verifiedBy)
verificationRequest.verifications = [];
verificationRequest.verifications.push(newVerification);

if(!from.myVerifications)
from.myVerifications = [];

from.myVerifications.push(newVerification);
if(!to.verifiedByMe)
to.verifiedByMe = [];
to.verifiedByMe.push(newVerification);

batch.push({type:'put',key:verificationRequestId,value:verificationRequest});
batch.push({type:'put',key:toId,value:to});
batch.push({type:'put',key:fromId,value:from});
var self=this;
return db.batch(batch).
then(function(){
var rr={};
extend(rr,to);
rr.verifiedByMe = r;
list[key] = {key:key,value:r};

if(notOneClickVerification)
self.trigger({action:'addItem',resource:rr});else 

self.trigger({action:'addVerification',resource:rr});}).

catch(function(err){
err = err;});},


onGetItem:function(key){
var resource={};
extend(resource,list[utils.getId(key)].value);
var props=this.getModel(resource[constants.TYPE]).value.properties;
for(var p in props) {
if(p.charAt(0) === '_')
continue;
var items=props[p].items;
if(!items || !items.backlink)
continue;
var backlink=items.backlink;
var itemsModel=this.getModel(items.ref).value;
var params={
modelName:items.ref,
to:resource,
meta:itemsModel,
props:itemsModel.properties};

var result=this.searchNotMessages(params);
if(result.length)
resource[p] = result;}

this.trigger({resource:resource,action:'getItem'});},

onShowIdentityList:function(){
if(sampleData.getMyId()){
this.trigger({action:'showIdentityList',list:[]});
return;}

var allIdentities=list[MY_IDENTITIES_MODEL + '_1'].value.allIdentities;
var meId=me[constants.TYPE] + '_' + me[constants.ROOT_HASH];
var result=[];
if(allIdentities){
for(var id of allIdentities) 
if(id.id != meId){
var resource={};
if(list[id.id].value.canceled)
continue;
extend(resource,list[id.id].value);
result.push(resource);}}


this.trigger({action:'showIdentityList',list:result});},


onChangeIdentity:function(newMe){
var myIdentities=list[MY_IDENTITIES_MODEL + '_1'].value;
myIdentities.currentIdentity = newMe[constants.TYPE] + '_' + newMe[constants.ROOT_HASH];
var self=this;
db.put(MY_IDENTITIES_MODEL + '_1',myIdentities).
then(function(){
return self.loadResources();}).

then(function(){
me = newMe;
if(me.organization){
var photos=list[utils.getId(me.organization.id)].value.photos;
if(photos)
me.organization.photo = photos[0].url;}

list = {};
return self.loadResources().
then(function(){
var result=self.searchResources('',IDENTITY_MODEL,me);
self.trigger({action:'changeIdentity',list:result,me:me});});}).


catch(function(err){
err = err;});},



onAddNewIdentity:function(resource){
var newIdentity={
id:resource[constants.TYPE] + '_' + resource[constants.ROOT_HASH],
title:utils.getDisplayName(resource,this.getModel(resource[constants.TYPE]).value.properties)};

var myIdentity=list[MY_IDENTITIES_MODEL + '_1'].value;
myIdentity.allIdentities.push(newIdentity);
var self=this;
db.put(MY_IDENTITIES_MODEL + '_1',myIdentity).
then(function(){
list[MY_IDENTITIES_MODEL + '_1'].value = myIdentity;
self.trigger({action:'addNewIdentity',resource:me});}).

catch(function(err){
err = err;});},


onRemoveIdentity:function(resource){
var myIdentity=list[MY_IDENTITIES_MODEL + '_1'].value;
var iKey=resource[constants.TYPE] + '_' + resource[constants.ROOT_HASH];
var allIdentities=myIdentity.allIdentities;
for(var i=0;i < allIdentities.length;i++) 
if(allIdentities[i].id === iKey){
allIdentities.splice(i,1);
break;}


var batch=[];
resource.canceled = true;
batch.push({type:'put',key:iKey,value:resource});
batch.push({type:'put',key:MY_IDENTITIES_MODEL + '_1',value:myIdentity});

var self=this;
db.batch(batch).
then(function(){
delete list[resource[constants.TYPE] + '_' + resource[constants.ROOT_HASH]];
self.trigger({action:'removeIdentity',resource:resource});}).

catch(function(err){
err = err;});},




getItem:function(resource){
var modelName=resource[constants.TYPE];
var meta=this.getModel(modelName).value;
var foundRefs=[];
var refProps=this.getRefs(resource,foundRefs,meta.properties);
var self=this;
var newResource={};
extend(newResource,resource);
for(var i=0;i < foundRefs.length;i++) {

var val=foundRefs[i];
if(val.state === 'fulfilled'){
var propValue=val.value[constants.TYPE] + '_' + val.value[constants.ROOT_HASH];
var prop=refProps[propValue];
newResource[prop] = val.value;
newResource[prop].id = val.value[constants.TYPE] + '_' + val.value[constants.ROOT_HASH];
if(!newResource[prop].title)
newResource[prop].title = utils.getDisplayName(newResource,meta);}}


return newResource;},

getDependencies:function(resultList){
var self=this;
var newResult=resultList.map(function(resource){
return self.getItem(resource);});

return newResult;},

getRefs:function(resource,foundRefs,props){
var refProps=[];
for(var p in resource) {
if(props[p] && props[p].type === 'object'){
var ref=props[p].ref;
if(ref && resource[p]){
var rValue;


if(resource[p][constants.ROOT_HASH])
rValue = resource[p][constants.TYPE] + '_' + resource[p][constants.ROOT_HASH];else 

rValue = utils.getId(resource[p]);

refProps[rValue] = p;
if(list[rValue]){
var elm={value:list[rValue].value,state:'fulfilled'};
foundRefs.push(elm);}}}}




return refProps;},

onAddModelFromUrl:function(url){
var self=this;
var model,props;
return fetch(url).
then(function(response){return response.json();}).
then(function(responseData){
model = responseData;
props = model.properties;

var err='';
var id=model.id;

if(!id)
err += '"id" is required. Could be something like "myGithubId.nameOfTheModel"';
var key='model_' + id;


var message=model.message;
var from=props.from;
if(!from)
err += '"from" is required. Should have {ref: "tradle.Identity"}';

var to=props.to;
if(!to)
err += '"to" is required. Should have {ref: "tradle.Identity"}';
var time=props.time;
if(!time)
err += '"time" is required';

if(err.length){
self.trigger({action:'newModelAdded',err:err});
return;}

model.interfaces = [];
model.interfaces.push('tradle.Message');
var rootHash=sha(model);
model[constants.ROOT_HASH] = rootHash;
model[constants.OWNER] = {
key:IDENTITY_MODEL + '_' + me[constants.ROOT_HASH],
title:utils.getDisplayName(me,self.getModel(IDENTITY_MODEL).value.properties),
photos:me.photos};

return db.put(key,model);}).

then(function(){
if(!me.myModels)
me.myModels = [];
var key='model_' + model.id;
me.myModels.push({key:key,title:model.title});

self.setPropertyNames(props);

models[key] = {
key:key,
value:model};

self.trigger({action:'newModelAdded',newModel:model});}).

catch(function(err){
err = err;}).

done();},

setPropertyNames:function(props){
for(var p in props) {
if(!props[p].name)
props[p].name = p;
if(!props[p].title)
props[p].title = utils.makeLabel(p);}},


onAddItem:function(value,resource,meta,isRegistration){

var refProps={};
var promises=[];
var foundRefs=[];
var props=meta.properties;
if(meta[constants.TYPE] == 'tradle.Verification' || meta.subClassOf && meta.subClassOf == 'tradle.Verification')
return this.onAddVerification(resource,true);

for(var p in resource) {
if(props[p] && props[p].type === 'object'){
var ref=props[p].ref;
if(ref && resource[p]){
if(props[p].ref && this.getModel(props[p].ref).value.inlined)
continue;
var rValue=resource[p][constants.ROOT_HASH]?resource[p][constants.TYPE] + '_' + resource[p][constants.ROOT_HASH]:utils.getId(resource[p].id);
refProps[rValue] = p;
if(list[rValue]){
var elm={value:list[rValue].value,state:'fulfilled'};
foundRefs.push(elm);}else 


promises.push(Q.ninvoke(db,'get',rValue));}}}




var self=this;
var json=JSON.parse(JSON.stringify(value));
for(p in resource) {
if(props[p] && props[p].type === 'array')
json[p] = resource[p];}

if(!json[constants.TYPE])
json[constants.TYPE] = meta.id;
var error=this.checkRequired(json,props);
if(error){
foundRefs.forEach(function(val){
var propValue=val.value[constants.TYPE] + '_' + val.value[constants.ROOT_HASH];
var prop=refProps[propValue];
json[prop] = val.value;});


this.trigger({
action:'addItem',

resource:json,
error:error});

return;}





Q.allSettled(promises).
then(function(results){
extend(foundRefs,results);
foundRefs.forEach(function(val){
if(val.state === 'fulfilled'){
var value=val.value;
var propValue=value[constants.TYPE] + '_' + value[constants.ROOT_HASH];
var prop=refProps[propValue];

var title=utils.getDisplayName(value,self.getModel(value[constants.TYPE]).value.properties);
json[prop] = {
title:title,
id:propValue + '_' + value[constants.CUR_HASH]};

var interfaces=meta.interfaces;
if(interfaces && interfaces.indexOf('tradle.Message') != -1)
json.time = new Date().getTime();}});


var isNew=!resource[constants.ROOT_HASH];
var modelName=meta.id;
if(!resource || isNew)
self._putResourceInDB(modelName,json,isRegistration);else 
{
var obj={};
extend(true,obj,resource);
for(var p in json) 
if(!obj[p])
obj[p] = json[p];else 
if(!props[p].readOnly && !props[p].immutable)
obj[p] = json[p];
self._putResourceInDB(modelName,obj,isRegistration);}}).


catch(function(err){
err = err;});},



checkRequired:function(resource,meta){
var type=resource[constants.TYPE];
var rootHash=resource[constants.ROOT_HASH];
var oldResource=rootHash?list[type + '_' + rootHash]:null;
var required=meta.required;
if(!required)
return;
for(var i=0;i < required.length;i++) {
var prop=required[i];
if(!resource[prop] && (!oldResource || !oldResource[prop]))
return 'Please add "' + meta.properties[prop].title + '"';}},


onReloadDB:function(){
var self=this;
isLoaded = false;








this.clearDb().
then(function(){
list = {};
models = {};
me = null;
return self.loadModels();}).

then(function(){
self.trigger({action:'reloadDB',models:models});}).

catch(function(err){
err = err;});},


onMessageList:function(params){
this.onList(params);},

onList:function(params){
if(isLoaded)
this.getList(params);else 
{
var self=this;
this.loadDB().
then(function(){
isLoaded = true;
if(params.modelName)
self.getList(params);});}},



getList:function(params){
var result=this.searchResources(params);
if(params.isAggregation)
result = this.getDependencies(result);
var resultList=[];
for(var r of result) {
var rr={};
extend(rr,r);
resultList.push(rr);}

var model=this.getModel(params.modelName).value;
var isMessage=model.isInterface || model.interfaces && model.interfaces.indexOf('tradle.Message') != -1;
var verificationsToTransfer;
if(isMessage && !params.isAggregation)
verificationsToTransfer = this.getVerificationsToTransfer(result);
var retParams={
action:isMessage && !params.prop?'messageList':'list',
list:resultList,
isAggregation:params.isAggregation};

if(verificationsToTransfer)
retParams.verificationsToTransfer = verificationsToTransfer;
if(params.prop)
retParams.prop = params.prop;

this.trigger(retParams);},

searchResources:function(params){
var meta=this.getModel(params.modelName).value;
var isMessage=meta.isInterface || meta.interfaces && meta.interfaces.indexOf('tradle.Message') != -1;
if(isMessage)
return this.searchMessages(params);else 

return this.searchNotMessages(params);},

searchNotMessages:function(params){
var foundResources={};
var modelName=params.modelName;
var to=params.to;
var meta=this.getModel(modelName).value;
var props=meta.properties;
var containerProp,resourceId;


if(to){
for(var p in props) {
if(props[p].ref && props[p].ref === to[constants.TYPE]){
containerProp = p;
resourceId = to[constants.TYPE] + '_' + to[constants.ROOT_HASH];}}}



var query=params.query;

var required=meta.required;
var meRootHash=me && me[constants.ROOT_HASH];
var meId=IDENTITY_MODEL + '_' + meRootHash;
for(var key in list) {
if(key.indexOf(modelName + '_') == -1)
continue;
var r=list[key].value;
if(r.canceled)
continue;





if(containerProp && (!r[containerProp] || utils.getId(r[containerProp]) !== resourceId))
continue;
if(!query){
foundResources[key] = r;
continue;}


var combinedValue='';
for(var rr in props) {
if(r[rr] instanceof Array)
continue;
combinedValue += combinedValue?' ' + r[rr]:r[rr];}

if(!combinedValue || combinedValue && (!query || combinedValue.toLowerCase().indexOf(query.toLowerCase()) != -1)){
foundResources[key] = r;}}



var isIdentity=modelName === IDENTITY_MODEL;
if(!containerProp && me && isIdentity){
if(sampleData.getMyId())
delete foundResources[IDENTITY_MODEL + '_' + me[constants.ROOT_HASH]];else 
{
var myIdentities=list[MY_IDENTITIES_MODEL + '_1'].value.allIdentities;
for(var meId of myIdentities) {
if(foundResources[meId.id])
delete foundResources[meId.id];}}}




var result=utils.objectToArray(foundResources);
if(isIdentity){
result.forEach(function(r){
if(r.organization){
var photos=list[utils.getId(r.organization.id)].value.photos;
if(photos)
r.organization.photo = photos[0].url;}});}




var sortProp=params.sortProperty;
if(sortProp){
var asc=typeof params.asc != 'undefined'?params.asc:false;
if(props[sortProp].type == 'date'){
result.sort(function(a,b){
var aVal=a[sortProp]?a[sortProp]:0;
var bVal=b[sortProp]?b[sortProp]:0;
if(asc)
return new Date(aVal) - new Date(bVal);else 

return new Date(bVal) - new Date(aVal);});}else 


if(props[sortProp].type == 'string'){
result.sort();
if(asc)
result.reverse();}else 

if(props[sortProp].type == 'number'){
result.sort(function(a,b){
return asc?a - b:b - a;});}}



return result;},

searchMessages:function(params){
var query=params.query;
var modelName=params.modelName;
var meta=this.getModel(modelName).value;
var isVerification=modelName === 'tradle.Verification' || meta.subClassOf && meta.subClassOf === 'tradle.Verification';
var to=params.to;
var prop=params.prop;
var backlink=prop?prop.items.backlink:prop;
var foundResources={};
var isAllMessages=meta.isInterface;
var props=meta.properties;

var implementors=isAllMessages?utils.getImplementors(modelName):null;

var required=meta.required;
var meRootHash=me && me[constants.ROOT_HASH];
var meId=IDENTITY_MODEL + '_' + meRootHash;
var toId=to?to[constants.TYPE] + '_' + to[constants.ROOT_HASH]:null;
for(var key in list) {
var iMeta=null;
if(isAllMessages){
if(implementors){
for(var impl of implementors) {
if(impl.id.indexOf(key.substring(0,key.indexOf('_'))) === 0){
iMeta = impl;
break;}}


if(!iMeta)
continue;}}else 


if(key.indexOf(modelName + '_') === -1){
var rModel=this.getModel(key.split('_')[0]).value;
if(!rModel.subClassOf || rModel.subClassOf !== modelName)
continue;}

if(!iMeta)
iMeta = meta;
var r=list[key].value;
if(r.canceled)
continue;

if(isVerification){
if(r.organization){
if(!r.organization.photos){
var orgPhotos=list[utils.getId(r.organization.id)].value.photos;
if(orgPhotos)
r.organization.photos = [orgPhotos[0]];}}


if(r.document && r.document.id)
r.document = list[utils.getId(r.document.id)].value;}

if(to){
if(backlink && r[backlink]){
if(toId === utils.getId(r[backlink]))
foundResources[key] = r;

continue;}

if((!r.message || r.message.trim().length === 0) && !r.photos)

continue;
var fromID=utils.getId(r.from);
var toID=utils.getId(r.to);
if(fromID !== meId && toID !== meId)
continue;
var id=IDENTITY_MODEL + '_' + to[constants.ROOT_HASH];
if(fromID !== id && toID != id)
continue;}


if(!query){

var msg=this.fillMessage(r);
if(msg)
foundResources[key] = msg;
continue;}


var combinedValue='';
for(var rr in props) {
if(r[rr] instanceof Array)
continue;
combinedValue += combinedValue?' ' + r[rr]:r[rr];}

if(!combinedValue || combinedValue && (!query || combinedValue.toLowerCase().indexOf(query.toLowerCase()) != -1)){
foundResources[key] = this.fillMessage(r);}}



var result=utils.objectToArray(foundResources);



result.sort(function(a,b){


return new Date(a.time) - new Date(b.time);});


for(var _r of result) {
_r.from.photos = list[utils.getId(_r.from)].value.photos;
_r.to.photos = list[utils.getId(_r.to)].value.photos;}

return result;},

fillMessage:function(r){
var resource={};
extend(resource,r);
if(!r.verifications || !r.verifications.length)
return resource;
for(var i=0;i < resource.verifications.length;i++) {
var v=resource.verifications[i];
var vId=v.id?utils.getId(v.id):v[constants.TYPE] + '_' + v[constants.ROOT_HASH];
var ver={};
extend(ver,list[vId].value);
resource.verifications[i] = ver;
if(ver.organization && !ver.organization.photos){
var orgPhotos=list[utils.getId(ver.organization.id)].value.photos;
if(orgPhotos)
ver.organization.photo = orgPhotos[0].url;}}



return resource;},

getVerificationsToTransfer:function(foundResources){
var verTypes=[];
var meId=me[constants.TYPE] + '_' + me[constants.ROOT_HASH];
for(var i=0;i < foundResources.length;i++) {
var r=foundResources[i];
if(me && utils.getId(r.to) !== meId)
continue;
if(r[constants.TYPE] !== 'tradle.SimpleMessage' || r.verifications)
continue;
var msgParts=utils.splitMessage(r.message);

if(msgParts.length !== 2)
continue;
var msgModel=utils.getModel(msgParts[1]);
if(msgModel)
verTypes.push(msgModel.value.id);}

var verificationsToTransfer={};
if(!verTypes.length)
return;

for(var key in list) {
var type=key.split('_')[0];
var model=utils.getModel(type).value;
if(model.id !== 'tradle.Verification' && (!model.subClassOf || model.subClassOf !== 'tradle.Verification'))
continue;

var doc=list[key].value.document;
var docType=doc.id.split('_')[0];
if(verTypes.indexOf(docType) === -1)
continue;
var val=list[key].value;
var id=utils.getId(val.to.id);
if(id === meId){
var value={};
extend(value,list[key].value);
value.document = list[utils.getId(doc.id)].value;
var v=verificationsToTransfer[docType];
if(!v)
verificationsToTransfer[docType] = [];
verificationsToTransfer[docType].push(value);}}


return verificationsToTransfer;},

_putResourceInDB:function(modelName,value,isRegistration){

for(var p in value) {
if(!value[p])
delete value[p];}

if(!value[constants.TYPE])
value[constants.TYPE] = modelName;

value[constants.CUR_HASH] = sha(value);
var meta=this.getModel(modelName).value;
var props=meta.properties;
if(!value[constants.ROOT_HASH]){
value[constants.ROOT_HASH] = value[constants.CUR_HASH];
var creator=me?
me:
isRegistration?value:null;
if(creator){
value[constants.OWNER] = {
id:IDENTITY_MODEL + '_' + creator[constants.ROOT_HASH] + '_' + creator[constants.CUR_HASH],
title:utils.getDisplayName(me,this.getModel(IDENTITY_MODEL))};}


if(props.dateSubmitted)
value.dateSubmitted = new Date().getTime();}


var iKey=modelName + '_' + value[constants.ROOT_HASH];
var batch=[];

if(meta.isInterface || meta.interfaces && meta.interfaces.indexOf('tradle.Message') != -1){
if(props['to'] && props['from']){
var to=list[utils.getId(value.to)].value;
var from=list[utils.getId(value.from)].value;
var dn=value.message || utils.getDisplayName(value,props);
to.lastMessage = from[constants.ROOT_HASH] === me[constants.ROOT_HASH]?'You: ' + dn:dn;
to.lastMessageTime = value.time;
from.lastMessage = value.message;
from.lastMessageTime = value.time;
batch.push({type:'put',key:to[constants.TYPE] + '_' + to[constants.ROOT_HASH],value:to});
batch.push({type:'put',key:from[constants.TYPE] + '_' + from[constants.ROOT_HASH],value:from});}}





batch.push({type:'put',key:iKey,value:value});

var mid;

if(isRegistration){
mid = {
_type:MY_IDENTITIES_MODEL,
currentIdentity:iKey,
allIdentities:[{
id:iKey,
title:utils.getDisplayName(value,models['model_' + modelName].value.properties)}]};

batch.push({type:'put',key:MY_IDENTITIES_MODEL + '_1',value:mid});}


var self=this;

db.batch(batch).
then(function(results){
if(isRegistration){
me = value;
if(me.organization){
var photos=list[utils.getId(me.organization.id)].value.photos;
if(photos)
me.organization.photo = photos[0].url;}}


return db.get(iKey);}).

then(function(value){
list[iKey] = {key:iKey,value:value};
if(mid)
list[MY_IDENTITIES_MODEL + '_1'] = {key:MY_IDENTITIES_MODEL + '_1',value:mid};



var params={action:'addItem',resource:value};

if(isRegistration || value[constants.ROOT_HASH] === me[constants.ROOT_HASH])
params.me = value;
self.trigger(params);}).

catch(function(err){
err = err;});},


loadAddressBook:function(){
var self=this;
return Q.ninvoke(AddressBook,'checkPermission').
then(function(permission){

if(permission === AddressBook.PERMISSION_UNDEFINED)
return Q.ninvoke(AddressBook,'requestPermission').
then(function(permission){
if(permission === AddressBook.PERMISSION_AUTHORIZED)
return self.storeContacts.bind(self);});else 

if(permission === AddressBook.PERMISSION_AUTHORIZED)
return self.storeContacts();else 
if(permission === AddressBook.PERMISSION_DENIED){

return Q();}});},



storeContacts:function(){
var dfd=Q.defer();
var self=this;
var batch=[];
var props=models['model_' + IDENTITY_MODEL].value.properties;
AddressBook.getContacts(function(err,contacts){
contacts.forEach(function(contact){
var contactInfo=[];
var newIdentity={
firstName:contact.firstName,
lastName:contact.lastName,

contactInfo:contactInfo};

newIdentity[constants.TYPE] = IDENTITY_MODEL;
var me=list[MY_IDENTITIES_MODEL + '_1'];
if(me){
var currentIdentity=me.value.currentIdentity;
newIdentity[constants.OWNER] = {id:currentIdentity,title:utils.getDisplayName(me,props)};
if(me.organization){
var photos=list[utils.getId(me.organization.id)].value.photos;
if(photos)
me.organization.photo = photos[0].url;}}



if(contact.thumbnailPath && contact.thumbnailPath.length)
newIdentity.photos = [{type:'address book',url:contact.thumbnailPath}];
var phoneNumbers=contact.phoneNumbers;
if(phoneNumbers){
phoneNumbers.forEach(function(phone){
contactInfo.push({identifier:phone.number,type:phone.label + ' phone'});});}


var emailAddresses=contact.emailAddresses;
if(emailAddresses)
emailAddresses.forEach(function(email){
contactInfo.push({identifier:email.email,type:email.label + ' email'});});

newIdentity[constants.ROOT_HASH] = sha(newIdentity);
newIdentity[constants.CUR_HASH] = newIdentity[constants.ROOT_HASH];
var key=IDENTITY_MODEL + '_' + newIdentity[constants.ROOT_HASH];
if(!list[key])
batch.push({type:'put',key:key,value:newIdentity});});

if(batch.length)

db.batch(batch,function(err,value){
if(err)
dfd.reject(err);else 
{
self.loadResources().
then(function(){
dfd.resolve();});}});else 




dfd.resolve();});

return dfd.promise;},

loadResources:function(){
var myId=sampleData.getMyId();
if(myId)
myId = IDENTITY_MODEL + '_' + myId;
var self=this;


























return db.createReadStream().
on('data',function(data){
if(data.key.indexOf('model_') === 0){
models[data.key] = data;
self.setPropertyNames(data.value.properties);}else 

{
if(!myId && data.key === MY_IDENTITIES_MODEL + '_1'){
myId = data.value.currentIdentity;
if(list[myId])
me = list[myId].value;}

if(!me && myId && data.key == myId)
me = data.value;
list[data.key] = data;}}).


on('close',function(){
if(me && me.organization){
var photos=list[utils.getId(me.organization.id)].value.photos;
if(photos)
me.organization.photo = photos[0].url;}

console.log('Stream closed');}).

on('end',function(){
console.log('Stream ended');
if(self.isEmpty(models) || Object.keys(list).length == 2)
if(me)
return self.loadDB();else 
{
isLoaded = false;
return self.loadModels();}}).




on('error',function(err){
console.log('err: ' + err);});},





isEmpty:function(obj){
for(var prop in obj) {
if(obj.hasOwnProperty(prop))
return false;}

return true;},


getModel:function(modelName){
return models['model_' + modelName];},

loadDB:function(loadTest){
loadTest = true;

var batch=[];

if(loadTest){
voc.getModels().forEach(function(m){
if(!m[constants.ROOT_HASH])
m[constants.ROOT_HASH] = sha(m);
batch.push({type:'put',key:'model_' + m.id,value:m});});

sampleData.getResources().forEach(function(r){
if(!r[constants.ROOT_HASH])
r[constants.ROOT_HASH] = sha(r);
r[constants.CUR_HASH] = r[constants.ROOT_HASH];
var key=r[constants.TYPE] + '_' + r[constants.ROOT_HASH];



batch.push({type:'put',key:key,value:r});});


var self=this;
return db.batch(batch).
then(self.loadResources).
then(self.loadAddressBook).
catch(function(err){
err = err;});}else 


{
return this.loadAddressBook().
catch(function(err){
err = err;});}},



loadModels:function(){
var batch=[];

voc.getModels().forEach(function(m){
if(!m[constants.ROOT_HASH])
m[constants.ROOT_HASH] = sha(m);
batch.push({type:'put',key:'model_' + m.id,value:m});});

var self=this;
return db.batch(batch).
then(function(){
return self.loadResources();}).

catch(function(err){
err = err;});},



clearDb:function(){
var self=this;
return db.createReadStream().
on('data',function(data){
db.del(data.key,function(err){
err = err;});}).


on('error',function(err){
console.log('Oh my!',err.name + ': ' + err.message);}).

on('close',function(err){
console.log('Stream closed');}).

on('end',function(){
console.log('Stream end');});}});




module.exports = Store;
});
__d('q/q.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (



























function(definition){
"use strict";







if(typeof bootstrap === "function"){
bootstrap("promise",definition);}else 


if(typeof exports === "object" && typeof module === "object"){
module.exports = definition();}else 


if(typeof define === "function" && define.amd){
define(definition);}else 


if(typeof ses !== "undefined"){
if(!ses.ok()){
return;}else 
{
ses.makeQ = definition;}}else 



if(typeof window !== "undefined" || typeof self !== "undefined"){


var global=typeof window !== "undefined"?window:self;



var previousQ=global.Q;
global.Q = definition();



global.Q.noConflict = function(){
global.Q = previousQ;
return this;};}else 


{
throw new Error("This environment was not anticipated by Q. Please file a bug.");}})(


function(){
"use strict";

var hasStacks=false;
try{
throw new Error();}
catch(e) {
hasStacks = !!e.stack;}




var qStartingLine=captureLine();
var qFileName;




var noop=function(){};



var nextTick=(function(){

var head={task:void 0,next:null};
var tail=head;
var flushing=false;
var requestTick=void 0;
var isNodeJS=false;

var laterQueue=[];

function flush(){

var task,domain;

while(head.next) {
head = head.next;
task = head.task;
head.task = void 0;
domain = head.domain;

if(domain){
head.domain = void 0;
domain.enter();}

runSingle(task,domain);}


while(laterQueue.length) {
task = laterQueue.pop();
runSingle(task);}

flushing = false;}


function runSingle(task,domain){
try{
task();}

catch(e) {
if(isNodeJS){






if(domain){
domain.exit();}

setTimeout(flush,0);
if(domain){
domain.enter();}


throw e;}else 

{


setTimeout(function(){
throw e;},
0);}}



if(domain){
domain.exit();}}



nextTick = function(task){
tail = tail.next = {
task:task,
domain:isNodeJS && process.domain,
next:null};


if(!flushing){
flushing = true;
requestTick();}};



if(typeof process === "object" && 
process.toString() === "[object process]" && process.nextTick){








isNodeJS = true;

requestTick = function(){
process.nextTick(flush);};}else 


if(typeof setImmediate === "function"){

if(typeof window !== "undefined"){
requestTick = setImmediate.bind(window,flush);}else 
{
requestTick = function(){
setImmediate(flush);};}}else 



if(typeof MessageChannel !== "undefined"){


var channel=new MessageChannel();


channel.port1.onmessage = function(){
requestTick = requestPortTick;
channel.port1.onmessage = flush;
flush();};

var requestPortTick=function(){


channel.port2.postMessage(0);};

requestTick = function(){
setTimeout(flush,0);
requestPortTick();};}else 


{

requestTick = function(){
setTimeout(flush,0);};}





nextTick.runAfter = function(task){
laterQueue.push(task);
if(!flushing){
flushing = true;
requestTick();}};


return nextTick;})();












var call=Function.call;
function uncurryThis(f){
return function(){
return call.apply(f,arguments);};}






var array_slice=uncurryThis(Array.prototype.slice);

var array_reduce=uncurryThis(
Array.prototype.reduce || function(callback,basis){
var index=0,
length=this.length;

if(arguments.length === 1){


do {
if(index in this){
basis = this[index++];
break;}

if(++index >= length){
throw new TypeError();}}while(

1);}


for(;index < length;index++) {

if(index in this){
basis = callback(basis,this[index],index);}}


return basis;});



var array_indexOf=uncurryThis(
Array.prototype.indexOf || function(value){

for(var i=0;i < this.length;i++) {
if(this[i] === value){
return i;}}


return -1;});



var array_map=uncurryThis(
Array.prototype.map || function(callback,thisp){
var self=this;
var collect=[];
array_reduce(self,function(undefined,value,index){
collect.push(callback.call(thisp,value,index,self));},
void 0);
return collect;});



var object_create=Object.create || function(prototype){
function Type(){}
Type.prototype = prototype;
return new Type();};


var object_hasOwnProperty=uncurryThis(Object.prototype.hasOwnProperty);

var object_keys=Object.keys || function(object){
var keys=[];
for(var key in object) {
if(object_hasOwnProperty(object,key)){
keys.push(key);}}


return keys;};


var object_toString=uncurryThis(Object.prototype.toString);

function isObject(value){
return value === Object(value);}





function isStopIteration(exception){
return (
object_toString(exception) === "[object StopIteration]" || 
exception instanceof QReturnValue);}





var QReturnValue;
if(typeof ReturnValue !== "undefined"){
QReturnValue = ReturnValue;}else 
{
QReturnValue = function(value){
this.value = value;};}





var STACK_JUMP_SEPARATOR="From previous event:";

function makeStackTraceLong(error,promise){


if(hasStacks && 
promise.stack && 
typeof error === "object" && 
error !== null && 
error.stack && 
error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1)
{
var stacks=[];
for(var p=promise;!!p;p = p.source) {
if(p.stack){
stacks.unshift(p.stack);}}


stacks.unshift(error.stack);

var concatedStacks=stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
error.stack = filterStackString(concatedStacks);}}



function filterStackString(stackString){
var lines=stackString.split("\n");
var desiredLines=[];
for(var i=0;i < lines.length;++i) {
var line=lines[i];

if(!isInternalFrame(line) && !isNodeFrame(line) && line){
desiredLines.push(line);}}


return desiredLines.join("\n");}


function isNodeFrame(stackLine){
return stackLine.indexOf("(module.js:") !== -1 || 
stackLine.indexOf("(node.js:") !== -1;}


function getFileNameAndLineNumber(stackLine){


var attempt1=/at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
if(attempt1){
return [attempt1[1],Number(attempt1[2])];}



var attempt2=/at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
if(attempt2){
return [attempt2[1],Number(attempt2[2])];}



var attempt3=/.*@(.+):(\d+)$/.exec(stackLine);
if(attempt3){
return [attempt3[1],Number(attempt3[2])];}}



function isInternalFrame(stackLine){
var fileNameAndLineNumber=getFileNameAndLineNumber(stackLine);

if(!fileNameAndLineNumber){
return false;}


var fileName=fileNameAndLineNumber[0];
var lineNumber=fileNameAndLineNumber[1];

return fileName === qFileName && 
lineNumber >= qStartingLine && 
lineNumber <= qEndingLine;}




function captureLine(){
if(!hasStacks){
return;}


try{
throw new Error();}
catch(e) {
var lines=e.stack.split("\n");
var firstLine=lines[0].indexOf("@") > 0?lines[1]:lines[2];
var fileNameAndLineNumber=getFileNameAndLineNumber(firstLine);
if(!fileNameAndLineNumber){
return;}


qFileName = fileNameAndLineNumber[0];
return fileNameAndLineNumber[1];}}



function deprecate(callback,name,alternative){
return function(){
if(typeof console !== "undefined" && 
typeof console.warn === "function"){
console.warn(name + " is deprecated, use " + alternative + 
" instead.",new Error("").stack);}

return callback.apply(callback,arguments);};}











function Q(value){



if(value instanceof Promise){
return value;}



if(isPromiseAlike(value)){
return coerce(value);}else 
{
return fulfill(value);}}


Q.resolve = Q;





Q.nextTick = nextTick;




Q.longStackSupport = false;


if(typeof process === "object" && process && process.env && process.env.Q_DEBUG){
Q.longStackSupport = true;}












Q.defer = defer;
function defer(){






var messages=[],progressListeners=[],resolvedPromise;

var deferred=object_create(defer.prototype);
var promise=object_create(Promise.prototype);

promise.promiseDispatch = function(resolve,op,operands){
var args=array_slice(arguments);
if(messages){
messages.push(args);
if(op === "when" && operands[1]){
progressListeners.push(operands[1]);}}else 

{
Q.nextTick(function(){
resolvedPromise.promiseDispatch.apply(resolvedPromise,args);});}};





promise.valueOf = function(){
if(messages){
return promise;}

var nearerValue=nearer(resolvedPromise);
if(isPromise(nearerValue)){
resolvedPromise = nearerValue;}

return nearerValue;};


promise.inspect = function(){
if(!resolvedPromise){
return {state:"pending"};}

return resolvedPromise.inspect();};


if(Q.longStackSupport && hasStacks){
try{
throw new Error();}
catch(e) {






promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);}}







function become(newPromise){
resolvedPromise = newPromise;
promise.source = newPromise;

array_reduce(messages,function(undefined,message){
Q.nextTick(function(){
newPromise.promiseDispatch.apply(newPromise,message);});},

void 0);

messages = void 0;
progressListeners = void 0;}


deferred.promise = promise;
deferred.resolve = function(value){
if(resolvedPromise){
return;}


become(Q(value));};


deferred.fulfill = function(value){
if(resolvedPromise){
return;}


become(fulfill(value));};

deferred.reject = function(reason){
if(resolvedPromise){
return;}


become(reject(reason));};

deferred.notify = function(progress){
if(resolvedPromise){
return;}


array_reduce(progressListeners,function(undefined,progressListener){
Q.nextTick(function(){
progressListener(progress);});},

void 0);};


return deferred;}







defer.prototype.makeNodeResolver = function(){
var self=this;
return function(error,value){
if(error){
self.reject(error);}else 
if(arguments.length > 2){
self.resolve(array_slice(arguments,1));}else 
{
self.resolve(value);}};};










Q.Promise = promise;
Q.promise = promise;
function promise(resolver){
if(typeof resolver !== "function"){
throw new TypeError("resolver must be a function.");}

var deferred=defer();
try{
resolver(deferred.resolve,deferred.reject,deferred.notify);}
catch(reason) {
deferred.reject(reason);}

return deferred.promise;}


promise.race = race;
promise.all = all;
promise.reject = reject;
promise.resolve = Q;




Q.passByCopy = function(object){


return object;};


Promise.prototype.passByCopy = function(){


return this;};











Q.join = function(x,y){
return Q(x).join(y);};


Promise.prototype.join = function(that){
return Q([this,that]).spread(function(x,y){
if(x === y){

return x;}else 
{
throw new Error("Can't join: not the same: " + x + " " + y);}});};









Q.race = race;
function race(answerPs){
return promise(function(resolve,reject){





for(var i=0,len=answerPs.length;i < len;i++) {
Q(answerPs[i]).then(resolve,reject);}});}




Promise.prototype.race = function(){
return this.then(Q.race);};













Q.makePromise = Promise;
function Promise(descriptor,fallback,inspect){
if(fallback === void 0){
fallback = function(op){
return reject(new Error(
"Promise does not support operation: " + op));};}



if(inspect === void 0){
inspect = function(){
return {state:"unknown"};};}



var promise=object_create(Promise.prototype);

promise.promiseDispatch = function(resolve,op,args){
var result;
try{
if(descriptor[op]){
result = descriptor[op].apply(promise,args);}else 
{
result = fallback.call(promise,op,args);}}

catch(exception) {
result = reject(exception);}

if(resolve){
resolve(result);}};



promise.inspect = inspect;


if(inspect){
var inspected=inspect();
if(inspected.state === "rejected"){
promise.exception = inspected.reason;}


promise.valueOf = function(){
var inspected=inspect();
if(inspected.state === "pending" || 
inspected.state === "rejected"){
return promise;}

return inspected.value;};}



return promise;}


Promise.prototype.toString = function(){
return "[object Promise]";};


Promise.prototype.then = function(fulfilled,rejected,progressed){
var self=this;
var deferred=defer();
var done=false;


function _fulfilled(value){
try{
return typeof fulfilled === "function"?fulfilled(value):value;}
catch(exception) {
return reject(exception);}}



function _rejected(exception){
if(typeof rejected === "function"){
makeStackTraceLong(exception,self);
try{
return rejected(exception);}
catch(newException) {
return reject(newException);}}


return reject(exception);}


function _progressed(value){
return typeof progressed === "function"?progressed(value):value;}


Q.nextTick(function(){
self.promiseDispatch(function(value){
if(done){
return;}

done = true;

deferred.resolve(_fulfilled(value));},
"when",[function(exception){
if(done){
return;}

done = true;

deferred.resolve(_rejected(exception));}]);});




self.promiseDispatch(void 0,"when",[void 0,function(value){
var newValue;
var threw=false;
try{
newValue = _progressed(value);}
catch(e) {
threw = true;
if(Q.onerror){
Q.onerror(e);}else 
{
throw e;}}



if(!threw){
deferred.notify(newValue);}}]);



return deferred.promise;};


Q.tap = function(promise,callback){
return Q(promise).tap(callback);};














Promise.prototype.tap = function(callback){
callback = Q(callback);

return this.then(function(value){
return callback.fcall(value).thenResolve(value);});};



















Q.when = when;
function when(value,fulfilled,rejected,progressed){
return Q(value).then(fulfilled,rejected,progressed);}


Promise.prototype.thenResolve = function(value){
return this.then(function(){return value;});};


Q.thenResolve = function(promise,value){
return Q(promise).thenResolve(value);};


Promise.prototype.thenReject = function(reason){
return this.then(function(){throw reason;});};


Q.thenReject = function(promise,reason){
return Q(promise).thenReject(reason);};













Q.nearer = nearer;
function nearer(value){
if(isPromise(value)){
var inspected=value.inspect();
if(inspected.state === "fulfilled"){
return inspected.value;}}


return value;}






Q.isPromise = isPromise;
function isPromise(object){
return object instanceof Promise;}


Q.isPromiseAlike = isPromiseAlike;
function isPromiseAlike(object){
return isObject(object) && typeof object.then === "function";}






Q.isPending = isPending;
function isPending(object){
return isPromise(object) && object.inspect().state === "pending";}


Promise.prototype.isPending = function(){
return this.inspect().state === "pending";};






Q.isFulfilled = isFulfilled;
function isFulfilled(object){
return !isPromise(object) || object.inspect().state === "fulfilled";}


Promise.prototype.isFulfilled = function(){
return this.inspect().state === "fulfilled";};





Q.isRejected = isRejected;
function isRejected(object){
return isPromise(object) && object.inspect().state === "rejected";}


Promise.prototype.isRejected = function(){
return this.inspect().state === "rejected";};








var unhandledReasons=[];
var unhandledRejections=[];
var reportedUnhandledRejections=[];
var trackUnhandledRejections=true;

function resetUnhandledRejections(){
unhandledReasons.length = 0;
unhandledRejections.length = 0;

if(!trackUnhandledRejections){
trackUnhandledRejections = true;}}



function trackRejection(promise,reason){
if(!trackUnhandledRejections){
return;}

if(typeof process === "object" && typeof process.emit === "function"){
Q.nextTick.runAfter(function(){
if(array_indexOf(unhandledRejections,promise) !== -1){
process.emit("unhandledRejection",reason,promise);
reportedUnhandledRejections.push(promise);}});}




unhandledRejections.push(promise);
if(reason && typeof reason.stack !== "undefined"){
unhandledReasons.push(reason.stack);}else 
{
unhandledReasons.push("(no stack) " + reason);}}



function untrackRejection(promise){
if(!trackUnhandledRejections){
return;}


var at=array_indexOf(unhandledRejections,promise);
if(at !== -1){
if(typeof process === "object" && typeof process.emit === "function"){
Q.nextTick.runAfter(function(){
var atReport=array_indexOf(reportedUnhandledRejections,promise);
if(atReport !== -1){
process.emit("rejectionHandled",unhandledReasons[at],promise);
reportedUnhandledRejections.splice(atReport,1);}});}



unhandledRejections.splice(at,1);
unhandledReasons.splice(at,1);}}



Q.resetUnhandledRejections = resetUnhandledRejections;

Q.getUnhandledReasons = function(){

return unhandledReasons.slice();};


Q.stopUnhandledRejectionTracking = function(){
resetUnhandledRejections();
trackUnhandledRejections = false;};


resetUnhandledRejections();







Q.reject = reject;
function reject(reason){
var rejection=Promise({
"when":function(rejected){

if(rejected){
untrackRejection(this);}

return rejected?rejected(reason):this;}},

function fallback(){
return this;},
function inspect(){
return {state:"rejected",reason:reason};});



trackRejection(rejection,reason);

return rejection;}






Q.fulfill = fulfill;
function fulfill(value){
return Promise({
"when":function(){
return value;},

"get":function(name){
return value[name];},

"set":function(name,rhs){
value[name] = rhs;},

"delete":function(name){
delete value[name];},

"post":function(name,args){


if(name === null || name === void 0){
return value.apply(void 0,args);}else 
{
return value[name].apply(value,args);}},


"apply":function(thisp,args){
return value.apply(thisp,args);},

"keys":function(){
return object_keys(value);}},

void 0,function inspect(){
return {state:"fulfilled",value:value};});}








function coerce(promise){
var deferred=defer();
Q.nextTick(function(){
try{
promise.then(deferred.resolve,deferred.reject,deferred.notify);}
catch(exception) {
deferred.reject(exception);}});


return deferred.promise;}











Q.master = master;
function master(object){
return Promise({
"isDef":function(){}},
function fallback(op,args){
return dispatch(object,op,args);},
function(){
return Q(object).inspect();});}













Q.spread = spread;
function spread(value,fulfilled,rejected){
return Q(value).spread(fulfilled,rejected);}


Promise.prototype.spread = function(fulfilled,rejected){
return this.all().then(function(array){
return fulfilled.apply(void 0,array);},
rejected);};




























Q.async = async;
function async(makeGenerator){
return function(){


function continuer(verb,arg){
var result;









if(typeof StopIteration === "undefined"){

try{
result = generator[verb](arg);}
catch(exception) {
return reject(exception);}

if(result.done){
return Q(result.value);}else 
{
return when(result.value,callback,errback);}}else 

{


try{
result = generator[verb](arg);}
catch(exception) {
if(isStopIteration(exception)){
return Q(exception.value);}else 
{
return reject(exception);}}


return when(result,callback,errback);}}


var generator=makeGenerator.apply(this,arguments);
var callback=continuer.bind(continuer,"next");
var errback=continuer.bind(continuer,"throw");
return callback();};}










Q.spawn = spawn;
function spawn(makeGenerator){
Q.done(Q.async(makeGenerator)());}



























Q["return"] = _return;
function _return(value){
throw new QReturnValue(value);}

















Q.promised = promised;
function promised(callback){
return function(){
return spread([this,all(arguments)],function(self,args){
return callback.apply(self,args);});};}











Q.dispatch = dispatch;
function dispatch(object,op,args){
return Q(object).dispatch(op,args);}


Promise.prototype.dispatch = function(op,args){
var self=this;
var deferred=defer();
Q.nextTick(function(){
self.promiseDispatch(deferred.resolve,op,args);});

return deferred.promise;};








Q.get = function(object,key){
return Q(object).dispatch("get",[key]);};


Promise.prototype.get = function(key){
return this.dispatch("get",[key]);};









Q.set = function(object,key,value){
return Q(object).dispatch("set",[key,value]);};


Promise.prototype.set = function(key,value){
return this.dispatch("set",[key,value]);};








Q.del = 
Q["delete"] = function(object,key){
return Q(object).dispatch("delete",[key]);};


Promise.prototype.del = 
Promise.prototype["delete"] = function(key){
return this.dispatch("delete",[key]);};















Q.mapply = 
Q.post = function(object,name,args){
return Q(object).dispatch("post",[name,args]);};


Promise.prototype.mapply = 
Promise.prototype.post = function(name,args){
return this.dispatch("post",[name,args]);};









Q.send = 
Q.mcall = 
Q.invoke = function(object,name){
return Q(object).dispatch("post",[name,array_slice(arguments,2)]);};


Promise.prototype.send = 
Promise.prototype.mcall = 
Promise.prototype.invoke = function(name){
return this.dispatch("post",[name,array_slice(arguments,1)]);};







Q.fapply = function(object,args){
return Q(object).dispatch("apply",[void 0,args]);};


Promise.prototype.fapply = function(args){
return this.dispatch("apply",[void 0,args]);};







Q["try"] = 
Q.fcall = function(object){
return Q(object).dispatch("apply",[void 0,array_slice(arguments,1)]);};


Promise.prototype.fcall = function(){
return this.dispatch("apply",[void 0,array_slice(arguments)]);};








Q.fbind = function(object){
var promise=Q(object);
var args=array_slice(arguments,1);
return function fbound(){
return promise.dispatch("apply",[
this,
args.concat(array_slice(arguments))]);};};



Promise.prototype.fbind = function(){
var promise=this;
var args=array_slice(arguments);
return function fbound(){
return promise.dispatch("apply",[
this,
args.concat(array_slice(arguments))]);};};










Q.keys = function(object){
return Q(object).dispatch("keys",[]);};


Promise.prototype.keys = function(){
return this.dispatch("keys",[]);};











Q.all = all;
function all(promises){
return when(promises,function(promises){
var pendingCount=0;
var deferred=defer();
array_reduce(promises,function(undefined,promise,index){
var snapshot;
if(
isPromise(promise) && 
(snapshot = promise.inspect()).state === "fulfilled")
{
promises[index] = snapshot.value;}else 
{
++pendingCount;
when(
promise,
function(value){
promises[index] = value;
if(--pendingCount === 0){
deferred.resolve(promises);}},


deferred.reject,
function(progress){
deferred.notify({index:index,value:progress});});}},



void 0);
if(pendingCount === 0){
deferred.resolve(promises);}

return deferred.promise;});}



Promise.prototype.all = function(){
return all(this);};









Q.any = any;

function any(promises){
if(promises.length === 0){
return Q.resolve();}


var deferred=Q.defer();
var pendingCount=0;
array_reduce(promises,function(prev,current,index){
var promise=promises[index];

pendingCount++;

when(promise,onFulfilled,onRejected,onProgress);
function onFulfilled(result){
deferred.resolve(result);}

function onRejected(){
pendingCount--;
if(pendingCount === 0){
deferred.reject(new Error(
"Can't get fulfillment value from any promise, all " + 
"promises were rejected."));}}



function onProgress(progress){
deferred.notify({
index:index,
value:progress});}},


undefined);

return deferred.promise;}


Promise.prototype.any = function(){
return any(this);};











Q.allResolved = deprecate(allResolved,"allResolved","allSettled");
function allResolved(promises){
return when(promises,function(promises){
promises = array_map(promises,Q);
return when(all(array_map(promises,function(promise){
return when(promise,noop,noop);})),
function(){
return promises;});});}




Promise.prototype.allResolved = function(){
return allResolved(this);};





Q.allSettled = allSettled;
function allSettled(promises){
return Q(promises).allSettled();}









Promise.prototype.allSettled = function(){
return this.then(function(promises){
return all(array_map(promises,function(promise){
promise = Q(promise);
function regardless(){
return promise.inspect();}

return promise.then(regardless,regardless);}));});};













Q.fail = 
Q["catch"] = function(object,rejected){
return Q(object).then(void 0,rejected);};


Promise.prototype.fail = 
Promise.prototype["catch"] = function(rejected){
return this.then(void 0,rejected);};










Q.progress = progress;
function progress(object,progressed){
return Q(object).then(void 0,void 0,progressed);}


Promise.prototype.progress = function(progressed){
return this.then(void 0,void 0,progressed);};













Q.fin = 
Q["finally"] = function(object,callback){
return Q(object)["finally"](callback);};


Promise.prototype.fin = 
Promise.prototype["finally"] = function(callback){
callback = Q(callback);
return this.then(function(value){
return callback.fcall().then(function(){
return value;});},

function(reason){

return callback.fcall().then(function(){
throw reason;});});};










Q.done = function(object,fulfilled,rejected,progress){
return Q(object).done(fulfilled,rejected,progress);};


Promise.prototype.done = function(fulfilled,rejected,progress){
var onUnhandledError=function(error){


Q.nextTick(function(){
makeStackTraceLong(error,promise);
if(Q.onerror){
Q.onerror(error);}else 
{
throw error;}});};





var promise=fulfilled || rejected || progress?
this.then(fulfilled,rejected,progress):
this;

if(typeof process === "object" && process && process.domain){
onUnhandledError = process.domain.bind(onUnhandledError);}


promise.then(void 0,onUnhandledError);};











Q.timeout = function(object,ms,error){
return Q(object).timeout(ms,error);};


Promise.prototype.timeout = function(ms,error){
var deferred=defer();
var timeoutId=setTimeout(function(){
if(!error || "string" === typeof error){
error = new Error(error || "Timed out after " + ms + " ms");
error.code = "ETIMEDOUT";}

deferred.reject(error);},
ms);

this.then(function(value){
clearTimeout(timeoutId);
deferred.resolve(value);},
function(exception){
clearTimeout(timeoutId);
deferred.reject(exception);},
deferred.notify);

return deferred.promise;};











Q.delay = function(object,timeout){
if(timeout === void 0){
timeout = object;
object = void 0;}

return Q(object).delay(timeout);};


Promise.prototype.delay = function(timeout){
return this.then(function(value){
var deferred=defer();
setTimeout(function(){
deferred.resolve(value);},
timeout);
return deferred.promise;});};












Q.nfapply = function(callback,args){
return Q(callback).nfapply(args);};


Promise.prototype.nfapply = function(args){
var deferred=defer();
var nodeArgs=array_slice(args);
nodeArgs.push(deferred.makeNodeResolver());
this.fapply(nodeArgs).fail(deferred.reject);
return deferred.promise;};











Q.nfcall = function(callback){
var args=array_slice(arguments,1);
return Q(callback).nfapply(args);};


Promise.prototype.nfcall = function(){
var nodeArgs=array_slice(arguments);
var deferred=defer();
nodeArgs.push(deferred.makeNodeResolver());
this.fapply(nodeArgs).fail(deferred.reject);
return deferred.promise;};










Q.nfbind = 
Q.denodeify = function(callback){
var baseArgs=array_slice(arguments,1);
return function(){
var nodeArgs=baseArgs.concat(array_slice(arguments));
var deferred=defer();
nodeArgs.push(deferred.makeNodeResolver());
Q(callback).fapply(nodeArgs).fail(deferred.reject);
return deferred.promise;};};



Promise.prototype.nfbind = 
Promise.prototype.denodeify = function(){
var args=array_slice(arguments);
args.unshift(this);
return Q.denodeify.apply(void 0,args);};


Q.nbind = function(callback,thisp){
var baseArgs=array_slice(arguments,2);
return function(){
var nodeArgs=baseArgs.concat(array_slice(arguments));
var deferred=defer();
nodeArgs.push(deferred.makeNodeResolver());
function bound(){
return callback.apply(thisp,arguments);}

Q(bound).fapply(nodeArgs).fail(deferred.reject);
return deferred.promise;};};



Promise.prototype.nbind = function(){
var args=array_slice(arguments,0);
args.unshift(this);
return Q.nbind.apply(void 0,args);};











Q.nmapply = 
Q.npost = function(object,name,args){
return Q(object).npost(name,args);};


Promise.prototype.nmapply = 
Promise.prototype.npost = function(name,args){
var nodeArgs=array_slice(args || []);
var deferred=defer();
nodeArgs.push(deferred.makeNodeResolver());
this.dispatch("post",[name,nodeArgs]).fail(deferred.reject);
return deferred.promise;};












Q.nsend = 
Q.nmcall = 
Q.ninvoke = function(object,name){
var nodeArgs=array_slice(arguments,2);
var deferred=defer();
nodeArgs.push(deferred.makeNodeResolver());
Q(object).dispatch("post",[name,nodeArgs]).fail(deferred.reject);
return deferred.promise;};


Promise.prototype.nsend = 
Promise.prototype.nmcall = 
Promise.prototype.ninvoke = function(name){
var nodeArgs=array_slice(arguments,1);
var deferred=defer();
nodeArgs.push(deferred.makeNodeResolver());
this.dispatch("post",[name,nodeArgs]).fail(deferred.reject);
return deferred.promise;};












Q.nodeify = nodeify;
function nodeify(object,nodeback){
return Q(object).nodeify(nodeback);}


Promise.prototype.nodeify = function(nodeback){
if(nodeback){
this.then(function(value){
Q.nextTick(function(){
nodeback(null,value);});},

function(error){
Q.nextTick(function(){
nodeback(error);});});}else 


{
return this;}};



Q.noConflict = function(){
throw new Error("Q.noConflict only works when Q is used as a global");};



var qEndingLine=captureLine();

return Q;});
});
__d('Identity/data/data.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';









var identities=[
{
_t:'tradle.Identity',
'firstName':'Kate',
'lastName':'Blair',
'street':'200 Columbus Ave',
'city':'New York',
'region':'NY',
'country':'USA',
'owner':{
id:'tradle.Identity_b25da36eaf4b01b37fc2154cb1103eb5324a52fa',
title:'Jane Choi'},

'contact':[
{
'identifier':'jane@ms.com',
'type':'email'},

{
'identifier':'212-234-4567',
'type':'phone'}],


'photos':[
{
'tags':'headshot',
'url':'https://stocklandmartel.blob.core.windows.net/media/images/JC00065.jpg'}],


'pubkeys':[
{
'_sig':'304302200be2aeec26edbbf6d516441de0fedebacf0252f7a3d4d2993f4f8c76ec949cd8021f4eadda2cb931d233925c1a922a6de5cf41befafe0567b718efba4e3942f693',
'curve':'ed25519',
'fingerprint':'c40c3041cbbdcbce7540b51fe49795bf0932965f5c25158fc09c8ab829782a7f',
'purpose':'update',
'type':'ec',
'value':'0352261ed98ccf4674f216307250171e10ad4bfe80e2f976c092dea3d653a13be8'},

{
'_sig':'304402200774032810f6fc1cbac43805b123c83ba5f8967e1305d32301651c7d3d02f12e0220043c1fa262bfc10c48d6904094f6667d4ddc638cdea89d6fd4c7c9f61d5695cc',
'curve':'ed25519',
'fingerprint':'d7678020b9a82d75c8160585asdd6cc1c8a8563cf94c45e644724635a45df134',
'purpose':'sign',
'type':'ec',
'value':'021c315fd64987714c1c7a039645073asd17ec6206ec3009a65e62e6d49948c0c6'},

{
'_sig':'asdqwe201b3d649dc269e8d795f38622bf03d0e020190816023bcd3c5e3d5d033c8f4e5602202f6c4ecfbcdf4661840ffad36146d892bcad144a210320a9de44fadebb1d8cf1',
'fingerprint':'miasdaRV8Fcs993NsSZVUpEqU8FEN7r2b1L',
'label':'most excellent key',
'networkName':'testnet',
'purpose':'payment',
'type':'bitcoin',
'value':'026cc5795asddd554105c0bab90f4f0aa711693d6d12c4a6bfb517f13ffa8abe66d'}],


'websites':[
{
'url':'ms.com'}],


_r:'31eb0b894cad3601adc76713d55a11c88e48b4a2'},

{
_t:'tradle.Identity',
'contact':[
{
'identifier':'somebodyelse',
'type':'skype'}],


'city':'San Dimas',
'country':'USA',
'postalCode':'666',
'region':'California',
'street':'666 Wyld Stallyns Dr',
'firstName':'Ted',
'lastName':'Logan',
'middleName':'Theodore',
'owner':{
id:'tradle.Identity_b25da36eaf4b01b37fc2154cb1103eb5324a52fa',
title:'Jane Choi'},

'photos':[
{
'tags':'headshot',
'url':'http://fc09.deviantart.net/fs70/f/2011/334/9/f/second__man__drawing__by_namitokiwa-d4hteh4.jpg'}],


'pubkeys':[
{
'_sig':'304302200be2aeec26edbbf6d516441de0fedebacf0252f7a3d4d2993f4f8c76ec949cd8021f4eadda2cb931d233925c1a922a6de5cf41befafe0567b718efba4e3942f693',
'curve':'ed25519',
'fingerprint':'c40c3041cbbdcbce7540b51fe49795bf0932965f5c25158fc09c8ab829782a7f',
'purpose':'update',
'type':'ec',
'value':'0352261ed98ccf4674f216307250171e10ad4bfe80e2f976c092dea3d653a13be8'},

{
'_sig':'304402200774032810f6fc1cbac43805b787c83ba5f8967e1305d32301651c7d3d02f12e0220043c1fa262bfc10c48d6904094f6667d4ddc638cdea89d6fd4c7c9f61d5695cc',
'curve':'ed25519',
'fingerprint':'d7678020b9a82d75c81605856d5d6cc1c8a8563cf94c45e644724635a45df134',
'purpose':'sign',
'type':'ec',
'value':'021c315fd64987714c1c7a0396450737ad17ec6206ec3009a65e62e6d49948c0c6'},

{
'_sig':'304402200094a5dffab7885457b90038245ba09f62b506c1e3425eaa73e0f859f3c911dd02200ac8e4139f314ca2e9ee8fed9054c3a9d77aceda50a5d07b01570e5ece2dbc50',
'curve':'ed25519',
'fingerprint':'2a9fcfdd47395d229bcc4aa0b9b8a5e065464d2b18db052a4f0be5f6f5cbaf60',
'purpose':'sign',
'type':'ec',
'value':'0370a79ba2fd9b943e750103f67d458e790b15e5f9140fe6cffd782df29ed9cfe2'},

{
'_sig':'304402200bb598494e060caf1ad4711c85cc09fffe7169350327abf538a4281fb8217ce5022000afd4d9bc4df34e8edec3296bd55b812407fe5cff64dbbaa86fd9e77b73a490',
'curve':'ed25519',
'fingerprint':'24a021520135f0f077cf725f87d2a95b2abcf9b5e9accf3d4eb671546d964be8',
'purpose':'encrypt',
'type':'ec',
'value':'0276168d37e2a1d4be57038a09c41140b6271399bd4cb5bf0942ba0f8a4236756f'},

{
'_sig':'3044022016166dd4715b5e727c244e8d9af9470c7e6f122082bddb5b01f6228b21bb52e6022066cd7f09f90f517013d2fdf70eccbc4a53dceb8fae46fa79f9cfe87a062ef50d',
'fingerprint':'19HWX1DvxHWgRVfbLWRCn36jHmgsonmTEU',
'label':'most triumphant key',
'networkName':'bitcoin',
'purpose':'payment',
'type':'bitcoin',
'value':'034e0458925058ca2c02a9a97dddc209488762343c96786fb25ff576ce7f6ab486'},

{
'_sig':'304402201b3d649dc269e8d795f38622bf03d0e020190816023bcd3c5e3d5d033c8f4e5602202f6c4ecfbcdf4661840ffad36146d892bcad144a210320a9de44fadebb1d8cf1',
'fingerprint':'miGmaRV8Fcs993NsSZVUpEqU8FEN7r2b1L',
'label':'most excellent key',
'networkName':'testnet',
'purpose':'payment',
'type':'bitcoin',
'value':'026cc579570dd554105c0bab90f4f0aa711693d6d12c4a6bfb517f13ffa8abe66d'}],


'summary':'Bill\'s best friend',
'v':'0.3',
'websites':[
{
'url':'wyldstallyns.com'}]},



{
_t:'tradle.Identity',
'contact':[
{
'identifier':'somebodyelse',
'type':'skype'}],


'city':'San Dimas',
'country':'USA',
'postalCode':'666',
'region':'California',
'street':'666 Wyld Stallyns Dr',
'firstName':'Jane',
'lastName':'Choi',
_r:'b25da36eaf4b01b37fc2154cb1103eb5324a52fa',
'owner':{
id:'tradle.Identity_b25da36eaf4b01b37fc2154cb1103eb5324a52fa',
title:'Jane Choi'},

'photos':[
{
'tags':'headshot',
'url':'http://www.morganstanley.com/assets/images/people/tiles/audrey-choi-large.jpg'}],


'pubkeys':[
{
'_sig':'304302200be2aeec26edbbf6d516441de0fedebacf0252f7a3d4d2993f4f8c76ec949cd8021f4eadda2cb931d233925c1a922a6de5cf41befafe0567b718efba4e3942f693',
'curve':'ed25519',
'fingerprint':'c40c3041cbbdcbce7540b51fe49795bf0932965f5c25158fc09c8ab829782a7f',
'purpose':'update',
'type':'ec',
'value':'0352261ed98ccf4674f216307250171e10ad4bfe80e2f976c092dea3d653a13be8'},

{
'_sig':'304402200774032810f6fc1cbac43805b787c83ba5f8967e1305d32301651c7d3d02f12e0220043c1fa262bfc10c48d6904094f6667d4ddc638cdea89d6fd4c7c9f61d5695cc',
'curve':'ed25519',
'fingerprint':'d7678020b9a82d75c81605856d5d6cc1c8a8563cf94c45e644724635a45df134',
'purpose':'sign',
'type':'ec',
'value':'021c315fd64987714c1c7a0396450737ad17ec6206ec3009a65e62e6d49948c0c6'},

{
'_sig':'304402200094a5dffab7885457b90038245ba09f62b506c1e3425eaa73e0f859f3c911dd02200ac8e4139f314ca2e9ee8fed9054c3a9d77aceda50a5d07b01570e5ece2dbc50',
'curve':'ed25519',
'fingerprint':'2a9fcfdd47395d229bcc4aa0b9b8a5e065464d2b18db052a4f0be5f6f5cbaf60',
'purpose':'sign',
'type':'ec',
'value':'0370a79ba2fd9b943e750103f67d458e790b15e5f9140fe6cffd782df29ed9cfe2'},

{
'_sig':'304402200bb598494e060caf1ad4711c85cc09fffe7169350327abf538a4281fb8217ce5022000afd4d9bc4df34e8edec3296bd55b812407fe5cff64dbbaa86fd9e77b73a490',
'curve':'ed25519',
'fingerprint':'24a021520135f0f077cf725f87d2a95b2abcf9b5e9accf3d4eb671546d964be8',
'purpose':'encrypt',
'type':'ec',
'value':'0276168d37e2a1d4be57038a09c41140b6271399bd4cb5bf0942ba0f8a4236756f'},

{
'_sig':'3044022016166dd4715b5e727c244e8d9af9470c7e6f122082bddb5b01f6228b21bb52e6022066cd7f09f90f517013d2fdf70eccbc4a53dceb8fae46fa79f9cfe87a062ef50d',
'fingerprint':'19HWX1DvxHWgRVfbLWRCn36jHmgsonmTEU',
'label':'most triumphant key',
'networkName':'bitcoin',
'purpose':'payment',
'type':'bitcoin',
'value':'034e0458925058ca2c02a9a97dddc209488762343c96786fb25ff576ce7f6ab486'},

{
'_sig':'304402201b3d649dc269e8d795f38622bf03d0e020190816023bcd3c5e3d5d033c8f4e5602202f6c4ecfbcdf4661840ffad36146d892bcad144a210320a9de44fadebb1d8cf1',
'fingerprint':'miGmaRV8Fcs993NsSZVUpEqU8FEN7r2b1L',
'label':'most excellent key',
'networkName':'testnet',
'purpose':'payment',
'type':'bitcoin',
'value':'026cc579570dd554105c0bab90f4f0aa711693d6d12c4a6bfb517f13ffa8abe66d'}],


'summary':'Bill\'s best friend',
'v':'0.3',
'websites':[
{
'url':'wyldstallyns.com'}]},



{
_t:'tradle.Identity',
'contact':[
{
'identifier':'somebodyelse',
'type':'skype'}],


'city':'San Dimas',
'country':'USA',
'postalCode':'666',
'region':'California',
'street':'666 Wyld Stallyns Dr',
'firstName':'Adam',
'lastName':'Scott',
'owner':{
id:'tradle.Identity_b25da36eaf4b01b37fc2154cb1103eb5324a52fa',
title:'Jane Choi'},

'photos':[
{
'tags':'headshot',
'url':'http://www.theurbanlist.com/content/article/a_list_images/adam-scott-2008.jpg'}],


'pubkeys':[
{
'_sig':'304302200be2aeec26edbbf6d516441de0fedebacf0252f7a3d4d2993f4f8c76ec949cd8021f4eadda2cb931d233925c1a922a6de5cf41befafe0567b718efba4e3942f693',
'curve':'ed25519',
'fingerprint':'c40c3041cbbdcbce7540b51fe49795bf0932965f5c25158fc09c8ab829782a7f',
'purpose':'update',
'type':'ec',
'value':'0352261ed98ccf4674f216307250171e10ad4bfe80e2f976c092dea3d653a13be8'},

{
'_sig':'304402200774032810f6fc1cbac43805b787c83ba5f8967e1305d32301651c7d3d02f12e0220043c1fa262bfc10c48d6904094f6667d4ddc638cdea89d6fd4c7c9f61d5695cc',
'curve':'ed25519',
'fingerprint':'d7678020b9a82d75c81605856d5d6cc1c8a8563cf94c45e644724635a45df134',
'purpose':'sign',
'type':'ec',
'value':'021c315fd64987714c1c7a0396450737ad17ec6206ec3009a65e62e6d49948c0c6'},

{
'_sig':'304402200094a5dffab7885457b90038245ba09f62b506c1e3425eaa73e0f859f3c911dd02200ac8e4139f314ca2e9ee8fed9054c3a9d77aceda50a5d07b01570e5ece2dbc50',
'curve':'ed25519',
'fingerprint':'2a9fcfdd47395d229bcc4aa0b9b8a5e065464d2b18db052a4f0be5f6f5cbaf60',
'purpose':'sign',
'type':'ec',
'value':'0370a79ba2fd9b943e750103f67d458e790b15e5f9140fe6cffd782df29ed9cfe2'},

{
'_sig':'304402200bb598494e060caf1ad4711c85cc09fffe7169350327abf538a4281fb8217ce5022000afd4d9bc4df34e8edec3296bd55b812407fe5cff64dbbaa86fd9e77b73a490',
'curve':'ed25519',
'fingerprint':'24a021520135f0f077cf725f87d2a95b2abcf9b5e9accf3d4eb671546d964be8',
'purpose':'encrypt',
'type':'ec',
'value':'0276168d37e2a1d4be57038a09c41140b6271399bd4cb5bf0942ba0f8a4236756f'},

{
'_sig':'3044022016166dd4715b5e727c244e8d9af9470c7e6f122082bddb5b01f6228b21bb52e6022066cd7f09f90f517013d2fdf70eccbc4a53dceb8fae46fa79f9cfe87a062ef50d',
'fingerprint':'19HWX1DvxHWgRVfbLWRCn36jHmgsonmTEU',
'label':'most triumphant key',
'networkName':'bitcoin',
'purpose':'payment',
'type':'bitcoin',
'value':'034e0458925058ca2c02a9a97dddc209488762343c96786fb25ff576ce7f6ab486'},

{
'_sig':'304402201b3d649dc269e8d795f38622bf03d0e020190816023bcd3c5e3d5d033c8f4e5602202f6c4ecfbcdf4661840ffad36146d892bcad144a210320a9de44fadebb1d8cf1',
'fingerprint':'miGmaRV8Fcs993NsSZVUpEqU8FEN7r2b1L',
'label':'most excellent key',
'networkName':'testnet',
'purpose':'payment',
'type':'bitcoin',
'value':'026cc579570dd554105c0bab90f4f0aa711693d6d12c4a6bfb517f13ffa8abe66d'}],


'summary':'Bill\'s best friend',
'v':'0.3',
'websites':[
{
'url':'wyldstallyns.com'}]},



{
_t:'tradle.Identity',
'contact':[
{
'identifier':'somebodyelse',
'type':'skype'}],


'city':'Austen',
'country':'USA',
'postalCode':'09990',
'region':'TX',
'street':'666 Columbia Ave',
'firstName':'Timo',
'lastName':'Heinke',
'owner':{
id:'tradle.Identity_b25da36eaf4b01b37fc2154cb1103eb5324a52fa',
title:'Jane Choi'},

'photos':[
{
'tags':'headshot',
'url':'http://www.bitcoin2013.com/uploads/1/4/9/4/14946598/2010100_orig.jpg'}],


'pubkeys':[
{
'_sig':'304302200be2aeec26edbbf6d516441de0fedebacf0252f7a3d4d2993f4f8c76ec949cd8021f4eadda2cb931d233925c1a922a6de5cf41befafe0567b718efba4e3942f693',
'curve':'ed25519',
'fingerprint':'c40c3041cbbdcbce7540b51fe49795bf0932965f5c25158fc09c8ab829782a7f',
'purpose':'update',
'type':'ec',
'value':'0352261ed98ccf4674f216307250171e10ad4bfe80e2f976c092dea3d653a13be8'},

{
'_sig':'304402200774032810f6fc1cbac43805b787c83ba5f8967e1305d32301651c7d3d02f12e0220043c1fa262bfc10c48d6904094f6667d4ddc638cdea89d6fd4c7c9f61d5695cc',
'curve':'ed25519',
'fingerprint':'d7678020b9a82d75c81605856d5d6cc1c8a8563cf94c45e644724635a45df134',
'purpose':'sign',
'type':'ec',
'value':'021c315fd64987714c1c7a0396450737ad17ec6206ec3009a65e62e6d49948c0c6'},

{
'_sig':'304402200094a5dffab7885457b90038245ba09f62b506c1e3425eaa73e0f859f3c911dd02200ac8e4139f314ca2e9ee8fed9054c3a9d77aceda50a5d07b01570e5ece2dbc50',
'curve':'ed25519',
'fingerprint':'2a9fcfdd47395d229bcc4aa0b9b8a5e065464d2b18db052a4f0be5f6f5cbaf60',
'purpose':'sign',
'type':'ec',
'value':'0370a79ba2fd9b943e750103f67d458e790b15e5f9140fe6cffd782df29ed9cfe2'},

{
'_sig':'304402200bb598494e060caf1ad4711c85cc09fffe7169350327abf538a4281fb8217ce5022000afd4d9bc4df34e8edec3296bd55b812407fe5cff64dbbaa86fd9e77b73a490',
'curve':'ed25519',
'fingerprint':'24a021520135f0f077cf725f87d2a95b2abcf9b5e9accf3d4eb671546d964be8',
'purpose':'encrypt',
'type':'ec',
'value':'0276168d37e2a1d4be57038a09c41140b6271399bd4cb5bf0942ba0f8a4236756f'},

{
'_sig':'3044022016166dd4715b5e727c244e8d9af9470c7e6f122082bddb5b01f6228b21bb52e6022066cd7f09f90f517013d2fdf70eccbc4a53dceb8fae46fa79f9cfe87a062ef50d',
'fingerprint':'19HWX1DvxHWgRVfbLWRCn36jHmgsonmTEU',
'label':'most triumphant key',
'networkName':'bitcoin',
'purpose':'payment',
'type':'bitcoin',
'value':'034e0458925058ca2c02a9a97dddc209488762343c96786fb25ff576ce7f6ab486'},

{
'_sig':'304402201b3d649dc269e8d795f38622bf03d0e020190816023bcd3c5e3d5d033c8f4e5602202f6c4ecfbcdf4661840ffad36146d892bcad144a210320a9de44fadebb1d8cf1',
'fingerprint':'miGmaRV8Fcs993NsSZVUpEqU8FEN7r2b1L',
'label':'most excellent key',
'networkName':'testnet',
'purpose':'payment',
'type':'bitcoin',
'value':'026cc579570dd554105c0bab90f4f0aa711693d6d12c4a6bfb517f13ffa8abe66d'}],


'summary':'Bill\'s best friend',
'v':'0.3',
'websites':[
{
'url':'wyldstallyns.com'}]},



{
_t:'tradle.Identity',
'contact':[
{
'identifier':'somebodyelse',
'type':'skype'}],


'city':'San Dimas',
'country':'USA',
'postalCode':'666',
'region':'Paris',
'street':'123 Rue de Marseille',
'firstName':'Helene',
'lastName':'Lumiere',
'owner':{
id:'tradle.Identity_b25da36eaf4b01b37fc2154cb1103eb5324a52fa',
title:'Jane Choi'},

'photos':[
{
'tags':'headshot',
'url':'https://scontent-lga1-1.xx.fbcdn.net/hphotos-xfa1/v/t1.0-9/10665799_10204022199610484_1148728443853769394_n.jpg?oh=55ff42033219d12c596e6caa6e637f76&oe=56244BCF'}],


'pubkeys':[
{
'_sig':'304302200be2aeec26edbbf6d516441de0fedebacf0252f7a3d4d2993f4f8c76ec949cd8021f4eadda2cb931d233925c1a922a6de5cf41befafe0567b718efba4e3942f693',
'curve':'ed25519',
'fingerprint':'c40c3041cbbdcbce7540b51fe49795bf0932965f5c25158fc09c8ab829782a7f',
'purpose':'update',
'type':'ec',
'value':'0352261ed98ccf4674f216307250171e10ad4bfe80e2f976c092dea3d653a13be8'},

{
'_sig':'304402200774032810f6fc1cbac43805b787c83ba5f8967e1305d32301651c7d3d02f12e0220043c1fa262bfc10c48d6904094f6667d4ddc638cdea89d6fd4c7c9f61d5695cc',
'curve':'ed25519',
'fingerprint':'d7678020b9a82d75c81605856d5d6cc1c8a8563cf94c45e644724635a45df134',
'purpose':'sign',
'type':'ec',
'value':'021c315fd64987714c1c7a0396450737ad17ec6206ec3009a65e62e6d49948c0c6'},

{
'_sig':'304402200094a5dffab7885457b90038245ba09f62b506c1e3425eaa73e0f859f3c911dd02200ac8e4139f314ca2e9ee8fed9054c3a9d77aceda50a5d07b01570e5ece2dbc50',
'curve':'ed25519',
'fingerprint':'2a9fcfdd47395d229bcc4aa0b9b8a5e065464d2b18db052a4f0be5f6f5cbaf60',
'purpose':'sign',
'type':'ec',
'value':'0370a79ba2fd9b943e750103f67d458e790b15e5f9140fe6cffd782df29ed9cfe2'},

{
'_sig':'304402200bb598494e060caf1ad4711c85cc09fffe7169350327abf538a4281fb8217ce5022000afd4d9bc4df34e8edec3296bd55b812407fe5cff64dbbaa86fd9e77b73a490',
'curve':'ed25519',
'fingerprint':'24a021520135f0f077cf725f87d2a95b2abcf9b5e9accf3d4eb671546d964be8',
'purpose':'encrypt',
'type':'ec',
'value':'0276168d37e2a1d4be57038a09c41140b6271399bd4cb5bf0942ba0f8a4236756f'},

{
'_sig':'3044022016166dd4715b5e727c244e8d9af9470c7e6f122082bddb5b01f6228b21bb52e6022066cd7f09f90f517013d2fdf70eccbc4a53dceb8fae46fa79f9cfe87a062ef50d',
'fingerprint':'19HWX1DvxHWgRVfbLWRCn36jHmgsonmTEU',
'label':'most triumphant key',
'networkName':'bitcoin',
'purpose':'payment',
'type':'bitcoin',
'value':'034e0458925058ca2c02a9a97dddc209488762343c96786fb25ff576ce7f6ab486'},

{
'_sig':'304402201b3d649dc269e8d795f38622bf03d0e020190816023bcd3c5e3d5d033c8f4e5602202f6c4ecfbcdf4661840ffad36146d892bcad144a210320a9de44fadebb1d8cf1',
'fingerprint':'miGmaRV8Fcs993NsSZVUpEqU8FEN7r2b1L',
'label':'most excellent key',
'networkName':'testnet',
'purpose':'payment',
'type':'bitcoin',
'value':'026cc579570dd554105c0bab90f4f0aa711693d6d12c4a6bfb517f13ffa8abe66d'}],


'v':'0.3',
_r:'38980944449570d2783d7c8af5db8ca9463391f3',
'websites':[
{
'url':'wyldstallyns.com'}]},



{
_t:'tradle.Identity',
'contact':[
{
'identifier':'somebodyelse',
'type':'skype'}],


'city':'New York',
'country':'USA',
'postalCode':'666',
'region':'NY',
'street':'123 Wyld Stallyns Dr',
'firstName':'Kate',
'lastName':'Hao',
'owner':{
id:'tradle.Identity_b25da36eaf4b01b37fc2154cb1103eb5324a52fa',
title:'Jane Choi'},

'photos':[
{
'tags':'headshot',
'url':'https://scontent-lga1-1.xx.fbcdn.net/hphotos-xfp1/t31.0-8/10604688_10204178311753190_6807024764791621704_o.jpg'}],


'pubkeys':[
{
'_sig':'304302200be2aeec26edbbf6d516441de0fedebacf0252f7a3d4d2993f4f8c76ec949cd8021f4eadda2cb931d233925c1a922a6de5cf41befafe0567b718efba4e3942f693',
'curve':'ed25519',
'fingerprint':'c40c3041cbbdcbce7540b51fe49795bf0932965f5c25158fc09c8ab829782a7f',
'purpose':'update',
'type':'ec',
'value':'0352261ed98ccf4674f216307250171e10ad4bfe80e2f976c092dea3d653a13be8'},

{
'_sig':'304402200774032810f6fc1cbac43805b787c83ba5f8967e1305d32301651c7d3d02f12e0220043c1fa262bfc10c48d6904094f6667d4ddc638cdea89d6fd4c7c9f61d5695cc',
'curve':'ed25519',
'fingerprint':'d7678020b9a82d75c81605856d5d6cc1c8a8563cf94c45e644724635a45df134',
'purpose':'sign',
'type':'ec',
'value':'021c315fd64987714c1c7a0396450737ad17ec6206ec3009a65e62e6d49948c0c6'},

{
'_sig':'304402200094a5dffab7885457b90038245ba09f62b506c1e3425eaa73e0f859f3c911dd02200ac8e4139f314ca2e9ee8fed9054c3a9d77aceda50a5d07b01570e5ece2dbc50',
'curve':'ed25519',
'fingerprint':'2a9fcfdd47395d229bcc4aa0b9b8a5e065464d2b18db052a4f0be5f6f5cbaf60',
'purpose':'sign',
'type':'ec',
'value':'0370a79ba2fd9b943e750103f67d458e790b15e5f9140fe6cffd782df29ed9cfe2'},

{
'_sig':'304402200bb598494e060caf1ad4711c85cc09fffe7169350327abf538a4281fb8217ce5022000afd4d9bc4df34e8edec3296bd55b812407fe5cff64dbbaa86fd9e77b73a490',
'curve':'ed25519',
'fingerprint':'24a021520135f0f077cf725f87d2a95b2abcf9b5e9accf3d4eb671546d964be8',
'purpose':'encrypt',
'type':'ec',
'value':'0276168d37e2a1d4be57038a09c41140b6271399bd4cb5bf0942ba0f8a4236756f'},

{
'_sig':'3044022016166dd4715b5e727c244e8d9af9470c7e6f122082bddb5b01f6228b21bb52e6022066cd7f09f90f517013d2fdf70eccbc4a53dceb8fae46fa79f9cfe87a062ef50d',
'fingerprint':'19HWX1DvxHWgRVfbLWRCn36jHmgsonmTEU',
'label':'most triumphant key',
'networkName':'bitcoin',
'purpose':'payment',
'type':'bitcoin',
'value':'034e0458925058ca2c02a9a97dddc209488762343c96786fb25ff576ce7f6ab486'},

{
'_sig':'304402201b3d649dc269e8d795f38622bf03d0e020190816023bcd3c5e3d5d033c8f4e5602202f6c4ecfbcdf4661840ffad36146d892bcad144a210320a9de44fadebb1d8cf1',
'fingerprint':'miGmaRV8Fcs993NsSZVUpEqU8FEN7r2b1L',
'label':'most excellent key',
'networkName':'testnet',
'purpose':'payment',
'type':'bitcoin',
'value':'026cc579570dd554105c0bab90f4f0aa711693d6d12c4a6bfb517f13ffa8abe66d'}],


'summary':'Bill\'s best friend',
'v':'0.3',
'websites':[
{
'url':'wyldstallyns.com'}]},



{
_t:'tradle.Identity',
'contact':[
{
'identifier':'somebodyelse',
'type':'skype'}],


'city':'San Dimas',
'country':'USA',
'postalCode':'666',
'region':'California',
'street':'666 Wyld Stallyns Dr',
'firstName':'Jake',
'lastName':'Peralta',
'owner':{
id:'tradle.Identity_b25da36eaf4b01b37fc2154cb1103eb5324a52fa',
title:'Jane Choi'},

'photos':[
{
'tags':'headshot',
'url':'https://scontent-lga1-1.xx.fbcdn.net/hphotos-xta1/t31.0-8/10373153_10100282480857898_4039399677094768799_o.jpg'}],


'pubkeys':[
{
'_sig':'304302200be2aeec26edbbf6d516441de0fedebacf0252f7a3d4d2993f4f8c76ec949cd8021f4eadda2cb931d233925c1a922a6de5cf41befafe0567b718efba4e3942f693',
'curve':'ed25519',
'fingerprint':'c40c3041cbbdcbce7540b51fe49795bf0932965f5c25158fc09c8ab829782a7f',
'purpose':'update',
'type':'ec',
'value':'0352261ed98ccf4674f216307250171e10ad4bfe80e2f976c092dea3d653a13be8'},

{
'_sig':'304402200774032810f6fc1cbac43805b787c83ba5f8967e1305d32301651c7d3d02f12e0220043c1fa262bfc10c48d6904094f6667d4ddc638cdea89d6fd4c7c9f61d5695cc',
'curve':'ed25519',
'fingerprint':'d7678020b9a82d75c81605856d5d6cc1c8a8563cf94c45e644724635a45df134',
'purpose':'sign',
'type':'ec',
'value':'021c315fd64987714c1c7a0396450737ad17ec6206ec3009a65e62e6d49948c0c6'},

{
'_sig':'304402200094a5dffab7885457b90038245ba09f62b506c1e3425eaa73e0f859f3c911dd02200ac8e4139f314ca2e9ee8fed9054c3a9d77aceda50a5d07b01570e5ece2dbc50',
'curve':'ed25519',
'fingerprint':'2a9fcfdd47395d229bcc4aa0b9b8a5e065464d2b18db052a4f0be5f6f5cbaf60',
'purpose':'sign',
'type':'ec',
'value':'0370a79ba2fd9b943e750103f67d458e790b15e5f9140fe6cffd782df29ed9cfe2'},

{
'_sig':'304402200bb598494e060caf1ad4711c85cc09fffe7169350327abf538a4281fb8217ce5022000afd4d9bc4df34e8edec3296bd55b812407fe5cff64dbbaa86fd9e77b73a490',
'curve':'ed25519',
'fingerprint':'24a021520135f0f077cf725f87d2a95b2abcf9b5e9accf3d4eb671546d964be8',
'purpose':'encrypt',
'type':'ec',
'value':'0276168d37e2a1d4be57038a09c41140b6271399bd4cb5bf0942ba0f8a4236756f'},

{
'_sig':'3044022016166dd4715b5e727c244e8d9af9470c7e6f122082bddb5b01f6228b21bb52e6022066cd7f09f90f517013d2fdf70eccbc4a53dceb8fae46fa79f9cfe87a062ef50d',
'fingerprint':'19HWX1DvxHWgRVfbLWRCn36jHmgsonmTEU',
'label':'most triumphant key',
'networkName':'bitcoin',
'purpose':'payment',
'type':'bitcoin',
'value':'034e0458925058ca2c02a9a97dddc209488762343c96786fb25ff576ce7f6ab486'},

{
'_sig':'304402201b3d649dc269e8d795f38622bf03d0e020190816023bcd3c5e3d5d033c8f4e5602202f6c4ecfbcdf4661840ffad36146d892bcad144a210320a9de44fadebb1d8cf1',
'fingerprint':'miGmaRV8Fcs993NsSZVUpEqU8FEN7r2b1L',
'label':'most excellent key',
'networkName':'testnet',
'purpose':'payment',
'type':'bitcoin',
'value':'026cc579570dd554105c0bab90f4f0aa711693d6d12c4a6bfb517f13ffa8abe66d'}],


'summary':'Bill\'s best friend',
'v':'0.3',
'websites':[
{
'url':'wyldstallyns.com'}]},



{
_t:'tradle.Identity',
'contact':[
{
'identifier':'somebodyelse',
'type':'skype'}],


'city':'New York',
'country':'USA',
'postalCode':'10001',
'region':'NY',
'street':'666 Wyld Stallyns Dr',
'firstName':'Gene',
'lastName':'Wilber',
'owner':{
id:'tradle.Identity_b25da36eaf4b01b37fc2154cb1103eb5324a52fa',
title:'Jane Choi'},

'photos':[
{
'tags':'headshot',
'url':'https://scontent-lga1-1.xx.fbcdn.net/hphotos-xfa1/t31.0-8/10714435_10204194198870358_6364485006481495908_o.jpg'}],


'pubkeys':[
{
'_sig':'304302200be2aeec26edbbf6d516441de0fedebacf0252f7a3d4d2993f4f8c76ec949cd8021f4eadda2cb931d233925c1a922a6de5cf41befafe0567b718efba4e3942f693',
'curve':'ed25519',
'fingerprint':'c40c3041cbbdcbce7540b51fe49795bf0932965f5c25158fc09c8ab829782a7f',
'purpose':'update',
'type':'ec',
'value':'0352261ed98ccf4674f216307250171e10ad4bfe80e2f976c092dea3d653a13be8'},

{
'_sig':'304402200774032810f6fc1cbac43805b787c83ba5f8967e1305d32301651c7d3d02f12e0220043c1fa262bfc10c48d6904094f6667d4ddc638cdea89d6fd4c7c9f61d5695cc',
'curve':'ed25519',
'fingerprint':'d7678020b9a82d75c81605856d5d6cc1c8a8563cf94c45e644724635a45df134',
'purpose':'sign',
'type':'ec',
'value':'021c315fd64987714c1c7a0396450737ad17ec6206ec3009a65e62e6d49948c0c6'},

{
'_sig':'304402200094a5dffab7885457b90038245ba09f62b506c1e3425eaa73e0f859f3c911dd02200ac8e4139f314ca2e9ee8fed9054c3a9d77aceda50a5d07b01570e5ece2dbc50',
'curve':'ed25519',
'fingerprint':'2a9fcfdd47395d229bcc4aa0b9b8a5e065464d2b18db052a4f0be5f6f5cbaf60',
'purpose':'sign',
'type':'ec',
'value':'0370a79ba2fd9b943e750103f67d458e790b15e5f9140fe6cffd782df29ed9cfe2'},

{
'_sig':'304402200bb598494e060caf1ad4711c85cc09fffe7169350327abf538a4281fb8217ce5022000afd4d9bc4df34e8edec3296bd55b812407fe5cff64dbbaa86fd9e77b73a490',
'curve':'ed25519',
'fingerprint':'24a021520135f0f077cf725f87d2a95b2abcf9b5e9accf3d4eb671546d964be8',
'purpose':'encrypt',
'type':'ec',
'value':'0276168d37e2a1d4be57038a09c41140b6271399bd4cb5bf0942ba0f8a4236756f'},

{
'_sig':'3044022016166dd4715b5e727c244e8d9af9470c7e6f122082bddb5b01f6228b21bb52e6022066cd7f09f90f517013d2fdf70eccbc4a53dceb8fae46fa79f9cfe87a062ef50d',
'fingerprint':'19HWX1DvxHWgRVfbLWRCn36jHmgsonmTEU',
'label':'most triumphant key',
'networkName':'bitcoin',
'purpose':'payment',
'type':'bitcoin',
'value':'034e0458925058ca2c02a9a97dddc209488762343c96786fb25ff576ce7f6ab486'},

{
'_sig':'304402201b3d649dc269e8d795f38622bf03d0e020190816023bcd3c5e3d5d033c8f4e5602202f6c4ecfbcdf4661840ffad36146d892bcad144a210320a9de44fadebb1d8cf1',
'fingerprint':'miGmaRV8Fcs993NsSZVUpEqU8FEN7r2b1L',
'label':'most excellent key',
'networkName':'testnet',
'purpose':'payment',
'type':'bitcoin',
'value':'026cc579570dd554105c0bab90f4f0aa711693d6d12c4a6bfb517f13ffa8abe66d'}],


'summary':'Bill\'s best friend',
'v':'0.3',
'websites':[
{
'url':'wyldstallyns.com'}]},




{
_t:'tradle.Organization',
'name':'Morgan Stanley',
'contacts':[
{
'id':'tradle.Identity_b25da36eaf4b01b37fc2154cb1103eb5324a52fa',
'title':'Jane Choi'}],


'photos':[
{
'url':'http://www.gabelliconnect.com/wp-content/uploads/2012/10/308112_thumb.jpg'}]},



{
_t:'tradle.Organization',
'name':'JP Morgan',
'contacts':[
{
'id':'tradle.Identity_31eb0b894cad3601adc76713d55a11c88e48b4a2',
'title':'Jane Blair'}],


'photos':[
{
'url':'http://hypeorlando.s3.amazonaws.com/sites/162/2014/10/JP-Morgan-Chase-Logo-600x350.jpg'}]},




{
_t:'tradle.Organization',
'name':'Tilton',
'photos':[
{
'url':'http://www.archivisionmodels.com/Architectural-Models/hotel/images/making-scale-models.jpg'}]},



{
_t:'tradle.Offer',
dealRef:12345,
title:'Amazing deal for BENTO & BUBBLES',
shortTitle:'Amazing deal',
conditions:'Available in all Chino\'s restaurants',
description:'clearly describe the product/service. Emphasize high value low price contrast. State quality/quantity of the product/service (and why the customer needs it). When in doubt, use "You pay x instead of XX"',
summary:'piuxv oiupoi poshusofgiup upi uopiuroup pi upoiuo',
dealPrice:{
value:100,
currency:'USD'},

dealValue:{
value:120,
currency:'USD'}},












































































{
_t:'tradle.Community',
_r:'tradle12397d8f7s989843589798s9dg7f987h987',
title:'Tradle',
description:'p2p network with peer discovery over bittorrent DHT, OTR over rUDP + NAT traversal for peer comms, and optional externalization of messages to blockchain + DHT'},

{
_t:'tradle.Community',
_r:'datt2937598r98d7h98fg7h8979fd9dg80d9f0fgh',
title:'DATT',
description:'Decentralize all things'},

{
_t:'tradle.Post',
_r:'tradle129494tt9ehdgo346c6vu67bvdofuoiwere',
relatedTo:{
id:'tradle.Community_tradle12397d8f7s989843589798s9dg7f987h987',
title:'Tradle'},

url:'http://github.com/tradle/tim',
title:'Tradle\'s Trust in Motion (TiM) on github'},

{
_t:'tradle.Post',
_r:'datt0129494tt9ehdgo346c6vu67bvdofuoiwere',
relatedTo:{
id:'tradle.Community_datt2937598r98d7h98fg7h8979fd9dg80d9f0fgh',
title:'DATT'},

url:'https://github.com/dattnetwork',
title:'DATT on github'},

{
_t:'tradle.PostComment',
_r:'tradle98798dfg98568579fgh8fg7h98459dhkjk',
relatedTo:{
id:'tradle.Community_datt2937598r98d7h98fg7h8979fd9dg80d9f0fgh',
title:'DATT'},

message:'comment',
post:'tradle.Post_datt0129494tt9ehdgo346c6vu67bvdofuoiwere'},

{
_t:'tradle.PostComment',
_r:'tradle98798dfg98568579frtygh8fg7h98459dhkjk',
relatedTo:{
id:'tradle.Community_datt2937598r98d7h98fg7h8979fd9dg80d9f0fgh',
title:'DATT'},

message:'comment2',
post:'tradle.Post_datt0129494tt9ehdgo346c6vu67bvdofuoiwere'},

{
_t:'tradle.PostComment',
_r:'tradle98798dfg9856857ert9fgh8fg7h98459dhkjk',
relatedTo:{
id:'tradle.Community_datt2937598r98d7h98fg7h8979fd9dg80d9f0fgh',
title:'DATT'},

message:'comment3',
post:'tradle.Post_datt0129494tt9ehdgo346c6vu67bvdofuoiwere'}];






var myId;
var data={
getModels:function(){
return models;},

getResources:function(){
return identities;},

setMyId:function(){
this.myId = myId;},

getMyId:function(){
return myId;}};


module.exports = data;
});
__d('Identity/data/models.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var voc=[{
'id':'tradle.Identity',
'type':'tradle.Model',
'title':'Identity',
sort:'lastMessageTime',
plural:'Identities',
'properties':{
_t:{
'type':'string',
'readOnly':true},

'contactInfo':{
'type':'array',
'items':{
'type':'object',
'properties':{
'contactMethod':{
'type':'string',
'displayAs':['type',' : ','identifier'],
'readOnly':true,
'skipLabel':true},

'identifier':{
'type':'string',
'description':'Phone number, IM name, skype id, etc.'},

'type':{
'type':'string',
'description':'Like "phone", "IM", "skype", "email", etc.'}}},



'viewCols':['contactMethod'],
'required':['identifier','type']},

'city':{
'type':'string'},

'country':{
'type':'string'},

'postalCode':{
'type':'number'},

'region':{
'type':'string'},

'street':{
'type':'string'},

'formattedAddress':{
transient:true,
'type':'string',
'displayAs':['street',',','city',',','region','postalCode'],
'title':'Address',
'readOnly':true},

'firstName':{
'type':'string'},

'lastName':{
'type':'string',
description:'Choose a fake name or a real name. It all depends on how you want people to know you. Choose a different Identity for work and social.'},

'formatted':{
transient:true,
'type':'string',
'displayAs':['firstName','lastName'],
'readOnly':true,
'displayName':true},

'middleName':{
'type':'string'},

'organization':{
'type':'object',
'ref':'tradle.Organization'},

verifiedByMe:{
type:'array',
items:{
readOnly:true,
ref:'tradle.Verification',
backlink:'to'}},


myVerifications:{
type:'array',
items:{
readOnly:true,
ref:'tradle.Verification',
backlink:'from'}},


'photos':{
'type':'array',
'items':{
'type':'object',
'properties':{
'tags':{
'type':'string',
'title':'Tags via comma'},

'url':{
'type':'string',
readOnly:true}}},



'required':['url']},

'pubkeys':{
'type':'array',
'readOnly':true,
'items':{
'type':'object',
'properties':{
'_sig':{
'type':'string'},

'curve':{
'type':'string'},

'fingerprint':{
'type':'string'},

'label':{
'type':'string'},

'networkName':{
'type':'string'},

'purpose':{
'type':'string'},

'type':{
'type':'string'},

'value':{
'type':'string'}},


'required':['_sig','fingerprint','value']}},


'summary':{
'type':'string'},

lastMessage:{
type:'string',
style:{color:'#999999',fontSize:14},
transient:true},

lastMessageTime:{
type:'date',
transient:true},

'websites':{
'type':'array',
'items':{
'type':'object',
'properties':{
'url':{
'type':'string'}}},



'required':['url']}},


'required':[




'firstName'],





'gridCols':[
'formatted',
'lastMessage',
'lastMessageTime',
'organization'],

'viewCols':[
'formattedAddress',
'organization',
'myVerifications',
'contactInfo',
'websites',
'pubkeys',
'photos'],

'editCols':[
'firstName',
'lastName',
'street',
'city',
'region',
'postalCode',
'country',
'pubkeys',
'organization']},


{
id:'tradle.MyIdentities',
type:'object',
title:'My Identities',
properties:{
'_t':{
type:'string',
readOnly:true},

currentIdentity:{
type:'object',
ref:'tradle.Identity',
readOnly:true},

allIdentities:{
type:'array',
items:{
type:'object',
ref:'tradle.Identity'}}},



required:['id']},

{
'id':'tradle.Message',
'type':'tradle.Model',
'title':'Message',
'isInterface':true,
'properties':{
'_t':{
'type':'string',
'readOnly':true},

'message':{
'type':'string',
'displayName':true},

'from':{
'type':'object',
'readOnly':true,
'ref':'tradle.Identity'},

'to':{
'type':'object',
'ref':'tradle.Identity',
'displayName':true},

'time':{
'type':'date',
'readOnly':true,
'displayName':true},

'photos':{
'type':'array',
'items':{
'type':'object',
'properties':{
'tags':{
'type':'string',
'skipLabel':true},

'url':{
'type':'string',
'readOnly':true}}},



'required':['title','url']},

relatedTo:{
type:'object',
ref:'tradle.Message'}},


'required':[
'to','from','message'],

'viewCols':[
'message']},


{
id:'tradle.NewMessageModel',
type:'object',
title:'New message model',
properties:{
'_t':{
'type':'string',
'readOnly':true},

'url':{
'type':'string',
'displayName':true}},


required:['url']},

{
'id':'tradle.SimpleMessage',
'type':'tradle.Model',
'title':'Simple Message',
'autoCreate':true,
'interfaces':['tradle.Message'],
'properties':{
'_t':{
'type':'string',
'readOnly':true},

'message':{
'type':'string',
'displayName':true},

'from':{
'type':'object',
'readOnly':true,
'ref':'tradle.Identity'},

'to':{
'type':'object',
'ref':'tradle.Identity',
'displayName':true,
'readOnly':true},

'photos':{
'type':'array',
'items':{
'type':'object',
'properties':{
'tags':{
'type':'string',
'skipLabel':true},

'url':{
'type':'string',
'readOnly':true}}},



'required':['title','url']},

'time':{
'type':'date',
'readOnly':true}},


'required':[
'to','message','from'],

'viewCols':[
'message','time']},



{
'id':'tradle.VerificationRequest',
'type':'tradle.Model',
'title':'Verification Request',
'interfaces':['tradle.Message'],
'style':{'backgroundColor':'#F4F5E6'},
'properties':{
'_t':{
'type':'string',
'readOnly':true},

'message':{
'type':'string',
'title':'Description',
'displayName':true},

'from':{
'type':'object',
'readOnly':true,
'ref':'tradle.Identity'},

'to':{
'type':'object',
'ref':'tradle.Identity',
'displayName':true,
'readOnly':true},

'blockchainUrl':{
'type':'string',
'readOnly':true},

'transactionHash':{
'readOnly':true,
'type':'string'},

'time':{
'type':'date',
'readOnly':true},

'photos':{
'type':'array',
'items':{
'type':'object',
'properties':{
'tags':{
'type':'string',
'skipLabel':true},

'url':{
'type':'string',
'readOnly':true}}},



'required':['title','url']},

'verifications':{
'type':'array',
'readOnly':true,
'items':{
ref:'tradle.Verification',
backlink:'document'}}},



'required':[
'to','message','from'],

'gridCols':[
'message','time'],

'viewCols':[
'message','time','photos','verifications']},


{
'id':'tradle.SkillVerification',
'type':'tradle.Model',
'title':'Skill Verification',
'interfaces':['tradle.Message'],
'style':{'backgroundColor':'#FAF9E1'},
'properties':{
'_t':{
'type':'string',
'readOnly':true},

'message':{
'type':'string',
'title':'Description',
'displayName':true},

'from':{
'type':'object',
'readOnly':true,
'ref':'tradle.Identity'},

'to':{
'type':'object',
'ref':'tradle.Identity',
'displayName':true,
'readOnly':true},

'blockchainUrl':{
'type':'string',
'readOnly':true},

'transactionHash':{
'readOnly':true,
'type':'string'},

'time':{
'type':'date',
'readOnly':true},

'photos':{
'type':'array',
'items':{
'type':'object',
'properties':{
'tags':{
'type':'string',
'skipLabel':true},

'url':{
'type':'string',
'readOnly':true}}},



'required':['title','url']},

'verifications':{
'type':'array',
'readOnly':true,
'items':{
'backlink':'document',
'ref':'tradle.Verification'}}},



'required':[
'to','message','from'],

'gridCols':[
'message','time'],

'viewCols':[
'message','time','photos','verifications']},


{
'id':'tradle.SalaryVerification',
'type':'tradle.Model',
'title':'Salary Verification',
'interfaces':['tradle.Message'],
'style':{'backgroundColor':'#E1FAF9'},
'properties':{
'_t':{
'type':'string',
'readOnly':true},

'message':{
'type':'string',
'title':'Description',
'displayName':true},

'from':{
'type':'object',
'readOnly':true,
'ref':'tradle.Identity'},

'to':{
'type':'object',
'ref':'tradle.Identity',
'displayName':true,
'readOnly':true},

'blockchainUrl':{
'type':'string',
'readOnly':true},

'transactionHash':{
'readOnly':true,
'type':'string'},

'time':{
'type':'date',
'readOnly':true},

'photos':{
'type':'array',
'items':{
'type':'object',
'properties':{
'tags':{
'type':'string',
'skipLabel':true},

'url':{
'type':'string',
'readOnly':true}}},



'required':['title','url']},

'verifications':{
'type':'array',
'readOnly':true,
'items':{
'backlink':'document',
'ref':'tradle.Verification'},

'required':['contact']}},


'required':[
'to','message','from'],

'gridCols':[
'message','time'],

'viewCols':[
'message','time','photos','verifications']},


{
'id':'tradle.DocumentVerification',
'type':'tradle.Model',
'title':'Doc Verification',
'interfaces':['tradle.Message'],
'style':{'backgroundColor':'#EBE1FA'},
'properties':{
'_t':{
'type':'string',
'readOnly':true},

'message':{
'type':'string',
'displayName':true,
'title':'Description'},

'from':{
'type':'object',
'readOnly':true,
'ref':'tradle.Identity'},

'to':{
'type':'object',
'ref':'tradle.Identity',
'displayName':true,
'readOnly':true},

'blockchainUrl':{
'type':'string',
'readOnly':true},

'transactionHash':{
'readOnly':true,
'type':'string'},

'time':{
'type':'date',
'readOnly':true},

'photos':{
'type':'array',
'items':{
'type':'object',
'properties':{
'tags':{
'type':'string',
'skipLabel':true},

'url':{
'type':'string',
'readOnly':true}}},



'required':['title','url']},

'verifications':{
'type':'array',
'readOnly':true,
'items':{
'backlink':'document',
'ref':'tradle.Verification'}}},



'required':[
'to','message','from','photos'],

'gridCols':[
'message','time'],

'viewCols':[
'message','time','photos','blockchainUrl','verifications']},


{
'id':'tradle.AddressVerification',
'type':'tradle.Model',
'title':'Verify Address',
'interfaces':['tradle.Message'],
'style':{'backgroundColor':'#FAEDE1'},
'properties':{
'_t':{
'type':'string',
'readOnly':true},

'message':{
'type':'string',
'displayName':true,
'title':'Description'},

'blockchainUrl':{
'type':'string',
'readOnly':true},

'transactionHash':{
'readOnly':true,
'type':'string'},

'time':{
'type':'date',
'readOnly':true},

'street':{
'type':'string'},

'city':{
'type':'string'},

'region':{
'type':'string'},

'postalCode':{
'type':'number'},

'country':{
'type':'string'},

'formattedAddress':{
'type':'string',
'displayAs':['street',',','city',',','region','postalCode'],
'title':'Address',
'skipLabel':true,
'readOnly':true},

'from':{
'type':'object',
'readOnly':true,
'ref':'tradle.Identity'},

'to':{
'type':'object',
'ref':'tradle.Identity',
'displayName':true,
'readOnly':true},

'photos':{
'type':'array',
'items':{
'type':'object',
'properties':{
'tags':{
'type':'string',
'skipLabel':true},

'url':{
'type':'string',
'readOnly':true}}},



'required':['title','url']},

'verifications':{
'type':'array',
'readOnly':true,
'items':{
'backlink':'document',
'ref':'tradle.VerificationOfAddress'}}},



'required':[
'to','from','message','street','city','region','postalCode'],

'gridCols':[
'message','formattedAddress','time'],

'viewCols':[
'message','formattedAddress','blockchainUrl','time','verifications']},


{
'id':'tradle.Verification',
'type':'tradle.Model',
'title':'Verification',
'interfaces':['tradle.Message'],
'style':{'backgroundColor':'#E7E6F5'},
'autoCreate':true,
'properties':{
'_t':{
'type':'string',
'readOnly':true},

'document':{
'type':'object',
'readOnly':true,
'ref':'tradle.Message',
'title':'Verifying document'},

'message':{
'type':'object',
'title':'Description',
'displayName':true},

'to':{
'type':'object',
'title':'Owner',
'ref':'tradle.Identity',
'displayName':true,
'readOnly':true},

'from':{
'type':'object',
'title':'Verifier',
'readOnly':true,
'ref':'tradle.Identity',
'displayName':true},

'blockchainUrl':{
'type':'string',
'readOnly':true},

'transactionHash':{
'type':'string',
'readOnly':true},

'time':{
type:'date',
skipLabel:true,
readOnly:true},

organization:{
type:'object',
ref:'tradle.Organization'}},


'required':[
'message','to','from','time'],

'viewCols':[
'message','time','organization'],

'gridCols':[
'message','time','from','document','organization']},


{
'id':'tradle.VerificationOfAddress',
'type':'tradle.Model',
'title':'Verification',
'subClassOf':'tradle.Verification',
'interfaces':['tradle.Message'],
'style':{'backgroundColor':'#E7E6F5'},
'autoCreate':true,
'properties':{
'_t':{
'type':'string',
'readOnly':true},

'document':{
'type':'object',
'readOnly':true,
'ref':'tradle.AddressVerification',
'title':'Verifying document'},

'message':{
'type':'object',
'title':'Description',
'displayName':true},

'ver1':{
type:'string'},

'ver2':{
type:'string'},

'ver3':{
type:'string'},

'ver4':{
type:'boolean'},

'to':{
'type':'object',
'title':'Owner',
'ref':'tradle.Identity',
'displayName':true,
'readOnly':true},

'from':{
'title':'Verifier',
'type':'object',
'readOnly':true,
'ref':'tradle.Identity',
'displayName':true},

'blockchainUrl':{
'type':'string',
'readOnly':true},

'transactionHash':{
'type':'string',
'readOnly':true},

'time':{
'type':'date',
skipLabel:true,
'readOnly':true},

organization:{
type:'object',
readOnly:true,
ref:'tradle.Organization'}},


'required':[
'ver1','ver2','ver3','to','from','time'],

'viewCols':[
'ver1','ver2','ver3','to','from','time','organization'],

'gridCols':[
'ver1','ver2','ver3','time','organization']},


{
'id':'tradle.Community',
'type':'tradle.Model',
'title':'Community',
'plural':'Communities',
icon:'person-stalker',
'properties':{
'_t':{
'type':'string',
'readOnly':true},

'title':{
'type':'string',
'displayName':true},

'description':{
'type':'string',
'title':'Description',
maxLength:2000},

'owner':{
'type':'object',
'readOnly':true,
'ref':'tradle.Identity'},







'blockchainUrl':{
'type':'string',
'readOnly':true},

'transactionHash':{
'readOnly':true,
'type':'string'},

'time':{
'type':'date',
'readOnly':true},

'posts':{
type:'array',
items:{
ref:'tradle.Post',
backlink:'relatedTo'}},


'photos':{
'type':'array',
'items':{
'type':'object',
'properties':{
'tags':{
'type':'string',
'skipLabel':true},

'url':{
'type':'string',
'readOnly':true}}},



'required':['url']}},


'required':[
'title','description'],

'gridCols':[
'title','description','owner','posts'],

'viewCols':[
'title','description','owner','photos']},



{
'id':'tradle.Post',
'type':'tradle.Model',
'title':'Post',
'icon':'social-buffer-outline',
'properties':{
'_t':{
'type':'string',
'readOnly':true},

'relatedTo':{
'type':'object',
'readOnly':true,
'ref':'tradle.Community'},

'title':{
'type':'string',
'displayName':true},






url:{
type:'string'},

'from':{
'type':'object',
'readOnly':true,
'ref':'tradle.Identity'},

'blockchainUrl':{
'type':'string',
'readOnly':true},

'transactionHash':{
'type':'string',
'readOnly':true},

'time':{
type:'date',
readOnly:true},

comments:{
'type':'array',
items:{
ref:'tradle.PostComment',
backlink:'post'}},


'photos':{
'type':'array',
'items':{
'type':'object',
'properties':{
'tags':{
'type':'string',
'skipLabel':true},

'url':{
'type':'string',
'readOnly':true}}},



'required':['url']}},


'required':[
'relatedTo','title','url'],

'viewCols':[
'title','url','from','time'],

'gridCols':[
'title','url','from','time','comments']},


{
'id':'tradle.PostComment',
'type':'tradle.Model',
'title':'Comment',
'icon':'chatboxes',
'properties':{
'_t':{
'type':'string',
'readOnly':true},

'message':{
'type':'string',
'displayName':true,
maxLength:2000},

'from':{
'type':'object',
'readOnly':true,
'ref':'tradle.Identity'},

'post':{
'type':'object',
'ref':'tradle.Post',
readOnly:true},


'time':{
'type':'date',
'readOnly':true,
'displayName':true},

'photos':{
'type':'array',
'items':{
'type':'object',
'properties':{
'tags':{
'type':'string',
'skipLabel':true},

'url':{
'type':'string',
'readOnly':true}}},



'required':['title','url']},

relatedTo:{
type:'object',
ref:'tradle.Community',
readOnly:true}},


'required':[
'message','post','relatedTo'],

'viewCols':[
'message','post','time','from'],

'gridCols':[
'message','time','from']},




{
id:'tradle.Offer',
title:'Offer',
type:'object',
sort:'dateSubmitted',
properties:{
'_t':{
type:'string',
readOnly:true},

dealRef:{
type:'number',
readOnly:true},

title:{
type:'string',
skipLabel:true,
description:'title is displayed on the offer'},

shortTitle:{
type:'string',
skipLabel:true,
displayName:true},

conditions:{
maxLength:2000,
type:'string',
description:'What is this offer for? Limits for personal use and gifts. Phone # for questions and booking. Operating hours. Any special conditions for offer use. Other discounts/bonuses provided by the organization. Omit dates already specified on offer.'},

description:{
type:'string',
maxLength:2000,
description:'clearly describe the product/service. Emphasize high value low price contrast. State quality/quantity of the product/service (and why the customer needs it). When in doubt, use "You pay x instead of XX"'},

summary:{
type:'string',
description:'Short description of the deal. IMPORTANT for aggregators - must include discount and amount saved.'},

submittedBy:{
type:'object',
ref:'tradle.Identity',
readOnly:true},

photos:{
type:'array',
items:{
type:'object',
properties:{
tags:{
type:'string',
title:'Tags via comma'},

url:{
type:'string',
readOnly:true}}},



required:['url']},

featured:{
type:'date'},

expires:{
type:'date'},

redeemBy:{
description:'must redeem by this date'},

dealValue:{
type:'object',
ref:'tradle.Money',
description:'$ price before discount'},

dealPrice:{
type:'object',
ref:'tradle.Money',
description:'$ price after discount'},

dealDiscount:{
type:'object',
ref:'tradle.Money',
readOnly:true,
formula:'dealValue - dealPrice',
description:'$ discount'},

allPurchases:{
type:'array',
readOnly:true,
items:{
type:'object',
ref:'tradle.OfferBuy'}},


offerBuysCount:{
type:'number',
readOnly:true},

discount:{
type:'number',
suffix:'%',
minimum:1,
maximum:99,
readOnly:true,
description:'% discount',
formula:'((dealValue - dealPrice)/dealValue) * 100'},

dealStatus:{
type:'string',
readOnly:true,
oneOf:[
'Deal is over',
'Deal is going',
'Not featured yet']},


availableLocations:{
type:'array',
readOnly:true,
ref:'tradle.RedemptionLocation'},

organization:{
type:'object',
ref:'tradle.Organization'},

canceled:{
type:'boolean',
skipOnCreate:true},

canceledBy:{
type:'object',
ref:'tradle.Identity',
readOnly:true},

dateCanceled:{
type:'date',
readOnly:true},

dateSubmitted:{
type:'date',
readOnly:true}},


required:['title','photos','shortTitle','description','dealValue','dealPrice','organization','expires'],
gridCols:['shortTitle','photos','dealPrice','discount','organization','expires','dealStatus'],
viewCols:['title','photos','organization','dealPrice','dealValue','dealDiscount','description','conditions','discount','featured','expires','offerBuysCount','dealStatus']},

{
id:'tradle.OfferBuy',
type:'object',
title:'Offer Buy',
properties:{
'_t':{
type:'string',
readOnly:true},

purchaseNumber:{
type:'number',
readOnly:'true'},

transactionId:{
type:'string',
readOnly:true},

customer:{
type:'object',
ref:'tradle.Identity',
readOnly:true},

offer:{
type:'object',
ref:'tradle.Offer',
readOnly:true},

organization:{
type:'object',
readOnly:true,
ref:'tradle.Organization'},

title:{
type:'string',
description:'title is displayed on the offer'},

shortTitle:{
type:'string'},

purchaseTime:{
type:'date',
readOnly:true},

email:{
type:'string'},

dealValue:{
type:'object',
ref:'tradle.Money',
description:'price before discount'},

dealPrice:{
type:'object',
ref:'tradle.Money'},

dealDiscount:{
type:'object',
ref:'tradle.Money',
readOnly:true},

redeemed:{
type:'boolean'},

location:{
type:'object',
ref:'tradle.RedemptionLocation'},

photos:{
type:'array',
readOnly:true,
items:{
type:'object',
properties:{
tags:{
type:'string',
title:'Tags via comma'},

url:{
type:'string',
readOnly:true}}},



required:['url']}},


required:['purchaseNumber','customer','offer']},

{
id:'tradle.RedemptionLocation',
type:'object',
properties:{
'_t':{
type:'string',
readOnly:true},

offer:{
type:'object',
ref:'tradle.Offer',
readOnly:true},

address:{
readOnly:true,
formula:'organization.address'},

organization:{
type:'object',
readOnly:true,
ref:'tradle.Organization'},

photos:{
type:'array',
formula:'organization.photos'}},


required:['offer','organization']},

{
id:'tradle.Organization',
type:'object',
title:'Organization',
properties:{
'_t':{
type:'string',
readOnly:true},

'name':{
'type':'string',
displayName:true},

email:{
type:'string'},

'city':{
'type':'string'},

'country':{
'type':'string'},

'postalCode':{
'type':'number'},

'region':{
'type':'string'},

'street':{
'type':'string'},

'formattedAddress':{
transient:true,
'type':'string',
'displayAs':['street',',','city',',','region','postalCode'],
'title':'Address',
'readOnly':true},

'contacts':{
'type':'array',
'items':{
'type':'object',
'ref':'tradle.Identity',
backlink:'organization'}},


photos:{
type:'array',
items:{
type:'object',
properties:{
tags:{
type:'string',
title:'Tags via comma'},

url:{
type:'string',
readOnly:true}}},



required:['url']},

verifications:{
type:'array',
items:{
type:'object',
ref:'tradle.Verification',
backlink:'organization'}},


verificationsCount:{
type:'number',
readOnly:true,
skipLabel:true}},















required:['name'],
viewCols:['name','photos','verifications'],
editCols:[
'name',
'street',
'city',
'region',
'country']},


{
id:'tradle.Money',
type:'object',
inlined:true,
properties:{
'_t':{
'type':'string',
'readOnly':true},

value:{
type:'number'},

currency:{
type:'string',
oneOf:[
{USD:'$'},
{GBR:'£'},
{CNY:'¥'}]}}}];







var models={
getModels:function(){
return voc;}};


module.exports = models;
});
__d('stable-sha1/browser.js',["rusha/rusha.js","stable-stringify/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var Rusha=require('rusha/rusha.js');
var stringify=require('stable-stringify/index.js');

var r=new Rusha();

module.exports = function(obj){
return r.digest(stringify(obj));};
});
__d('rusha/rusha.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (



























function(){
var util={
getDataType:function(data){
if(typeof data === 'string'){
return 'string';}

if(data instanceof Array){
return 'array';}

if(typeof global !== 'undefined' && global.Buffer && global.Buffer.isBuffer(data)){
return 'buffer';}

if(data instanceof ArrayBuffer){
return 'arraybuffer';}

if(data.buffer instanceof ArrayBuffer){
return 'view';}

if(data instanceof Blob){
return 'blob';}

throw new Error('Unsupported data type.');}};





function Rusha(chunkSize){
'use strict';

var self$2={fill:0};


var padlen=function(len){
for(len += 9;len % 64 > 0;len += 1);
return len;};

var padZeroes=function(bin,len){
for(var i=len >> 2;i < bin.length;i++) 
bin[i] = 0;};

var padData=function(bin,chunkLen,msgLen){
bin[chunkLen >> 2] |= 128 << 24 - (chunkLen % 4 << 3);
bin[((chunkLen >> 2) + 2 & ~15) + 14] = msgLen >> 29;
bin[((chunkLen >> 2) + 2 & ~15) + 15] = msgLen << 3;};



var convStr=function(H8,H32,start,len,off){
var str=this,i,om=off % 4,lm=len % 4,j=len - lm;
if(j > 0){
switch(om){
case 0:
H8[off + 3 | 0] = str.charCodeAt(start);
case 1:
H8[off + 2 | 0] = str.charCodeAt(start + 1);
case 2:
H8[off + 1 | 0] = str.charCodeAt(start + 2);
case 3:
H8[off | 0] = str.charCodeAt(start + 3);}}


for(i = om;i < j;i = i + 4 | 0) {
H32[off + i >> 2] = str.charCodeAt(start + i) << 24 | str.charCodeAt(start + i + 1) << 16 | str.charCodeAt(start + i + 2) << 8 | str.charCodeAt(start + i + 3);}

switch(lm){
case 3:
H8[off + j + 1 | 0] = str.charCodeAt(start + j + 2);
case 2:
H8[off + j + 2 | 0] = str.charCodeAt(start + j + 1);
case 1:
H8[off + j + 3 | 0] = str.charCodeAt(start + j);}};




var convBuf=function(H8,H32,start,len,off){
var buf=this,i,om=off % 4,lm=len % 4,j=len - lm;
if(j > 0){
switch(om){
case 0:
H8[off + 3 | 0] = buf[start];
case 1:
H8[off + 2 | 0] = buf[start + 1];
case 2:
H8[off + 1 | 0] = buf[start + 2];
case 3:
H8[off | 0] = buf[start + 3];}}


for(i = 4 - om;i < j;i = i += 4 | 0) {
H32[off + i >> 2] = buf[start + i] << 24 | buf[start + i + 1] << 16 | buf[start + i + 2] << 8 | buf[start + i + 3];}

switch(lm){
case 3:
H8[off + j + 1 | 0] = buf[start + j + 2];
case 2:
H8[off + j + 2 | 0] = buf[start + j + 1];
case 1:
H8[off + j + 3 | 0] = buf[start + j];}};


var convBlob=function(H8,H32,start,len,off){
var blob=this,i,om=off % 4,lm=len % 4,j=len - lm;
var buf=new Uint8Array(reader.readAsArrayBuffer(blob.slice(start,start + len)));
if(j > 0){
switch(om){
case 0:
H8[off + 3 | 0] = buf[0];
case 1:
H8[off + 2 | 0] = buf[1];
case 2:
H8[off + 1 | 0] = buf[2];
case 3:
H8[off | 0] = buf[3];}}


for(i = 4 - om;i < j;i = i += 4 | 0) {
H32[off + i >> 2] = buf[i] << 24 | buf[i + 1] << 16 | buf[i + 2] << 8 | buf[i + 3];}

switch(lm){
case 3:
H8[off + j + 1 | 0] = buf[j + 2];
case 2:
H8[off + j + 2 | 0] = buf[j + 1];
case 1:
H8[off + j + 3 | 0] = buf[j];}};


var convFn=function(data){
switch(util.getDataType(data)){
case 'string':
return convStr.bind(data);
case 'array':
return convBuf.bind(data);
case 'buffer':
return convBuf.bind(data);
case 'arraybuffer':
return convBuf.bind(new Uint8Array(data));
case 'view':
return convBuf.bind(new Uint8Array(data.buffer,data.byteOffset,data.byteLength));
case 'blob':
return convBlob.bind(data);}};


var slice=function(data,offset){
switch(util.getDataType(data)){
case 'string':
return data.slice(offset);
case 'array':
return data.slice(offset);
case 'buffer':
return data.slice(offset);
case 'arraybuffer':
return data.slice(offset);
case 'view':
return data.buffer.slice(offset);}};



var hex=function(arrayBuffer){
var i,x,hex_tab='0123456789abcdef',res=[],binarray=new Uint8Array(arrayBuffer);
for(i = 0;i < binarray.length;i++) {
x = binarray[i];
res[i] = hex_tab.charAt(x >> 4 & 15) + hex_tab.charAt(x >> 0 & 15);}

return res.join('');};

var ceilHeapSize=function(v){




var p;


if(v <= 65536)
return 65536;


if(v < 16777216){
for(p = 1;p < v;p = p << 1);}else 
{
for(p = 16777216;p < v;p += 16777216);}

return p;};


var init=function(size){
if(size % 64 > 0){
throw new Error('Chunk size must be a multiple of 128 bit');}

self$2.maxChunkLen = size;
self$2.padMaxChunkLen = padlen(size);




self$2.heap = new ArrayBuffer(ceilHeapSize(self$2.padMaxChunkLen + 320 + 20));
self$2.h32 = new Int32Array(self$2.heap);
self$2.h8 = new Int8Array(self$2.heap);
self$2.core = new Rusha._core({
Int32Array:Int32Array,
DataView:DataView},
{},self$2.heap);
self$2.buffer = null;};



init(chunkSize || 64 * 1024);
var initState=function(heap,padMsgLen){
var io=new Int32Array(heap,padMsgLen + 320,5);
io[0] = 1732584193;
io[1] = -271733879;
io[2] = -1732584194;
io[3] = 271733878;
io[4] = -1009589776;};

var padChunk=function(chunkLen,msgLen){
var padChunkLen=padlen(chunkLen);
var view=new Int32Array(self$2.heap,0,padChunkLen >> 2);
padZeroes(view,chunkLen);
padData(view,chunkLen,msgLen);
return padChunkLen;};


var write=function(data,chunkOffset,chunkLen){
convFn(data)(self$2.h8,self$2.h32,chunkOffset,chunkLen,0);};



var coreCall=function(data,chunkOffset,chunkLen,msgLen,finalize){
var padChunkLen=chunkLen;
if(finalize){
padChunkLen = padChunk(chunkLen,msgLen);}

write(data,chunkOffset,chunkLen);
self$2.core.hash(padChunkLen,self$2.padMaxChunkLen);};

var getRawDigest=function(heap,padMaxChunkLen){
var io=new Int32Array(heap,padMaxChunkLen + 320,5);
var out=new Int32Array(5);
var arr=new DataView(out.buffer);
arr.setInt32(0,io[0],false);
arr.setInt32(4,io[1],false);
arr.setInt32(8,io[2],false);
arr.setInt32(12,io[3],false);
arr.setInt32(16,io[4],false);
return out;};


var rawDigest=this.rawDigest = function(str){
var msgLen=str.byteLength || str.length || str.size || 0;
initState(self$2.heap,self$2.padMaxChunkLen);
var chunkOffset=0,chunkLen=self$2.maxChunkLen,last;
for(chunkOffset = 0;msgLen > chunkOffset + chunkLen;chunkOffset += chunkLen) {
coreCall(str,chunkOffset,chunkLen,msgLen,false);}

coreCall(str,chunkOffset,msgLen - chunkOffset,msgLen,true);
return getRawDigest(self$2.heap,self$2.padMaxChunkLen);};



this.digest = this.digestFromString = this.digestFromBuffer = this.digestFromArrayBuffer = function(str){
return hex(rawDigest(str).buffer);};}


;






Rusha._core = function RushaCore(stdlib,foreign,heap){
'use asm';
var H=new stdlib.Int32Array(heap);
function hash(k,x){

k = k | 0;
x = x | 0;
var i=0,j=0,y0=0,z0=0,y1=0,z1=0,y2=0,z2=0,y3=0,z3=0,y4=0,z4=0,t0=0,t1=0;
y0 = H[x + 320 >> 2] | 0;
y1 = H[x + 324 >> 2] | 0;
y2 = H[x + 328 >> 2] | 0;
y3 = H[x + 332 >> 2] | 0;
y4 = H[x + 336 >> 2] | 0;
for(i = 0;(i | 0) < (k | 0);i = i + 64 | 0) {
z0 = y0;
z1 = y1;
z2 = y2;
z3 = y3;
z4 = y4;
for(j = 0;(j | 0) < 64;j = j + 4 | 0) {
t1 = H[i + j >> 2] | 0;
t0 = ((y0 << 5 | y0 >>> 27) + (y1 & y2 | ~y1 & y3) | 0) + ((t1 + y4 | 0) + 1518500249 | 0) | 0;
y4 = y3;
y3 = y2;
y2 = y1 << 30 | y1 >>> 2;
y1 = y0;
y0 = t0;
H[k + j >> 2] = t1;}

for(j = k + 64 | 0;(j | 0) < (k + 80 | 0);j = j + 4 | 0) {
t1 = (H[j - 12 >> 2] ^ H[j - 32 >> 2] ^ H[j - 56 >> 2] ^ H[j - 64 >> 2]) << 1 | (H[j - 12 >> 2] ^ H[j - 32 >> 2] ^ H[j - 56 >> 2] ^ H[j - 64 >> 2]) >>> 31;
t0 = ((y0 << 5 | y0 >>> 27) + (y1 & y2 | ~y1 & y3) | 0) + ((t1 + y4 | 0) + 1518500249 | 0) | 0;
y4 = y3;
y3 = y2;
y2 = y1 << 30 | y1 >>> 2;
y1 = y0;
y0 = t0;
H[j >> 2] = t1;}

for(j = k + 80 | 0;(j | 0) < (k + 160 | 0);j = j + 4 | 0) {
t1 = (H[j - 12 >> 2] ^ H[j - 32 >> 2] ^ H[j - 56 >> 2] ^ H[j - 64 >> 2]) << 1 | (H[j - 12 >> 2] ^ H[j - 32 >> 2] ^ H[j - 56 >> 2] ^ H[j - 64 >> 2]) >>> 31;
t0 = ((y0 << 5 | y0 >>> 27) + (y1 ^ y2 ^ y3) | 0) + ((t1 + y4 | 0) + 1859775393 | 0) | 0;
y4 = y3;
y3 = y2;
y2 = y1 << 30 | y1 >>> 2;
y1 = y0;
y0 = t0;
H[j >> 2] = t1;}

for(j = k + 160 | 0;(j | 0) < (k + 240 | 0);j = j + 4 | 0) {
t1 = (H[j - 12 >> 2] ^ H[j - 32 >> 2] ^ H[j - 56 >> 2] ^ H[j - 64 >> 2]) << 1 | (H[j - 12 >> 2] ^ H[j - 32 >> 2] ^ H[j - 56 >> 2] ^ H[j - 64 >> 2]) >>> 31;
t0 = ((y0 << 5 | y0 >>> 27) + (y1 & y2 | y1 & y3 | y2 & y3) | 0) + ((t1 + y4 | 0) - 1894007588 | 0) | 0;
y4 = y3;
y3 = y2;
y2 = y1 << 30 | y1 >>> 2;
y1 = y0;
y0 = t0;
H[j >> 2] = t1;}

for(j = k + 240 | 0;(j | 0) < (k + 320 | 0);j = j + 4 | 0) {
t1 = (H[j - 12 >> 2] ^ H[j - 32 >> 2] ^ H[j - 56 >> 2] ^ H[j - 64 >> 2]) << 1 | (H[j - 12 >> 2] ^ H[j - 32 >> 2] ^ H[j - 56 >> 2] ^ H[j - 64 >> 2]) >>> 31;
t0 = ((y0 << 5 | y0 >>> 27) + (y1 ^ y2 ^ y3) | 0) + ((t1 + y4 | 0) - 899497514 | 0) | 0;
y4 = y3;
y3 = y2;
y2 = y1 << 30 | y1 >>> 2;
y1 = y0;
y0 = t0;
H[j >> 2] = t1;}

y0 = y0 + z0 | 0;
y1 = y1 + z1 | 0;
y2 = y2 + z2 | 0;
y3 = y3 + z3 | 0;
y4 = y4 + z4 | 0;}

H[x + 320 >> 2] = y0;
H[x + 324 >> 2] = y1;
H[x + 328 >> 2] = y2;
H[x + 332 >> 2] = y3;
H[x + 336 >> 2] = y4;}

return {hash:hash};};


if(typeof module !== 'undefined'){
module.exports = Rusha;}else 
if(typeof window !== 'undefined'){
window.Rusha = Rusha;}




if(typeof FileReaderSync !== 'undefined'){
var reader=new FileReaderSync(),hasher=new Rusha(4 * 1024 * 1024);
self.onmessage = function onMessage(event){
var hash,data=event.data.data;
try{
hash = hasher.digest(data);
self.postMessage({
id:event.data.id,
hash:hash});}

catch(e) {
self.postMessage({
id:event.data.id,
error:e.name});}};}})();
});
__d('stable-stringify/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = function(obj,opts){
if(!opts)opts = {};
if(typeof opts === 'function')opts = {cmp:opts};
var space=opts.space || '';
if(typeof space === 'number')space = Array(space + 1).join(' ');
var cycles=typeof opts.cycles === 'boolean'?opts.cycles:false;
var replacer=opts.replacer || function(key,value){return value;};

var cmp=opts.cmp && (function(f){
return function(node){
return function(a,b){
var aobj={key:a,value:node[a]};
var bobj={key:b,value:node[b]};
return f(aobj,bobj);};};})(


opts.cmp);

var seen=[];
return (function stringify(parent,key,node,level){
var indent=space?'\n' + new Array(level + 1).join(space):'';
var colonSeparator=space?': ':':';

if(node && node.toJSON && typeof node.toJSON === 'function'){
node = node.toJSON();}


node = replacer.call(parent,key,node);

if(node === undefined){
return;}

if(typeof node !== 'object' || node === null){
return JSON.stringify(node);}

if(isArray(node)){
var out=[];
for(var i=0;i < node.length;i++) {
var item=stringify(node,i,node[i],level + 1) || JSON.stringify(null);
out.push(indent + space + item);}

return '[' + out.join(',') + indent + ']';}else 

{
if(seen.indexOf(node) !== -1){
if(cycles)return JSON.stringify('__cycle__');
throw new TypeError('Converting circular structure to JSON');}else 

seen.push(node);

var keys=objectKeys(node).sort(cmp && cmp(node));
var out=[];
for(var i=0;i < keys.length;i++) {
var key=keys[i];
var value=stringify(node,key,node[key],level + 1);

if(!value)continue;

var keyValue=JSON.stringify(key) + 
colonSeparator + 
value;
;
out.push(indent + space + keyValue);}

return '{' + out.join(',') + indent + '}';}})(

{'':obj},'',obj,0);};


var isArray=Array.isArray || function(x){
return ({}).toString.call(x) === '[object Array]';};


var objectKeys=Object.keys || function(obj){
var has=Object.prototype.hasOwnProperty || function(){return true;};
var keys=[];
for(var key in obj) {
if(has.call(obj,key))keys.push(key);}

return keys;};
});
__d('q-level/index.js',["level-manifest/index.js","q/q.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var Manifest=require('level-manifest/index.js');

var Q=require('q/q.js');
var __hop=({}).hasOwnProperty;

exports = module.exports = install;
exports.install = install;

var special={
batch:function promisifyBatch(db){
var orig=db.batch.bind(db);
db.batch = function(){
if(arguments.length)return callSubstitute(this,orig,arguments);else 

throw new Error('chained form is not supported yet');

var batch=orig.call(db);
batch.write = Q.nbind(batch.write,batch);
return batch;};},


query:function promisifyQuery(db){
var use=db.query.use;
var engine=db.query.engine;

fromStream(db,'query');

if(use)db.query.use = use;
if(engine)db.query.engine = engine;}};



function install(db,manifest,methodName){
if(methodName)promisifyMethod.apply(null,arguments);else 
if(manifest)_install.apply(null,arguments);else 
_install(db,new Manifest(db));

return db;}


function _install(db,manifest){
var methods=manifest.methods;
if(!('close' in methods))methods.close = {type:'async'};

for(var methodName in methods) {
if(!__hop.call(methods,methodName))continue;

promisifyMethod(db,methodName,methods[methodName]);}


var sublevels=manifest.sublevels || {};
for(var sublevelName in sublevels) {
if(__hop.call(sublevels,sublevelName)){
_install(db.sublevels[sublevelName],sublevels[sublevelName]);}}



if(typeof db.sublevel == 'function'){
var Sublevel=db.sublevel;
db.sublevel = function(sublevelName){
var existing=__hop.call(sublevels,sublevelName);
var sublevel=Sublevel.apply(this,arguments);
if(!existing)_install(sublevel,new Manifest(sublevel));
return sublevel;};}}




function promisifyMethod(db,methodName,manifest){
if(!(methodName in db))return;

if(special[methodName]){
return special[methodName](db);}


switch(manifest.type){
case 'async':
substitute(db,methodName);
break;
case 'readable':
fromStream(db,methodName);
break;
case 'writable':

break;
case 'object':
_install(db[methodName],manifest);
break;}}



function substitute(db,methodName){
var orig=db[methodName].bind(db);
db[methodName] = function(){
return callSubstitute(this,orig,arguments);};}



function callSubstitute(ctx,orig,args){
if(typeof args[args.length - 1] === 'function')
return orig.apply(ctx,args);else 

return Q.nfapply(orig,args);}


function fromStream(db,methodName){
var orig=db[methodName];
db[methodName] = function(){
var stream=orig.apply(this,arguments);
if(typeof stream.then === 'function')return stream;

var defer=Q.defer();
var failed;
stream.on('data',function(data){
defer.notify(data);});


stream.on('error',function(err){
failed = true;
defer.reject(err);});


stream.on('end',function(){
if(!failed)defer.resolve();});



var promise=defer.promise;
var pProto=promise.constructor.prototype;
for(var p in pProto) {
if(__hop.call(pProto,p)){
stream[p] = promise[p].bind(promise);}}



return stream;};}
});
__d('level-manifest/index.js',["deep-extend/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
deepExtend=require('deep-extend/index.js');

var methods={
createReadStream:{type:'readable'},
readStream:{type:'readable'},
createValueStream:{type:'readable'},
valueStream:{type:'readable'},
createKeyStream:{type:'readable'},
keyStream:{type:'readable'},
createWriteStream:{type:'writable'},
writeStream:{type:'writable'},
isOpen:{type:'sync'},
isClosed:{type:'sync'},
put:{type:'async'},
get:{type:'async'},
del:{type:'async'},
batch:{type:'async'},
approximateSize:{type:'async'}};








module.exports = function manifest(db,terse){
var man={};
if(db.methods || !terse)man.methods = {};
if(!terse){
deepExtend(deepExtend(man.methods,methods),db.methods);}else 

deepExtend(man.methods,db.methods);

if(db._sep)
man._sep = db._sep;
if(db._prefix)
man._prefix = db._prefix;

if(db.sublevels){
man.sublevels = {};
for(var name in db.sublevels) {
man.sublevels[name] = manifest(db.sublevels[name],terse);}}


return man;};
});
__d('deep-extend/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  /*!
 * Node.JS module "Deep Extend"
 * @description Recursive object extending.
 * @author Viacheslav Lotsmanov (unclechu) <lotsmanov89@gmail.com>
 * @license MIT
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2013 Viacheslav Lotsmanov
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */







var deepExtend=module.exports = function(){
if(arguments.length < 1 || typeof arguments[0] !== 'object'){
return false;}


if(arguments.length < 2)return arguments[0];

var target=arguments[0];


var args=Array.prototype.slice.call(arguments,1);

var key,val,src,clone,tmpBuf;

args.forEach(function(obj){
if(typeof obj !== 'object')return;

for(key in obj) {
if(!(key in obj))continue;

src = target[key];
val = obj[key];

if(val === target)continue;

if(typeof val !== 'object' || val === null){
target[key] = val;
continue;}else 
if(val instanceof Buffer){
tmpBuf = new Buffer(val.length);
val.copy(tmpBuf);
target[key] = tmpBuf;
continue;}else 
if(val instanceof Date){
target[key] = new Date(val.getTime());
continue;}


if(typeof src !== 'object' || src === null){
clone = Array.isArray(val)?[]:{};
target[key] = deepExtend(clone,val);
continue;}


if(Array.isArray(val)){
clone = Array.isArray(src)?src:[];}else 
{
clone = !Array.isArray(src)?src:{};}


target[key] = deepExtend(clone,val);}});



return target;};
});
__d('react-mixin/index.js',["smart-mixin/index.js","object-assign/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var mixin=require('smart-mixin/index.js');
var assign=require('object-assign/index.js');

var mixinProto=mixin({

componentDidMount:mixin.MANY,
componentWillMount:mixin.MANY,
componentWillReceiveProps:mixin.MANY,
shouldComponentUpdate:mixin.ONCE,
componentWillUpdate:mixin.MANY,
componentDidUpdate:mixin.MANY,
componentWillUnmount:mixin.MANY,
getChildContext:mixin.MANY_MERGED});


function setDefaultProps(reactMixin){
var getDefaultProps=reactMixin.getDefaultProps;

if(getDefaultProps){
reactMixin.defaultProps = getDefaultProps();

delete reactMixin.getDefaultProps;}}



function setInitialState(reactMixin){
var getInitialState=reactMixin.getInitialState;
var componentWillMount=reactMixin.componentWillMount;

function applyInitialState(instance){
var state=instance.state || {};
assign(state,getInitialState.call(instance));
instance.state = state;}


if(getInitialState){
if(!componentWillMount){
reactMixin.componentWillMount = function(){
applyInitialState(this);};}else 


{
reactMixin.componentWillMount = function(){
applyInitialState(this);
componentWillMount.call(this);};}



delete reactMixin.getInitialState;}}



function mixinClass(reactClass,reactMixin){
setDefaultProps(reactMixin);
setInitialState(reactMixin);

var prototypeMethods={};
var staticProps={};

Object.keys(reactMixin).forEach(function(key){
if(typeof reactMixin[key] === 'function'){
prototypeMethods[key] = reactMixin[key];}else 

{
staticProps[key] = reactMixin[key];}});



mixinProto(reactClass.prototype,prototypeMethods);

mixin({
childContextTypes:mixin.MANY_MERGED_LOOSE,
contextTypes:mixin.MANY_MERGED_LOOSE,
propTypes:mixin.MANY_MERGED_LOOSE,
defaultProps:mixin.MANY_MERGED_LOOSE})(
reactClass,staticProps);}


module.exports = (function(){
var reactMixin=mixinProto;

reactMixin.onClass = function(reactClass,mixin){
mixinClass(reactClass,mixin);};


reactMixin.decorate = function(mixin){
return function(reactClass){
return reactMixin.onClass(reactClass,mixin);};};



return reactMixin;})();
});
__d('smart-mixin/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var objToStr=function(x){return Object.prototype.toString.call(x);};

var thrower=function(error){
throw error;};


var mixins=module.exports = function makeMixinFunction(rules,_opts){
var opts=_opts || {};
if(!opts.unknownFunction){
opts.unknownFunction = mixins.ONCE;}


if(!opts.nonFunctionProperty){
opts.nonFunctionProperty = function(left,right,key){
if(left !== undefined && right !== undefined){
var getTypeName=function(obj){
if(obj && obj.constructor && obj.constructor.name){
return obj.constructor.name;}else 

{
return objToStr(obj).slice(8,-1);}};


throw new TypeError('Cannot mixin key ' + key + ' because it is provided by multiple sources, ' + 
'and the types are ' + getTypeName(left) + ' and ' + getTypeName(right));}

return left === undefined?right:left;};}



function setNonEnumerable(target,key,value){
if(key in target){
target[key] = value;}else 

{
Object.defineProperty(target,key,{
value:value,
writable:true,
configurable:true});}}




return function applyMixin(source,mixin){
Object.keys(mixin).forEach(function(key){
var left=source[key],right=mixin[key],rule=rules[key];



if(left === undefined && right === undefined)return;

var wrapIfFunction=function(thing){
return typeof thing !== "function"?thing:
function(){
return thing.call(this,arguments);};};




if(rule){

var fn=rule(left,right,key);
setNonEnumerable(source,key,wrapIfFunction(fn));
return;}


var leftIsFn=typeof left === "function";
var rightIsFn=typeof right === "function";



if(leftIsFn && right === undefined || 
rightIsFn && left === undefined || 
leftIsFn && rightIsFn){


setNonEnumerable(source,key,wrapIfFunction(opts.unknownFunction(left,right,key)));
return;}





source[key] = opts.nonFunctionProperty(left,right,key);});};};




mixins._mergeObjects = function(obj1,obj2){
var assertObject=function(obj,obj2){
var type=objToStr(obj);
if(type !== '[object Object]'){
var displayType=obj.constructor?obj.constructor.name:'Unknown';
var displayType2=obj2.constructor?obj2.constructor.name:'Unknown';
thrower('cannot merge returned value of type ' + displayType + ' with an ' + displayType2);}};



if(Array.isArray(obj1) && Array.isArray(obj2)){
return obj1.concat(obj2);}


assertObject(obj1,obj2);
assertObject(obj2,obj1);

var result={};
Object.keys(obj1).forEach(function(k){
if(Object.prototype.hasOwnProperty.call(obj2,k)){
thrower('cannot merge returns because both have the ' + JSON.stringify(k) + ' key');}

result[k] = obj1[k];});


Object.keys(obj2).forEach(function(k){

result[k] = obj2[k];});

return result;};




mixins.ONCE = function(left,right,key){
if(left && right){
throw new TypeError('Cannot mixin ' + key + ' because it has a unique constraint.');}


var fn=left || right;

return function(args){
return fn.apply(this,args);};};



mixins.MANY = function(left,right,key){
return function(args){
if(right)right.apply(this,args);
return left?left.apply(this,args):undefined;};};



mixins.MANY_MERGED_LOOSE = function(left,right,key){
if(left && right){
return mixins._mergeObjects(left,right);}


return left || right;};


mixins.MANY_MERGED = function(left,right,key){
return function(args){
var res1=right && right.apply(this,args);
var res2=left && left.apply(this,args);
if(res1 && res2){
return mixins._mergeObjects(res1,res2);}

return res2 || res1;};};




mixins.REDUCE_LEFT = function(_left,_right,key){
var left=_left || function(x){return x;};
var right=_right || function(x){return x;};
return function(args){
return right.call(this,left.apply(this,args));};};



mixins.REDUCE_RIGHT = function(_left,_right,key){
var left=_left || function(x){return x;};
var right=_right || function(x){return x;};
return function(args){
return left.call(this,right.apply(this,args));};};
});
__d('object-assign/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

function ToObject(val){
if(val == null){
throw new TypeError('Object.assign cannot be called with null or undefined');}


return Object(val);}


module.exports = Object.assign || function(target,source){
var from;
var keys;
var to=ToObject(target);

for(var s=1;s < arguments.length;s++) {
from = arguments[s];
keys = Object.keys(Object(from));

for(var i=0;i < keys.length;i++) {
to[keys[i]] = from[keys[i]];}}



return to;};
});
__d('react-native-keyboardevents/KeyboardEvents.ios.js',["react-native/Libraries/react-native/react-native.js","eventemitter3/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _require=






require('react-native/Libraries/react-native/react-native.js');var DeviceEventEmitter=_require.DeviceEventEmitter;var RNKeyboardEventsManager=_require.NativeModules.RNKeyboardEventsManager;
var EventEmitter=require('eventemitter3/index.js');

var KeyboardEventEmitter=new EventEmitter();
var events=[
'WillShow',
'DidShow',
'WillHide',
'DidHide',
'WillChangeFrame',
'DidChangeFrame'].
map(function(event){return 'Keyboard' + event;});

events.forEach(function(eventKey){
var event=RNKeyboardEventsManager[eventKey];
DeviceEventEmitter.addListener(
event,
function(frames){
KeyboardEventEmitter.emit(event,frames);});});




module.exports = events.reduce(function(carry,eventKey){
carry[eventKey + 'Event'] = RNKeyboardEventsManager[eventKey];
return carry;},
{
Emitter:KeyboardEventEmitter});
});
__d('eventemitter3/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';









var prefix=typeof Object.create !== 'function'?'~':false;









function EE(fn,context,once){
this.fn = fn;
this.context = context;
this.once = once || false;}









function EventEmitter(){}







EventEmitter.prototype._events = undefined;









EventEmitter.prototype.listeners = function listeners(event,exists){
var evt=prefix?prefix + event:event,
available=this._events && this._events[evt];

if(exists)return !!available;
if(!available)return [];
if(available.fn)return [available.fn];

for(var i=0,l=available.length,ee=new Array(l);i < l;i++) {
ee[i] = available[i].fn;}


return ee;};









EventEmitter.prototype.emit = function emit(event,a1,a2,a3,a4,a5){
var evt=prefix?prefix + event:event;

if(!this._events || !this._events[evt])return false;

var listeners=this._events[evt],
len=arguments.length,
args,
i;

if('function' === typeof listeners.fn){
if(listeners.once)this.removeListener(event,listeners.fn,undefined,true);

switch(len){
case 1:return (listeners.fn.call(listeners.context),true);
case 2:return (listeners.fn.call(listeners.context,a1),true);
case 3:return (listeners.fn.call(listeners.context,a1,a2),true);
case 4:return (listeners.fn.call(listeners.context,a1,a2,a3),true);
case 5:return (listeners.fn.call(listeners.context,a1,a2,a3,a4),true);
case 6:return (listeners.fn.call(listeners.context,a1,a2,a3,a4,a5),true);}


for(i = 1,args = new Array(len - 1);i < len;i++) {
args[i - 1] = arguments[i];}


listeners.fn.apply(listeners.context,args);}else 
{
var length=listeners.length,
j;

for(i = 0;i < length;i++) {
if(listeners[i].once)this.removeListener(event,listeners[i].fn,undefined,true);

switch(len){
case 1:listeners[i].fn.call(listeners[i].context);break;
case 2:listeners[i].fn.call(listeners[i].context,a1);break;
case 3:listeners[i].fn.call(listeners[i].context,a1,a2);break;
default:
if(!args)for(j = 1,args = new Array(len - 1);j < len;j++) {
args[j - 1] = arguments[j];}


listeners[i].fn.apply(listeners[i].context,args);}}}




return true;};










EventEmitter.prototype.on = function on(event,fn,context){
var listener=new EE(fn,context || this),
evt=prefix?prefix + event:event;

if(!this._events)this._events = prefix?{}:Object.create(null);
if(!this._events[evt])this._events[evt] = listener;else 
{
if(!this._events[evt].fn)this._events[evt].push(listener);else 
this._events[evt] = [
this._events[evt],listener];}



return this;};










EventEmitter.prototype.once = function once(event,fn,context){
var listener=new EE(fn,context || this,true),
evt=prefix?prefix + event:event;

if(!this._events)this._events = prefix?{}:Object.create(null);
if(!this._events[evt])this._events[evt] = listener;else 
{
if(!this._events[evt].fn)this._events[evt].push(listener);else 
this._events[evt] = [
this._events[evt],listener];}



return this;};











EventEmitter.prototype.removeListener = function removeListener(event,fn,context,once){
var evt=prefix?prefix + event:event;

if(!this._events || !this._events[evt])return this;

var listeners=this._events[evt],
events=[];

if(fn){
if(listeners.fn){
if(
listeners.fn !== fn || 
once && !listeners.once || 
context && listeners.context !== context)
{
events.push(listeners);}}else 

{
for(var i=0,length=listeners.length;i < length;i++) {
if(
listeners[i].fn !== fn || 
once && !listeners[i].once || 
context && listeners[i].context !== context)
{
events.push(listeners[i]);}}}}








if(events.length){
this._events[evt] = events.length === 1?events[0]:events;}else 
{
delete this._events[evt];}


return this;};








EventEmitter.prototype.removeAllListeners = function removeAllListeners(event){
if(!this._events)return this;

if(event)delete this._events[prefix?prefix + event:event];else 
this._events = prefix?{}:Object.create(null);

return this;};





EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;




EventEmitter.prototype.setMaxListeners = function setMaxListeners(){
return this;};





EventEmitter.prefixed = prefix;




if('undefined' !== typeof module){
module.exports = EventEmitter;}
});
__d('Identity/Components/FromToView.js',["react-native/Libraries/react-native/react-native.js","reflux/src/index.js","react-mixin/index.js","Identity/utils/utils.js","Identity/Components/NewResource.js","Identity/Components/ResourceView.js","Identity/Store/Store.js","Identity/Actions/Actions.js","react-native-icons/index.js","tradle-constants/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var Reflux=require('reflux/src/index.js');
var reactMixin=require('react-mixin/index.js');
var utils=require('Identity/utils/utils.js');
var NewResource=require('Identity/Components/NewResource.js');
var ResourceView=require('Identity/Components/ResourceView.js');
var Store=require('Identity/Store/Store.js');
var Actions=require('Identity/Actions/Actions.js');var _require=
require('react-native-icons/index.js');var Icon=_require.Icon;
var constants=require('tradle-constants/index.js');

var MESSAGE_INTERFACE='tradle.Message';var 


StyleSheet=





React.StyleSheet;var Image=React.Image;var View=React.View;var Text=React.Text;var Component=React.Component;var TouchableHighlight=React.TouchableHighlight;var 

FromToView=(function(_Component){_inherits(FromToView,_Component);function FromToView(){_classCallCheck(this,FromToView);_get(Object.getPrototypeOf(FromToView.prototype),'constructor',this).apply(this,arguments);}_createClass(FromToView,[{key:'componentDidMount',value:
function componentDidMount(){
this.listenTo(Store,'onGetItem');}},{key:'onGetItem',value:

function onGetItem(params){
if(params.action && params.action === 'getItem'){
var paramsRID=params.resource[constants.TYPE] + '_' + params.resource[constants.ROOT_HASH];
if(paramsRID === utils.getId(this.props.resource.to) || paramsRID === utils.getId(this.props.resource.from))
this.showProfile(params.resource);}}},{key:'render',value:


function render(){var _this=this;
var resource=this.props.resource;

var model=this.props.model || utils.getModel(resource[constants.TYPE]).value;
if(!model.interfaces || model.interfaces.indexOf(MESSAGE_INTERFACE) == -1)
return React.createElement(View,null);

var hasPhoto=true;
var fromTitle=resource.from.title?resource.from.title:utils.getDisplayName(resource.from,utils.getModel(resource.from[constants.TYPE]).value.properties);
var toTitle=resource.to?
resource.to.title?resource.to.title:utils.getDisplayName(resource.to,utils.getModel(resource.to[constants.TYPE]).value.properties):
null;
if(!resource.to || !resource.to.photos && !resource.from.photos)
return React.createElement(View,{style:styles.container},
React.createElement(Text,null,fromTitle),
React.createElement(Text,null,toTitle));

var style=hasPhoto?{marginTop:-70}:{marginTop:0};
var toPhoto=resource.to.photos && resource.to.photos[0].url;
if(toPhoto)
toPhoto = React.createElement(Image,{style:styles.icon,source:{uri:utils.getImageUri(toPhoto)}});else 
if(resource.to)
toPhoto = React.createElement(Icon,{style:styles.icon,color:'#2E3B4E',name:'ion|android-person',size:60});else 

toPhoto = React.createElement(View,null);

var fromPhoto=resource.from.photos && resource.from.photos[0].url;
if(fromPhoto)
fromPhoto = React.createElement(Image,{style:styles.icon,source:{uri:utils.getImageUri(fromPhoto)}});else 

fromPhoto = React.createElement(Icon,{style:styles.icon,color:'#7AAAC3',name:'ion|ios-person',size:60});

return React.createElement(View,{style:[styles.container,style]},
React.createElement(TouchableHighlight,{underlayColor:'transparent',onPress:function()
{
if(resource.from.id)
Actions.getItem(utils.getId(resource.from));else 

_this.showProfile(resource.from);}},


React.createElement(View,{style:{flexDirection:'column'}},
fromPhoto,
React.createElement(Text,null,fromTitle))),


React.createElement(Icon,{name:'ion|ios-arrow-thin-right',size:70,color:'#f7f7f7',style:styles.arrow}),
React.createElement(TouchableHighlight,{underlayColor:'transparent',onPress:function()
{
if(resource.to.id)
Actions.getItem(utils.getId(resource.to.id));else 

_this.showProfile(resource.to);}},


React.createElement(View,{style:{flexDirection:'column'}},
toPhoto,
React.createElement(Text,null,toTitle))));}},{key:'showProfile',value:





function showProfile(resource){
var model=utils.getModel(resource[constants.TYPE]).value;
var title=utils.getDisplayName(resource,model.properties);
this.props.navigator.push({
title:title,
id:3,
component:ResourceView,
titleTextColor:'#7AAAC3',
rightButtonTitle:'Edit',
backButtonTitle:'Back',
onRightButtonPress:{
title:title,
id:4,
component:NewResource,
backButtonTitle:resource.firstName,
rightButtonTitle:'Done',
titleTextColor:'#7AAAC3',
passProps:{
model:model,
resource:resource}},



passProps:{resource:resource}});}}]);return FromToView;})(Component);




reactMixin(FromToView.prototype,Reflux.ListenerMixin);

var styles=StyleSheet.create({
container:{
flex:1,
flexDirection:'row',
justifyContent:'space-between',
padding:20},

arrow:{
width:70,
height:70,
shadowColor:'#2E3B4E',
shadowOffset:{width:0.5,height:0.5},
shadowOpacity:1,
shadowRadius:1,
marginTop:-5},

icon:{
width:70,
height:70,
borderRadius:33,
borderWidth:2,
borderColor:'#7AAAC3',

backgroundColor:'#f7f7f7'},

thumb:{
width:70,
height:70,
borderRadius:33,
borderWidth:2,
borderColor:'#D7E6ED'}});



module.exports = FromToView;
});
__d('Identity/styles/buttonStyles.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






var ICON_BORDER_COLOR='#D7E6ED';
var BACKGROUND_COLOR='#7AAAC3';
var ERROR_COLOR='#a94442';
var HELP_COLOR='#999999';
var BORDER_COLOR='#cccccc';
var DISABLED_COLOR='#777777';
var DISABLED_BACKGROUND_COLOR='#eeeeee';
var FONT_SIZE=17;
var FONT_WEIGHT='500';

var buttonStyles=Object.freeze({
icon:{
width:25,
height:25,
marginTop:-33,
marginLeft:5},




row:{
flexDirection:'row'},


container:{
flex:1,
position:'absolute',
right:10},

buttonContent:{
padding:15,
width:150,
height:40,
borderRadius:10,
backgroundColor:BACKGROUND_COLOR,
opacity:0.5,
borderWidth:1,
borderColor:'#466690'},

text:{
color:'#ffffff',
fontWeight:'800',
marginTop:-30}});



module.exports = buttonStyles;
});
__d('Identity/Components/SwitchIdentity.js',["Ionicons","react-native/Libraries/react-native/react-native.js","Identity/utils/utils.js","reflux/src/index.js","Identity/Actions/Actions.js","react-mixin/index.js","Identity/styles/buttonStyles.js","tradle-constants/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var utils=require('Identity/utils/utils.js');
var Reflux=require('reflux/src/index.js');
var Actions=require('Identity/Actions/Actions.js');
var reactMixin=require('react-mixin/index.js');
var buttonStyles=require('Identity/styles/buttonStyles.js');
var constants=require('tradle-constants/index.js');
var Icon=require('Ionicons');var 



View=



React.View;var Text=React.Text;var TouchableHighlight=React.TouchableHighlight;var Component=React.Component;var 

SwitchIdentity=(function(_Component){_inherits(SwitchIdentity,_Component);function SwitchIdentity(){_classCallCheck(this,SwitchIdentity);_get(Object.getPrototypeOf(SwitchIdentity.prototype),'constructor',this).apply(this,arguments);}_createClass(SwitchIdentity,[{key:'render',value:
function render(){
var resource=this.props.resource;
return resource[constants.ROOT_HASH] === utils.getMe()[constants.ROOT_HASH]?
React.createElement(View,{style:[buttonStyles.container,{top:50}]},
React.createElement(TouchableHighlight,{onPress:this.showIdentities.bind(this),underlayColor:'transparent'},
React.createElement(View,null,
React.createElement(View,{style:buttonStyles.buttonContent}),
React.createElement(View,{style:buttonStyles.row},
React.createElement(Icon,{name:'arrow-move',size:25,color:'#ffffff',style:buttonStyles.icon}),
React.createElement(Text,{style:buttonStyles.text},'Switch Identity'))))):




React.createElement(View,null);}},{key:'showIdentities',value:

function showIdentities(){
Actions.showIdentityList(utils.getMe());}}]);return SwitchIdentity;})(Component);


reactMixin(SwitchIdentity.prototype,Reflux.ListenerMixin);

module.exports = SwitchIdentity;
});
__d('Identity/Components/ShowRefList.js',["Ionicons","react-native/Libraries/react-native/react-native.js","Identity/utils/utils.js","Identity/Components/ResourceList.js","Identity/styles/buttonStyles.js","tradle-constants/index.js","react-mixin/index.js","Identity/Components/ResourceViewMixin.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var utils=require('Identity/utils/utils.js');
var ResourceList=require('Identity/Components/ResourceList.js');
var Icon=require('Ionicons');


var buttonStyles=require('Identity/styles/buttonStyles.js');
var constants=require('tradle-constants/index.js');
var reactMixin=require('react-mixin/index.js');
var ResourceViewMixin=require('Identity/Components/ResourceViewMixin.js');var 


View=




React.View;var Text=React.Text;var TextInput=React.TextInput;var TouchableHighlight=React.TouchableHighlight;var Component=React.Component;var 

ShowRefList=(function(_Component){_inherits(ShowRefList,_Component);
function ShowRefList(props){_classCallCheck(this,ShowRefList);
_get(Object.getPrototypeOf(ShowRefList.prototype),'constructor',this).call(this,props);
this.state = {
startTop:props.resource[constants.TYPE] == constants.TYPES.IDENTITY && props.resource[constants.ROOT_HASH] === utils.getMe()[constants.ROOT_HASH]?70:15};}_createClass(ShowRefList,[{key:'render',value:


function render(){
var resource=this.props.resource;
var props=utils.getModel(resource[constants.TYPE]).value.properties;

var refList=[];


var initPos=utils.getMe()[constants.ROOT_HASH] === resource[constants.ROOT_HASH]?95:0;
var pos=0;
var marginTopStep=5;
for(var p in props) {
if(p.charAt(0) === '_' || !props[p].items || !props[p].items.backlink)
continue;
refList.push(
React.createElement(View,{style:{top:pos}},
React.createElement(TouchableHighlight,{onPress:this.showResources.bind(this,this.props.resource,props[p]),underlayColor:'transparent'},
React.createElement(View,null,
React.createElement(View,{style:buttonStyles.buttonContent}),
React.createElement(View,{style:buttonStyles.row},
React.createElement(Icon,{name:'android-checkmark-circle',size:25,color:'#ffffff',style:buttonStyles.icon}),
React.createElement(Text,{style:buttonStyles.text},props[p].title))))));





pos += marginTopStep;}

return (
React.createElement(View,{style:[buttonStyles.container,{top:initPos}]},
refList));}}]);return ShowRefList;})(Component);




reactMixin(ShowRefList.prototype,ResourceViewMixin);

module.exports = ShowRefList;
});
__d('Identity/Components/ResourceViewMixin.js',["Identity/utils/utils.js","Identity/Components/ResourceView.js","Identity/Components/ResourceList.js","tradle-constants/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var utils=require('Identity/utils/utils.js');
var ResourceView=require('Identity/Components/ResourceView.js');
var ResourceList=require('Identity/Components/ResourceList.js');
var constants=require('tradle-constants/index.js');


var ResourceViewMixin={
showRefResource:function(resource,prop){
if(resource[constants.TYPE] + '_' + resource[constants.ROOT_HASH] !== this.state.propValue)
return;
var model=utils.getModel(resource[constants.TYPE]).value;
var title=utils.getDisplayName(resource,model.properties);
this.props.navigator.push({
title:title,
id:3,
component:ResourceView,
titleTextColor:'#7AAAC3',

backButtonTitle:'Back',
passProps:{resource:resource,prop:prop}});},


showResources:function(resource,prop){
var meta=utils.getModel(resource[constants.TYPE]).value.properties;
this.props.navigator.push({
id:10,
title:utils.makeLabel(prop.title),
titleTextColor:'#7AAAC3',
backButtonTitle:'Back',
component:ResourceList,
passProps:{
modelName:prop.items.ref,
filter:'',
resource:resource,
prop:prop}});}};




module.exports = ResourceViewMixin;
});
__d('Identity/Components/IdentitiesList.js',["react-native/Libraries/react-native/react-native.js","react-mixin/index.js","Identity/Components/SearchBar.js","Identity/Components/ResourceRow.js","Identity/Components/ResourceView.js","Identity/Components/NewResource.js","Identity/Components/ResourceList.js","Identity/utils/utils.js","reflux/src/index.js","Identity/Store/Store.js","Identity/Actions/Actions.js","react-mixin/index.js","extend/index.js","tradle-constants/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var reactMixin=require('react-mixin/index.js');
var SearchBar=require('Identity/Components/SearchBar.js');
var ResourceRow=require('Identity/Components/ResourceRow.js');
var ResourceView=require('Identity/Components/ResourceView.js');
var NewResource=require('Identity/Components/NewResource.js');
var ResourceList=require('Identity/Components/ResourceList.js');
var utils=require('Identity/utils/utils.js');
var Reflux=require('reflux/src/index.js');
var Store=require('Identity/Store/Store.js');
var Actions=require('Identity/Actions/Actions.js');
var reactMixin=require('react-mixin/index.js');
var extend=require('extend/index.js');
var constants=require('tradle-constants/index.js');var 


ListView=






React.ListView;var Component=React.Component;var StyleSheet=React.StyleSheet;var Text=React.Text;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;var TouchableHighlight=React.TouchableHighlight;var View=React.View;var 

IdentitiesList=(function(_Component){_inherits(IdentitiesList,_Component);
function IdentitiesList(props){_classCallCheck(this,IdentitiesList);
_get(Object.getPrototypeOf(IdentitiesList.prototype),'constructor',this).call(this,props);
var dataSource=new ListView.DataSource({
rowHasChanged:function(row1,row2){return row1 !== row2;}});

this.state = {
isLoading:utils.getModels()?false:true,
list:this.props.list,
dataSource:dataSource.cloneWithRows(this.props.list),
filter:this.props.filter,
userInput:''};}_createClass(IdentitiesList,[{key:'componentDidMount',value:



function componentDidMount(){
this.listenTo(Store,'onChangeIdentity');}},{key:'selectResource',value:


function selectResource(resource){
Actions.changeIdentity(resource);}},{key:'onRemoveIdentity',value:

function onRemoveIdentity(params){
var list=[];
extend(list,this.state.list);
for(var i=0;i < list.length;i++) {
if(list[i][constants.ROOT_HASH] == params.resource[constants.ROOT_HASH]){
list.splice(i,1);
break;}}


this.setState({
list:list,
dataSource:this.state.dataSource.cloneWithRows(list)});}},{key:'onChangeIdentity',value:


function onChangeIdentity(params){
if(params.action === 'removeIdentity'){
this.onRemoveIdentity(params);
return;}


if(params.action !== 'changeIdentity')
return;
var me=params.me;
var modelName=me[constants.TYPE];
utils.setMe(me);
var model=utils.getModel(modelName).value;
var meName=utils.getDisplayName(me,model.properties);
var self=this;
var route={
title:model.title,
component:ResourceList,
id:10,
passProps:{
filter:'',
modelName:modelName},

rightButtonTitle:'Profile',
onRightButtonPress:{
title:meName,
id:3,
component:ResourceView,
backButtonTitle:'Back',
titleTextColor:'#7AAAC3',
rightButtonTitle:'Edit',
onRightButtonPress:{
title:meName,
id:4,
component:NewResource,
titleTextColor:'#7AAAC3',
backButtonTitle:'Back',
rightButtonTitle:'Done',
passProps:{
model:model,
resource:me}},



passProps:{resource:me}}};


this.props.navigator.replace(route);}},{key:'renderRow',value:







function renderRow(resource){var _this=this;
var model=utils.getModel(resource[constants.TYPE] || resource.id).value;
var me=utils.getMe();
return (
React.createElement(ResourceRow,{
onSelect:function(){return _this.selectResource(resource);},
resource:resource,
onCancel:function(){return Actions.removeIdentity(resource);}}));}},{key:'removeIdentity',value:


function removeIdentity(resource){
Actions.removeIdentity(resource);}},{key:'render',value:

function render(){
if(this.state.isLoading)
return React.createElement(View,null);
return (
React.createElement(View,{style:styles.container},
React.createElement(ListView,{ref:'listview',
dataSource:this.state.dataSource,
renderRow:this.renderRow.bind(this),
automaticallyAdjustContentInsets:false,
keyboardDismissMode:'on-drag',
keyboardShouldPersistTaps:true,
showsVerticalScrollIndicator:false})));}}]);return IdentitiesList;})(Component);





reactMixin(IdentitiesList.prototype,Reflux.ListenerMixin);

var styles=StyleSheet.create({
container:{
flex:1,
marginTop:64,
backgroundColor:'white'},

centerText:{
alignItems:'center'},

NoResourcesText:{
marginTop:80,
color:'#888888'},

separator:{
height:1,
backgroundColor:'#cccccc'},

spinner:{
width:30,
alignSelf:'center',
marginTop:150}});



module.exports = IdentitiesList;
});
__d('Identity/Components/SearchBar.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');var 


Component=




React.Component;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;var View=React.View;var StyleSheet=React.StyleSheet;var TextInput=React.TextInput;var 

SearchBar=(function(_Component){_inherits(SearchBar,_Component);function SearchBar(){_classCallCheck(this,SearchBar);_get(Object.getPrototypeOf(SearchBar.prototype),'constructor',this).apply(this,arguments);}_createClass(SearchBar,[{key:'render',value:
function render(){
var filter=this.props.filter;
var value=!filter || filter.length === 0?'':filter;
return (
React.createElement(View,{style:styles.searchBar},
React.createElement(View,{style:styles.searchBarBG},
React.createElement(TextInput,{
autoCapitalize:'none',
autoCorrect:false,
onChange:this.props.onSearchChange.bind(this),
onFocus:this.props.onFocus.bind(this),
placeholder:'Search',
placeholderTextColor:'#bbbbbb',
style:styles.searchBarInput,
value:value}),

React.createElement(ActivityIndicatorIOS,{
animating:this.props.isLoading,
style:styles.spinner}))));}}]);return SearchBar;})(Component);







var styles=StyleSheet.create({
searchBar:{
marginTop:64,
paddingTop:3,
height:42,
paddingBottom:3,
flexDirection:'row',
alignItems:'center',
backgroundColor:'#eeeeee'},

searchBarBG:{
marginTop:20,

flex:1,
alignSelf:'center',
backgroundColor:'#eeeeee',
borderTopColor:'#eeeeee',
borderRightColor:'#eeeeee',
borderLeftColor:'#eeeeee',
borderWidth:2,
borderBottomColor:'#2E3B4E'},

searchBarInput:{
height:32,
fontSize:18,
paddingLeft:10,

fontWeight:'bold',

borderRadius:5,
borderWidth:1,
borderColor:'#eeeeee'},

separator:{
height:1,
backgroundColor:'#eeeeee'},

spinner:{
width:30},

scrollSpinner:{
marginVertical:20}});



module.exports = SearchBar;
});
__d('Identity/Components/VerificationRow.js',["Ionicons","react-native/Libraries/react-native/react-native.js","Identity/utils/utils.js","tradle-constants/index.js","react-mixin/index.js","Identity/Components/RowMixin.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var utils=require('Identity/utils/utils.js');
var constants=require('tradle-constants/index.js');
var Icon=require('Ionicons');
var reactMixin=require('react-mixin/index.js');
var RowMixin=require('Identity/Components/RowMixin.js');

var MONEY_TYPE='tradle.Money';var 


Image=






React.Image;var PixelRatio=React.PixelRatio;var StyleSheet=React.StyleSheet;var Text=React.Text;var TouchableHighlight=React.TouchableHighlight;var Component=React.Component;var View=React.View;var 

VerificationRow=(function(_Component){_inherits(VerificationRow,_Component);
function VerificationRow(props){_classCallCheck(this,VerificationRow);
_get(Object.getPrototypeOf(VerificationRow.prototype),'constructor',this).call(this,props);}_createClass(VerificationRow,[{key:'render',value:

function render(){
var resource=this.props.resource;
var photo;


if(resource.document && resource.document.photos)
photo = React.createElement(Image,{source:{uri:utils.getImageUri(resource.document.photos[0].url)},style:styles.cellImage});else 

photo = React.createElement(View,{style:{width:70}});









var model=utils.getModel(resource[constants.TYPE]).value;
var verificationRequest=utils.getModel(resource.document[constants.TYPE]).value;

var rows=[];

rows.push(this.addDateProp('time',styles.verySmallLetters));




if(resource.document)
this.formatDocument(verificationRequest,resource.document,rows);

var backlink=this.props.prop.items.backlink;

if(resource.to && backlink !== resource.to){
var row=resource.to.photos?
React.createElement(View,{style:{flexDirection:'row'}},
React.createElement(Text,{style:[styles.description,{color:'#7AAAc3'}]},'submitted by '),
React.createElement(Text,{style:styles.description},resource.to.title),
React.createElement(Image,{source:{uri:resource.to.photos[0].url},style:styles.icon})):

React.createElement(View,{style:{flexDirection:'row'}},
React.createElement(Text,{style:[styles.description,{color:'#7AAAc3'}]},'submitted by '),
React.createElement(Text,{style:styles.description},resource.to.title));

rows.push(row);}

if(resource.from && backlink !== resource.from){
var contentRows=[];

contentRows.push(React.createElement(Text,{style:[styles.description,{color:'#7AAAc3'}]},'verified by '));
if(resource.organization){
var orgRow=resource.organization.photos?
React.createElement(View,{style:{flexDirection:'row',flex:1}},
React.createElement(Text,{style:styles.description},resource.organization.title),
React.createElement(Image,{source:{uri:utils.getImageUri(resource.organization.photos[0].url)},style:styles.icon})):

React.createElement(Text,{style:styles.description},resource.organization.title);
contentRows.push(orgRow);}





row = React.createElement(View,{style:contentRows.length == 1?{flex:1}:{flexDirection:'row'}},
contentRows);

rows.push(row);
contentRows = [];

contentRows.push(React.createElement(Text,{style:[styles.description,{color:'#7AAAc3'}]},'representative'));
contentRows.push(React.createElement(Text,{style:styles.description},resource.from.title));

if(resource.to.photos)
contentRows.push(React.createElement(Image,{source:{uri:resource.from.photos[0].url},style:styles.icon}));

row = React.createElement(View,{style:{flexDirection:'row'}},
contentRows);

rows.push(row);}




return (
React.createElement(View,{key:this.props.key,style:{backgroundColor:'white'}},
React.createElement(TouchableHighlight,{onPress:this.props.onSelect.bind(this)},
React.createElement(View,{style:{backgroundColor:'#E0EDFA',paddingVertical:2}},
React.createElement(View,{style:styles.row,key:this.props.key + '1'},
photo,
React.createElement(View,{style:styles.textContainer,key:this.props.key + '2'},
rows)))),




React.createElement(View,{style:styles.cellBorder})));}},{key:'formatDocument',value:



function formatDocument(model,resource,renderedRow){
var viewCols=model.gridCols || model.viewCols;
if(!viewCols)
return;
var verPhoto;
var vCols=[];
var first=true;
var self=this;
var model=utils.getModel(resource[constants.TYPE] || resource.id).value;

var properties=model.properties;
var noMessage=!resource.message || !resource.message.length;
var onPressCall;

var isSimpleMessage=model.id === 'tradle.SimpleMessage';

viewCols.forEach(function(v){
if(properties[v].type === 'array' || properties[v].type === 'date')
return;
var style=styles.resourceTitle;

if(properties[v].ref){
if(resource[v]){
vCols.push(React.createElement(Text,{style:style,numberOfLines:first?2:1},resource[v].title));
first = false;}


return;}


if(resource[v] && (resource[v].indexOf('http://') == 0 || resource[v].indexOf('https://') == 0))
row = React.createElement(Text,{style:style,numberOfLines:first?2:1},resource[v]);else 
if(!model.autoCreate){
var val=properties[v].displayAs?
utils.templateIt(properties[v],resource):
resource[v];
row = React.createElement(Text,{style:style,numberOfLines:first?2:1},val);}else 

{
if(!resource[v] || !resource[v].length)
return;
var msgParts=utils.splitMessage(resource[v]);

if(msgParts.length === 2){
var msgModel=utils.getModel(msgParts[1]);
if(msgModel){
vCols.push(React.createElement(View,null,
React.createElement(Text,{style:style},msgParts[0]),
React.createElement(Text,{style:[style,{color:isMyMessage?'#efffe5':'#7AAAC3'}]},msgModel.value.title)));

return;}}


var row=React.createElement(Text,{style:style},resource[v]);}


if(first){
row = React.createElement(View,{style:{flexDirection:'row',justifyContent:'space-between'}},
React.createElement(View,null,row),
React.createElement(View,null,React.createElement(Text,{style:styles.verySmallLetters},renderedRow[0])));

renderedRow.splice(0,1);}

vCols.push(row);
first = false;});




if(vCols && vCols.length){
vCols.forEach(function(v){
renderedRow.push(v);});}}}]);return VerificationRow;})(Component);












































































































reactMixin(VerificationRow.prototype,RowMixin);

var styles=StyleSheet.create({
textContainer:{
flex:1},

resourceTitle:{
flex:1,
fontSize:16,
fontWeight:'400'},


description:{
flex:1,
flexWrap:'wrap',
color:'#999999',
fontSize:14},

row:{
backgroundColor:'white',

flexDirection:'row',
padding:5},

cellText:{
marginTop:16,
alignSelf:'center',
color:'#ffffff',
fontSize:20,
backgroundColor:'transparent'},

cellImage:{
backgroundColor:'#dddddd',
height:60,
marginRight:10,
width:60,
borderColor:'#7AAAc3',
borderRadius:10,
borderWidth:1},

cellBorder:{
backgroundColor:'#eeeeee',
height:1,
marginLeft:4},

icon:{
width:20,
height:20,
borderWidth:1,
borderColor:'#7AAAc3',
borderRadius:10,
marginRight:10,
alignSelf:'center'},

verySmallLetters:{
fontSize:12,
alignSelf:'flex-end',
color:'#b4c3cb'},

verySmallLettersCenter:{
fontSize:12,
color:'#2E3B4E'}});



module.exports = VerificationRow;
});
__d('Identity/Components/RowMixin.js',["react-native/Libraries/react-native/react-native.js","Identity/utils/utils.js","tradle-constants/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');
var utils=require('Identity/utils/utils.js');
var constants=require('tradle-constants/index.js');var 


Text=

React.Text;var View=React.View;

var RowMixin={
getMoneyProp:function(ref,moneyProp,moneyValue){
var moneyValue=this.props.resource[moneyProp.name];
var currencies=utils.getModel(ref).value.properties.currency.oneOf;
var valCurrency=moneyValue.currency;
for(var c of currencies) {
var currencySymbol=c[valCurrency];
if(currencySymbol){
var val=valCurrency == 'USD'?currencySymbol + moneyValue.value:moneyValue.value + currencySymbol;
return properties[v].skipLabel?
React.createElement(Text,{style:style,numberOfLines:first?2:1},val):
React.createElement(View,{style:{flexDirection:'row'}},React.createElement(Text,{style:style},moneyProp.title),React.createElement(Text,{style:style,numberOfLines:first?2:1},val));}}},




addDateProp:function(dateProp,style){
var resource=this.props.resource;
var properties=utils.getModel(resource[constants.TYPE] || resource.id).value.properties;

if(properties[dateProp].style)
style = [style,properties[dateProp].style];
var val=utils.formatDate(new Date(resource[dateProp]));

return properties[dateProp].skipLabel?
React.createElement(Text,{style:style},val):
React.createElement(View,{style:{flexDirection:'row'}},React.createElement(Text,{style:style},properties[dateProp].title),React.createElement(Text,{style:style},val));

return React.createElement(Text,{style:[style],numberOfLines:1},val);},

anyOtherRow:function(prop,backlink,styles){
var row;
var resource=this.props.resource;
var propValue=resource[prop.name];
if(propValue && typeof propValue != 'string')
row = React.createElement(Text,{style:style,numberOfLines:1},propValue);else 
if(!backlink && propValue && (propValue.indexOf('http://') == 0 || propValue.indexOf('https://') == 0))
row = React.createElement(Text,{style:style,onPress:this.onPress.bind(this),numberOfLines:1},propValue);else 
{
var val=prop.displayAs?utils.templateIt(prop,resource):propValue;
var msgParts=utils.splitMessage(val);
if(msgParts.length <= 2)
val = msgParts[0];else 
{
val = '';
for(var i=0;i < msgParts.length - 1;i++) {
val += msgParts[i];}}

row = React.createElement(Text,{style:style},val);}

return row;}};


module.exports = RowMixin;
});
__d('Identity/Components/MessageList.js',["react-native/Libraries/react-native/react-native.js","react-native-search-bar/SearchBar.js","Identity/Components/MessageView.js","Identity/Components/NoResources.js","Identity/Components/NewResource.js","Identity/Components/ResourceTypesScreen.js","Identity/Components/AddNewMessage.js","Identity/Components/CameraView.js","Identity/utils/utils.js","react-mixin/index.js","Identity/Store/Store.js","Identity/Actions/Actions.js","reflux/src/index.js","react-native-invertible-scroll-view/InvertibleScrollView.js","tradle-constants/index.js","Identity/Components/MessageRow.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var SearchBar=require('react-native-search-bar/SearchBar.js');
var MessageView=require('Identity/Components/MessageView.js');
var NoResources=require('Identity/Components/NoResources.js');
var NewResource=require('Identity/Components/NewResource.js');
var ResourceTypesScreen=require('Identity/Components/ResourceTypesScreen.js');
var AddNewMessage=require('Identity/Components/AddNewMessage.js');
var CameraView=require('Identity/Components/CameraView.js');
var utils=require('Identity/utils/utils.js');
var reactMixin=require('react-mixin/index.js');
var Store=require('Identity/Store/Store.js');
var Actions=require('Identity/Actions/Actions.js');
var Reflux=require('reflux/src/index.js');
var InvertibleScrollView=require('react-native-invertible-scroll-view/InvertibleScrollView.js');
var constants=require('tradle-constants/index.js');var 


ListView=




React.ListView;var Component=React.Component;var StyleSheet=React.StyleSheet;var Navigator=React.Navigator;var View=React.View;

var currentMessageTime;var 

MessageList=(function(_Component){_inherits(MessageList,_Component);
function MessageList(props){_classCallCheck(this,MessageList);
_get(Object.getPrototypeOf(MessageList.prototype),'constructor',this).call(this,props);
this.state = {
isLoading:utils.getModels()?false:true,
selectedAssets:{},
dataSource:new ListView.DataSource({
rowHasChanged:function(row1,row2){return row1 !== row2;}}),

filter:this.props.filter,
userInput:''};}_createClass(MessageList,[{key:'componentWillMount',value:


function componentWillMount(){
var params={
modelName:this.props.modelName,
to:this.props.resource,
prop:this.props.prop};

if(this.props.isAggregation)
params.isAggregation = true;
Actions.messageList(params);}},{key:'componentDidMount',value:

function componentDidMount(){
this.listenTo(Store,'onAction');}},{key:'onAction',value:


function onAction(params){
if(params.error)
return;
if(params.action === 'addItem' || params.action === 'addVerification'){
var actionParams={
query:this.state.filter,
modelName:this.props.modelName,
to:this.props.resource};


Actions.messageList(actionParams);
return;}


if(params.action !== 'messageList' || !params.list || params.isAggregation !== this.props.isAggregation)
return;
var list=params.list;
if(list.length || this.state.filter.length){
var type=list[0][constants.TYPE];
if(type !== this.props.modelName){
var model=utils.getModel(this.props.modelName).value;
if(!model.isInterface)
return;

var rModel=utils.getModel(type).value;
if(!rModel.interfaces || rModel.interfaces.indexOf(this.props.modelName) === -1)
return;}

this.setState({
dataSource:this.state.dataSource.cloneWithRows(list),
isLoading:false,
verificationsToTransfer:params.verificationsToTransfer});}}},{key:'selectResource',value:




function selectResource(resource){

if(!resource[constants.TYPE])
return;
var model=utils.getModel(resource[constants.TYPE]).value;
var title=model.title;
var newTitle=title;
if(title.length > 20){
var t=title.split(' ');
newTitle = '';
t.forEach(function(word){
if(newTitle.length + word.length > 20)
return;
newTitle += newTitle.length?' ' + word:word;});}


var route={
title:newTitle,
id:5,
backButtonTitle:'Back',
component:MessageView,
parentMeta:model,
passProps:{resource:resource}};

this.props.navigator.push(route);}},{key:'onSearchChange',value:


function onSearchChange(event){
var actionParams={
query:event.nativeEvent.text.toLowerCase(),
modelName:this.props.modelName,
to:this.props.resource};


Actions.messageList(actionParams);}},{key:'renderRow',value:


function renderRow(resource){
var model=utils.getModel(resource[constants.TYPE] || resource.id).value;
var isMessage=model.interfaces && model.interfaces.indexOf('tradle.Message') != -1;
var isAggregation=this.props.isAggregation;
var me=utils.getMe();
var MessageRow=require('Identity/Components/MessageRow.js');
var previousMessageTime=currentMessageTime;
currentMessageTime = resource.time;
return (
React.createElement(MessageRow,{
onSelect:this.selectResource.bind(this,resource),
resource:resource,
isAggregation:isAggregation,
navigator:this.props.navigator,
verificationsToTransfer:this.state.verificationsToTransfer,
previousMessageTime:previousMessageTime,
to:isAggregation?resource.to:this.props.resource}));}},{key:'addedMessage',value:


function addedMessage(text){
Actions.messageList({modelName:this.props.modelName,to:this.props.resource});}},{key:'render',value:


function render(){
if(this.state.isLoading)
return React.createElement(View,null);
currentMessageTime = null;
var content;
var model=utils.getModel(this.props.modelName).value;
if(this.state.dataSource.getRowCount() === 0)
content = React.createElement(NoResources,{
filter:this.state.filter,
model:model,
isLoading:this.state.isLoading});else 
{
var model=utils.getModel(this.props.modelName).value;
var isAllMessages=model.isInterface && model.id === 'tradle.Message';

content = React.createElement(ListView,{ref:'listview',style:{marginHorizontal:10},
dataSource:this.state.dataSource,
initialListSize:1000,
renderRow:this.renderRow.bind(this),
automaticallyAdjustContentInsets:false,
keyboardDismissMode:'on-drag',
keyboardShouldPersistTaps:true,
showsVerticalScrollIndicator:false});
if(isAllMessages)
content = 
React.createElement(InvertibleScrollView,{
ref:'messages',
inverted:true,
automaticallyAdjustContentInsets:false,
scrollEventThrottle:200},
content);}




var model=utils.getModel(this.props.modelName).value;

var addNew=model.isInterface?
React.createElement(AddNewMessage,{navigator:this.props.navigator,
resource:this.props.resource,
modelName:this.props.modelName,
onAddNewPressed:this.onAddNewPressed.bind(this),
onTakePicPressed:this.onTakePicPressed.bind(this),
onPhotoSelect:this.onPhotoSelect.bind(this),
callback:this.addedMessage.bind(this)}):
React.createElement(View,null);
return (
React.createElement(View,{style:styles.container},
React.createElement(SearchBar,{
onChangeText:this.onSearchChange.bind(this),
placeholder:'Search',
showsCancelButton:false,
hideBackground:true}),

React.createElement(View,{style:styles.separator}),
content,
addNew));}},{key:'onPhotoSelect',value:



function onPhotoSelect(asset){
var selectedAssets=this.state.selectedAssets;

if(selectedAssets[asset.node.image.uri])
delete selectedAssets[asset.node.image.uri];else 

selectedAssets[asset.node.image.uri] = asset;}},{key:'onAddNewPressed',value:

function onAddNewPressed(){
var modelName=this.props.modelName;
var model=utils.getModel(modelName).value;
var isInterface=model.isInterface;
if(!isInterface)
return;

var self=this;
var currentRoutes=self.props.navigator.getCurrentRoutes();
this.props.navigator.push({
title:utils.makeLabel(model.title) + ' type',
id:2,
component:ResourceTypesScreen,
sceneConfig:Navigator.SceneConfigs.FloatFromBottom,
backButtonTitle:'Chat',
passProps:{
resource:self.props.resource,
returnRoute:currentRoutes[currentRoutes.length - 1],
modelName:modelName,
callback:this.props.callback},

rightButtonTitle:'ion|plus',
onRightButtonPress:{
id:4,
title:'New model url',
component:NewResource,
backButtonTitle:'Back',
titleTextColor:'#7AAAC3',
rightButtonTitle:'Done',
passProps:{
model:utils.getModel('tradle.NewMessageModel').value,
callback:this.modelAdded.bind(this)}}});}},{key:'modelAdded',value:




function modelAdded(resource){
if(resource.url)
Actions.addModelFromUrl(resource.url);}},{key:'onTakePicPressed',value:

function onTakePicPressed(){
var self=this;
this.props.navigator.push({
title:'Take a pic',
backButtonTitle:'Cancel',
id:12,
component:CameraView,
sceneConfig:Navigator.SceneConfigs.FloatFromBottom,
passProps:{
onTakePic:self.onTakePic.bind(this)}});}},{key:'onTakePic',value:



function onTakePic(data){
var msg={
from:utils.getMe(),
to:this.props.resource,
time:new Date().getTime(),
photos:[{
url:data}]};


msg[constants.TYPE] = 'tradle.SimpleMessage';
this.props.navigator.pop();
Actions.addMessage(msg);}}]);return MessageList;})(Component);


reactMixin(MessageList.prototype,Reflux.ListenerMixin);

var styles=StyleSheet.create({
container:{
flex:1,
marginTop:60,
backgroundColor:'#f7f7f7'},

centerText:{
alignItems:'center'},

separator:{
height:1,
backgroundColor:'#cccccc'}});


module.exports = MessageList;
});
__d('Identity/Components/MessageView.js',["react-native/Libraries/react-native/react-native.js","Identity/utils/utils.js","tradle-constants/index.js","Identity/Components/ArticleView.js","Identity/Components/FromToView.js","Identity/Components/PhotoList.js","Identity/Components/PhotoView.js","Identity/Components/ShowPropertiesView.js","Identity/Components/MoreLikeThis.js","Identity/Components/NewResource.js","Identity/Components/VerificationButton.js","Identity/Actions/Actions.js","reflux/src/index.js","Identity/Store/Store.js","react-mixin/index.js","Identity/Components/ResourceViewMixin.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var utils=require('Identity/utils/utils.js');
var constants=require('tradle-constants/index.js');
var ArticleView=require('Identity/Components/ArticleView.js');
var FromToView=require('Identity/Components/FromToView.js');
var PhotoList=require('Identity/Components/PhotoList.js');
var PhotoView=require('Identity/Components/PhotoView.js');
var ShowPropertiesView=require('Identity/Components/ShowPropertiesView.js');
var MoreLikeThis=require('Identity/Components/MoreLikeThis.js');
var NewResource=require('Identity/Components/NewResource.js');
var VerificationButton=require('Identity/Components/VerificationButton.js');
var Actions=require('Identity/Actions/Actions.js');
var Reflux=require('reflux/src/index.js');
var Store=require('Identity/Store/Store.js');
var reactMixin=require('react-mixin/index.js');
var ResourceViewMixin=require('Identity/Components/ResourceViewMixin.js');var 


StyleSheet=




React.StyleSheet;var ScrollView=React.ScrollView;var View=React.View;var Text=React.Text;var Component=React.Component;var 

MessageView=(function(_Component){_inherits(MessageView,_Component);
function MessageView(props){_classCallCheck(this,MessageView);
_get(Object.getPrototypeOf(MessageView.prototype),'constructor',this).call(this,props);
this.state = {
resource:props.resource};}_createClass(MessageView,[{key:'componentDidMount',value:


function componentDidMount(){
this.listenTo(Store,'onAddVerification');}},{key:'onAddVerification',value:

function onAddVerification(params){
if(params.action === 'addVerification'){
this.props.navigator.pop();
Actions.messageList({
modelName:'tradle.Message',
resource:params.resource});}}},{key:'render',value:



function render(){
var resource=this.state.resource;
var modelName=resource[constants.TYPE];
var model=utils.getModel(modelName).value;
var embed=








React.createElement(View,null);
var date=utils.getFormattedDate(new Date(resource.time));
var inRow=resource.photos?resource.photos.length:0;
if(inRow && inRow > 4)
inRow = 5;
return (
React.createElement(ScrollView,{ref:'this',style:styles.container},
React.createElement(View,{style:styles.photoBG},
React.createElement(PhotoView,{resource:resource})),

React.createElement(MoreLikeThis,{resource:resource,navigator:this.props.navigator}),
React.createElement(VerificationButton,{resource:resource,verify:this.verify.bind(this),verificationList:this.showResources.bind(this)}),
React.createElement(FromToView,{resource:resource,navigator:this.props.navigator,excluded:true}),
React.createElement(View,{style:styles.band},React.createElement(Text,{style:styles.date},date)),
React.createElement(PhotoList,{photos:resource.photos,isView:true,navigator:this.props.navigator,numberInRow:inRow}),
React.createElement(View,{style:styles.rowContainer},
React.createElement(View,null,React.createElement(Text,{style:styles.itemTitle},resource.message)),
React.createElement(ShowPropertiesView,{resource:resource,excludedProperties:['tradle.Message.message','time','photos']}),
embed)));}},{key:'showEmbed',value:





















function showEmbed(){
this.setState({embedHeight:{height:60,padding:5,marginRight:10,borderColor:'#2E3B4E',backgroundColor:'#eeeeee'}});}},{key:'verify',value:

function verify(){
var resource=this.props.resource;
var model=utils.getModel(resource[constants.TYPE]).value;

var me=utils.getMe();
var from=this.props.resource.from;
var verificationModel=model.properties.verifications.items.ref;
var verification={
document:{
id:resource[constants.TYPE] + '_' + resource[constants.ROOT_HASH] + '_' + resource[constants.CUR_HASH],
title:resource.message?resource.message:model.title},

to:{
id:from.id,
title:from.title},

from:{
id:me[constants.TYPE] + '_' + me[constants.ROOT_HASH] + '_' + me[constants.CUR_HASH],
title:utils.getDisplayName(me,utils.getModel(me[constants.TYPE]).value.properties)},

time:new Date().getTime()};

verification[constants.TYPE] = verificationModel;

if(verificationModel === 'tradle.Verification')
Actions.addVerification(verification);else 
{
this.props.navigator.replace({
title:resource.message,
id:4,
component:NewResource,
backButtonTitle:resource.firstName,
rightButtonTitle:'Done',
titleTextColor:'#7AAAC3',
passProps:{
model:utils.getModel(verificationModel).value,
resource:verification}});}}},{key:'onPress',value:









function onPress(url){
this.props.navigator.push({
id:7,
component:ArticleView,
passProps:{url:url}});}}]);return MessageView;})(Component);




reactMixin(MessageView.prototype,Reflux.ListenerMixin);
reactMixin(MessageView.prototype,ResourceViewMixin);

var styles=StyleSheet.create({
container:{
marginTop:60,
flex:1},

itemTitle:{
fontSize:18,
margin:5,
marginBottom:0,
color:'#7AAAC3'},

photoBG:{
backgroundColor:'#CEE7F5',
alignItems:'center'},

band:{
height:30,
backgroundColor:'#f7f7f7',
alignSelf:'stretch'},

rowContainer:{
paddingBottom:10,
paddingHorizontal:10},

date:{
fontSize:14,
marginTop:5,
marginRight:10,
alignSelf:'flex-end',
color:'#2E3B4E'}});




module.exports = MessageView;
});
__d('Identity/Components/MoreLikeThis.js',["Ionicons","react-native/Libraries/react-native/react-native.js","Identity/utils/utils.js","Identity/Components/MessageList.js","tradle-constants/index.js","Identity/styles/buttonStyles.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var utils=require('Identity/utils/utils.js');
var MessageList=require('Identity/Components/MessageList.js');
var Icon=require('Ionicons');
var constants=require('tradle-constants/index.js');
var buttonStyles=require('Identity/styles/buttonStyles.js');var 


View=



React.View;var Text=React.Text;var TouchableHighlight=React.TouchableHighlight;var Component=React.Component;var 

MoreLikeThis=(function(_Component){_inherits(MoreLikeThis,_Component);function MoreLikeThis(){_classCallCheck(this,MoreLikeThis);_get(Object.getPrototypeOf(MoreLikeThis.prototype),'constructor',this).apply(this,arguments);}_createClass(MoreLikeThis,[{key:'showMoreLikeThis',value:
function showMoreLikeThis(){
var self=this;
var modelName=this.props.resource[constants.TYPE];
this.props.navigator.push({
title:utils.getModel(modelName).value.title,
component:MessageList,
id:11,
backButtonTitle:'Back',
passProps:{
resource:utils.getMe(),
filter:'',
isAggregation:true,
modelName:modelName}});}},{key:'render',value:



function render(){
if(this.props.resource[constants.TYPE] === 'tradle.SimpleMessage')
return null;
return (
React.createElement(View,{style:[buttonStyles.container,{top:15}]},
React.createElement(TouchableHighlight,{underlayColor:'transparent',onPress:this.showMoreLikeThis.bind(this)},
React.createElement(View,null,
React.createElement(View,{style:buttonStyles.buttonContent}),
React.createElement(View,{style:buttonStyles.row},
React.createElement(Icon,{name:'arrow-shrink',size:20,color:'#ffffff',style:buttonStyles.icon}),
React.createElement(Text,{style:buttonStyles.text},'More like this'))))));}}]);return MoreLikeThis;})(Component);








module.exports = MoreLikeThis;
});
__d('Identity/Components/VerificationButton.js',["Ionicons","react-native/Libraries/react-native/react-native.js","Identity/utils/utils.js","react-mixin/index.js","tradle-constants/index.js","Identity/styles/buttonStyles.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var utils=require('Identity/utils/utils.js');
var Icon=require('Ionicons');
var reactMixin=require('react-mixin/index.js');
var constants=require('tradle-constants/index.js');
var buttonStyles=require('Identity/styles/buttonStyles.js');var 


StyleSheet=




React.StyleSheet;var View=React.View;var Text=React.Text;var TouchableHighlight=React.TouchableHighlight;var Component=React.Component;var 

VerificationButton=(function(_Component){_inherits(VerificationButton,_Component);function VerificationButton(){_classCallCheck(this,VerificationButton);_get(Object.getPrototypeOf(VerificationButton.prototype),'constructor',this).apply(this,arguments);}_createClass(VerificationButton,[{key:'render',value:
function render(){
var resource=this.props.resource;
var model=utils.getModel(resource[constants.TYPE]).value;

if(!model.properties.verifications)
return null;

var me=utils.getMe();
var meId=me[constants.TYPE] + '_' + me[constants.ROOT_HASH];
var s=resource.from.id.split('_');
var fromId=s[0] + '_' + s[1];

if(!resource.from || fromId === meId)
return React.createElement(View,null);

var verifiedByMe;
if(resource.verifications){
resource.verifications.forEach(function(r){
var rh=r.from[constants.ROOT_HASH];
if(!rh)
rh = utils.getId(r.from).split('_')[1];

if(rh === me[constants.ROOT_HASH])
verifiedByMe = true;});}



return (
React.createElement(View,{style:[buttonStyles.container,{top:60}]},
React.createElement(TouchableHighlight,{underlayColor:'transparent',onPress:verifiedByMe?this.props.verificationList.bind(this,resource,model.properties['verifications']):this.props.verify.bind(this)},
React.createElement(View,null,
React.createElement(View,{style:buttonStyles.buttonContent}),
React.createElement(View,{style:buttonStyles.row},
React.createElement(Icon,{name:'checkmark',size:20,color:'#ffffff',style:buttonStyles.icon}),
React.createElement(Text,{style:buttonStyles.text},verifiedByMe?'Verifications':'Verify'))))));}}]);return VerificationButton;})(Component);








var styles=StyleSheet.create({
icon:{
width:40,
height:40,
borderWidth:2,
borderColor:'#D7E6ED',
backgroundColor:'#7AAAC3',
borderRadius:20}});



module.exports = VerificationButton;
});
__d('Identity/Components/ResourceTypesScreen.js',["react-native/Libraries/react-native/react-native.js","Identity/Components/NewResource.js","Identity/utils/utils.js","react-mixin/index.js","Identity/Store/Store.js","Identity/Actions/Actions.js","reflux/src/index.js","tradle-constants/index.js","Identity/Components/MessageRow.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var NewResource=require('Identity/Components/NewResource.js');
var utils=require('Identity/utils/utils.js');
var reactMixin=require('react-mixin/index.js');
var Store=require('Identity/Store/Store.js');
var Actions=require('Identity/Actions/Actions.js');
var Reflux=require('reflux/src/index.js');
var constants=require('tradle-constants/index.js');var 


ListView=




React.ListView;var Text=React.Text;var Component=React.Component;var StyleSheet=React.StyleSheet;var View=React.View;var 


ResourceTypesScreen=(function(_Component){_inherits(ResourceTypesScreen,_Component);
function ResourceTypesScreen(props){_classCallCheck(this,ResourceTypesScreen);
_get(Object.getPrototypeOf(ResourceTypesScreen.prototype),'constructor',this).call(this,props);
var implementors=utils.getImplementors(this.props.modelName);

var dataSource=new ListView.DataSource({
rowHasChanged:function(row1,row2){return row1 !== row2;}});

this.state = {
implementors:implementors,
dataSource:dataSource.cloneWithRows(implementors),
newModelAdded:false};}_createClass(ResourceTypesScreen,[{key:'componentDidMount',value:


function componentDidMount(){
this.listenTo(Store,'onNewModelAdded');}},{key:'onNewModelAdded',value:

function onNewModelAdded(params){
if(params.action !== 'newModelAdded')
return;
if(params.err)
this.setState({err:params.err});else 
{
var implementors=this.state.implementors;
implementors.push(params.newModel);
this.setState({
implementors:implementors,
dataSource:this.state.dataSource.cloneWithRows(this.state.implementors)});}}},{key:'selectResource',value:



function selectResource(resource){

var model=utils.getModel(this.props.modelName);

if(resource[constants.TYPE])
return;
var page={
model:utils.getModel(resource.id).value,
resource:{
'from':utils.getMe(),
'to':this.props.resource}};


page.resource[constants.TYPE] = this.props.modelName;

if(this.props.returnRoute)
page.returnRoute = this.props.returnRoute;
if(this.props.callback)
page.callback = this.props.callback;
this.props.navigator.replace({
id:4,
title:resource.title,
rightButtonTitle:'Done',
component:NewResource,
titleTextColor:'#7AAAC3',
passProps:page});}},{key:'renderRow',value:



function renderRow(resource){var _this=this;
var model=utils.getModel(resource[constants.TYPE] || resource.id).value;
var isMessage=model.interfaces && model.interfaces.indexOf('tradle.Message') != -1;
var MessageRow=require('Identity/Components/MessageRow.js');

return (
React.createElement(MessageRow,{
onSelect:function(){return _this.selectResource(resource);},
resource:resource,
navigator:this.props.navigator,
to:this.props.resource}));}},{key:'render',value:


function render(){
var content=
React.createElement(ListView,{ref:'listview',style:styles.listview,
dataSource:this.state.dataSource,
renderRow:this.renderRow.bind(this),
automaticallyAdjustContentInsets:false,
keyboardDismissMode:'on-drag',
keyboardShouldPersistTaps:true,
showsVerticalScrollIndicator:false});

var err=this.state.err?
React.createElement(View,{style:styles.errContainer},React.createElement(Text,{style:styles.err},this.state.err)):
React.createElement(View,null);
return (
React.createElement(View,{style:styles.container},
err,
content));}}]);return ResourceTypesScreen;})(Component);




reactMixin(ResourceTypesScreen.prototype,Reflux.ListenerMixin);

var styles=StyleSheet.create({
container:{
flex:1,
backgroundColor:'white'},

listview:{
marginTop:64},

centerText:{
alignItems:'center'},

err:{
color:'#D7E6ED'},

errContainer:{
height:45,
paddingTop:5,
paddingHorizontal:10,
backgroundColor:'#eeeeee'}});



module.exports = ResourceTypesScreen;
});
__d('Identity/Components/MessageRow.js',["Ionicons","groupByEveryN","LinearGradient","react-native/Libraries/react-native/react-native.js","Identity/utils/utils.js","Identity/Components/ArticleView.js","Identity/Components/MessageView.js","Identity/Components/NewResource.js","Identity/Components/PhotoList.js","extend/index.js","tradle-constants/index.js","Identity/Components/RowMixin.js","react-mixin/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var utils=require('Identity/utils/utils.js');
var ArticleView=require('Identity/Components/ArticleView.js');
var MessageView=require('Identity/Components/MessageView.js');
var NewResource=require('Identity/Components/NewResource.js');
var PhotoList=require('Identity/Components/PhotoList.js');
var Icon=require('Ionicons');
var extend=require('extend/index.js');
var groupByEveryN=require('groupByEveryN');
var constants=require('tradle-constants/index.js');
var LinearGradient=require('LinearGradient');
var RowMixin=require('Identity/Components/RowMixin.js');
var reactMixin=require('react-mixin/index.js');var 


Image=






React.Image;var StyleSheet=React.StyleSheet;var Text=React.Text;var TouchableHighlight=React.TouchableHighlight;var ListView=React.ListView;var Component=React.Component;var View=React.View;var 

MessageRow=(function(_Component){_inherits(MessageRow,_Component);
function MessageRow(props){_classCallCheck(this,MessageRow);
_get(Object.getPrototypeOf(MessageRow.prototype),'constructor',this).call(this,props);
var dataSource=new ListView.DataSource({
rowHasChanged:function(row1,row2){return row1 !== row2;}});


this.state = {
resource:this.props.resource,
dataSource:dataSource};}_createClass(MessageRow,[{key:'render',value:






function render(){
var resource=this.props.resource;
var isModel=!resource[constants.TYPE];
if(isModel && resource.autoCreate)
return React.createElement(View,{style:{height:0}});
var model=utils.getModel(resource[constants.TYPE] || resource.id).value;
var me=utils.getMe();
var isMyMessage;
if(!isModel && !this.props.isAggregation){
var fromHash=utils.getId(resource.from);
if(fromHash == me[constants.TYPE] + '_' + me[constants.ROOT_HASH])
isMyMessage = true;}

var to=this.props.to;
var ownerPhoto,hasOwnerPhoto;
if(isModel){
if(resource.owner && resource.owner.photos){
hasOwnerPhoto = true;
var uri=utils.getImageUri(resource.owner.photos[0].url);
ownerPhoto = 
React.createElement(View,{style:[styles.cell,{marginVertical:2}]},
React.createElement(Image,{source:{uri:uri},style:styles.msgImage}));}else 



ownerPhoto = React.createElement(View,{style:[styles.cell,{marginVertical:20}]});}else 

{
if(isMyMessage || !to || !to.photos)
ownerPhoto = React.createElement(View,{style:[styles.cell,{marginVertical:0}]});else 
if(to){
if(to.photos){
var uri=utils.getImageUri(to.photos[0].url);
ownerPhoto = React.createElement(Image,{source:{uri:uri},style:styles.msgImage});
hasOwnerPhoto = true;}else 

if(!isMyMessage){
var title=resource.to.title.split(' ').map(function(s){
return s.charAt(0);}).
join('');
ownerPhoto = React.createElement(LinearGradient,{colors:['#A4CCE0','#7AAAc3','#5E92AD'],style:styles.cellRoundImage},
React.createElement(Text,{style:styles.cellText},title));}}}




var renderedRow=[];
var onPressCall;
if(isModel)
onPressCall = this.props.onSelect;else 

onPressCall = this.formatRow(isMyMessage,model,resource,renderedRow);

var photoUrls=[];
var photoListStyle={height:isModel?0:3};
var addStyle,inRow;
var noMessage=!resource.message || !resource.message.length;
if(!renderedRow.length){
var vCols=isModel?
utils.getDisplayName(resource):
noMessage?null:utils.getDisplayName(resource,model.properties);
if(vCols)
renderedRow = React.createElement(Text,{style:isModel?styles.modelTitle:styles.resourceTitle,numberOfLines:2},vCols);}else 

if(!isModel){
var fromHash=resource.from.id;
if(isMyMessage){
if(!noMessage)
addStyle = styles.myCell;}else 

{
if(!model.style)
addStyle = {padding:5,borderRadius:10,borderColor:'#cccccc',backgroundColor:'#ffffff',marginVertical:2};}




if(model.style)
addStyle = [addStyle,{padding:5,borderRadius:10,backgroundColor:'#efffe5',borderWidth:1,borderColor:'#deeeb4',marginVertical:2}];}


var properties=model.properties;
var verPhoto;
if(!isModel && properties.photos){
if(resource.photos){
var len=resource.photos.length;
inRow = len === 1?1:len == 2 || len == 4?2:3;
var style;
if(inRow === 1)
style = styles.bigImage;else 
if(inRow === 2)
style = styles.mediumImage;else 

style = styles.image;
for(var p of resource.photos) 
photoUrls.push({url:utils.getImageUri(p.url)});

photoListStyle = {
flexDirection:'row',
alignSelf:isMyMessage?'flex-end':'flex-start',
marginLeft:isMyMessage?30:55,
borderRadius:10,
marginBottom:3};}else 



verPhoto = React.createElement(View,{style:{height:0,width:0}});}else 

if(isModel && resource.owner && resource.owner.photos){
var ownerImg=resource.owner.photos[0].url;
var url=utils.getImageUri(ownerImg);
verPhoto = React.createElement(Image,{source:{uri:ownerImg},style:styles.ownerImage});}

var rowStyle=isModel && model.style?
[styles.row,{backgroundColor:'#efffe5'}]:
noMessage?{}:styles.row;
var val;
var date;
if(!isModel && resource.time){
var previousMessageTime=this.props.previousMessageTime;
var showTime=!previousMessageTime || this.props.isAggregation;

if(!showTime){
var prevDate=new Date(previousMessageTime);
var curDate=new Date(resource.time);
showTime = resource.time - previousMessageTime > 3600000 || 
prevDate.getDate() !== curDate.getDate() || 
prevDate.getMonth() !== curDate.getMonth() || 
prevDate.getYear() !== curDate.getYear();}


if(showTime)
val = utils.getFormattedDate(resource.time);}


var date=val?
React.createElement(Text,{style:styles.date,numberOfLines:1},val):
React.createElement(View,null);

var showMessageBody;
if(!isModel && noMessage){
if(hasOwnerPhoto)
showMessageBody = true;}else 


showMessageBody = true;
var messageBody;
var isSimpleMessage=model.id === 'tradle.SimpleMessage';
if(showMessageBody){
var viewStyle;
if(!isModel){
viewStyle = {flexDirection:'row',alignSelf:isMyMessage?'flex-end':'flex-start'};
if(!noMessage && resource.message.length > 30 || !isSimpleMessage)
viewStyle.width = 260;}
















messageBody = 
React.createElement(TouchableHighlight,{onPress:onPressCall?onPressCall:function(){},underlayColor:'transparent'},
React.createElement(View,{style:[rowStyle,viewStyle]},
isModel?React.createElement(View,{style:{paddingLeft:10}}):ownerPhoto,
React.createElement(View,{style:addStyle?[styles.textContainer,addStyle]:styles.textContainer},
React.createElement(View,{style:{flex:1}},
renderedRow)),


!isModel?React.createElement(View,null):ownerPhoto));}else 




messageBody = React.createElement(View,{style:{height:5}});
var len=photoUrls.length;
var inRow=len?len === 1?1:len % 2?3:2:0;
var photoStyle={};
if(inRow > 0){
if(inRow === 1)
photoStyle = styles.bigImage;else 
if(inRow === 2)
photoStyle = styles.mediumImage;else 

photoStyle = styles.image;}


var viewStyle={margin:1,backgroundColor:'#f7f7f7'};

return (
React.createElement(View,{style:viewStyle,key:resource},
date,
messageBody,
React.createElement(View,{style:photoListStyle},
React.createElement(PhotoList,{photos:photoUrls,style:[photoStyle,{marginTop:-20}],navigator:this.props.navigator,numberInRow:inRow}))));}},{key:'onPress',value:




function onPress(event){
this.props.navigator.push({
id:7,
component:ArticleView,
passProps:{url:this.props.resource.message}});}},{key:'createNewResource',value:


function createNewResource(model){
var resource={
'from':this.props.resource.to,
'to':this.props.resource.from,
'message':this.props.resource.message};

resource[constants.TYPE] = model.id;

this.props.navigator.push({
id:4,
title:model.title,
rightButtonTitle:'Done',
component:NewResource,
titleTextColor:'#7AAAC3',
passProps:{
model:model,
resource:resource}});}},{key:'verify',value:




function verify(event){
var self=this;
var resource=self.props.resource;
var model=utils.getModel(resource[constants.TYPE]).value;
this.props.navigator.push({
id:5,
component:MessageView,
backButtonTitle:'Back',














passProps:{resource:self.props.resource,verify:true},
title:resource[constants.TYPE] == 'tradle.AssetVerification'?'Doc verification':model.title});}},{key:'formatRow',value:


function formatRow(isMyMessage,model,resource,renderedRow){
var viewCols=model.gridCols || model.viewCols;
if(!viewCols)
return;
var verPhoto;
var vCols=[];
var first=true;
var self=this;
var model=utils.getModel(resource[constants.TYPE] || resource.id).value;

var properties=model.properties;
var noMessage=!resource.message || !resource.message.length;
var onPressCall;

var isSimpleMessage=model.id === 'tradle.SimpleMessage';
var cnt=0;
viewCols.forEach(function(v){
if(properties[v].type === 'array' || properties[v].type === 'date')
return;
var style=styles.resourceTitle;
if(isMyMessage){
style = [style,{justifyContent:'flex-end',paddingLeft:5}];
if(isSimpleMessage)
style.push({color:'#ffffff'});}


if(properties[v].ref){
if(resource[v]){
vCols.push(React.createElement(Text,{style:style,numberOfLines:first?2:1},resource[v].title));
first = false;}

return;}


if(resource[v] && (resource[v].indexOf('http://') == 0 || resource[v].indexOf('https://') == 0)){
onPressCall = self.onPress.bind(self);
vCols.push(React.createElement(Text,{style:style,numberOfLines:first?2:1},resource[v]));}else 

if(!model.autoCreate){
var val=properties[v].displayAs?
utils.templateIt(properties[v],resource):
resource[v];
if(model.properties.verifications && !isMyMessage)
onPressCall = self.verify.bind(self);
vCols.push(React.createElement(Text,{style:style,numberOfLines:first?2:1},val));}else 

{
if(!resource[v] || !resource[v].length)
return;
var msgParts=utils.splitMessage(resource[v]);

if(msgParts.length === 2){
var msgModel=utils.getModel(msgParts[1]);
if(msgModel){
msgModel = msgModel.value;
if(!isMyMessage)
onPressCall = self.createNewResource.bind(self,msgModel);
vCols.push(React.createElement(View,null,
React.createElement(Text,{style:style},msgParts[0]),
React.createElement(Text,{style:[style,{color:isMyMessage?'#efffe5':'#7AAAC3'}]},msgModel.title)));

if(self.props.verificationsToTransfer){
var vtt=[];
var cnt=0;
for(var t in self.props.verificationsToTransfer) {
if(t === msgModel.id){
var ver=self.props.verificationsToTransfer[t];
ver.forEach(function(r){
var vModel=utils.getModel(r[constants.TYPE]);
var doc=self.formatDocument(msgModel,r);
if(cnt){
doc = React.createElement(View,null,
React.createElement(View,{style:{height:1,backgroundColor:'#dddddd'}}),
doc);}



vtt.push(doc);
cnt++;});}}



if(vtt.length){
var orgRow;
if(resource.organization){
orgRow = resource.organization.photos?
React.createElement(View,{style:{flexDirection:'row',flex:1}},
React.createElement(Image,{source:{uri:utils.getImageUri(resource.organization.photos[0].url)},style:styles.icon}),
React.createElement(Text,{style:styles.verySmallLetters},resource.organization.title)):

React.createElement(Text,{style:styles.description},resource.organization.title);
orgRow = React.createElement(TouchableHighlight,{underlayColor:'transparent',onPress:this.transferDocs.bind(this)},
orgRow);}else 






orgRow = React.createElement(View,null);

vCols.push(
React.createElement(View,null,
React.createElement(View,{style:{flexDirection:'row'}},
React.createElement(View,{style:{alignSelf:'center'}},React.createElement(Text,null,'OR'))),

React.createElement(View,{style:{backgroundColor:'#efffe5',padding:5,marginVertical:5}},
React.createElement(Text,{style:styles.verifications},'Choose one of already verified documents from the list below'),
orgRow),

vtt));}}



return;}}


vCols.push(React.createElement(Text,{style:style},resource[v]));}

first = false;});


if(model.id !== 'tradle.SimpleMessage'){
var t=model.title.split(' ');
var s='';
t.forEach(function(p){
if(p.indexOf('Verif') === -1)
s += p + ' ';});



if(resource.verifications && resource.verifications.length){
var verifications=[];
resource.verifications.forEach(function(v){
if(v.organization && v.organization.photo){
verifications.push(React.createElement(Text,{style:styles.verySmallLetters},v.organization.title));
verifications.push(React.createElement(Image,{source:{uri:v.organization.photo},style:styles.orgImage}));}});


vCols.push(React.createElement(View,{style:styles.verificationCheck},
React.createElement(Text,{style:styles.verySmallLetters},s,'verified by '),
verifications));}else 



vCols.push(React.createElement(Text,{style:styles.verySmallLetters},s));}

if(vCols && vCols.length)
extend(renderedRow,vCols);
return onPressCall?onPressCall:isSimpleMessage?null:this.props.onSelect;}},{key:'transferDocs',value:

function transferDocs(){}},{key:'formatDocument',value:


function formatDocument(model,verification){
var resource=verification.document;
var self=this;

var msg=resource.message?
React.createElement(View,null,React.createElement(Text,{style:styles.verySmallLetters},resource.message)):
React.createElement(View,null);

var photo=resource && resource.photos?
React.createElement(Image,{source:{uri:utils.getImageUri(resource.photos[0].url)},style:styles.cellImage}):
React.createElement(View,null);

var orgRow;
if(verification.organization){
var orgPhoto=verification.organization.photo?
React.createElement(Image,{source:{uri:utils.getImageUri(verification.organization.photo)},style:[styles.orgImage,{marginTop:-5}]}):
React.createElement(View,null);
orgRow = React.createElement(View,{style:{flexDirection:'row',flex:1}},
React.createElement(Text,{style:[styles.verySmallLetters,{color:'#7AAAc3'}]},'verified by '),
React.createElement(Text,{style:styles.verySmallLetters},verification.organization.title.length < 10?verification.organization.title:verification.organization.title.substring(0,8) + '..'),
orgPhoto);}else 



orgRow = React.createElement(View,null);

return React.createElement(View,{style:{flex:1,flexDirection:'row',paddingVertical:5}},
React.createElement(View,null,
photo),

React.createElement(View,null,
msg,
orgRow));}},{key:'onSelect',value:



function onSelect(){}}]);return MessageRow;})(Component);





var styles=StyleSheet.create({
textContainer:{
flex:1,
flexDirection:'row'},

modelTitle:{
flex:1,
flexWrap:'wrap',
fontSize:22,
fontWeight:'400',
marginVertical:15},

resourceTitle:{
flex:1,
fontSize:16,
fontWeight:'400',
marginBottom:2},

date:{
flex:1,
color:'#999999',
fontSize:12,
alignSelf:'center',
paddingTop:10},

row:{
alignItems:'center',
backgroundColor:'#f7f7f7',
flexDirection:'row'},

cell:{
marginLeft:10},

myCell:{
padding:5,
justifyContent:'flex-end',
borderRadius:10,
backgroundColor:'#569bff'},

msgImage:{
backgroundColor:'#dddddd',
height:50,
marginRight:5,
width:50,
borderRadius:25,
borderColor:'#cccccc',
borderWidth:1},

bigImage:{
width:240,
height:280,
margin:1,
borderRadius:10},

mediumImage:{
width:120,
height:120,
margin:1,
borderRadius:10},

image:{
width:80,
height:80,
margin:1,
borderRadius:10},

ownerImage:{
backgroundColor:'#dddddd',
height:30,
width:30,
marginTop:-5,
position:'absolute',
right:10,
borderRadius:15,
borderColor:'#cccccc',
borderWidth:1},

verifications:{
fontSize:12,
backgroundColor:'#efffe5'},

verySmallLetters:{
fontSize:12,
alignSelf:'flex-end',
color:'#b4c3cb'},

orgImage:{
width:20,
height:20,
marginLeft:5,

borderRadius:10},

verificationCheck:{
flexDirection:'row',
alignSelf:'flex-end',
padding:3,
marginVertical:5},


cellRoundImage:{
paddingVertical:1,
borderRadius:30,
height:60,
marginRight:10,
width:60,
alignSelf:'center'},

cellText:{
marginTop:16,
alignSelf:'center',
color:'#ffffff',
fontSize:20,
backgroundColor:'transparent'},

cellImage:{
backgroundColor:'#dddddd',
height:30,
marginRight:10,
width:30,
borderColor:'transparent',
borderRadius:10,
borderWidth:1},

icon:{
width:20,
height:20,
marginLeft:4,
borderWidth:1,
borderColor:'#eeeeee',
borderRadius:10,
marginRight:5}});



reactMixin(MessageRow.prototype,RowMixin);

module.exports = MessageRow;
});
__d('Identity/Components/AddNewMessage.js',["image!clipadd","NativeModules","ActionSheetIOS","react-native/Libraries/react-native/react-native.js","Identity/utils/utils.js","Identity/Components/ChatMessage.js","Identity/Components/SelectPhotoList.js","react-native-icons/index.js","extend/index.js","Identity/Store/Store.js","react-mixin/index.js","reflux/src/index.js","Identity/Actions/Actions.js","react-native-keyboardevents/KeyboardEvents.ios.js","tradle-constants/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var utils=require('Identity/utils/utils.js');
var ChatMessage=require('Identity/Components/ChatMessage.js');
var SelectPhotoList=require('Identity/Components/SelectPhotoList.js');var _require=
require('react-native-icons/index.js');var Icon=_require.Icon;
var extend=require('extend/index.js');
var Store=require('Identity/Store/Store.js');
var reactMixin=require('react-mixin/index.js');
var Reflux=require('reflux/src/index.js');
var Actions=require('Identity/Actions/Actions.js');
var KeyboardEvents=require('react-native-keyboardevents/KeyboardEvents.ios.js');
var constants=require('tradle-constants/index.js');

var KeyboardEventEmitter=KeyboardEvents.Emitter;
var UIImagePickerManager=require('NativeModules').UIImagePickerManager;var 


View=






React.View;var TouchableHighlight=React.TouchableHighlight;var Navigator=React.Navigator;var Image=React.Image;var StyleSheet=React.StyleSheet;var LayoutAnimation=React.LayoutAnimation;var Component=React.Component;

var ActionSheetIOS=require('ActionSheetIOS');

var interfaceToTypeMapping={
'tradle.Message':'tradle.SimpleMessage'};var 


AddNewMessage=(function(_Component){_inherits(AddNewMessage,_Component);
function AddNewMessage(props){_classCallCheck(this,AddNewMessage);
_get(Object.getPrototypeOf(AddNewMessage.prototype),'constructor',this).call(this,props);

this.updateKeyboardSpace = this.updateKeyboardSpace.bind(this);
this.resetKeyboardSpace = this.resetKeyboardSpace.bind(this);
this.state = {
keyboardSpace:0,
selectedAssets:{},
userInput:''};}_createClass(AddNewMessage,[{key:'updateKeyboardSpace',value:


function updateKeyboardSpace(frames){

this.setState({keyboardSpace:frames.end.height});}},{key:'resetKeyboardSpace',value:


function resetKeyboardSpace(){

this.setState({keyboardSpace:0});}},{key:'componentDidMount',value:


function componentDidMount(){
this.listenTo(Store,'onAddMessage');
KeyboardEventEmitter.on(KeyboardEvents.KeyboardDidShowEvent,this.updateKeyboardSpace);
KeyboardEventEmitter.on(KeyboardEvents.KeyboardWillHideEvent,this.resetKeyboardSpace);}},{key:'componentWillUnmount',value:


function componentWillUnmount(){
KeyboardEventEmitter.off(KeyboardEvents.KeyboardDidShowEvent,this.updateKeyboardSpace);
KeyboardEventEmitter.off(KeyboardEvents.KeyboardWillHideEvent,this.resetKeyboardSpace);}},{key:'onAddMessage',value:


function onAddMessage(params){
if(params.action !== 'addMessage')
return;
var resource=params.resource;
if(!resource)
return;
if(params.error){
if(resource[constants.TYPE] == this.props.resource[constants.TYPE])
this.setState({err:params.error});
return;}

var model=utils.getModel(resource[constants.TYPE]).value;
var isMessage=model.interfaces && model.interfaces.indexOf('tradle.Message') != -1;
if(isMessage){
if(this.props.callback){
this.props.callback('');
this.setState({userInput:''});}}}},{key:'render',value:







function render(){
var resource={from:utils.getMe(),to:this.props.resource};
var model=utils.getModel(this.props.modelName).value;
return (
React.createElement(View,{style:{height:this.state.keyboardSpace + 45}},
React.createElement(View,{style:styles.addNew},
React.createElement(TouchableHighlight,{style:{paddingLeft:5},underlayColor:'#eeeeee',
onPress:this.props.onAddNewPressed.bind(this)},
React.createElement(Image,{source:require('image!clipadd'),style:styles.image})),

React.createElement(View,{style:styles.searchBar},
React.createElement(ChatMessage,{ref:'chat',resource:resource,
model:model,
callback:this.props.callback,
onSubmitEditing:this.onSubmitEditing.bind(this),
onChange:this.onChange.bind(this),
onEndEditing:this.onEndEditing.bind(this)})),

React.createElement(TouchableHighlight,{style:{paddingRight:5},underlayColor:'transparent',
onPress:this.showChoice.bind(this)},
React.createElement(View,null,
React.createElement(Icon,{name:'ion|ios-camera',style:styles.image,size:35,color:'#aaaaaa'}))))));}},{key:'onChange',value:







function onChange(event){
this.setState({userInput:event.nativeEvent.text});}},{key:'showChoice',value:

function showChoice(){
var self=this;
UIImagePickerManager.showImagePicker(null,function(type,response){
if(type !== 'cancel'){
var selectedAssets=self.state.selectedAssets;
if(type === 'data')
selectedAssets['data:image/jpeg;base64,' + response] = 'y';else 
{

if(selectedAssets[response])
delete selectedAssets[response];else 

selectedAssets[response] = 'y';}



self.onSubmitEditing(self.state.userInput);}else 
{
console.log('Cancel');}});}},{key:'showChoice1',value:




function showChoice1(){
var buttons=['Take photo','Photo library','Cancel'];
var self=this;
ActionSheetIOS.showActionSheetWithOptions({
options:buttons,
cancelButtonIndex:2},
function(buttonIndex){
if(buttonIndex == 0)
self.props.onTakePicPressed();else 

self.selectPhotoFromTheLibrary();});}},{key:'onButtonPress',value:


function onButtonPress(buttonIndex){
if(buttonIndex == 0)
this.props.onTakePicPressed();else 
if(buttonIndex == 1)
this.selectPhotoFromTheLibrary();}},{key:'onPhotoSelect',value:

function onPhotoSelect(asset){
var selectedAssets=this.state.selectedAssets;

if(selectedAssets[asset.node.image.uri])
delete selectedAssets[asset.node.image.uri];else 

selectedAssets[asset.node.image.uri] = asset;}},{key:'selectPhotoFromTheLibrary',value:


function selectPhotoFromTheLibrary(){
var model=utils.getModel(this.props.modelName).value;
if(model.isInterface)
model = utils.getModel(interfaceToTypeMapping[this.props.modelName]).value;

var self=this;
this.props.navigator.push({
id:13,
title:'Select photos',
component:SelectPhotoList,
rightButtonTitle:'Done',
onRightButtonPress:{
before:this.beforeDone.bind(this),
stateChange:this.onSubmitEditing.bind(this)},

sceneConfig:Navigator.SceneConfigs.FloatFromBottom,
passProps:{
navigator:self.props.navigator,
onSelect:self.onPhotoSelect.bind(this),
onSelectingEnd:self.onSubmitEditing.bind(this),
metadata:model.properties.photos}});}},{key:'beforeDone',value:



function beforeDone(){
this.props.navigator.pop();}},{key:'onEndEditing',value:

function onEndEditing(userInput,clearCallback){
this.setState({userInput:userInput});

if(clearCallback)
this.state.clearCallback = clearCallback;}},{key:'onSubmitEditing',value:


function onSubmitEditing(msg){
msg = msg?msg:this.state.userInput;
var assets=this.state.selectedAssets;
var isNoAssets=utils.isEmpty(assets);
if(!msg && isNoAssets)
return;
var me=utils.getMe();
var resource={from:utils.getMe(),to:this.props.resource};
var model=utils.getModel(this.props.modelName).value;

var toName=utils.getDisplayName(resource.to,utils.getModel(resource.to[constants.TYPE]).value.properties);
var meta=utils.getModel(me[constants.TYPE]).value.properties;
var meName=utils.getDisplayName(me,meta);
var modelName='tradle.SimpleMessage';
var value={
message:msg?
model.isInterface?msg:'[' + this.state.userInput + '](' + this.props.model.id + ')':
'',
from:me,
to:resource.to,
time:new Date().getTime()};

value[constants.TYPE] = modelName;
if(!isNoAssets){
var photos=[];
for(var assetUri in assets) 
photos.push({url:assetUri,title:'photo'});

value.photos = photos;}

this.setState({userInput:'',selectedAssets:{}});
if(this.state.clearCallback)
this.state.clearCallback();
Actions.addMessage(value);}}]);return AddNewMessage;})(Component);


reactMixin(AddNewMessage.prototype,Reflux.ListenerMixin);
var animations={
layout:{
spring:{
duration:400,
create:{
duration:300,
type:LayoutAnimation.Types.easeInEaseOut,
property:LayoutAnimation.Properties.opacity},

update:{
type:LayoutAnimation.Types.spring,
springDamping:1}},


easeInEaseOut:{
duration:400,
create:{
type:LayoutAnimation.Types.easeInEaseOut,
property:LayoutAnimation.Properties.scaleXY},

update:{
type:LayoutAnimation.Types.easeInEaseOut}}}};




var styles=StyleSheet.create({
searchBar:{
flex:4,
padding:10,
paddingTop:3,
height:45,
paddingBottom:13,
flexDirection:'row',
alignItems:'center',
backgroundColor:'#eeeeee'},

image:{
width:40,
height:40},

addNew:{
flexDirection:'row',
alignItems:'center',
backgroundColor:'#eeeeee',
borderBottomColor:'#eeeeee',
borderRightColor:'#eeeeee',
borderLeftColor:'#eeeeee',
borderWidth:1,
borderTopColor:'#cccccc'}});



module.exports = AddNewMessage;
});
__d('image!clipadd',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/Ellen/lablz/Identity/iOS/Images.xcassets/clipadd.imageset/clipadd.png","uri":"clipadd","width":72,"height":72,"deprecated":true};
});
__d('Identity/Components/CameraView.js',["react-native/Libraries/react-native/react-native.js","react-native-camera/Camera.ios.js","react-native-icons/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}var React=require('react-native/Libraries/react-native/react-native.js');var 

AppRegistry=





React.AppRegistry;var StyleSheet=React.StyleSheet;var Text=React.Text;var View=React.View;var Component=React.Component;var TouchableHighlight=React.TouchableHighlight;
var Camera=require('react-native-camera/Camera.ios.js');var _require=
require('react-native-icons/index.js');var Icon=_require.Icon;var 

CameraView=(function(_Component){_inherits(CameraView,_Component);
function CameraView(props){_classCallCheck(this,CameraView);
_get(Object.getPrototypeOf(CameraView.prototype),'constructor',this).call(this,props);
this.state = {
cameraType:Camera.constants.Type.back};}_createClass(CameraView,[{key:'render',value:



function render(){
return (
React.createElement(View,{style:styles.container},
React.createElement(Camera,{
ref:'cam',
captureTarget:Camera.constants.CaptureTarget.cameraRoll,
style:styles.container,
onBarCodeRead:this._onBarCodeRead.bind(this),
type:this.state.cameraType},
React.createElement(TouchableHighlight,{onPress:this._switchCamera.bind(this)},
React.createElement(Text,null,'The old switcheroo'))),


React.createElement(View,{style:{backgroundColor:'#000000',paddingTop:7,height:125,alignSelf:'stretch'}},
React.createElement(View,{style:{flexDirection:'row',justifyContent:'center'}},
React.createElement(Text,{style:{color:'#eeeeee',paddingHorizontal:5,fontSize:24,fontWeight:'400'}},'Video'),
React.createElement(Text,{style:{color:'yellow',paddingHorizontal:5,fontSize:24,fontWeight:'400'}},'Photo')),

React.createElement(TouchableHighlight,{onPress:this._takePicture.bind(this)},
React.createElement(Icon,{name:'ion|ios-circle-filled',size:85,color:'#eeeeee',style:styles.icon})))));}},{key:'_onBarCodeRead',value:





function _onBarCodeRead(e){
console.log(e);}},{key:'_switchCamera',value:

function _switchCamera(){
var state=this.state;
state.cameraType = state.cameraType === Camera.constants.Type.back?
Camera.constants.Type.front:Camera.constants.Type.back;
this.setState(state);}},{key:'_takePicture',value:

function _takePicture(){
var self=this;
this.refs.cam.capture(function(err,data){
console.log(err,data);
self.props.onTakePic(data);});}}]);return CameraView;})(Component);





var styles=StyleSheet.create({
container:{
flex:1,
justifyContent:'center',
alignItems:'center',
alignSelf:'stretch',
backgroundColor:'transparent'},

icon:{
width:85,
height:85,
marginTop:2,
alignSelf:'center'}});



module.exports = CameraView;
});
__d('react-native-camera/Camera.ios.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var React=require('React');
var DeviceEventEmitter=require('RCTDeviceEventEmitter');
var NativeModules=require('NativeModules');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var createReactNativeComponentClass=require('createReactNativeComponentClass');
var PropTypes=require('ReactPropTypes');
var StyleSheetPropType=require('StyleSheetPropType');
var NativeMethodsMixin=require('NativeMethodsMixin');
var flattenStyle=require('flattenStyle');
var merge=require('merge');

var constants={
Aspect:NativeModules.CameraManager.Aspect,
BarCodeType:NativeModules.CameraManager.BarCodeType,
Type:NativeModules.CameraManager.Type,
CaptureMode:NativeModules.CameraManager.CaptureMode,
CaptureTarget:NativeModules.CameraManager.CaptureTarget,
Orientation:NativeModules.CameraManager.Orientation,
FlashMode:NativeModules.CameraManager.FlashMode,
TorchMode:NativeModules.CameraManager.TorchMode};


var Camera=React.createClass({displayName:'Camera',
propTypes:{
aspect:PropTypes.oneOfType([
PropTypes.string,
PropTypes.number]),

captureAudio:PropTypes.bool,
captureMode:PropTypes.oneOfType([
PropTypes.string,
PropTypes.number]),

captureTarget:PropTypes.oneOfType([
PropTypes.string,
PropTypes.number]),

type:PropTypes.oneOfType([
PropTypes.string,
PropTypes.number]),

orientation:PropTypes.oneOfType([
PropTypes.string,
PropTypes.number]),

flashMode:PropTypes.oneOfType([
PropTypes.string,
PropTypes.number]),

torchMode:PropTypes.oneOfType([
PropTypes.string,
PropTypes.number])},



mixins:[NativeMethodsMixin],

viewConfig:{
uiViewClassName:'UIView',
validAttributes:ReactNativeViewAttributes.UIView},


getDefaultProps:function(){
return {
aspect:constants.Aspect.fill,
type:constants.Type.back,
orientation:constants.Orientation.auto,
captureAudio:true,
captureMode:constants.CaptureMode.still,
captureTarget:constants.CaptureTarget.cameraRoll,
flashMode:constants.FlashMode.off,
torchMode:constants.TorchMode.off};},



getInitialState:function(){
return {
isAuthorized:false,
isRecording:false};},



componentWillMount:function(){
NativeModules.CameraManager.checkDeviceAuthorizationStatus((function(err,isAuthorized){
this.state.isAuthorized = isAuthorized;
this.setState(this.state);}).
bind(this));
this.cameraBarCodeReadListener = DeviceEventEmitter.addListener('CameraBarCodeRead',this._onBarCodeRead);},


componentWillUnmount:function(){
this.cameraBarCodeReadListener.remove();

if(this.state.isRecording){
this.stopRecording();}},



render:function(){
var style=flattenStyle([styles.base,this.props.style]);

var aspect=this.props.aspect,
type=this.props.type,
orientation=this.props.orientation,
flashMode=this.props.flashMode,
torchMode=this.props.torchMode;

var legacyProps={
aspect:{
Fill:'fill',
Fit:'fit',
Stretch:'stretch'},

orientation:{
LandscapeLeft:'landscapeLeft',
LandscapeRight:'landscapeRight',
Portrait:'portrait',
PortraitUpsideDown:'portraitUpsideDown'},

type:{
Front:'front',
Back:'back'}};



if(typeof aspect === 'string'){
aspect = constants.Aspect[aspect];}


if(typeof flashMode === 'string'){
flashMode = constants.FlashMode[flashMode];}


if(typeof orientation === 'string'){
orientation = constants.Orientation[orientation];}


if(typeof torchMode === 'string'){
torchMode = constants.TorchMode[torchMode];}


if(typeof type === 'string'){
type = constants.Type[type];}


var nativeProps=merge(this.props,{
style:style,
aspect:aspect,
type:type,
orientation:orientation,
flashMode:flashMode,
torchMode:torchMode});


return React.createElement(RCTCamera,nativeProps);},


_onBarCodeRead:function(e){
this.props.onBarCodeRead && this.props.onBarCodeRead(e);},


capture:function(options,cb){

if(arguments.length == 1){
cb = options;
options = {};}


options = Object.assign({},{
audio:this.props.captureAudio,
mode:this.props.captureMode,
target:this.props.captureTarget},
options);

if(typeof options.mode === 'string'){
options.mode = constants.CaptureMode[options.mode];}


if(options.mode === constants.CaptureMode.video){
options.totalSeconds = options.totalSeconds > -1?options.totalSeconds:-1;
options.preferredTimeScale = options.preferredTimeScale || 30;
this.setState({isRecording:true});}


if(typeof options.target === 'string'){
options.target = constants.CaptureTarget[options.target];}


NativeModules.CameraManager.capture(options,cb);},


stopCapture:function(){
if(this.state.isRecording){
NativeModules.CameraManager.stopCapture();
this.setState({isRecording:false});}}});





var RCTCamera=createReactNativeComponentClass({
validAttributes:merge(ReactNativeViewAttributes.UIView,{
aspect:true,
type:true,
orientation:true,
flashMode:true,
torchMode:true}),

uiViewClassName:'RCTCamera'});


var styles=StyleSheet.create({
base:{}});


Camera.constants = constants;
module.exports = Camera;
});
__d('react-native-invertible-scroll-view/InvertibleScrollView.js',["react-native/Libraries/react-native/react-native.js","react-native-scrollable-mixin/ScrollableMixin.js","react-native-clone-referenced-element/cloneReferencedElement.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};function _objectWithoutProperties(obj,keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i] = obj[i];}return target;}




var React=require('react-native/Libraries/react-native/react-native.js');var 

PropTypes=



React.PropTypes;var ScrollView=React.ScrollView;var StyleSheet=React.StyleSheet;var View=React.View;
var ScrollableMixin=require('react-native-scrollable-mixin/ScrollableMixin.js');

var cloneReferencedElement=require('react-native-clone-referenced-element/cloneReferencedElement.js');





var InvertibleScrollView=React.createClass({displayName:'InvertibleScrollView',
mixins:[ScrollableMixin],

propTypes:_extends({},
ScrollView.propTypes,{
inverted:PropTypes.bool,
renderScrollComponent:PropTypes.func.isRequired}),


getDefaultProps:function(){
return {
renderScrollComponent:function(props){return React.createElement(ScrollView,props);}};},



getScrollResponder:function(){
return this._scrollComponent.getScrollResponder();},


setNativeProps:function(props){
this._scrollComponent.setNativeProps(props);},


render:function(){var _this=this;var _props=




this.props;var inverted=_props.inverted;var renderScrollComponent=_props.renderScrollComponent;var props=_objectWithoutProperties(_props,['inverted','renderScrollComponent']);

if(inverted){
if(this.props.horizontal){
props.style = [styles.horizontallyInverted,props.style];
props.children = this._renderInvertedChildren(props.children,styles.horizontallyInverted);}else 
{
props.style = [styles.verticallyInverted,props.style];
props.children = this._renderInvertedChildren(props.children,styles.verticallyInverted);}}



return cloneReferencedElement(renderScrollComponent(props),{
ref:function(component){_this._scrollComponent = component;}});},



_renderInvertedChildren:function(children,inversionStyle){
return React.Children.map(children,function(child){
return child?React.createElement(View,{style:inversionStyle},child):child;});}});




var styles=StyleSheet.create({
verticallyInverted:{
transformMatrix:[
1,0,0,0,
0,-1,0,0,
0,0,1,0,
0,0,0,1]},


horizontallyInverted:{
transformMatrix:[
-1,0,0,0,
0,1,0,0,
0,0,1,0,
0,0,0,1]}});




module.exports = InvertibleScrollView;
});
__d('react-native-scrollable-mixin/ScrollableMixin.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var ScrollableMixin={
getInnerViewNode:function(){
return this.getScrollResponder().getInnerViewNode();},


scrollTo:function(destY,destX){
this.getScrollResponder().scrollTo(destY,destX);},


scrollWithoutAnimationTo:function(destY,destX){
this.getScrollResponder().scrollWithoutAnimationTo(destY,destX);}};



module.exports = ScrollableMixin;
});
__d('react-native-clone-referenced-element/cloneReferencedElement.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};

var React=require('react-native/Libraries/react-native/react-native.js');

function cloneReferencedElement(element,config){
var cloneRef=config.ref;
var originalRef=element.ref;for(var _len=arguments.length,children=Array(_len > 2?_len - 2:0),_key=2;_key < _len;_key++) {children[_key - 2] = arguments[_key];}
if(originalRef == null || cloneRef == null){
return React.cloneElement.apply(React,[element,config].concat(children));}


if(typeof originalRef !== 'function'){
if(__DEV__){
console.warn(
'Cloning an element with a ref that will be overwritten because it ' + 
'is not a function. Use a composable callback-style ref instead. ' + 
'Ignoring ref: ' + originalRef);}


return React.cloneElement.apply(React,[element,config].concat(children));}


return React.cloneElement.apply(React,[element,_extends({},
config,{
ref:function(component){
cloneRef(component);
originalRef(component);}})].concat(

children));}


module.exports = cloneReferencedElement;
});
__d('Identity/Components/TimHome.js',["image!Tradle","react-native/Libraries/react-native/react-native.js","Identity/Components/ResourceList.js","Identity/Components/AddNewIdentity.js","Identity/Components/NewResource.js","Identity/Components/ResourceView.js","Identity/utils/utils.js","reflux/src/index.js","Identity/Actions/Actions.js","Identity/Store/Store.js","react-mixin/index.js","Identity/data/data.js","tradle-constants/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var ResourceList=require('Identity/Components/ResourceList.js');
var AddNewIdentity=require('Identity/Components/AddNewIdentity.js');
var NewResource=require('Identity/Components/NewResource.js');
var ResourceView=require('Identity/Components/ResourceView.js');
var utils=require('Identity/utils/utils.js');
var Reflux=require('reflux/src/index.js');
var Actions=require('Identity/Actions/Actions.js');
var Store=require('Identity/Store/Store.js');
var reactMixin=require('react-mixin/index.js');
var sampleData=require('Identity/data/data.js');
var constants=require('tradle-constants/index.js');var 


StyleSheet=









React.StyleSheet;var Text=React.Text;var Navigator=React.Navigator;var View=React.View;var TouchableHighlight=React.TouchableHighlight;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;var Image=React.Image;var Component=React.Component;var ScrollView=React.ScrollView;var 

TimHome=(function(_Component){_inherits(TimHome,_Component);
function TimHome(props){_classCallCheck(this,TimHome);
_get(Object.getPrototypeOf(TimHome.prototype),'constructor',this).call(this,props);
this.state = {
isLoading:true};}_createClass(TimHome,[{key:'componentWillMount',value:


function componentWillMount(){
Actions.start();}},{key:'componentDidMount',value:

function componentDidMount(){
this.listenTo(Store,'handleEvent');}},{key:'handleEvent',value:

function handleEvent(params){
if(params.action === 'reloadDB'){
this.setState({isLoading:false});
utils.setModels(params.models);}else 

if(params.action === 'start'){
utils.setMe(params.me);
utils.setModels(params.models);
this.setState({isLoading:false});}}},{key:'showContactsOrRegister',value:



function showContactsOrRegister(){
if(utils.getMe())
this.showContacts();else 

this.onEditProfilePressed();}},{key:'showContacts',value:

function showContacts(){
var passProps={
filter:'',
modelName:this.props.modelName,
sortProperty:'lastMessageTime'};

var me=utils.getMe();
this.props.navigator.push({

id:10,
title:'Contacts',
titleTextColor:'#7AAAC3',
backButtonTitle:'Back',
component:ResourceList,
rightButtonTitle:'Profile',
passProps:passProps,
onRightButtonPress:{
title:utils.getDisplayName(me,utils.getModel(me[constants.TYPE]).value.properties),
id:3,
component:ResourceView,
titleTextColor:'#7AAAC3',
rightButtonTitle:'Edit',
onRightButtonPress:{
title:me.firstName,
id:4,
component:NewResource,
titleTextColor:'#7AAAC3',
backButtonTitle:'Back',
rightButtonTitle:'Done',
passProps:{
model:utils.getModel(me[constants.TYPE]).value,
resource:me}},


passProps:{resource:me}}});}},{key:'showCommunities',value:




function showCommunities(){
var passProps={
filter:'',
modelName:'tradle.Community'};

var me=utils.getMe();
this.props.navigator.push({

id:10,
title:'Communities',
titleTextColor:'#7AAAC3',
backButtonTitle:'Back',
component:ResourceList,
passProps:passProps});}},{key:'onEditProfilePressed',value:


function onEditProfilePressed(){
var modelName=this.props.modelName;
if(!utils.getModel(modelName)){
this.setState({err:'Can find model: ' + modelName});
return;}

var model=utils.getModel(modelName).value;
var route={
component:NewResource,
backButtonTitle:'Back',
rightButtonTitle:'Done',
id:4,
titleTextColor:'#7AAAC3',
passProps:{
model:model}};


var me=utils.getMe();
if(me){
route.passProps.resource = me;
route.title = 'Edit Identity';}else 

{
route.title = 'New Identity';
route.passProps.callback = this.popToTop.bind(this);}

this.props.navigator.push(route);}},{key:'popToTop',value:

function popToTop(resource){
utils.setMe(resource);
this.props.navigator.popToTop();}},{key:'onReloadDBPressed',value:

function onReloadDBPressed(){
utils.setMe(null);
utils.setModels(null);
Actions.reloadDB();}},{key:'render',value:

function render(){
var spinner=this.state.isLoading?
React.createElement(ActivityIndicatorIOS,{hidden:'true',size:'large'}):
React.createElement(View,null);
if(this.state.isLoading)
return React.createElement(View,null);
var err=this.state.err || '';
var errStyle=err?styles.err:{'padding':0,'height':0};
var myId=sampleData.getMyId() || utils.getMe();
var editProfile,communities;

if(utils.getMe()){
editProfile = React.createElement(TouchableHighlight,{
underlayColor:'#2E3B4E',onPress:this.onEditProfilePressed.bind(this)},
React.createElement(Text,{style:styles.text},
'Edit Profile'));


communities = React.createElement(TouchableWithoutFeedback,{style:styles.communities,onPress:this.showCommunities.bind(this)},
React.createElement(Text,{style:styles.communitiesText},'Communities'));}else 


{
editProfile = React.createElement(View,null);
communities = React.createElement(View,{style:{marginTop:20}});}





return (
React.createElement(View,{style:styles.scroll},
React.createElement(Text,{style:styles.title},'Trust in Motion (TiM)'),
React.createElement(ScrollView,null,
React.createElement(View,{style:styles.container,ref:'search'},
React.createElement(TouchableHighlight,{style:[styles.thumbButton],
underlayColor:'transparent',onPress:this.showContactsOrRegister.bind(this)},
React.createElement(View,null,
React.createElement(Image,{style:styles.thumb,source:require('image!Tradle')}),
React.createElement(Text,{style:styles.tradle},'Tradle'))))),




React.createElement(View,{style:{justifyContent:'flex-end',alignSelf:'center'}},
React.createElement(Text,{style:errStyle},err),
React.createElement(View,{style:styles.dev},
editProfile,
React.createElement(TouchableHighlight,{
underlayColor:'transparent',onPress:this.onReloadDBPressed.bind(this)},
React.createElement(Text,{style:styles.text},'Reload DB'))))));}}]);return TimHome;})(Component);





















reactMixin(TimHome.prototype,Reflux.ListenerMixin);

var styles=StyleSheet.create({
scroll:{

backgroundColor:'#2E3B4E'},

container:{
padding:30,
marginTop:60,
alignItems:'center'},

tradle:{
color:'#7AAAC3',
fontSize:50,
alignSelf:'center'},

text:{
color:'#7AAAC3',
paddingLeft:10,
paddingRight:10,
fontSize:18},

thumbButton:{
marginBottom:10,
alignSelf:'center',
justifyContent:'center'},


thumb:{
width:200,
height:200},

communitiesText:{
color:'#f8920d',
fontSize:20},

communities:{
paddingBottom:40,
alignSelf:'center'},

title:{
marginTop:30,
alignSelf:'center',
fontSize:20,
color:'#7AAAC3'},

dev:{
marginTop:100,
flexDirection:'row',
marginBottom:500,
alignSelf:'center'}});




module.exports = TimHome;
});
__d('image!Tradle',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/Ellen/lablz/Identity/iOS/Images.xcassets/Tradle.imageset/Tradle.png","uri":"Tradle","width":200,"height":200,"deprecated":true};
});
;require("Identity/index.ios.js");
//@ sourceMappingURL=/index.ios.map